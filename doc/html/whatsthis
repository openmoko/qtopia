. | QUrlInfo
2D transformations of a coordinate system. | QWMatrix
A QLayoutItem that represents widget. | QWidgetItem
A QLock is a wrapper round a System V shared semaphore; it is used by Qt/Embedded for synchronising access to the graphics card and shared memory region between processes. | QLock
A QRenderedFont is the rendered version of a particular font (as specified by QFont - that is, at a given weight,family and point size, italic or not, and so on). There is one and only one QRenderedFont for each particular QFont specification; if you specify two Times 10pt bold italic QFonts they will both refer to the same QRenderedFont. QRenderedFonts are cached by QFontManager and are reference counted; when there is no QGfx referring to a particular QRenderedFont it is deleted. Each QRenderedFont renders glyphs (that is, images of characters) on demand and caches the rendered glyphs. It can be subclassed by individual factories since they create new QRenderedFonts. | QRenderedFont
A QString which uses constant Unicode data. | QConstString
A collection of styles for rich text rendering and a generator of tags. | QStyleSheet
A convenience class for input streams. | QTextIStream
A convenience class for output streams. | QTextOStream
A convenience dialog to get a simple input from the user. | QInputDialog
A flexible and editable table widget. | QTable
A layout attribute describing horizontal and vertical resizing. | QSizePolicy
A list of strings. | QStringList
A message box that provides yes, no and cancel options. | QPEMessageBox
A rich text browser with simple navigation. | QTextBrowser
A small displayable piece of rich text. | QSimpleRichText
A sophisticated single-page rich text viewer. | QTextView
Abstract base class for Qtopia MediaPlayer decoder plugins. | MediaPlayerDecoder
Abstract base class for Qtopia MediaRecorder encoder plugins. | MediaRecorderEncoder
Abstract base class for custom menu items in popup menus. | QCustomMenuItem
Abstract base class of internal layout iterators. | QGLayoutIterator
Abstract items which a QLayout manipulates. | QLayoutItem
Abstract preview widget for the QFileDialog. | QFilePreview
Abstraction of Unicode text and the classic C null-terminated char array (<var>char*</var>). | QString
Abstraction of the classic C zero-terminated char array (<var>char*</var>). | QCString
Abstracts a user interface action that can appear both in menus and tool bars. | QAction
Access to named resources. | Resource
Access to the platform audio facilities. | QSound
Access to the selected area in a QTable. | QTableSelection
Access to the session manager. | QSessionManager
Access to the window system clipboard. | QClipboard
Acts like a union for the most common Qt data types. | QVariant
Aids in filtering records or files by Category. | CategoryMenu
Allows a date to be selected from a calendar view. | QPEDatePicker
Allows alarms to be scheduled and unscheduled. | AlarmServer
Allows applet plugins to add themselves to the Q menu. | Accessory
Allows applications to provide services for other applications to use. | Service
Allows applications to request services from other applications. | ServiceRequest
Allows for pluggable image formats. | ImageCodecInterface
Allows plugin network services. | NetworkInterface
Allows the appearance of the Qt/Embedded Window Manager to be customized. | QWSDecoration
Allows the user to examine attributes associated with a AppLnk object. | DocPropertiesDialog
Allows the user to select DocLnk objects. | FileSelector
Allows users to configure their time zone information. | TimeZoneSelector
Allows users to select Categories with a combobox interface. | CategorySelect
An abstract piece of formatted data. | QMimeSource
An abstraction used by QImageDecoder. | QImageConsumer
An extensible supply of MIME-typed data. | QMimeSourceFactory
An internal class for implementing QCacheIterator and QIntCacheIterator. | QGCacheIterator
An internal class for implementing QDictIterator and QIntDictIterator. | QGDictIterator
Application-global cache for pixmaps. | QPixmapCache
Application-wide global functions. | Global
Array of bits. | QBitArray
Assists with AppLnk input/output. | FileManager
Asynchronous DNS lookups. | QDns
Asynchronous consumer of data. | QDataSink
Asynchronous producer of data. | QDataSource
Base class for QMenuBar and QPopupMenu. | QMenuData
Base class of all event classes. Event objects contain event parameters. | QEvent
Basic functions for reading and writing text using a QIODevice. | QTextStream
Buffered TCP connection. | QSocket
Bundles signals from identifiable senders. | QSignalMapper
CDE Look and Feel. | QCDEStyle
Can be used to send signals without parameters. | QSignal
Check box with a text label. | QCheckBox
Clip region for a painter. | QRegion
Clock time functions. | QTime
Collection of nodes that can be accessed by name. | QDomNamedNodeMap
Collects tool tips into natural groups. | QToolTipGroup
Color groups for each widget state. | QPalette
Colors based on RGB. | QColor
Combined button and popup list. | QComboBox
Combines actions to a group. | QActionGroup
Command button. | QPushButton
Common operations on URLs (get() and more). | QUrlOperator
Compact widget for selecting a date. | QPEDateEdit
Compact widget for selecting a date and time. | QPEDateTimeEdit
Compact widget for selecting a time. | QPETimeEdit
Content for one cell in a QTable. | QTableItem
Controls for modifying an AppLnks properties. | DocPropertiesWidget
Conversion to and from EUC-JP character sets. | QEucJpCodec
Conversion to and from JIS character sets. | QJisCodec
Conversion to and from Shift-JIS. | QSjisCodec
Corner-grip for resizing a top level window. | QSizeGrip
Creates well-compressed PNG animations. | QPNGImagePacker
Database that groups categories and maps ids to names. | Categories
Date and time functions. | QDateTime
Date functions. | QDate
Default implementation of all XML handler classes. | QXmlDefaultHandler
Defines a Universally Unique Identifier (UUID). | QUuid
Defines a point in the plane. | QPoint
Defines a rectangle in the plane. | QRect
Defines how a QPainter should draw lines and outlines of shapes. | QPen
Defines the fill pattern of shapes drawn by a QPainter. | QBrush
Defines the interface for text codec plugins. | TextCodecInterface
Defines the size of a two-dimensional object. | QSize
Descendants of QScreen manage the framebuffer and palette and act as factories for the screen cursor and QGfx's. QLinuxFbScreen manages a Linux framebuffer; accelerated drivers subclass QLinuxFbScreen. There can only be one screen in a Qt/Embedded application. | QScreen
Describes a single mount point. | FileSystem
Describes the disks mounted on the file system. | StorageInfo
Dialog widget for inputting file names. | QFileDialog
Dialog widget for selecting a text font. | QFontDialog
Dialog widget for specifying colors. | QColorDialog
Displays a brief message, an icon, and some buttons. | QMessageBox
Displays a list of available storage locations. | LocationCombo
Displays a number with LCD-like digits. | QLCDNumber
Drag-and-drop object for transferring colors. | QColorDrag
Drag-and-drop object for transferring images. | QImageDrag
Drag-and-drop object for transferring plain and Unicode text. | QTextDrag
Dummy class. The atd program is based on Russ Nelson's lightweight At daemon. It is distributed under the terms of the GNU General Public License. | atd
Dummy class. The avformat and avcodec code was extracted from the FFMPEG project. The author and primary copyright holder is Fabrice Bellard &lt;fabrice.bellard at free.fr&gt;. The FFMPEG project is distributed under the GNU Lesser General Public License. | FFMpeg
Dummy class. The gsm code was extracted from verison 12.17.3 of the Sox sound tools. The author of Sox is Chris Bagwell &lt;cbagwell at users.sourceforge.net&gt;. Sox is distributed under the terms of the GNU General Public License. | GSM
Encapsulates I/O asynchronicity. | QAsyncIO
Encapsulates MIME-based information transfer. | QDragObject
Encapsulates a text format. | QStyleSheetItem
Encapsulates and sends QCop messages over QCopChannels. | QCopEnvelope
Encapsulates common Look and Feel of a GUI. | QCommonStyle
Encapsulates common Look and Feel of a GUI. | QStyle
Event parameters for child object events. | QChildEvent
Event parameters for move events. | QMoveEvent
Event parameters for paint events. | QPaintEvent
Event parameters for resize events. | QResizeEvent
Event parameters for widget focus events. | QFocusEvent
Event sent after a widget is hidden. | QHideEvent
Event sent to widgets when a drag-and-drop first drags onto it. | QDragEnterEvent
Event sent to widgets when a drag-and-drop leaves it. | QDragLeaveEvent
Event sent when a widget is shown. | QShowEvent
Extended interface for Qtopia input methods. | ExtInputMethodInterface
Extension to the MediaPlayerDecoder class for Qtopia MediaPlayer decoder plugins. | MediaPlayerDecoder_1_6
Factory that makes QImageFormat objects. | QImageFormatType
Font metrics information about fonts. | QFontMetrics
Font used for drawing text. | QFont
For saving application configuration state. | Config
Framework for easily writing wizards. | QWizard
General information about fonts. | QFontInfo
Group box frame with a title. | QGroupBox
Group of categories. | CategoryGroup
Group of widget colors. | QColorGroup
Handles keyboard accelerator and shortcut keys. | QAccel
Hardware-independent pixmap representation with direct access to the pixel data. | QImage
Helper class for QString. | QCharRef
Helper class for XML readers which want to include namespace support. | QXmlNamespaceSupport
Holds the data of a calendar event. | PimEvent
Holds the data of a todo entry. | PimTask
Holds the data of an address book entry. | PimContact
Horizontal bar suitable for presenting status information. | QStatusBar
Horizontal menu bar. | QMenuBar
Horizontal progress bar. | QProgressBar
I/O device that operates on a QByteArray. | QBuffer
I/O device that operates on files. | QFile
IP address. | QHostAddress
Icons for QFileDialog to use. | QFileIconProvider
Implementation of a Directed Acyclic Word Graph. | QDawg
Implementation of a QNetworkProtocol which works on the local filesystem. | QLocalFs
Implementation of a simple XML reader (i.e. parser). | QXmlSimpleReader
Implementation support for QJisCodec, QSjisCodec, and QEucJpCodec. | QJpUnicodeConv
Implements a list view item. | QListViewItem
Implements a splitter widget. | QSplitter
Implements basic support for sending objects over an infrared communication link. | Ir
Implements checkable list view items. | QCheckListItem
Implements the FTP protocol. | QFtp
Implements the Konsole application. | Konsole
Implements the default Qtopia widget style. | QPEStyle
Implements various system services that are available to all Qtopia applications. | QPEApplication
Incremental image decoder for a specific image format. | QImageFormat
Incremental image decoder for all supported image formats. | QImageDecoder
Incrementally loads an animation or image, signalling as it progresses. | QMovie
Information about a paint device. | QPaintDeviceMetrics
Information about available fonts. | FontDatabase
Information about the features of the DOM implementation. | QDomImplementation
Integer value within a range. | QRangeControl
Interface for Qtopia input methods. | InputMethodInterface
Interface for Qtopia taskbar applet plugins. | TaskbarAppletInterface
Interface for Qtopia widget styles. | StyleInterface
Interface for Qtopia window decoration styles. | WindowDecorationInterface
Interface for XML readers (i.e. parsers). | QXmlReader
Interface for adding font renderers to Qtopia. | FontFactoryInterface
Interface for the Qtopia Today application. | TodayPluginInterface
Interface to OpenOBEX. | QObex
Interface to librsync. | QRsync
Interface to report DTD content of XML data. | QXmlDTDHandler
Interface to report declaration content of XML data. | QXmlDeclHandler
Interface to report errors in XML data. | QXmlErrorHandler
Interface to report lexical content of XML data. | QXmlLexicalHandler
Interface to report logical content of XML data. | QXmlContentHandler
Interface to resolve extern entities contained in XML data. | QXmlEntityResolver
Internal class for implementing QCache template classes. | QGCache
Internal class for implementing QDict template classes. | QGDict
Internal class for implementing QListIterator. | QGListIterator
Internal class for implementing Qt collection classes. | QGList
Internal class for implementing Qt collection classes. | QGVector
Internal class for implementing the QArray class. | QGArray
Internal class for the QList template collection. | QLNode
Internal class, used with QBitArray. | QBitVal
International input methods for Qt/Embedded. | QWSInputMethod
Internationalization support for text output. | QTranslator
Iterator for collections of QListViewItems. | QListViewItemIterator
Iterators of AddressBookAccess. | AddressBookIterator
Iterators of DateBookAccess. | DateBookIterator
Iterators of TodoAccess. | TodoIterator
Iterators over QLayoutItem. | QLayoutIterator
Keyboard driver/handler for Qt/Embedded. | QWSKeyboardHandler
Lays out widgets in a grid. | QGridLayout
Light-weight Unicode character. | QChar
Lines up child widgets horizontally or vertically. | QBoxLayout
Lines up widgets horizontally. | QHBoxLayout
Lines up widgets vertically. | QVBoxLayout
List box items with a pixmap and an optional text. | QListBoxPixmap
List box items with text. | QListBoxText
List of QDomNode objects. | QDomNodeList
List of selectable, read-only items. | QListBox
Look and Feel suitable for interlaced displays. | QInterlaceStyle
MIME type information. | MimeType
Mainly an URL parser and simplifies working with URLs. | QUrl
Maintains the list of widgets which can take focus. | QFocusData
Manages device button mappings. | DeviceButtonManager
Manages the GUI application's control flow and main settings. | QApplication
Manages the Linux framebuffer. Accelerated drivers for Linux should inherit from it; it contains code for reading information about the framebuffer from the Linux framebuffer interface, managing the color palette, managing offscreen graphics memory and mapping the framebuffer interface itself, removing the need for drivers to do this. It also acts as a factory for the unaccelerated screen cursor and unaccelerated QGfxes. QLinuxFbScreen is a descendant of QScreen; there is precisely one per Qt/Embedded application. | QLinuxFbScreen
Manages the onscreen mouse cursor in Qt/Embedded. It provides an implementation of a software mouse cursor and can be subclassed by hardware drivers which support a hardware mouse cursor. There may only be one QScreenCursor at a time; it is constructed by QScreen or one of its descendants. | QScreenCursor
Meta information about Qt objects. | QMetaObject
Method of obtaining a multimedia encoder. | MediaRecorderPluginInterface
Monochrome (1 bit depth) pixmaps. | QBitmap
More sophisticated Motif-ish look and feel. | QMotifPlusStyle
Motif Look and Feel. | QMotifStyle
Mouse cursor with an arbitrary shape. | QCursor
Mouse driver/handler for Qt/Embedded. | QWSMouseHandler
Moves data from a QDataSource to a QDataSink during event processing. | QDataPump
Namespace for miscellaneous identifiers that need to be global-like. | Qt
Off-screen pixel-based paint device. | QPixmap
One-line text editor. | QLineEdit
Organizes QButton widgets in a group. | QButtonGroup
Organizes QButton widgets in a group with one horizontal row. | QHButtonGroup
Organizes QButton widgets in a group with one vertical column. | QVButtonGroup
Organizes widgets in a group with one horizontal row. | QHGroupBox
Organizes widgets in a group with one vertical column. | QVGroupBox
Paint device that records and replays QPainter commands. | QPicture
Paints on paint devices. | QPainter
Parameters for loading and saving images. | QImageIO
Parameters that describe a close event. | QCloseEvent
Parameters that describe a key event. | QKeyEvent
Parameters that describe a mouse event. | QMouseEvent
Parameters that describe a timer event. | QTimerEvent
Parameters that describe a wheel event. | QWheelEvent
Pattern matching using regular expressions or wildcards. | QRegExp
Performs geometry management on its children. | QGrid
Performs geometry management on its children. | QHBox
Performs geometry management on its children. | QVBox
Platform-independent low-level socket API. | QSocketDevice
Platinum Look and Feel. | QPlatinumStyle
Plays WAVE sound files and can invoke the audible alarm. | Sound
Popup menu widget. | QPopupMenu
Programmers with an easy to calculate and get information about dates, months and years. | Calendar
Provide means to map a file info memory or refere to a block or memory by name. | QMemoryFile
Provides conversion between text encodings. | QTextCodec
Provides feedback on the progress of a slow operation. | QProgressDialog
Provides for drag-and-drop of a list of URI references. | QUriDrag
Provides information about available fonts. | QFontDatabase
Provides nothing and does nothing. | QDropSite
Pushbutton with a menu. | MenuButton
QDataSource that draws data from a QIODevice. | QIODeviceSource
QLayoutItem class that represents blank space. | QSpacerItem
QSocketNotifer class provides support for socket callbacks. | QSocketNotifier
Quick-access button to specific commands or options, usually used inside a QToolBar. | QToolButton
Radio button with a text label. | QRadioButton
Range checking of floating-point numbers. | QDoubleValidator
Range checking of integers. | QIntValidator
Represents a generic string in the DOM. | QDomCharacterData
Represents a physical user mappable button on a Qtopia device. | DeviceButton
Represents an XML CDATA section. | QDomCDATASection
Represents an XML comment. | QDomComment
Represents an XML entity. | QDomEntity
Represents an XML entity reference. | QDomEntityReference
Represents an XML notation. | QDomNotation
Represents an XML processing instruction. | QDomProcessingInstruction
Represents an application available on the system. | AppLnk
Represents loaded document references. | DocLnk
Represents one attribute of a QDomElement. | QDomAttr
Represents one element in the DOM tree. | QDomElement
Represents textual data in the parsed XML document. | QDomText
Rounded rangecontrol (like a speedometer or potentiometer). | QDial
SGI Look and Feel. | QSGIStyle
Safe API for accessing PimEvents. | DateBookAccess
Safe API for accessing PimTasks. | TodoAccess
Safe API for accessing address book data. | AddressBookAccess
Scrolling area with on-demand scrollbars. | QScrollView
Serialization of binary data to a QIODevice. | QDataStream
Server-specific functionality in Qt/Embedded. | QWSServer
Server-specific functionality in Qt/Embedded. | QWSWindow
Set of AppLnk objects. | AppLnkSet
Set of DocLnk objects. | DocLnkSet
Set of differently styled and sized icons. | QIconSet
Simple description of any widget, e.g. answering the question "what's this?". | QWhatsThis
Simple editor for inputting text. | QMultiLineEdit
Simple stored-value drag object for arbitrary MIME data. | QStoredDrag
Simplifies plugin loading and allows plugins to be enabled/disabled. | PluginLoader
Single element in an XML structure defined by XmlHandler. | Node
Spin box widget, sometimes called up-down widget, little arrows widget or spin button. | QSpinBox
Stack of tabbed widgets. | QTabDialog
Stack of tabbed widgets. | QTabWidget
Stack of widgets, where the user can see only the top widget. | QWidgetStack
State-based decoder. | QTextDecoder
State-based encoder. | QTextEncoder
Static information display. | QLabel
Stores meta data about a property. | QMetaProperty
Struct is internally used for implementing shared classes. | QShared
Structures in a QTabBar. | QTab
Support for custom events. | QCustomEvent
System-independent file information. | QFileInfo
TCP-based server. | QServerSocket
Tab bar, for use in e.g. tabbed dialogs. | QTabBar
Table header. | QHeader
Template class that provides guarded pointers to QObjects. | QGuardedPtr
The XML handler classes with information about the actual parsing position. | QXmlLocator
The abstract base class of button widgets, providing functionality common to buttons. | QButton
The base class for PIM data recorded in the Qtopia database. | PimRecord
The base class for all nodes of the DOM tree. | QDomNode
The base class of I/O devices. | QIODevice
The base class of all Qt collections. | QCollection
The base class of all Qt objects. | QObject
The base class of all user interface objects. | QWidget
The base class of dialog windows. | QDialog
The base class of geometry specifiers. | QLayout
The base class of semi-modal dialog windows. | QSemiModal
The base class of widgets that can have a frame. | QFrame
The representation of an XML document. | QDomDocument
The representation of the DTD in the document tree. | QDomDocumentType
The source where XML data is read from. | QXmlInputSource
There is one and only one QFontManager per Qt/Embedded application (qt_fontmanager is a global variable that points to it). It keeps a list of font factories, a cache of rendered fonts and a list of fonts available on disk. QFontManager is called when a new font needs to be rendered from a Freetype-compatible or BDF font on disk; this only happens if there isn't an appropriate QPF font already available. | QFontManager
This class is the base class of the QGfxRaster<depth> template and contains the non-depth-dependent code. The QGfxRaster class is used for drawing in software on raw framebuffers of varying depths and is subclassed by hardware drivers. It handles clipping and a movable origin in order to support subwindows. It is available <em>only</em> in Qt/Embedded. QWidget and QPixmap both return a QGfxRaster via their respective graphicsContext() methods, already initialised with the appropriate origin, framebuffer and clip region. QGfxRasterBase and its template subclasses should effectively be considered as one class; a raw QGfxRasterBase is never used, it's simply a handy place to put some of the functionality. | QGfxRasterBase
This class is used to define operations for network protocols and return the state, arguments, etc. | QNetworkOperation
This class provides communication capabilities between several clients. | QCopChannel
This is an abstract base class for implementing tables. | QTableView
This is the base class for network protocols which provides a common API for network protocols. | QNetworkProtocol
This is the base class of all list box items. | QListBoxItem
Timer signals and single-shot timers. | QTimer
Tool bar. | QToolBar
Tool tips (sometimes called balloon help) for any widget or rectangular part of a widget. | QToolTip
Translator message and its properties. | QTranslatorMessage
Traverses directory structures and contents in a platform-independent way. | QDir
Tree of QDomNodes which is usually not a complete QDomDocument. | QDomDocumentFragment
Typical application window, with a menu bar, some tool bars and a status bar. | QMainWindow
Used to access MediaPlayerDecoder objects. | MediaPlayerPluginInterface
Used to report errors with the QXmlErrorHandler interface. | QXmlParseException
Used to start external programs and to communicate with them. | QProcess
VNC client. | KVNC
Validation of input text. | QValidator
Vertical or horizontal scroll bar. | QScrollBar
Vertical or horizontal slider. | QSlider
Widget to monitor CF cards. | CardMonitor
Windows Look and Feel. | QWindowsStyle
Wrapper for handling shared libraries. | QLibrary
Wrapper for the libflash library. | LibFlashPlugin
Wrapper for the libmad library. | LibMadPlugin
XML attributes. | QXmlAttributes
XML document structure holder. | XmlHandler
