#!/bin/sh

mkdir -p $QPEDIR/config.tests/compiler
binary=$QPEDIR/config.tests/compiler/compiler
hide='>/dev/null 2>&1'
[ "$VERBOSE" = 1 ] && hide=
[ "$VERBOSE" = 1 ] && echo "INFO: PATH=$PATH"
[ "$VERBOSE" = 1 ] && { echo "LOCATE: which $CXX"; perl -e '
    $showall = 1;
    $prog = shift(@ARGV) or usage;
    $found = 0;

    $path = $ENV{PATH};
    for ( split /:/, $path ) {
        $candidate = $_ . "/" . $prog;
        if ( -f $candidate ) {
            print $candidate, "\n";
            $found = 1;
            if ( $showall == 0 ) {
                exit 0;
            }
        }
    }

    if ( $found == 0 ) {
        print "which: no " . $prog . " found in (" . $path . ")\n";
        exit 1;
    }

    exit 0;
' $CXX; }
[ "$VERBOSE" = 1 ] && echo "COMPILE: $CXX $CXXFLAGS $LFLAGS -o $binary $QTOPIA_DEPOT_PATH/config.tests/compiler/main.cpp"
eval '$CXX $CXXFLAGS $LFLAGS -o $binary $QTOPIA_DEPOT_PATH/config.tests/compiler/main.cpp' $hide || exit 1
if [ -f $binary ]; then
    [ "$VERBOSE" = 1 ] && echo "CHECK: strings $binary | grep -e 'GCC VERSION 4' -e 'SignificantByteFirst'"
    strings $binary | grep -e 'GCC VERSION 4' -e 'SignificantByteFirst'
    if [ "$HOST" = "host" ]; then
        [ "$VERBOSE" = 1 ] && echo "RUN: $binary"
        eval '$binary' $hide || { echo CANNOT RUN BINARIES; exit 1; }
    fi
else
    exit 1
fi

exit 0
