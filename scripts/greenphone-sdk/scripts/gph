#!/bin/bash

. /opt/Qtopia/SDK/scripts/functions

QPEVER=`version`

PHONEIP="10.10.10.20"
HOSTIP="10.10.10.21"
VERBOSE=1

gp_failed()
{
  if [ "$VERBOSE" = "0" ]; then
    echo -e "[\033[01;31mFAILED\033[00m]"
  else
    echo "FAILED!"
  fi
  exit 1
}

#---------------------------------------------------------------

gp_ok()
{
  if [ "$VERBOSE" = "0" ]; then
    echo -e "[\033[01;32m  OK  \033[00m]"
  fi 
}

#---------------------------------------------------------------

gp_net()
{
  # Bring up network to greenphone

  sudo modprobe usbnet>/dev/null 2>&1
  sudo ifconfig eth1 down >/dev/null 2>&1
  sudo ifconfig eth1 $HOSTIP up >/dev/null 2>&1


  TEST=`ping -c 1 -i 2 $PHONEIP | grep "100%" -c`
  if [ "$TEST" = "1" ]; then
    echo "Networking failed. Please unplug and plug the Greenphone back in."
    return 1;
  else
    if [ "$VERBOSE" = "1" ]; then
      echo "Success! Greenphone address is $PHONEIP"
    fi
    return 0;
  fi
}

#---------------------------------------------------------------

gp_source()
{
  # Loads environment variables for current configuration
  # gp_config when run sets this to x86 or greenphone

  if [ -e `pwd`/Makefile ]; then
    ARCH=`grep PREFIX Makefile |head -n1|awk 'BEGIN{FS="/"}{print $6}'`
  else
    ARCH="greenphone" 
  fi

  source /opt/Qtopia/SDK/scripts/devel-$ARCH.sh
}

#---------------------------------------------------------------

gp_config()
{
  #Reconfigure for new environment

  echo
  #Set ARCH to new option passed in and source environment
  ARCH=$CONFIG
  source /opt/Qtopia/SDK/scripts/devel-$ARCH.sh

  if [ "$ARCH" = "x86" ] ; then
    #This just makes output align in quiet mode
    ARCH="x86       "
  fi

  if [ "$VERBOSE" = "0" ] ; then
    echo -n "Configure for $ARCH "
    if qtopiamake $QRELEASE $QDEBUG $OPTS >$OUTPUT; then
      return 0;
    else
      return 1;
    fi
  else
    if qtopiamake $QRELEASE $QDEBUG $OPTS; then
      return 0;
    else
      return 1;
    fi
  fi
}

#---------------------------------------------------------------

gp_clean()
{
  # Clean out old object files, libraries or executables

  gp_source
  TARGET=`grep TARGET *.pro|awk 'BEGIN{FS="="}{print $2}'`
  rm -f $TARGET
  if [ "$VERBOSE" = "0" ] ; then
    echo -n "Cleaning up files        "
    if make clean >$OUTPUT; then
      return 0;
    else
      return 1;
    fi
  else
    if make clean; then
      return 0;
    else
      return 1;
    fi
  fi
}

#---------------------------------------------------------------

gp_make()
{
  # Just building it

  gp_source
  if [ "$VERBOSE" = "0" ] ; then
    echo -n "Building                 "
    if make >$OUTPUT; then
      return 0;
    else
      return 1;
    fi
  else
    if make; then
      return 0;
    else
      return 1;
    fi
  fi
}

#---------------------------------------------------------------

gp_package()
{
  # Creating a package for installation

  if [ "$ARCH" = "greenphone" ];then
    gp_source
    if [ "$VERBOSE" = "0" ] ; then
      echo -n "Creating package         "
      if make packages FORMAT=ipk >$OUTPUT; then
        return 0;
      else
        return 1;
      fi
    else
      if make packages FORMAT=ipk; then
        return 0;
      else
        return 1;
      fi
    fi
  else
    echo "Package create only supported for greenphone builds!"
    return 0;
  fi
}

#---------------------------------------------------------------

gp_install()
{
  # Transfer the package to the greenphone and install it

  if [ "$ARCH" = "x86" ] ;then
    gp_source
    if [ "$VERBOSE" = "0" ] ; then
      echo -n "Installing package       "
      if make install>$OUTPUT; then
        return 0;
      else
        return 1;
      fi
    else
      if make install; then
        return 0;
      else
        return 1;
      fi
    fi
    return 0;
  fi
  gp_source
  if ! gp_net; then
    return 1; 
  fi
  if [ "$IPKG" = "1" ] ;then
    # Installing prebuilt ipk file
    LIST=$IPKGNAME
  else
    LIST=`ls -1 pkg|awk '{printf $1" "}'`
  fi

#----------
cat>gpbuild-install.sh<<EOF
#!/bin/sh
. /opt/Qtopia.rom/qpe.env
FAILED=0
LIST="$LIST"
for i in \$LIST
do
  echo "\$i"
  if ! pkg.sh /mnt/user_local/\$i; then
    echo "FAILED!"
    FAILED=1
  fi 
  rm -f /mnt/user_local/\$i
done
if [ "\$FAILED" = "0" ] ; then
  echo "SUCCESSFUL!"
fi
EOF
#---------- 

  if [ "$VERBOSE" = "0" ] ; then
    echo -n "Installing package       "
    if ping -c 1 $PHONEIP >$OUTPUT;then
      for i in $LIST
      do
        cd pkg;ftpput -u anonymous $PHONEIP / $i;cd ..
      done
      ftpput -u anonymous $PHONEIP / gpbuild-install.sh
      rm -f gpbuild-install.sh
      if expect -c 'set timeout 300;log_user 0; spawn telnet '$PHONEIP'; expect root@; send "sh /mnt/user/home/Documents/gpbuild-install.sh\r"; expect root@'; then
        expect -c 'log_user 0; spawn telnet '$PHONEIP'; expect root@; send "rm -f /mnt/user/home/Documents/gpbuild-install.sh\r"; expect root@'
        return 0;
      else 
        return 1;
      fi
    fi
  else
    if ping -c 1 $PHONEIP;then
      for i in $LIST
      do
        cd pkg;ftpput -u anonymous $PHONEIP / $i;cd ..
      done
      ftpput -u anonymous $PHONEIP / gpbuild-install.sh
      rm -f gpbuild-install.sh
      if expect -c 'set timeout 300;log_user 0; spawn telnet '$PHONEIP'; expect root@; send "sh /mnt/user/home/Documents/gpbuild-install.sh\r"; expect root@'; then
        expect -c 'log_user 0; spawn telnet '$PHONEIP'; expect root@; send "rm -f /mnt/user/home/Documents/gpbuild-install.sh\r"; expect root@'
        return 0;
      else 
        return 1;
      fi
    fi
  fi
}

#---------------------------------------------------------------

gp_run()
{
  gp_source
  TARGET=`grep TARGET *.pro|awk 'BEGIN{FS="="}{print $2}'`
  if [ "$ARCH" = "x86" ] ; then
    ./$TARGET 2>&1 | logger -t 'TEST' &
    return 0;
  fi
  if [ "`grep -c "qtopia app" *.pro`" = "1" ] ; then
    if [ "$VERBOSE" = "0" ] ; then
      echo -n "Executing application    "
    fi
if [ "$QDEBUG" = "-debug" ] ; then
#----------
cat>gpbuild-run.sh<<EOF
#!/bin/sh
. /opt/Qtopia.rom/qpe.env
gdbserver 127.0.0.1:22222 /opt/Qtopia/bin/$TARGET 2>&1 | logger -t 'DEBUGGER' &
echo "DONE"
EOF
#---------- 
else
#----------
cat>gpbuild-run.sh<<EOF
#!/bin/sh
. /opt/Qtopia.rom/qpe.env
$TARGET 2>&1 | logger -t 'DEBUGGER' &
echo "DONE"
EOF
fi
#---------- 
    ftpput -u anonymous $PHONEIP / gpbuild-run.sh
    rm -f gpbuild-run.sh
    if expect -c 'log_user 0; spawn telnet '$PHONEIP'; expect root@; send "sh /mnt/user/home/Documents/gpbuild-run.sh\r"; expect root@'; then
      expect -c 'log_user 0; spawn telnet '$PHONEIP'; expect root@; send "rm -f /mnt/user/home/Documents/gpbuild-run.sh\r"; expect root@'
      return 0;
    else 
      return 1;
    fi
  else
    if [ "$VERBOSE" = "0" ] ;then
      echo -n "Not executable package    "
    fi
    return 0
  fi
}

gp_rescan()
{
  # Tell greenphone to update, rescan for new Documents

  if [ "$ARCH" = "x86" ] ;then
    PATH=/opt/Qtopia/SDK/$QPEVER/x86/image/bin:$PATH
    qcop QPE/DocAPI 'scanPath(QString,int)' 'all' '1'
  else
    if ! gp_net; then
      return 1; 
    fi
#----------
cat>gpbuild-rescan.sh<<EOF
#!/bin/sh
. /opt/Qtopia.rom/qpe.env
qcop QPE/DocAPI 'scanPath(QString,int)' 'all' '1'
sleep 3
echo DONE
EOF
#---------- 
    ftpput -u anonymous $PHONEIP / gpbuild-rescan.sh
    rm -f gpbuild-rescan.sh
    if expect -c 'set timeout 300;log_user 0; spawn telnet '$PHONEIP'; expect root@; send "sh /mnt/user/home/Documents/gpbuild-rescan.sh\r"; expect root@'; then
      expect -c 'log_user 0; spawn telnet '$PHONEIP'; expect root@; send "rm -f /mnt/user/home/Documents/gpbuild-rescan.sh\r"; expect root@'
      return 0;
    else 
      return 1;
    fi
  fi
}

#---------------------------------------------------------------

# main program

HELP=no
VERBOSE=1
CLEAN=0
CONFIG=greenphone
RECONFIG=0
BUILD=0
PACKAGE=0
INSTALL=0
RUN=0
OUTPUT=""
IPKG=0
IPKGNAME=""
QDEBUG=""
QRELEASE=""
OPTS=""
RESCAN=0

# Read in arguments and determine what to do

if [ "$#" = "0" ] ; then
  HELP=yes
fi

while [ -n "$1" ]; do
  case $1 in
  -h | -help | --help)
    HELP=yes
    ;;
  -q | -quiet | --quiet) 
    VERBOSE=0
    OUTPUT="/dev/null"
    ;;
  -c | -clean | --clean)
    CLEAN=1  
    ;;
  -C | -config | --config)
    shift
    CONFIG=$1
    RECONFIG=1
    ;;
  -b | -build | --build)
    BUILD=1
    ;;
  -p | -package | --package)
    PACKAGE=1
    ;;
  -i | -install | --install)
    INSTALL=1
    ;;
  -r | -run | --run)
    RUN=1
    ;;
  -all | --all)
    RECONFIG=1
    BUILD=1
    PACKAGE=1
    INSTALL=1
    RUN=1
    ;;
  -debug)
    QDEBUG="-debug"
    ;;
  -release)
    QRELEASE="-release"
    ;;
  -options)
    shift
    OPTS=$1
    ;;
  -rescan)
    RESCAN=1
    ;;
  -net)
    gp_net
    exit
    ;;
  -console)
    gp_net
    telnet $PHONEIP
    exit
    ;;
  -ipk)
    INSTALL=1
    IPKG=1 
    shift
    IPKGNAME=$1
    ;; 
  *)
    echo $1: unknown argument
    CLEAN=0
    BUILD=0
    PACKAGE=0
    INSTALL=0 
    RECONFIG=0
    RUN=0
    HELP=yes
    ;;
  esac
  shift
done


# Reconfigure environment 

if [ "$RECONFIG" = "1" ] ;then
  if gp_config; then
    gp_ok
  else
    gp_failed
  fi
  echo
fi

# Get current environment
gp_source

# make clean

if [ "$CLEAN" = "1" ] ;then
  if gp_clean; then
    gp_ok
  else
    gp_failed
  fi
  echo
fi


# make

if [ "$BUILD" = "1" ] ;then
  if gp_make; then
    gp_ok
  else
    gp_failed
  fi
  echo
fi


# make packages

if [ "$PACKAGE" = "1" ] ;then
  if gp_package; then
    gp_ok
  else
    gp_failed
  fi
  echo
fi


# transfer package to greenphone and install it

if [ "$INSTALL" = "1" ] ;then
  if gp_install; then
    gp_ok
  else
    gp_failed
  fi
  echo
fi

if [ "$RESCAN" = "1" ] ; then
  gp_rescan
fi


# Tell greenphone to run your application

if [ "$RUN" = "1" ] ;then
  if gp_run; then
    gp_ok
  else
    gp_failed
  fi
  echo
fi



if [ "$HELP" = "yes" ] ;then
  echo
  echo "FORMAT: $0 <options>"
  echo 
  echo "Options:"
  echo " -h          display command help"
  echo " -q          quiet mode"
  echo " -c          clean"
  echo " -C <opt>    reconfig <x86> or <greenphone>, default greenphone"
  echo " -b          make"
  echo " -p          make package"
  echo " -i          install package to greenphone"
  echo " -r          run application on greenphone"
  echo " -all        reconfig, make, make package, install, run"
  echo " -debug      force configure for debug build, override default"
  echo " -release    force configure for release build, override default"
  echo
  echo " -options \"<opts>\" pass extra options to build system"
  echo "          eg. $0 -C x86 -all -options \"CONFIG+=debug\""
  echo 
  echo " -net        bring up network to greenphone"
  echo " -console    console on greenphone"
  echo " -ipk <file> install ipk to greenphone, next arg it ipk filename"
  echo " -rescan     Tell Qtopia to rescan for new documents and applications"
  echo
fi

