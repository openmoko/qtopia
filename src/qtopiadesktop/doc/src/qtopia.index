<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url=".." title="Qtopia Reference Documentation" version="4.3.2">
    <namespace access="public" threadsafety="unspecified" status="commendable" name="" href="" location="" module="">
        <class access="public" threadsafety="unspecified" status="commendable" name="EnvironmentSetupTask" href="environmentsetuptask.html" location="environmentsetuptask.h" bases="" module=""></class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QBluetoothHeadsetAudioGatewayServer" href="qbluetoothheadsetaudiogatewayserver.html" location="qbluetoothhsagserver_p.h" bases="QBluetoothAudioGateway" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothHeadsetAudioGatewayServer" fullname="QBluetoothHeadsetAudioGatewayServer::QBluetoothHeadsetAudioGatewayServer" href="qbluetoothheadsetaudiogatewayserver.html#QBluetoothHeadsetAudioGatewayServer" location="qbluetoothhsagserver_p.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothHeadsetAudioGatewayServer(QBluetoothHeadsetCommInterface * parent, const QString &amp; audioDev, const QString &amp; service)">
                <parameter left="QBluetoothHeadsetCommInterface *" right="" name="parent" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="audioDev" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothHeadsetAudioGatewayServer" fullname="QBluetoothHeadsetAudioGatewayServer::~QBluetoothHeadsetAudioGatewayServer" href="qbluetoothheadsetaudiogatewayserver.html#dtor.QBluetoothHeadsetAudioGatewayServer" location="qbluetoothhsagserver_p.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothHeadsetAudioGatewayServer()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaSql" href="qtopiasql.html" location="qtopiasql.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="instance" fullname="QtopiaSql::instance" href="qtopiasql.html#instance" location="qtopiasql.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QtopiaSql *" signature="instance()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="openDatabase" fullname="QtopiaSql::openDatabase" href="qtopiasql.html#openDatabase" location="qtopiasql.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="openDatabase()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stringCompare" fullname="QtopiaSql::stringCompare" href="qtopiasql.html#stringCompare" location="qtopiasql.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="stringCompare(const QString &amp; l, const QString &amp; r)">
                <parameter left="const QString &amp;" right="" name="l" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="r" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="systemDatabase" fullname="QtopiaSql::systemDatabase" href="qtopiasql.html#systemDatabase" location="qtopiasql.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QSqlDatabase &amp;" signature="systemDatabase()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="loadConfig" fullname="QtopiaSql::loadConfig" href="qtopiasql.html#loadConfig" location="qtopiasql.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="loadConfig(const QString &amp; type, const QString &amp; name, const QString &amp; user)">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="user" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exec" fullname="QtopiaSql::exec" href="qtopiasql.html#exec" location="qtopiasql.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QSqlError" signature="exec(const QString &amp; query, QSqlDatabase &amp; db, bool inTransaction)">
                <parameter left="const QString &amp;" right="" name="query" default=""></parameter>
                <parameter left="QSqlDatabase &amp;" right="" name="db" default=""></parameter>
                <parameter left="bool" right="" name="inTransaction" default="true"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exec" fullname="QtopiaSql::exec" href="qtopiasql.html#exec-2" location="qtopiasql.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="QSqlError" signature="exec(QSqlQuery &amp; query, QSqlDatabase &amp; db, bool inTransaction)">
                <parameter left="QSqlQuery &amp;" right="" name="query" default=""></parameter>
                <parameter left="QSqlDatabase &amp;" right="" name="db" default=""></parameter>
                <parameter left="bool" right="" name="inTransaction" default="true"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attachDB" fullname="QtopiaSql::attachDB" href="qtopiasql.html#attachDB" location="qtopiasql.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="attachDB(const QString &amp; path)">
                <parameter left="const QString &amp;" right="" name="path" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attachDB" fullname="QtopiaSql::attachDB" href="qtopiasql.html#attachDB-2" location="qtopiasql.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="attachDB(const QString &amp; path, const QString &amp; dbPath)">
                <parameter left="const QString &amp;" right="" name="path" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="dbPath" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detachDB" fullname="QtopiaSql::detachDB" href="qtopiasql.html#detachDB" location="qtopiasql.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="detachDB(const QString &amp; path)">
                <parameter left="const QString &amp;" right="" name="path" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="databaseIdForPath" fullname="QtopiaSql::databaseIdForPath" href="qtopiasql.html#databaseIdForPath" location="qtopiasql.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QtopiaDatabaseId" signature="databaseIdForPath(const QString &amp; path)">
                <parameter left="const QString &amp;" right="" name="path" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="databaseIdForDatabasePath" fullname="QtopiaSql::databaseIdForDatabasePath" href="qtopiasql.html#databaseIdForDatabasePath" location="qtopiasql.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QtopiaDatabaseId" signature="databaseIdForDatabasePath(const QString &amp; dbPath)">
                <parameter left="const QString &amp;" right="" name="dbPath" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="database" fullname="QtopiaSql::database" href="qtopiasql.html#database" location="qtopiasql.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QSqlDatabase &amp;" signature="database(const QtopiaDatabaseId &amp; id)">
                <parameter left="const QtopiaDatabaseId &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="databaseIds" fullname="QtopiaSql::databaseIds" href="qtopiasql.html#databaseIds" location="qtopiasql.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="const QList&lt;QtopiaDatabaseId&gt;" signature="databaseIds()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="databases" fullname="QtopiaSql::databases" href="qtopiasql.html#databases" location="qtopiasql.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="const QList&lt;QSqlDatabase&gt;" signature="databases()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isDatabase" fullname="QtopiaSql::isDatabase" href="qtopiasql.html#isDatabase" location="qtopiasql.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="isDatabase(const QString &amp; path)">
                <parameter left="const QString &amp;" right="" name="path" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="databasePathForId" fullname="QtopiaSql::databasePathForId" href="qtopiasql.html#databasePathForId" location="qtopiasql.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="databasePathForId(const QtopiaDatabaseId &amp; id)">
                <parameter left="const QtopiaDatabaseId &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValidDatabaseId" fullname="QtopiaSql::isValidDatabaseId" href="qtopiasql.html#isValidDatabaseId" location="qtopiasql.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="isValidDatabaseId(const QtopiaDatabaseId &amp; id)">
                <parameter left="const QtopiaDatabaseId &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="escapeString" fullname="QtopiaSql::escapeString" href="qtopiasql.html#escapeString" location="qtopiasql.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="escapeString(const QString &amp; input)">
                <parameter left="const QString &amp;" right="" name="input" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="applicationSpecificDatabase" fullname="QtopiaSql::applicationSpecificDatabase" href="qtopiasql.html#applicationSpecificDatabase" location="qtopiasql.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QSqlDatabase" signature="applicationSpecificDatabase(const QString &amp; appname)">
                <parameter left="const QString &amp;" right="" name="appname" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="ensureTableExists" fullname="QtopiaSql::ensureTableExists" href="qtopiasql.html#ensureTableExists" location="qtopiasql.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="ensureTableExists(const QString &amp; tableName, QSqlDatabase &amp; db)">
                <parameter left="const QString &amp;" right="" name="tableName" default=""></parameter>
                <parameter left="QSqlDatabase &amp;" right="" name="db" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="ensureTableExists" fullname="QtopiaSql::ensureTableExists" href="qtopiasql.html#ensureTableExists-2" location="qtopiasql.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="ensureTableExists(const QStringList &amp; tableNames, QSqlDatabase &amp; db)">
                <parameter left="const QStringList &amp;" right="" name="tableNames" default=""></parameter>
                <parameter left="QSqlDatabase &amp;" right="" name="db" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="logQuery" fullname="QtopiaSql::logQuery" href="qtopiasql.html#logQuery" location="qtopiasql.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="logQuery(const QSqlQuery &amp; q)">
                <parameter left="const QSqlQuery &amp;" right="" name="q" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QContentFilter" href="qcontentfilter.html" location="qcontentfilter.h" bases="" module="">
            <contents name="file-paths" title="File paths" level="1"></contents>
            <contents name="roles" title="Roles" level="1"></contents>
            <contents name="mime-types" title="Mime types" level="1"></contents>
            <contents name="categories" title="Categories" level="1"></contents>
            <contents name="drm" title="DRM" level="1"></contents>
            <contents name="properties" title="Properties" level="1"></contents>
            <enum access="public" threadsafety="unspecified" status="commendable" name="FilterType" fullname="QContentFilter::FilterType" href="qcontentfilter.html#FilterType-enum" location="qcontentfilter.h">
                <value name="Location" value="0"></value>
                <value name="Role" value="1"></value>
                <value name="MimeType" value="2"></value>
                <value name="Directory" value="3"></value>
                <value name="Category" value="4"></value>
                <value name="DRM" value="5"></value>
                <value name="Property" value="6"></value>
                <value name="FileName" value="7"></value>
                <value name="Name" value="8"></value>
                <value name="QtopiaType" value="Role"></value>
                <value name="Synthetic" value="Property"></value>
                <value name="Unknown" value="100"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Operand" fullname="QContentFilter::Operand" href="qcontentfilter.html#Operand-enum" location="qcontentfilter.h">
                <value name="NoOperand" value="0"></value>
                <value name="And" value="1"></value>
                <value name="Or" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentFilter" fullname="QContentFilter::QContentFilter" href="qcontentfilter.html#QContentFilter" location="qcontentfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContentFilter()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentFilter" fullname="QContentFilter::QContentFilter" href="qcontentfilter.html#QContentFilter-2" location="qcontentfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContentFilter(const QContentFilter &amp; other)">
                <parameter left="const QContentFilter &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentFilter" fullname="QContentFilter::QContentFilter" href="qcontentfilter.html#QContentFilter-3" location="qcontentfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QContentFilter(FilterType type, const QString &amp; argument)">
                <parameter left="FilterType" right="" name="type" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="argument" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentFilter" fullname="QContentFilter::QContentFilter" href="qcontentfilter.html#QContentFilter-4" location="qcontentfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QContentFilter(QContent::Property property, const QString &amp; value)">
                <parameter left="QContent::Property" right="" name="property" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentFilter" fullname="QContentFilter::QContentFilter" href="qcontentfilter.html#QContentFilter-5" location="qcontentfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="5" type="" signature="QContentFilter(QContent::Role role)">
                <parameter left="QContent::Role" right="" name="role" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentFilter" fullname="QContentFilter::QContentFilter" href="qcontentfilter.html#QContentFilter-6" location="qcontentfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="6" type="" signature="QContentFilter(const QMimeType &amp; mime)">
                <parameter left="const QMimeType &amp;" right="" name="mime" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentFilter" fullname="QContentFilter::QContentFilter" href="qcontentfilter.html#QContentFilter-7" location="qcontentfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="7" type="" signature="QContentFilter(const QCategoryFilter &amp; filter)">
                <parameter left="const QCategoryFilter &amp;" right="" name="filter" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContentFilter" fullname="QContentFilter::~QContentFilter" href="qcontentfilter.html#dtor.QContentFilter" location="qcontentfilter.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContentFilter()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QContentFilter::operator=" href="qcontentfilter.html#operator=" location="qcontentfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QContentFilter &amp;" signature="operator=(const QContentFilter &amp; other)">
                <parameter left="const QContentFilter &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator~" fullname="QContentFilter::operator~" href="qcontentfilter.html#operator~" location="qcontentfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentFilter" signature="operator~() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&amp;" fullname="QContentFilter::operator&amp;" href="qcontentfilter.html#operator&amp;" location="qcontentfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentFilter" signature="operator&amp;(const QContentFilter &amp; other) const">
                <parameter left="const QContentFilter &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator|" fullname="QContentFilter::operator|" href="qcontentfilter.html#operator|" location="qcontentfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentFilter" signature="operator|(const QContentFilter &amp; other) const">
                <parameter left="const QContentFilter &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&amp;=" fullname="QContentFilter::operator&amp;=" href="qcontentfilter.html#operator&amp;=" location="qcontentfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QContentFilter &amp;" signature="operator&amp;=(const QContentFilter &amp; other)">
                <parameter left="const QContentFilter &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator|=" fullname="QContentFilter::operator|=" href="qcontentfilter.html#operator|=" location="qcontentfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QContentFilter &amp;" signature="operator|=(const QContentFilter &amp; other)">
                <parameter left="const QContentFilter &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QContentFilter::operator==" href="qcontentfilter.html#operator==" location="qcontentfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QContentFilter &amp; other) const">
                <parameter left="const QContentFilter &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QContentFilter::operator!=" href="qcontentfilter.html#operator!=" location="qcontentfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QContentFilter &amp; other) const">
                <parameter left="const QContentFilter &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operand" fullname="QContentFilter::operand" href="qcontentfilter.html#operand" location="qcontentfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Operand" signature="operand() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="negated" fullname="QContentFilter::negated" href="qcontentfilter.html#negated" location="qcontentfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="negated() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QContentFilter::isValid" href="qcontentfilter.html#isValid" location="qcontentfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QContentFilter::clear" href="qcontentfilter.html#clear" location="qcontentfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="types" fullname="QContentFilter::types" href="qcontentfilter.html#types" location="qcontentfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;FilterType&gt;" signature="types() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="arguments" fullname="QContentFilter::arguments" href="qcontentfilter.html#arguments" location="qcontentfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="arguments(FilterType type) const">
                <parameter left="FilterType" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="subFilters" fullname="QContentFilter::subFilters" href="qcontentfilter.html#subFilters" location="qcontentfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContentFilter&gt;" signature="subFilters() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="test" fullname="QContentFilter::test" href="qcontentfilter.html#test" location="qcontentfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="test(const QContent &amp; content) const">
                <parameter left="const QContent &amp;" right="" name="content" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="argumentMatches" fullname="QContentFilter::argumentMatches" href="qcontentfilter.html#argumentMatches" location="qcontentfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="argumentMatches(FilterType type, const QString &amp; scope) const">
                <parameter left="FilterType" right="" name="type" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="scope" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mimeType" fullname="QContentFilter::mimeType" href="qcontentfilter.html#mimeType" location="qcontentfilter.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QContentFilter" signature="mimeType(const QString &amp; mimeType)">
                <parameter left="const QString &amp;" right="" name="mimeType" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="category" fullname="QContentFilter::category" href="qcontentfilter.html#category" location="qcontentfilter.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QContentFilter" signature="category(const QString &amp; categoryId)">
                <parameter left="const QString &amp;" right="" name="categoryId" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QContentFilter::name" href="qcontentfilter.html#name" location="qcontentfilter.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QContentFilter" signature="name(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fileName" fullname="QContentFilter::fileName" href="qcontentfilter.html#fileName" location="qcontentfilter.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QContentFilter" signature="fileName(const QString &amp; fileName)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="property" fullname="QContentFilter::property" href="qcontentfilter.html#property" location="qcontentfilter.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QContentFilter" signature="property(const QString &amp; group, const QString &amp; key, const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="group" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="property" fullname="QContentFilter::property" href="qcontentfilter.html#property-2" location="qcontentfilter.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QContentFilter" signature="property(const QString &amp; key, const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QContentFilterSelector" href="qcontentfilterselector.html" location="qcontentfilterselector.h" bases="QWidget" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentFilterSelector" fullname="QContentFilterSelector::QContentFilterSelector" href="qcontentfilterselector.html#QContentFilterSelector" location="qcontentfilterselector.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContentFilterSelector(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentFilterSelector" fullname="QContentFilterSelector::QContentFilterSelector" href="qcontentfilterselector.html#QContentFilterSelector-2" location="qcontentfilterselector.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContentFilterSelector(const QContentFilterModel::Template &amp; modelTemplate, QWidget * parent)">
                <parameter left="const QContentFilterModel::Template &amp;" right="" name="modelTemplate" default=""></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentFilterSelector" fullname="QContentFilterSelector::QContentFilterSelector" href="qcontentfilterselector.html#QContentFilterSelector-3" location="qcontentfilterselector.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QContentFilterSelector(QContent::Property property, QFlags&lt;QContentFilterModel::TemplateOption&gt; options, const QStringList &amp; checked, QWidget * parent)">
                <parameter left="QContent::Property" right="" name="property" default=""></parameter>
                <parameter left="QFlags&lt;QContentFilterModel::TemplateOption&gt;" right="" name="options" default="QContentFilterModel::SelectAll"></parameter>
                <parameter left="const QStringList &amp;" right="" name="checked" default="QStringList()"></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentFilterSelector" fullname="QContentFilterSelector::QContentFilterSelector" href="qcontentfilterselector.html#QContentFilterSelector-4" location="qcontentfilterselector.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QContentFilterSelector(QContentFilter::FilterType type, const QString &amp; scope, QFlags&lt;QContentFilterModel::TemplateOption&gt; options, const QStringList &amp; checked, QWidget * parent)">
                <parameter left="QContentFilter::FilterType" right="" name="type" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="scope" default="QString()"></parameter>
                <parameter left="QFlags&lt;QContentFilterModel::TemplateOption&gt;" right="" name="options" default="QContentFilterModel::SelectAll"></parameter>
                <parameter left="const QStringList &amp;" right="" name="checked" default="QStringList()"></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QContentFilterSelector::filter" href="qcontentfilterselector.html#filter" location="qcontentfilterselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QContentFilter" signature="filter()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilter" fullname="QContentFilterSelector::setFilter" href="qcontentfilterselector.html#setFilter" location="qcontentfilterselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilter(const QContentFilter &amp; filter)">
                <parameter left="const QContentFilter &amp;" right="" name="filter" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="modelTemplate" fullname="QContentFilterSelector::modelTemplate" href="qcontentfilterselector.html#modelTemplate" location="qcontentfilterselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentFilterModel::Template" signature="modelTemplate() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setModelTemplate" fullname="QContentFilterSelector::setModelTemplate" href="qcontentfilterselector.html#setModelTemplate" location="qcontentfilterselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setModelTemplate(const QContentFilterModel::Template &amp; modelTemplate)">
                <parameter left="const QContentFilterModel::Template &amp;" right="" name="modelTemplate" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setModelTemplate" fullname="QContentFilterSelector::setModelTemplate" href="qcontentfilterselector.html#setModelTemplate-2" location="qcontentfilterselector.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setModelTemplate(QContent::Property property, QFlags&lt;QContentFilterModel::TemplateOption&gt; options, const QStringList &amp; checked)">
                <parameter left="QContent::Property" right="" name="property" default=""></parameter>
                <parameter left="QFlags&lt;QContentFilterModel::TemplateOption&gt;" right="" name="options" default="QContentFilterModel::SelectAll"></parameter>
                <parameter left="const QStringList &amp;" right="" name="checked" default="QStringList()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setModelTemplate" fullname="QContentFilterSelector::setModelTemplate" href="qcontentfilterselector.html#setModelTemplate-3" location="qcontentfilterselector.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="void" signature="setModelTemplate(QContentFilter::FilterType type, const QString &amp; scope, QFlags&lt;QContentFilterModel::TemplateOption&gt; options, const QStringList &amp; checked)">
                <parameter left="QContentFilter::FilterType" right="" name="type" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="scope" default="QString()"></parameter>
                <parameter left="QFlags&lt;QContentFilterModel::TemplateOption&gt;" right="" name="options" default="QContentFilterModel::SelectAll"></parameter>
                <parameter left="const QStringList &amp;" right="" name="checked" default="QStringList()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="checkedFilter" fullname="QContentFilterSelector::checkedFilter" href="qcontentfilterselector.html#checkedFilter" location="qcontentfilterselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentFilter" signature="checkedFilter() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="checkedLabel" fullname="QContentFilterSelector::checkedLabel" href="qcontentfilterselector.html#checkedLabel" location="qcontentfilterselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="checkedLabel() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filterSelected" fullname="QContentFilterSelector::filterSelected" href="qcontentfilterselector.html#filterSelected" location="qcontentfilterselector.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="filterSelected(const QContentFilter &amp; filter)">
                <parameter left="const QContentFilter &amp;" right="" name="filter" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QContentFilterDialog" href="qcontentfilterdialog.html" location="qcontentfilterselector.h" bases="QDialog" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentFilterDialog" fullname="QContentFilterDialog::QContentFilterDialog" href="qcontentfilterdialog.html#QContentFilterDialog" location="qcontentfilterselector.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContentFilterDialog(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentFilterDialog" fullname="QContentFilterDialog::QContentFilterDialog" href="qcontentfilterdialog.html#QContentFilterDialog-2" location="qcontentfilterselector.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContentFilterDialog(const QContentFilterModel::Template &amp; modelTemplate, QWidget * parent)">
                <parameter left="const QContentFilterModel::Template &amp;" right="" name="modelTemplate" default=""></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentFilterDialog" fullname="QContentFilterDialog::QContentFilterDialog" href="qcontentfilterdialog.html#QContentFilterDialog-3" location="qcontentfilterselector.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QContentFilterDialog(QContent::Property property, QFlags&lt;QContentFilterModel::TemplateOption&gt; options, const QStringList &amp; checked, QWidget * parent)">
                <parameter left="QContent::Property" right="" name="property" default=""></parameter>
                <parameter left="QFlags&lt;QContentFilterModel::TemplateOption&gt;" right="" name="options" default="QContentFilterModel::SelectAll"></parameter>
                <parameter left="const QStringList &amp;" right="" name="checked" default="QStringList()"></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentFilterDialog" fullname="QContentFilterDialog::QContentFilterDialog" href="qcontentfilterdialog.html#QContentFilterDialog-4" location="qcontentfilterselector.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QContentFilterDialog(QContentFilter::FilterType type, const QString &amp; scope, QFlags&lt;QContentFilterModel::TemplateOption&gt; options, const QStringList &amp; checked, QWidget * parent)">
                <parameter left="QContentFilter::FilterType" right="" name="type" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="scope" default="QString()"></parameter>
                <parameter left="QFlags&lt;QContentFilterModel::TemplateOption&gt;" right="" name="options" default="QContentFilterModel::SelectAll"></parameter>
                <parameter left="const QStringList &amp;" right="" name="checked" default="QStringList()"></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QContentFilterDialog::filter" href="qcontentfilterdialog.html#filter" location="qcontentfilterselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QContentFilter" signature="filter()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilter" fullname="QContentFilterDialog::setFilter" href="qcontentfilterdialog.html#setFilter" location="qcontentfilterselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilter(const QContentFilter &amp; filter)">
                <parameter left="const QContentFilter &amp;" right="" name="filter" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="modelTemplate" fullname="QContentFilterDialog::modelTemplate" href="qcontentfilterdialog.html#modelTemplate" location="qcontentfilterselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentFilterModel::Template" signature="modelTemplate() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setModelTemplate" fullname="QContentFilterDialog::setModelTemplate" href="qcontentfilterdialog.html#setModelTemplate" location="qcontentfilterselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setModelTemplate(const QContentFilterModel::Template &amp; modelTemplate)">
                <parameter left="const QContentFilterModel::Template &amp;" right="" name="modelTemplate" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setModelTemplate" fullname="QContentFilterDialog::setModelTemplate" href="qcontentfilterdialog.html#setModelTemplate-2" location="qcontentfilterselector.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setModelTemplate(QContent::Property property, QFlags&lt;QContentFilterModel::TemplateOption&gt; options, const QStringList &amp; checked)">
                <parameter left="QContent::Property" right="" name="property" default=""></parameter>
                <parameter left="QFlags&lt;QContentFilterModel::TemplateOption&gt;" right="" name="options" default="QContentFilterModel::SelectAll"></parameter>
                <parameter left="const QStringList &amp;" right="" name="checked" default="QStringList()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setModelTemplate" fullname="QContentFilterDialog::setModelTemplate" href="qcontentfilterdialog.html#setModelTemplate-3" location="qcontentfilterselector.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="void" signature="setModelTemplate(QContentFilter::FilterType type, const QString &amp; scope, QFlags&lt;QContentFilterModel::TemplateOption&gt; options, const QStringList &amp; checked)">
                <parameter left="QContentFilter::FilterType" right="" name="type" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="scope" default="QString()"></parameter>
                <parameter left="QFlags&lt;QContentFilterModel::TemplateOption&gt;" right="" name="options" default="QContentFilterModel::SelectAll"></parameter>
                <parameter left="const QStringList &amp;" right="" name="checked" default="QStringList()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedFilter" fullname="QContentFilterDialog::selectedFilter" href="qcontentfilterdialog.html#selectedFilter" location="qcontentfilterselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentFilter" signature="selectedFilter() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="checkedFilter" fullname="QContentFilterDialog::checkedFilter" href="qcontentfilterdialog.html#checkedFilter" location="qcontentfilterselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentFilter" signature="checkedFilter() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="checkedLabel" fullname="QContentFilterDialog::checkedLabel" href="qcontentfilterdialog.html#checkedLabel" location="qcontentfilterselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="checkedLabel() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothServiceController" href="qbluetoothservicecontroller.html" location="qbluetoothservicecontroller.h" bases="QObject" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="ServiceState" fullname="QBluetoothServiceController::ServiceState" href="qbluetoothservicecontroller.html#ServiceState-enum" location="qbluetoothservicecontroller.h">
                <value name="NotRunning" value="0"></value>
                <value name="Starting" value="1"></value>
                <value name="Running" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothServiceController" fullname="QBluetoothServiceController::QBluetoothServiceController" href="qbluetoothservicecontroller.html#QBluetoothServiceController" location="qbluetoothservicecontroller.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothServiceController(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothServiceController" fullname="QBluetoothServiceController::~QBluetoothServiceController" href="qbluetoothservicecontroller.html#dtor.QBluetoothServiceController" location="qbluetoothservicecontroller.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothServiceController()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QBluetoothServiceController::start" href="qbluetoothservicecontroller.html#start" location="qbluetoothservicecontroller.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="start(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QBluetoothServiceController::stop" href="qbluetoothservicecontroller.html#stop" location="qbluetoothservicecontroller.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="stop(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QBluetoothServiceController::state" href="qbluetoothservicecontroller.html#state" location="qbluetoothservicecontroller.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothServiceController::ServiceState" signature="state(const QString &amp; name) const">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSecurityOptions" fullname="QBluetoothServiceController::setSecurityOptions" href="qbluetoothservicecontroller.html#setSecurityOptions" location="qbluetoothservicecontroller.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSecurityOptions(const QString &amp; name, QFlags&lt;QBluetooth::SecurityOption&gt; options)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="QFlags&lt;QBluetooth::SecurityOption&gt;" right="" name="options" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="securityOptions" fullname="QBluetoothServiceController::securityOptions" href="qbluetoothservicecontroller.html#securityOptions" location="qbluetoothservicecontroller.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetooth::SecurityOptions" signature="securityOptions(const QString &amp; name) const">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="displayName" fullname="QBluetoothServiceController::displayName" href="qbluetoothservicecontroller.html#displayName" location="qbluetoothservicecontroller.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="displayName(const QString &amp; name) const">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="services" fullname="QBluetoothServiceController::services" href="qbluetoothservicecontroller.html#services" location="qbluetoothservicecontroller.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="services() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="started" fullname="QBluetoothServiceController::started" href="qbluetoothservicecontroller.html#started" location="qbluetoothservicecontroller.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="started(const QString &amp; name, bool error, const QString &amp; description)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="bool" right="" name="error" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="description" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stopped" fullname="QBluetoothServiceController::stopped" href="qbluetoothservicecontroller.html#stopped" location="qbluetoothservicecontroller.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stopped(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothPasskeyRequest" href="qbluetoothpasskeyrequest.html" location="qbluetoothpasskeyrequest.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothPasskeyRequest" fullname="QBluetoothPasskeyRequest::QBluetoothPasskeyRequest" href="qbluetoothpasskeyrequest.html#QBluetoothPasskeyRequest" location="qbluetoothpasskeyrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothPasskeyRequest(const QString &amp; localDevice, const QBluetoothAddress &amp; remoteDevice)">
                <parameter left="const QString &amp;" right="" name="localDevice" default=""></parameter>
                <parameter left="const QBluetoothAddress &amp;" right="" name="remoteDevice" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothPasskeyRequest" fullname="QBluetoothPasskeyRequest::QBluetoothPasskeyRequest" href="qbluetoothpasskeyrequest.html#QBluetoothPasskeyRequest-2" location="qbluetoothpasskeyrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QBluetoothPasskeyRequest(const QBluetoothPasskeyRequest &amp; other)">
                <parameter left="const QBluetoothPasskeyRequest &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothPasskeyRequest" fullname="QBluetoothPasskeyRequest::~QBluetoothPasskeyRequest" href="qbluetoothpasskeyrequest.html#dtor.QBluetoothPasskeyRequest" location="qbluetoothpasskeyrequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothPasskeyRequest()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QBluetoothPasskeyRequest::operator=" href="qbluetoothpasskeyrequest.html#operator=" location="qbluetoothpasskeyrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QBluetoothPasskeyRequest &amp;" signature="operator=(const QBluetoothPasskeyRequest &amp; other)">
                <parameter left="const QBluetoothPasskeyRequest &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QBluetoothPasskeyRequest::operator==" href="qbluetoothpasskeyrequest.html#operator==" location="qbluetoothpasskeyrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QBluetoothPasskeyRequest &amp; other) const">
                <parameter left="const QBluetoothPasskeyRequest &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QBluetoothPasskeyRequest::operator!=" href="qbluetoothpasskeyrequest.html#operator!=" location="qbluetoothpasskeyrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QBluetoothPasskeyRequest &amp; other) const">
                <parameter left="const QBluetoothPasskeyRequest &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localDevice" fullname="QBluetoothPasskeyRequest::localDevice" href="qbluetoothpasskeyrequest.html#localDevice" location="qbluetoothpasskeyrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QString &amp;" signature="localDevice() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remoteDevice" fullname="QBluetoothPasskeyRequest::remoteDevice" href="qbluetoothpasskeyrequest.html#remoteDevice" location="qbluetoothpasskeyrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QBluetoothAddress &amp;" signature="remoteDevice() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRejected" fullname="QBluetoothPasskeyRequest::setRejected" href="qbluetoothpasskeyrequest.html#setRejected" location="qbluetoothpasskeyrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRejected()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isRejected" fullname="QBluetoothPasskeyRequest::isRejected" href="qbluetoothpasskeyrequest.html#isRejected" location="qbluetoothpasskeyrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isRejected() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPasskey" fullname="QBluetoothPasskeyRequest::setPasskey" href="qbluetoothpasskeyrequest.html#setPasskey" location="qbluetoothpasskeyrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPasskey(const QString &amp; passkey)">
                <parameter left="const QString &amp;" right="" name="passkey" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="passkey" fullname="QBluetoothPasskeyRequest::passkey" href="qbluetoothpasskeyrequest.html#passkey" location="qbluetoothpasskeyrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QString &amp;" signature="passkey() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QMediaHelixSettingsControl" href="qmediahelixsettingscontrol.html" location="qmediahelixsettingscontrol.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaHelixSettingsControl" fullname="QMediaHelixSettingsControl::QMediaHelixSettingsControl" href="qmediahelixsettingscontrol.html#QMediaHelixSettingsControl" location="qmediahelixsettingscontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaHelixSettingsControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaHelixSettingsControl" fullname="QMediaHelixSettingsControl::~QMediaHelixSettingsControl" href="qmediahelixsettingscontrol.html#dtor.QMediaHelixSettingsControl" location="qmediahelixsettingscontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaHelixSettingsControl()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableOptions" fullname="QMediaHelixSettingsControl::availableOptions" href="qmediahelixsettingscontrol.html#availableOptions" location="qmediahelixsettingscontrol.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QStringList" signature="availableOptions()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOption" fullname="QMediaHelixSettingsControl::setOption" href="qmediahelixsettingscontrol.html#setOption" location="qmediahelixsettingscontrol.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setOption(QString const &amp; name, QVariant const &amp; value)">
                <parameter left="QString const &amp;" right="" name="name" default=""></parameter>
                <parameter left="QVariant const &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="optionValue" fullname="QMediaHelixSettingsControl::optionValue" href="qmediahelixsettingscontrol.html#optionValue" location="qmediahelixsettingscontrol.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QVariant" signature="optionValue(QString const &amp; name)">
                <parameter left="QString const &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QMediaHelixSettingsControl::name" href="qmediahelixsettingscontrol.html#name" location="qmediahelixsettingscontrol.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="name()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="optionChanged" fullname="QMediaHelixSettingsControl::optionChanged" href="qmediahelixsettingscontrol.html#optionChanged" location="qmediahelixsettingscontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="optionChanged(QString name, QVariant value)">
                <parameter left="QString" right="" name="name" default=""></parameter>
                <parameter left="QVariant" right="" name="value" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QCellBroadcast" href="qcellbroadcast.html" location="qcellbroadcast.h" bases="QCommInterface" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="channels" fullname="QCellBroadcast::channels" href="qcellbroadcast.html#channels-prop" location="qcellbroadcast.h" type="QList&lt;int&gt;">
                <getter name="channels"></getter>
                <setter name="setChannels"></setter>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QCellBroadcast" fullname="QCellBroadcast::QCellBroadcast" href="qcellbroadcast.html#QCellBroadcast" location="qcellbroadcast.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCellBroadcast(const QString &amp; service, QObject * parent, QCommInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="service" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QCommInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCellBroadcast" fullname="QCellBroadcast::~QCellBroadcast" href="qcellbroadcast.html#dtor.QCellBroadcast" location="qcellbroadcast.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCellBroadcast()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="channels" fullname="QCellBroadcast::channels" href="qcellbroadcast.html#channels-prop" location="qcellbroadcast.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="channels" type="QList&lt;int&gt;" signature="channels() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setChannels" fullname="QCellBroadcast::setChannels" href="qcellbroadcast.html#channels-prop" location="qcellbroadcast.h" virtual="impure" meta="slot" const="false" static="false" overload="false" associated-property="channels" type="void" signature="setChannels(const QList&lt;int&gt; &amp; list)">
                <parameter left="const QList&lt;int&gt; &amp;" right="" name="list" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setChannelsResult" fullname="QCellBroadcast::setChannelsResult" href="qcellbroadcast.html#setChannelsResult" location="qcellbroadcast.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="setChannelsResult(QTelephony::Result result)">
                <parameter left="QTelephony::Result" right="" name="result" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="broadcast" fullname="QCellBroadcast::broadcast" href="qcellbroadcast.html#broadcast" location="qcellbroadcast.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="broadcast(const QCBSMessage &amp; message)">
                <parameter left="const QCBSMessage &amp;" right="" name="message" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemSimFiles" href="qmodemsimfiles.html" location="qmodemsimfiles.h" bases="QSimFiles" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemSimFiles" fullname="QModemSimFiles::QModemSimFiles" href="qmodemsimfiles.html#QModemSimFiles" location="qmodemsimfiles.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemSimFiles(QModemService * service)">
                <parameter left="QModemService *" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemSimFiles" fullname="QModemSimFiles::~QModemSimFiles" href="qmodemsimfiles.html#dtor.QModemSimFiles" location="qmodemsimfiles.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemSimFiles()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="useCSIM" fullname="QModemSimFiles::useCSIM" href="qmodemsimfiles.html#useCSIM" location="qmodemsimfiles.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="useCSIM() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothScoSocket" href="qbluetoothscosocket.html" location="qbluetoothscosocket.h" bases="QBluetoothAbstractSocket" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothScoSocket" fullname="QBluetoothScoSocket::QBluetoothScoSocket" href="qbluetoothscosocket.html#QBluetoothScoSocket" location="qbluetoothscosocket.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothScoSocket(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothScoSocket" fullname="QBluetoothScoSocket::~QBluetoothScoSocket" href="qbluetoothscosocket.html#dtor.QBluetoothScoSocket" location="qbluetoothscosocket.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothScoSocket()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connect" fullname="QBluetoothScoSocket::connect" href="qbluetoothscosocket.html#connect" location="qbluetoothscosocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="connect(const QBluetoothAddress &amp; local, const QBluetoothAddress &amp; remote)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="local" default=""></parameter>
                <parameter left="const QBluetoothAddress &amp;" right="" name="remote" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remoteAddress" fullname="QBluetoothScoSocket::remoteAddress" href="qbluetoothscosocket.html#remoteAddress" location="qbluetoothscosocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothAddress" signature="remoteAddress() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localAddress" fullname="QBluetoothScoSocket::localAddress" href="qbluetoothscosocket.html#localAddress" location="qbluetoothscosocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothAddress" signature="localAddress() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mtu" fullname="QBluetoothScoSocket::mtu" href="qbluetoothscosocket.html#mtu" location="qbluetoothscosocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="mtu() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAbstractMessageBox" href="qabstractmessagebox.html" location="qabstractmessagebox.h" bases="QDialog" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Icon" fullname="QAbstractMessageBox::Icon" href="qabstractmessagebox.html#Icon-enum" location="qabstractmessagebox.h">
                <value name="NoIcon" value="0"></value>
                <value name="Question" value="1"></value>
                <value name="Information" value="2"></value>
                <value name="Warning" value="3"></value>
                <value name="Critical" value="4"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Button" fullname="QAbstractMessageBox::Button" href="qabstractmessagebox.html#Button-enum" location="qabstractmessagebox.h">
                <value name="NoButton" value="0"></value>
                <value name="Ok" value="11"></value>
                <value name="Cancel" value="12"></value>
                <value name="Yes" value="13"></value>
                <value name="No" value="14"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAbstractMessageBox" fullname="QAbstractMessageBox::QAbstractMessageBox" href="qabstractmessagebox.html#QAbstractMessageBox" location="qabstractmessagebox.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAbstractMessageBox(QWidget * parent, Qt::WFlags flags)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
                <parameter left="Qt::WFlags" right="" name="flags" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setButtons" fullname="QAbstractMessageBox::setButtons" href="qabstractmessagebox.html#setButtons" location="qabstractmessagebox.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setButtons(Button button1, Button button2)">
                <parameter left="Button" right="" name="button1" default=""></parameter>
                <parameter left="Button" right="" name="button2" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setButtons" fullname="QAbstractMessageBox::setButtons" href="qabstractmessagebox.html#setButtons-2" location="qabstractmessagebox.h" virtual="pure" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setButtons(const QString &amp; button0Text, const QString &amp; button1Text, const QString &amp; button2Text, int defaultButtonNumber, int escapeButtonNumber)">
                <parameter left="const QString &amp;" right="" name="button0Text" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="button1Text" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="button2Text" default=""></parameter>
                <parameter left="int" right="" name="defaultButtonNumber" default=""></parameter>
                <parameter left="int" right="" name="escapeButtonNumber" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="title" fullname="QAbstractMessageBox::title" href="qabstractmessagebox.html#title" location="qabstractmessagebox.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="title() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTitle" fullname="QAbstractMessageBox::setTitle" href="qabstractmessagebox.html#setTitle" location="qabstractmessagebox.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setTitle(const QString &amp; title)">
                <parameter left="const QString &amp;" right="" name="title" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="icon" fullname="QAbstractMessageBox::icon" href="qabstractmessagebox.html#icon" location="qabstractmessagebox.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="Icon" signature="icon() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIcon" fullname="QAbstractMessageBox::setIcon" href="qabstractmessagebox.html#setIcon" location="qabstractmessagebox.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setIcon(Icon icon)">
                <parameter left="Icon" right="" name="icon" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="text" fullname="QAbstractMessageBox::text" href="qabstractmessagebox.html#text" location="qabstractmessagebox.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="text() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setText" fullname="QAbstractMessageBox::setText" href="qabstractmessagebox.html#setText" location="qabstractmessagebox.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setText(const QString &amp; text)">
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTimeout" fullname="QAbstractMessageBox::setTimeout" href="qabstractmessagebox.html#setTimeout" location="qabstractmessagebox.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setTimeout(int timeoutMs, Button button)">
                <parameter left="int" right="" name="timeoutMs" default=""></parameter>
                <parameter left="Button" right="" name="button" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="critical" fullname="QAbstractMessageBox::critical" href="qabstractmessagebox.html#critical" location="qabstractmessagebox.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="critical(QWidget * parent, const QString &amp; title, const QString &amp; text, Button button1, Button button2)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="title" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
                <parameter left="Button" right="" name="button1" default="NoButton"></parameter>
                <parameter left="Button" right="" name="button2" default="NoButton"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="warning" fullname="QAbstractMessageBox::warning" href="qabstractmessagebox.html#warning" location="qabstractmessagebox.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="warning(QWidget * parent, const QString &amp; title, const QString &amp; text, Button button1, Button button2)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="title" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
                <parameter left="Button" right="" name="button1" default="NoButton"></parameter>
                <parameter left="Button" right="" name="button2" default="NoButton"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="information" fullname="QAbstractMessageBox::information" href="qabstractmessagebox.html#information" location="qabstractmessagebox.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="information(QWidget * parent, const QString &amp; title, const QString &amp; text, Button button1, Button button2)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="title" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
                <parameter left="Button" right="" name="button1" default="NoButton"></parameter>
                <parameter left="Button" right="" name="button2" default="NoButton"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="question" fullname="QAbstractMessageBox::question" href="qabstractmessagebox.html#question" location="qabstractmessagebox.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="question(QWidget * parent, const QString &amp; title, const QString &amp; text, Button button1, Button button2)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="title" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
                <parameter left="Button" right="" name="button1" default="NoButton"></parameter>
                <parameter left="Button" right="" name="button2" default="NoButton"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="messageBox" fullname="QAbstractMessageBox::messageBox" href="qabstractmessagebox.html#messageBox" location="qabstractmessagebox.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QAbstractMessageBox *" signature="messageBox(QWidget * parent, const QString &amp; title, const QString &amp; text, Icon icon, Button button0, Button button1)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="title" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
                <parameter left="Icon" right="" name="icon" default=""></parameter>
                <parameter left="Button" right="" name="button0" default="QAbstractMessageBox::Ok"></parameter>
                <parameter left="Button" right="" name="button1" default="QAbstractMessageBox::NoButton"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="messageBoxCustomButton" fullname="QAbstractMessageBox::messageBoxCustomButton" href="qabstractmessagebox.html#messageBoxCustomButton" location="qabstractmessagebox.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QAbstractMessageBox *" signature="messageBoxCustomButton(QWidget * parent, const QString &amp; title, const QString &amp; text, Icon icon, const QString &amp; button0Text, const QString &amp; button1Text, const QString &amp; button2Text, int defaultButtonNumber, int escapeButtonNumber)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="title" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
                <parameter left="Icon" right="" name="icon" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="button0Text" default="QString()"></parameter>
                <parameter left="const QString &amp;" right="" name="button1Text" default="QString()"></parameter>
                <parameter left="const QString &amp;" right="" name="button2Text" default="QString()"></parameter>
                <parameter left="int" right="" name="defaultButtonNumber" default="0"></parameter>
                <parameter left="int" right="" name="escapeButtonNumber" default="-1"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QMediaControl" href="qmediacontrol.html" location="qmediacontrol.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaControl" fullname="QMediaControl::QMediaControl" href="qmediacontrol.html#QMediaControl" location="qmediacontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaControl(QMediaContent * mediaContent)">
                <parameter left="QMediaContent *" right="" name="mediaContent" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaControl" fullname="QMediaControl::~QMediaControl" href="qmediacontrol.html#dtor.QMediaControl" location="qmediacontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaControl()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playerState" fullname="QMediaControl::playerState" href="qmediacontrol.html#playerState" location="qmediacontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtopiaMedia::State" signature="playerState() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="length" fullname="QMediaControl::length" href="qmediacontrol.html#length" location="qmediacontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint32" signature="length() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="position" fullname="QMediaControl::position" href="qmediacontrol.html#position" location="qmediacontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint32" signature="position() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMuted" fullname="QMediaControl::isMuted" href="qmediacontrol.html#isMuted" location="qmediacontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isMuted() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="QMediaControl::volume" href="qmediacontrol.html#volume" location="qmediacontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="volume() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QMediaControl::errorString" href="qmediacontrol.html#errorString" location="qmediacontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QMediaControl::name" href="qmediacontrol.html#name" location="qmediacontrol.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="name()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QMediaControl::start" href="qmediacontrol.html#start" location="qmediacontrol.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="start()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pause" fullname="QMediaControl::pause" href="qmediacontrol.html#pause" location="qmediacontrol.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="pause()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QMediaControl::stop" href="qmediacontrol.html#stop" location="qmediacontrol.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="stop()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="seek" fullname="QMediaControl::seek" href="qmediacontrol.html#seek" location="qmediacontrol.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="seek(quint32 ms)">
                <parameter left="quint32" right="" name="ms" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVolume" fullname="QMediaControl::setVolume" href="qmediacontrol.html#setVolume" location="qmediacontrol.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMuted" fullname="QMediaControl::setMuted" href="qmediacontrol.html#setMuted" location="qmediacontrol.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setMuted(bool mute)">
                <parameter left="bool" right="" name="mute" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="valid" fullname="QMediaControl::valid" href="qmediacontrol.html#valid" location="qmediacontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="valid()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="invalid" fullname="QMediaControl::invalid" href="qmediacontrol.html#invalid" location="qmediacontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="invalid()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playerStateChanged" fullname="QMediaControl::playerStateChanged" href="qmediacontrol.html#playerStateChanged" location="qmediacontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="playerStateChanged(QtopiaMedia::State state)">
                <parameter left="QtopiaMedia::State" right="" name="state" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="positionChanged" fullname="QMediaControl::positionChanged" href="qmediacontrol.html#positionChanged" location="qmediacontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="positionChanged(quint32 ms)">
                <parameter left="quint32" right="" name="ms" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lengthChanged" fullname="QMediaControl::lengthChanged" href="qmediacontrol.html#lengthChanged" location="qmediacontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="lengthChanged(quint32 ms)">
                <parameter left="quint32" right="" name="ms" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volumeChanged" fullname="QMediaControl::volumeChanged" href="qmediacontrol.html#volumeChanged" location="qmediacontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="volumeChanged(int volume)">
                <parameter left="int" right="" name="volume" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volumeMuted" fullname="QMediaControl::volumeMuted" href="qmediacontrol.html#volumeMuted" location="qmediacontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="volumeMuted(bool muted)">
                <parameter left="bool" right="" name="muted" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QDawg" href="qdawg.html" location="qdawg.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QDawg" fullname="QDawg::QDawg" href="qdawg.html#QDawg" location="qdawg.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDawg()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDawg" fullname="QDawg::~QDawg" href="qdawg.html#dtor.QDawg" location="qdawg.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDawg()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readFile" fullname="QDawg::readFile" href="qdawg.html#readFile" location="qdawg.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="readFile(const QString &amp; filename)">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="read" fullname="QDawg::read" href="qdawg.html#read" location="qdawg.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="read(QIODevice * dev)">
                <parameter left="QIODevice *" right="" name="dev" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="write" fullname="QDawg::write" href="qdawg.html#write" location="qdawg.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="write(QIODevice * dev) const">
                <parameter left="QIODevice *" right="" name="dev" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="writeByteSwapped" fullname="QDawg::writeByteSwapped" href="qdawg.html#writeByteSwapped" location="qdawg.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="writeByteSwapped(QIODevice * dev) const">
                <parameter left="QIODevice *" right="" name="dev" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="createFromWords" fullname="QDawg::createFromWords" href="qdawg.html#createFromWords" location="qdawg.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="createFromWords(const QStringList &amp; list)">
                <parameter left="const QStringList &amp;" right="" name="list" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="allWords" fullname="QDawg::allWords" href="qdawg.html#allWords" location="qdawg.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="allWords() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contains" fullname="QDawg::contains" href="qdawg.html#contains" location="qdawg.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="contains(const QString &amp; s) const">
                <parameter left="const QString &amp;" right="" name="s" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="countWords" fullname="QDawg::countWords" href="qdawg.html#countWords" location="qdawg.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="countWords() const"></function>
            <class access="public" threadsafety="unspecified" status="main" name="Node" fullname="QDawg::Node" href="qdawg-node.html" location="qdawg.h" bases="" module="">
                <function access="public" threadsafety="unspecified" status="commendable" name="letter" fullname="QDawg::Node::letter" href="qdawg-node.html#letter" location="qdawg.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QChar" signature="letter() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="isWord" fullname="QDawg::Node::isWord" href="qdawg-node.html#isWord" location="qdawg.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isWord() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="isLast" fullname="QDawg::Node::isLast" href="qdawg-node.html#isLast" location="qdawg.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isLast() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="next" fullname="QDawg::Node::next" href="qdawg-node.html#next" location="qdawg.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const Node *" signature="next() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="jump" fullname="QDawg::Node::jump" href="qdawg-node.html#jump" location="qdawg.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const Node *" signature="jump() const"></function>
            </class>
            <function access="public" threadsafety="unspecified" status="commendable" name="root" fullname="QDawg::root" href="qdawg.html#root" location="qdawg.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const Node *" signature="root() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QMailViewerInterface" href="qmailviewerinterface.html" location="qmailviewer.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailViewerInterface" fullname="QMailViewerInterface::QMailViewerInterface" href="qmailviewerinterface.html#QMailViewerInterface" location="qmailviewer.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMailViewerInterface(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMailViewerInterface" fullname="QMailViewerInterface::~QMailViewerInterface" href="qmailviewerinterface.html#dtor.QMailViewerInterface" location="qmailviewer.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMailViewerInterface()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="widget" fullname="QMailViewerInterface::widget" href="qmailviewerinterface.html#widget" location="qmailviewer.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QWidget *" signature="widget() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="scrollToAnchor" fullname="QMailViewerInterface::scrollToAnchor" href="qmailviewerinterface.html#scrollToAnchor" location="qmailviewer.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="scrollToAnchor(const QString &amp; link)">
                <parameter left="const QString &amp;" right="" name="link" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addActions" fullname="QMailViewerInterface::addActions" href="qmailviewerinterface.html#addActions" location="qmailviewer.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="void" signature="addActions(QMenu * menu) const">
                <parameter left="QMenu *" right="" name="menu" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMessage" fullname="QMailViewerInterface::setMessage" href="qmailviewerinterface.html#setMessage" location="qmailviewer.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="bool" signature="setMessage(const QMailMessage &amp; mail)">
                <parameter left="const QMailMessage &amp;" right="" name="mail" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setResource" fullname="QMailViewerInterface::setResource" href="qmailviewerinterface.html#setResource" location="qmailviewer.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setResource(const QUrl &amp; name, QVariant value)">
                <parameter left="const QUrl &amp;" right="" name="name" default=""></parameter>
                <parameter left="QVariant" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QMailViewerInterface::clear" href="qmailviewerinterface.html#clear" location="qmailviewer.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="clear()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="anchorClicked" fullname="QMailViewerInterface::anchorClicked" href="qmailviewerinterface.html#anchorClicked" location="qmailviewer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="anchorClicked(const QUrl &amp; link)">
                <parameter left="const QUrl &amp;" right="" name="link" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="finished" fullname="QMailViewerInterface::finished" href="qmailviewerinterface.html#finished" location="qmailviewer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="finished()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QMailViewerFactory" href="qmailviewerfactory.html" location="qmailviewer.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="ContentType" fullname="QMailViewerFactory::ContentType" href="qmailviewerfactory.html#ContentType-enum" location="qmailviewer.h">
                <value name="StaticContent" value="0"></value>
                <value name="SmilContent" value="1"></value>
                <value name="AnyContent" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="keys" fullname="QMailViewerFactory::keys" href="qmailviewerfactory.html#keys" location="qmailviewer.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStringList" signature="keys(ContentType type)">
                <parameter left="ContentType" right="" name="type" default="AnyContent"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultKey" fullname="QMailViewerFactory::defaultKey" href="qmailviewerfactory.html#defaultKey" location="qmailviewer.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="defaultKey(ContentType type)">
                <parameter left="ContentType" right="" name="type" default="AnyContent"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="create" fullname="QMailViewerFactory::create" href="qmailviewerfactory.html#create" location="qmailviewer.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMailViewerInterface *" signature="create(const QString &amp; key, QWidget * parent)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QGlobalPixmapCache" href="qglobalpixmapcache.html" location="qglobalpixmapcache.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="find" fullname="QGlobalPixmapCache::find" href="qglobalpixmapcache.html#find" location="qglobalpixmapcache.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="find(const QString &amp; key, QPixmap &amp; pixmap)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
                <parameter left="QPixmap &amp;" right="" name="pixmap" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insert" fullname="QGlobalPixmapCache::insert" href="qglobalpixmapcache.html#insert" location="qglobalpixmapcache.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="insert(const QString &amp; key, const QPixmap &amp; pixmap)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
                <parameter left="const QPixmap &amp;" right="" name="pixmap" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remove" fullname="QGlobalPixmapCache::remove" href="qglobalpixmapcache.html#remove" location="qglobalpixmapcache.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="remove(const QString &amp; key)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMailFolderSortKey" href="qmailfoldersortkey.html" location="qmailfoldersortkey.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Property" fullname="QMailFolderSortKey::Property" href="qmailfoldersortkey.html#Property-enum" location="qmailfoldersortkey.h">
                <value name="Id" value="0"></value>
                <value name="Name" value="1"></value>
                <value name="ParentId" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailFolderSortKey" fullname="QMailFolderSortKey::QMailFolderSortKey" href="qmailfoldersortkey.html#QMailFolderSortKey" location="qmailfoldersortkey.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMailFolderSortKey()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailFolderSortKey" fullname="QMailFolderSortKey::QMailFolderSortKey" href="qmailfoldersortkey.html#QMailFolderSortKey-2" location="qmailfoldersortkey.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMailFolderSortKey(const Property &amp; p, const Qt::SortOrder &amp; order)">
                <parameter left="const Property &amp;" right="" name="p" default=""></parameter>
                <parameter left="const Qt::SortOrder &amp;" right="" name="order" default="Qt::AscendingOrder"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailFolderSortKey" fullname="QMailFolderSortKey::QMailFolderSortKey" href="qmailfoldersortkey.html#QMailFolderSortKey-3" location="qmailfoldersortkey.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMailFolderSortKey(const QMailFolderSortKey &amp; other)">
                <parameter left="const QMailFolderSortKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMailFolderSortKey" fullname="QMailFolderSortKey::~QMailFolderSortKey" href="qmailfoldersortkey.html#dtor.QMailFolderSortKey" location="qmailfoldersortkey.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMailFolderSortKey()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&amp;" fullname="QMailFolderSortKey::operator&amp;" href="qmailfoldersortkey.html#operator&amp;" location="qmailfoldersortkey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailFolderSortKey" signature="operator&amp;(const QMailFolderSortKey &amp; other) const">
                <parameter left="const QMailFolderSortKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&amp;=" fullname="QMailFolderSortKey::operator&amp;=" href="qmailfoldersortkey.html#operator&amp;=" location="qmailfoldersortkey.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMailFolderSortKey &amp;" signature="operator&amp;=(const QMailFolderSortKey &amp; other)">
                <parameter left="const QMailFolderSortKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QMailFolderSortKey::operator==" href="qmailfoldersortkey.html#operator==" location="qmailfoldersortkey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QMailFolderSortKey &amp; other) const">
                <parameter left="const QMailFolderSortKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QMailFolderSortKey::operator!=" href="qmailfoldersortkey.html#operator!=" location="qmailfoldersortkey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QMailFolderSortKey &amp; other) const">
                <parameter left="const QMailFolderSortKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QMailFolderSortKey::operator=" href="qmailfoldersortkey.html#operator=" location="qmailfoldersortkey.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMailFolderSortKey &amp;" signature="operator=(const QMailFolderSortKey &amp; other)">
                <parameter left="const QMailFolderSortKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QMailFolderSortKey::isEmpty" href="qmailfoldersortkey.html#isEmpty" location="qmailfoldersortkey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QContactItem" href="qcontactitem.html" location="qcontactview.h" bases="QStandardItem" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactItem" fullname="QContactItem::QContactItem" href="qcontactitem.html#QContactItem" location="qcontactview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactItem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactItem" fullname="QContactItem::QContactItem" href="qcontactitem.html#QContactItem-2" location="qcontactview.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContactItem(const QContact &amp; contact, const QString &amp; subLabel, const QPixmap &amp; statusIcon)">
                <parameter left="const QContact &amp;" right="" name="contact" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="subLabel" default="QString()"></parameter>
                <parameter left="const QPixmap &amp;" right="" name="statusIcon" default="QPixmap()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactItem" fullname="QContactItem::~QContactItem" href="qcontactitem.html#dtor.QContactItem" location="qcontactview.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactItem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="label" fullname="QContactItem::label" href="qcontactitem.html#label" location="qcontactview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="label() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLabel" fullname="QContactItem::setLabel" href="qcontactitem.html#setLabel" location="qcontactview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLabel(const QString &amp; text)">
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="portrait" fullname="QContactItem::portrait" href="qcontactitem.html#portrait" location="qcontactview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPixmap" signature="portrait() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPortrait" fullname="QContactItem::setPortrait" href="qcontactitem.html#setPortrait" location="qcontactview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPortrait(const QPixmap &amp; image)">
                <parameter left="const QPixmap &amp;" right="" name="image" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="subLabel" fullname="QContactItem::subLabel" href="qcontactitem.html#subLabel" location="qcontactview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="subLabel() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSubLabel" fullname="QContactItem::setSubLabel" href="qcontactitem.html#setSubLabel" location="qcontactview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSubLabel(const QString &amp; text)">
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="statusIcon" fullname="QContactItem::statusIcon" href="qcontactitem.html#statusIcon" location="qcontactview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPixmap" signature="statusIcon() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStatusIcon" fullname="QContactItem::setStatusIcon" href="qcontactitem.html#setStatusIcon" location="qcontactview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setStatusIcon(const QPixmap &amp; image)">
                <parameter left="const QPixmap &amp;" right="" name="image" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QContactItemModel" href="qcontactitemmodel.html" location="qcontactview.h" bases="QStandardItemModel" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactItemModel" fullname="QContactItemModel::QContactItemModel" href="qcontactitemmodel.html#QContactItemModel" location="qcontactview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactItemModel(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactItemModel" fullname="QContactItemModel::~QContactItemModel" href="qcontactitemmodel.html#dtor.QContactItemModel" location="qcontactview.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactItemModel()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="appendRow" fullname="QContactItemModel::appendRow" href="qcontactitemmodel.html#appendRow" location="qcontactview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="appendRow(const QContact &amp; contact, const QString &amp; subLabel, const QPixmap &amp; statusIcon)">
                <parameter left="const QContact &amp;" right="" name="contact" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="subLabel" default="QString()"></parameter>
                <parameter left="const QPixmap &amp;" right="" name="statusIcon" default="QPixmap()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="labels" fullname="QContactItemModel::labels" href="qcontactitemmodel.html#labels" location="qcontactview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="labels() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="subLabels" fullname="QContactItemModel::subLabels" href="qcontactitemmodel.html#subLabels" location="qcontactview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="subLabels() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QContactDelegate" href="qcontactdelegate.html" location="qcontactview.h" bases="QPimDelegate" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactDelegate" fullname="QContactDelegate::QContactDelegate" href="qcontactdelegate.html#QContactDelegate" location="qcontactview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactDelegate(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactDelegate" fullname="QContactDelegate::~QContactDelegate" href="qcontactdelegate.html#dtor.QContactDelegate" location="qcontactview.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactDelegate()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QContactListView" href="qcontactlistview.html" location="qcontactview.h" bases="QListView" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactListView" fullname="QContactListView::QContactListView" href="qcontactlistview.html#QContactListView" location="qcontactview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactListView(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactListView" fullname="QContactListView::~QContactListView" href="qcontactlistview.html#dtor.QContactListView" location="qcontactview.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactListView()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setModel" fullname="QContactListView::setModel" href="qcontactlistview.html#setModel" location="qcontactview.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setModel(QAbstractItemModel * model)">
                <parameter left="QAbstractItemModel *" right="" name="model" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentContact" fullname="QContactListView::currentContact" href="qcontactlistview.html#currentContact" location="qcontactview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContact" signature="currentContact() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedContacts" fullname="QContactListView::selectedContacts" href="qcontactlistview.html#selectedContacts" location="qcontactview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContact&gt;" signature="selectedContacts() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedContactIds" fullname="QContactListView::selectedContactIds" href="qcontactlistview.html#selectedContactIds" location="qcontactview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QUniqueId&gt;" signature="selectedContactIds() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contactModel" fullname="QContactListView::contactModel" href="qcontactlistview.html#contactModel" location="qcontactview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactModel *" signature="contactModel() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contactDelegate" fullname="QContactListView::contactDelegate" href="qcontactlistview.html#contactDelegate" location="qcontactview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactDelegate *" signature="contactDelegate() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTextEntryProxy" fullname="QContactListView::setTextEntryProxy" href="qcontactlistview.html#setTextEntryProxy" location="qcontactview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTextEntryProxy(QTextEntryProxy * proxy)">
                <parameter left="QTextEntryProxy *" right="" name="proxy" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="textEntryProxy" fullname="QContactListView::textEntryProxy" href="qcontactlistview.html#textEntryProxy" location="qcontactview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QTextEntryProxy *" signature="textEntryProxy() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QContactSelector" href="qcontactselector.html" location="qcontactview.h" bases="QDialog" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactSelector" fullname="QContactSelector::QContactSelector" href="qcontactselector.html#QContactSelector" location="qcontactview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactSelector(bool showCreateNew, QWidget * parent)">
                <parameter left="bool" right="" name="showCreateNew" default=""></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactSelector" fullname="QContactSelector::QContactSelector" href="qcontactselector.html#QContactSelector-2" location="qcontactview.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContactSelector(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactSelector" fullname="QContactSelector::~QContactSelector" href="qcontactselector.html#dtor.QContactSelector" location="qcontactview.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactSelector()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCreateNewContactEnabled" fullname="QContactSelector::setCreateNewContactEnabled" href="qcontactselector.html#setCreateNewContactEnabled" location="qcontactview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCreateNewContactEnabled(bool enable)">
                <parameter left="bool" right="" name="enable" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAcceptTextEnabled" fullname="QContactSelector::setAcceptTextEnabled" href="qcontactselector.html#setAcceptTextEnabled" location="qcontactview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAcceptTextEnabled(bool enable)">
                <parameter left="bool" right="" name="enable" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setModel" fullname="QContactSelector::setModel" href="qcontactselector.html#setModel" location="qcontactview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setModel(QContactModel * model)">
                <parameter left="QContactModel *" right="" name="model" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="newContactSelected" fullname="QContactSelector::newContactSelected" href="qcontactselector.html#newContactSelected" location="qcontactview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="newContactSelected() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contactSelected" fullname="QContactSelector::contactSelected" href="qcontactselector.html#contactSelected" location="qcontactview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="contactSelected() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="textSelected" fullname="QContactSelector::textSelected" href="qcontactselector.html#textSelected" location="qcontactview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="textSelected() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedContact" fullname="QContactSelector::selectedContact" href="qcontactselector.html#selectedContact" location="qcontactview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContact" signature="selectedContact() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedText" fullname="QContactSelector::selectedText" href="qcontactselector.html#selectedText" location="qcontactview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="selectedText() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="eventFilter" fullname="QContactSelector::eventFilter" href="qcontactselector.html#eventFilter" location="qcontactview.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="eventFilter(QObject * watched, QEvent * event)">
                <parameter left="QObject *" right="" name="watched" default=""></parameter>
                <parameter left="QEvent *" right="" name="event" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contactSelected" fullname="QContactSelector::contactSelected" href="qcontactselector.html#contactSelected-2" location="qcontactview.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="contactSelected(const QContact &amp; contact)">
                <parameter left="const QContact &amp;" right="" name="contact" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="textSelected" fullname="QContactSelector::textSelected" href="qcontactselector.html#textSelected-2" location="qcontactview.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="textSelected(const QString &amp; text)">
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPhoneTypeSelector" href="qphonetypeselector.html" location="qcontactview.h" bases="QDialog" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QPhoneTypeSelector" fullname="QPhoneTypeSelector::QPhoneTypeSelector" href="qphonetypeselector.html#QPhoneTypeSelector" location="qcontactview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPhoneTypeSelector(const QContact &amp; contact, const QString &amp; number, QWidget * parent)">
                <parameter left="const QContact &amp;" right="" name="contact" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QPhoneTypeSelector" fullname="QPhoneTypeSelector::QPhoneTypeSelector" href="qphonetypeselector.html#QPhoneTypeSelector-2" location="qcontactview.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QPhoneTypeSelector(const QContact &amp; contact, const QString &amp; number, QList&lt;QContact::PhoneType&gt; allowedTypes, QWidget * parent)">
                <parameter left="const QContact &amp;" right="" name="contact" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
                <parameter left="QList&lt;QContact::PhoneType&gt;" right="" name="allowedTypes" default=""></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPhoneTypeSelector" fullname="QPhoneTypeSelector::~QPhoneTypeSelector" href="qphonetypeselector.html#dtor.QPhoneTypeSelector" location="qcontactview.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPhoneTypeSelector()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selected" fullname="QPhoneTypeSelector::selected" href="qphonetypeselector.html#selected" location="qcontactview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContact::PhoneType" signature="selected() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedNumber" fullname="QPhoneTypeSelector::selectedNumber" href="qphonetypeselector.html#selectedNumber" location="qcontactview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="selectedNumber() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateContact" fullname="QPhoneTypeSelector::updateContact" href="qphonetypeselector.html#updateContact" location="qcontactview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="updateContact(QContact &amp; contact, const QString &amp; number) const">
                <parameter left="QContact &amp;" right="" name="contact" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selected" fullname="QPhoneTypeSelector::selected" href="qphonetypeselector.html#selected-2" location="qcontactview.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="selected(QContact::PhoneType type)">
                <parameter left="QContact::PhoneType" right="" name="type" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaEngineInformation" href="qmediaengineinformation.html" location="qmediaengineinformation.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaEngineInformation" fullname="QMediaEngineInformation::~QMediaEngineInformation" href="qmediaengineinformation.html#dtor.QMediaEngineInformation" location="qmediaengineinformation.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaEngineInformation()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QMediaEngineInformation::name" href="qmediaengineinformation.html#name" location="qmediaengineinformation.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="version" fullname="QMediaEngineInformation::version" href="qmediaengineinformation.html#version" location="qmediaengineinformation.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="version() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="idleTime" fullname="QMediaEngineInformation::idleTime" href="qmediaengineinformation.html#idleTime" location="qmediaengineinformation.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="idleTime() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasExclusiveDeviceAccess" fullname="QMediaEngineInformation::hasExclusiveDeviceAccess" href="qmediaengineinformation.html#hasExclusiveDeviceAccess" location="qmediaengineinformation.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasExclusiveDeviceAccess() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sessionBuilders" fullname="QMediaEngineInformation::sessionBuilders" href="qmediaengineinformation.html#sessionBuilders" location="qmediaengineinformation.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaSessionBuilderList" signature="sessionBuilders() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="DefaultBattery" href="defaultbattery.html" location="defaultbattery.h" bases="QPowerSourceProvider" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="DefaultBattery" fullname="DefaultBattery::DefaultBattery" href="defaultbattery.html#DefaultBattery" location="defaultbattery.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="DefaultBattery(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPhoneCallManager" href="qphonecallmanager.html" location="qphonecallmanager.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QPhoneCallManager" fullname="QPhoneCallManager::QPhoneCallManager" href="qphonecallmanager.html#QPhoneCallManager" location="qphonecallmanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPhoneCallManager(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPhoneCallManager" fullname="QPhoneCallManager::~QPhoneCallManager" href="qphonecallmanager.html#dtor.QPhoneCallManager" location="qphonecallmanager.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPhoneCallManager()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="calls" fullname="QPhoneCallManager::calls" href="qphonecallmanager.html#calls" location="qphonecallmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QPhoneCall&gt;" signature="calls() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="create" fullname="QPhoneCallManager::create" href="qphonecallmanager.html#create" location="qphonecallmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QPhoneCall" signature="create(const QString &amp; type)">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="create" fullname="QPhoneCallManager::create" href="qphonecallmanager.html#create-2" location="qphonecallmanager.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="QPhoneCall" signature="create(const QString &amp; type, const QString &amp; service)">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="services" fullname="QPhoneCallManager::services" href="qphonecallmanager.html#services" location="qphonecallmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="services() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="services" fullname="QPhoneCallManager::services" href="qphonecallmanager.html#services-2" location="qphonecallmanager.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QStringList" signature="services(const QString &amp; type) const">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callTypes" fullname="QPhoneCallManager::callTypes" href="qphonecallmanager.html#callTypes" location="qphonecallmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="callTypes() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callTypes" fullname="QPhoneCallManager::callTypes" href="qphonecallmanager.html#callTypes-2" location="qphonecallmanager.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QStringList" signature="callTypes(const QString &amp; service) const">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromModemIdentifier" fullname="QPhoneCallManager::fromModemIdentifier" href="qphonecallmanager.html#fromModemIdentifier" location="qphonecallmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPhoneCall" signature="fromModemIdentifier(int id) const">
                <parameter left="int" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="newCall" fullname="QPhoneCallManager::newCall" href="qphonecallmanager.html#newCall" location="qphonecallmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="newCall(const QPhoneCall &amp; call)">
                <parameter left="const QPhoneCall &amp;" right="" name="call" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callTypesChanged" fullname="QPhoneCallManager::callTypesChanged" href="qphonecallmanager.html#callTypesChanged" location="qphonecallmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="callTypesChanged()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="statesChanged" fullname="QPhoneCallManager::statesChanged" href="qphonecallmanager.html#statesChanged" location="qphonecallmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="statesChanged(const QList&lt;QPhoneCall&gt; &amp; calls)">
                <parameter left="const QList&lt;QPhoneCall&gt; &amp;" right="" name="calls" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="APMBattery" href="apmbattery.html" location="apmbattery.h" bases="QObject" module=""></class>
        <class access="public" threadsafety="unspecified" status="commendable" name="PackageManagerService" href="packagemanagerservice.html" location="packagemanagerservice.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="installPackageConfirm" fullname="PackageManagerService::installPackageConfirm" href="packagemanagerservice.html#installPackageConfirm" location="packagemanagerservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="installPackageConfirm(const QString &amp; url)">
                <parameter left="const QString &amp;" right="" name="url" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="installPackage" fullname="PackageManagerService::installPackage" href="packagemanagerservice.html#installPackage" location="packagemanagerservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="installPackage(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="AsteriskManager" href="asteriskmanager.html" location="asteriskmanager.h" bases="QAbstractCallPolicyManager" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="AsteriskManager" fullname="AsteriskManager::AsteriskManager" href="asteriskmanager.html#AsteriskManager" location="asteriskmanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="AsteriskManager(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~AsteriskManager" fullname="AsteriskManager::~AsteriskManager" href="asteriskmanager.html#dtor.AsteriskManager" location="asteriskmanager.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~AsteriskManager()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QFileMonitor" href="qfilemonitor.html" location="qfilemonitor.h" bases="QObject" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Strategy" fullname="QFileMonitor::Strategy" href="qfilemonitor.html#Strategy-enum" location="qfilemonitor.h">
                <value name="Auto" value="0"></value>
                <value name="DNotify" value="1"></value>
                <value name="INotify" value="2"></value>
                <value name="Poll" value="3"></value>
                <value name="None" value="4"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QFileMonitor" fullname="QFileMonitor::QFileMonitor" href="qfilemonitor.html#QFileMonitor" location="qfilemonitor.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QFileMonitor(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QFileMonitor" fullname="QFileMonitor::QFileMonitor" href="qfilemonitor.html#QFileMonitor-2" location="qfilemonitor.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QFileMonitor(const QString &amp; fileName, Strategy strategy, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
                <parameter left="Strategy" right="" name="strategy" default="Auto"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QFileMonitor" fullname="QFileMonitor::~QFileMonitor" href="qfilemonitor.html#dtor.QFileMonitor" location="qfilemonitor.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QFileMonitor()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QFileMonitor::isValid" href="qfilemonitor.html#isValid" location="qfilemonitor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fileName" fullname="QFileMonitor::fileName" href="qfilemonitor.html#fileName" location="qfilemonitor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="fileName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="strategy" fullname="QFileMonitor::strategy" href="qfilemonitor.html#strategy" location="qfilemonitor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Strategy" signature="strategy() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fileChanged" fullname="QFileMonitor::fileChanged" href="qfilemonitor.html#fileChanged" location="qfilemonitor.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="fileChanged(const QString &amp; file)">
                <parameter left="const QString &amp;" right="" name="file" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="UIApplicationMonitor" href="uiapplicationmonitor.html" location="applicationmonitor.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="UIApplicationMonitor" fullname="UIApplicationMonitor::UIApplicationMonitor" href="uiapplicationmonitor.html#UIApplicationMonitor" location="applicationmonitor.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="UIApplicationMonitor(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~UIApplicationMonitor" fullname="UIApplicationMonitor::~UIApplicationMonitor" href="uiapplicationmonitor.html#dtor.UIApplicationMonitor" location="applicationmonitor.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~UIApplicationMonitor()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ApplicationState" fullname="UIApplicationMonitor::ApplicationState" href="uiapplicationmonitor.html#ApplicationState-enum" location="applicationmonitor.h">
                <value name="NotRunning" value="0x0000"></value>
                <value name="Starting" value="0x0001"></value>
                <value name="Running" value="0x0002"></value>
                <value name="StateMask" value="0x00FF"></value>
                <value name="NotResponding" value="0x0100"></value>
                <value name="Busy" value="0x0200"></value>
                <value name="Active" value="0x0400"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="applicationState" fullname="UIApplicationMonitor::applicationState" href="uiapplicationmonitor.html#applicationState" location="applicationmonitor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="ApplicationState" signature="applicationState(const QString &amp; application) const">
                <parameter left="const QString &amp;" right="" name="application" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="runningApplications" fullname="UIApplicationMonitor::runningApplications" href="uiapplicationmonitor.html#runningApplications" location="applicationmonitor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="runningApplications() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="notRespondingApplications" fullname="UIApplicationMonitor::notRespondingApplications" href="uiapplicationmonitor.html#notRespondingApplications" location="applicationmonitor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="notRespondingApplications() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="busyApplications" fullname="UIApplicationMonitor::busyApplications" href="uiapplicationmonitor.html#busyApplications" location="applicationmonitor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="busyApplications() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="notRespondingTimeout" fullname="UIApplicationMonitor::notRespondingTimeout" href="uiapplicationmonitor.html#notRespondingTimeout" location="applicationmonitor.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="notRespondingTimeout()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNotRespondingTimeout" fullname="UIApplicationMonitor::setNotRespondingTimeout" href="uiapplicationmonitor.html#setNotRespondingTimeout" location="applicationmonitor.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setNotRespondingTimeout(int timeout)">
                <parameter left="int" right="" name="timeout" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="applicationStateChanged" fullname="UIApplicationMonitor::applicationStateChanged" href="uiapplicationmonitor.html#applicationStateChanged" location="applicationmonitor.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="applicationStateChanged(const QString &amp; application, UIApplicationMonitor::ApplicationState newState)">
                <parameter left="const QString &amp;" right="" name="application" default=""></parameter>
                <parameter left="UIApplicationMonitor::ApplicationState" right="" name="newState" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="busy" fullname="UIApplicationMonitor::busy" href="uiapplicationmonitor.html#busy" location="applicationmonitor.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="busy()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="notBusy" fullname="UIApplicationMonitor::notBusy" href="uiapplicationmonitor.html#notBusy" location="applicationmonitor.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="notBusy()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QPimDelegate" href="qpimdelegate.html" location="qpimdelegate.h" bases="QAbstractItemDelegate" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QPimDelegate" fullname="QPimDelegate::QPimDelegate" href="qpimdelegate.html#QPimDelegate" location="qpimdelegate.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPimDelegate(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPimDelegate" fullname="QPimDelegate::~QPimDelegate" href="qpimdelegate.html#dtor.QPimDelegate" location="qpimdelegate.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPimDelegate()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="paint" fullname="QPimDelegate::paint" href="qpimdelegate.html#paint" location="qpimdelegate.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="void" signature="paint(QPainter * painter, const QStyleOptionViewItem &amp; option, const QModelIndex &amp; index) const">
                <parameter left="QPainter *" right="" name="painter" default=""></parameter>
                <parameter left="const QStyleOptionViewItem &amp;" right="" name="option" default=""></parameter>
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sizeHint" fullname="QPimDelegate::sizeHint" href="qpimdelegate.html#sizeHint" location="qpimdelegate.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QSize" signature="sizeHint(const QStyleOptionViewItem &amp; option, const QModelIndex &amp; index) const">
                <parameter left="const QStyleOptionViewItem &amp;" right="" name="option" default=""></parameter>
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <enum access="protected" threadsafety="unspecified" status="commendable" name="SubTextAlignment" fullname="QPimDelegate::SubTextAlignment" href="qpimdelegate.html#SubTextAlignment-enum" location="qpimdelegate.h">
                <value name="Independent" value="0"></value>
                <value name="CuddledPerItem" value="1"></value>
            </enum>
            <enum access="protected" threadsafety="unspecified" status="commendable" name="BackgroundStyle" fullname="QPimDelegate::BackgroundStyle" href="qpimdelegate.html#BackgroundStyle-enum" location="qpimdelegate.h">
                <value name="None" value="0"></value>
                <value name="SelectedOnly" value="1"></value>
                <value name="Gradient" value="2"></value>
            </enum>
            <function access="protected" threadsafety="unspecified" status="commendable" name="backgroundStyle" fullname="QPimDelegate::backgroundStyle" href="qpimdelegate.html#backgroundStyle" location="qpimdelegate.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="BackgroundStyle" signature="backgroundStyle(const QStyleOptionViewItem &amp; option, const QModelIndex &amp; index) const">
                <parameter left="const QStyleOptionViewItem &amp;" right="" name="option" default=""></parameter>
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="drawBackground" fullname="QPimDelegate::drawBackground" href="qpimdelegate.html#drawBackground" location="qpimdelegate.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="void" signature="drawBackground(QPainter * p, const QStyleOptionViewItem &amp; option, const QModelIndex &amp; index) const">
                <parameter left="QPainter *" right="" name="p" default=""></parameter>
                <parameter left="const QStyleOptionViewItem &amp;" right="" name="option" default=""></parameter>
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="drawForeground" fullname="QPimDelegate::drawForeground" href="qpimdelegate.html#drawForeground" location="qpimdelegate.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="void" signature="drawForeground(QPainter * p, const QStyleOptionViewItem &amp; option, const QModelIndex &amp; index) const">
                <parameter left="QPainter *" right="" name="p" default=""></parameter>
                <parameter left="const QStyleOptionViewItem &amp;" right="" name="option" default=""></parameter>
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="drawDecorations" fullname="QPimDelegate::drawDecorations" href="qpimdelegate.html#drawDecorations" location="qpimdelegate.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="void" signature="drawDecorations(QPainter * p, bool rtl, const QStyleOptionViewItem &amp; option, const QModelIndex &amp; index, QList&lt;QRect&gt; &amp; leadingFloats, QList&lt;QRect&gt; &amp; trailingFloats) const">
                <parameter left="QPainter *" right="" name="p" default=""></parameter>
                <parameter left="bool" right="" name="rtl" default=""></parameter>
                <parameter left="const QStyleOptionViewItem &amp;" right="" name="option" default=""></parameter>
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
                <parameter left="QList&lt;QRect&gt; &amp;" right="" name="leadingFloats" default=""></parameter>
                <parameter left="QList&lt;QRect&gt; &amp;" right="" name="trailingFloats" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="decorationsSizeHint" fullname="QPimDelegate::decorationsSizeHint" href="qpimdelegate.html#decorationsSizeHint" location="qpimdelegate.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QSize" signature="decorationsSizeHint(const QStyleOptionViewItem &amp; option, const QModelIndex &amp; index, const QSize &amp; textSizeHint) const">
                <parameter left="const QStyleOptionViewItem &amp;" right="" name="option" default=""></parameter>
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
                <parameter left="const QSize &amp;" right="" name="textSizeHint" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="mainText" fullname="QPimDelegate::mainText" href="qpimdelegate.html#mainText" location="qpimdelegate.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="mainText(const QStyleOptionViewItem &amp; option, const QModelIndex &amp; index) const">
                <parameter left="const QStyleOptionViewItem &amp;" right="" name="option" default=""></parameter>
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="subTexts" fullname="QPimDelegate::subTexts" href="qpimdelegate.html#subTexts" location="qpimdelegate.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;StringPair&gt;" signature="subTexts(const QStyleOptionViewItem &amp; option, const QModelIndex &amp; index) const">
                <parameter left="const QStyleOptionViewItem &amp;" right="" name="option" default=""></parameter>
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="subTextsCountHint" fullname="QPimDelegate::subTextsCountHint" href="qpimdelegate.html#subTextsCountHint" location="qpimdelegate.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="int" signature="subTextsCountHint(const QStyleOptionViewItem &amp; option, const QModelIndex &amp; index) const">
                <parameter left="const QStyleOptionViewItem &amp;" right="" name="option" default=""></parameter>
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="subTextAlignment" fullname="QPimDelegate::subTextAlignment" href="qpimdelegate.html#subTextAlignment" location="qpimdelegate.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="SubTextAlignment" signature="subTextAlignment(const QStyleOptionViewItem &amp; option, const QModelIndex &amp; index) const">
                <parameter left="const QStyleOptionViewItem &amp;" right="" name="option" default=""></parameter>
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="textRectangle" fullname="QPimDelegate::textRectangle" href="qpimdelegate.html#textRectangle" location="qpimdelegate.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QRect" signature="textRectangle(const QRect &amp; entireRect, const QList&lt;QRect&gt; &amp; leftFloats, const QList&lt;QRect&gt; &amp; rightFloats, int top, int height) const">
                <parameter left="const QRect &amp;" right="" name="entireRect" default=""></parameter>
                <parameter left="const QList&lt;QRect&gt; &amp;" right="" name="leftFloats" default=""></parameter>
                <parameter left="const QList&lt;QRect&gt; &amp;" right="" name="rightFloats" default=""></parameter>
                <parameter left="int" right="" name="top" default=""></parameter>
                <parameter left="int" right="" name="height" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="mainFont" fullname="QPimDelegate::mainFont" href="qpimdelegate.html#mainFont" location="qpimdelegate.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QFont" signature="mainFont(const QStyleOptionViewItem &amp; option, const QModelIndex &amp; index) const">
                <parameter left="const QStyleOptionViewItem &amp;" right="" name="option" default=""></parameter>
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="secondaryHeaderFont" fullname="QPimDelegate::secondaryHeaderFont" href="qpimdelegate.html#secondaryHeaderFont" location="qpimdelegate.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QFont" signature="secondaryHeaderFont(const QStyleOptionViewItem &amp; option, const QModelIndex &amp; index) const">
                <parameter left="const QStyleOptionViewItem &amp;" right="" name="option" default=""></parameter>
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="secondaryFont" fullname="QPimDelegate::secondaryFont" href="qpimdelegate.html#secondaryFont" location="qpimdelegate.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QFont" signature="secondaryFont(const QStyleOptionViewItem &amp; option, const QModelIndex &amp; index) const">
                <parameter left="const QStyleOptionViewItem &amp;" right="" name="option" default=""></parameter>
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="differentFont" fullname="QPimDelegate::differentFont" href="qpimdelegate.html#differentFont" location="qpimdelegate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QFont" signature="differentFont(const QFont &amp; start, int step) const">
                <parameter left="const QFont &amp;" right="" name="start" default=""></parameter>
                <parameter left="int" right="" name="step" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMailMessageSortKey" href="qmailmessagesortkey.html" location="qmailmessagesortkey.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Property" fullname="QMailMessageSortKey::Property" href="qmailmessagesortkey.html#Property-enum" location="qmailmessagesortkey.h">
                <value name="Id" value="0"></value>
                <value name="Type" value="1"></value>
                <value name="ParentFolderId" value="2"></value>
                <value name="Sender" value="3"></value>
                <value name="Recipients" value="4"></value>
                <value name="Subject" value="5"></value>
                <value name="TimeStamp" value="6"></value>
                <value name="Status" value="7"></value>
                <value name="FromAccount" value="8"></value>
                <value name="FromMailbox" value="9"></value>
                <value name="ServerUid" value="10"></value>
                <value name="Size" value="11"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailMessageSortKey" fullname="QMailMessageSortKey::QMailMessageSortKey" href="qmailmessagesortkey.html#QMailMessageSortKey" location="qmailmessagesortkey.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMailMessageSortKey()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailMessageSortKey" fullname="QMailMessageSortKey::QMailMessageSortKey" href="qmailmessagesortkey.html#QMailMessageSortKey-2" location="qmailmessagesortkey.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMailMessageSortKey(const Property &amp; p, const Qt::SortOrder &amp; order)">
                <parameter left="const Property &amp;" right="" name="p" default=""></parameter>
                <parameter left="const Qt::SortOrder &amp;" right="" name="order" default="Qt::AscendingOrder"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailMessageSortKey" fullname="QMailMessageSortKey::QMailMessageSortKey" href="qmailmessagesortkey.html#QMailMessageSortKey-3" location="qmailmessagesortkey.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMailMessageSortKey(const QMailMessageSortKey &amp; other)">
                <parameter left="const QMailMessageSortKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMailMessageSortKey" fullname="QMailMessageSortKey::~QMailMessageSortKey" href="qmailmessagesortkey.html#dtor.QMailMessageSortKey" location="qmailmessagesortkey.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMailMessageSortKey()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&amp;" fullname="QMailMessageSortKey::operator&amp;" href="qmailmessagesortkey.html#operator&amp;" location="qmailmessagesortkey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailMessageSortKey" signature="operator&amp;(const QMailMessageSortKey &amp; other) const">
                <parameter left="const QMailMessageSortKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&amp;=" fullname="QMailMessageSortKey::operator&amp;=" href="qmailmessagesortkey.html#operator&amp;=" location="qmailmessagesortkey.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMailMessageSortKey &amp;" signature="operator&amp;=(const QMailMessageSortKey &amp; other)">
                <parameter left="const QMailMessageSortKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QMailMessageSortKey::operator==" href="qmailmessagesortkey.html#operator==" location="qmailmessagesortkey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QMailMessageSortKey &amp; other) const">
                <parameter left="const QMailMessageSortKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QMailMessageSortKey::operator!=" href="qmailmessagesortkey.html#operator!=" location="qmailmessagesortkey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QMailMessageSortKey &amp; other) const">
                <parameter left="const QMailMessageSortKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QMailMessageSortKey::operator=" href="qmailmessagesortkey.html#operator=" location="qmailmessagesortkey.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMailMessageSortKey &amp;" signature="operator=(const QMailMessageSortKey &amp; other)">
                <parameter left="const QMailMessageSortKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QMailMessageSortKey::isEmpty" href="qmailmessagesortkey.html#isEmpty" location="qmailmessagesortkey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="HelpService" href="helpservice.html" location="helpbrowser.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="setDocument" fullname="HelpService::setDocument" href="helpservice.html#setDocument" location="helpbrowser.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setDocument(const QString &amp; doc)">
                <parameter left="const QString &amp;" right="" name="doc" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemSupplementaryServices" href="qmodemsupplementaryservices.html" location="qmodemsupplementaryservices.h" bases="QSupplementaryServices" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemSupplementaryServices" fullname="QModemSupplementaryServices::QModemSupplementaryServices" href="qmodemsupplementaryservices.html#QModemSupplementaryServices" location="qmodemsupplementaryservices.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemSupplementaryServices(QModemService * service)">
                <parameter left="QModemService *" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemSupplementaryServices" fullname="QModemSupplementaryServices::~QModemSupplementaryServices" href="qmodemsupplementaryservices.html#dtor.QModemSupplementaryServices" location="qmodemsupplementaryservices.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemSupplementaryServices()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPreferredNetworkOperators" href="qpreferrednetworkoperators.html" location="qpreferrednetworkoperators.h" bases="QCommInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QPreferredNetworkOperators" fullname="QPreferredNetworkOperators::QPreferredNetworkOperators" href="qpreferrednetworkoperators.html#QPreferredNetworkOperators" location="qpreferrednetworkoperators.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPreferredNetworkOperators(const QString &amp; service, QObject * parent, QCommInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="service" default="QString::null"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QCommInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPreferredNetworkOperators" fullname="QPreferredNetworkOperators::~QPreferredNetworkOperators" href="qpreferrednetworkoperators.html#dtor.QPreferredNetworkOperators" location="qpreferrednetworkoperators.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPreferredNetworkOperators()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="List" fullname="QPreferredNetworkOperators::List" href="qpreferrednetworkoperators.html#List-enum" location="qpreferrednetworkoperators.h">
                <value name="Current" value="0"></value>
                <value name="UserControlled" value="1"></value>
                <value name="OperatorControlled" value="2"></value>
                <value name="HPLMN" value="3"></value>
            </enum>
            <class access="public" threadsafety="unspecified" status="main" name="Info" fullname="QPreferredNetworkOperators::Info" href="qpreferrednetworkoperators-info.html" location="qpreferrednetworkoperators.h" bases="" module="">
                <variable access="public" threadsafety="unspecified" status="commendable" name="index" fullname="QPreferredNetworkOperators::Info::index" href="qpreferrednetworkoperators-info.html#index-var" location="qpreferrednetworkoperators.h" type="uint" static="false"></variable>
                <variable access="public" threadsafety="unspecified" status="commendable" name="format" fullname="QPreferredNetworkOperators::Info::format" href="qpreferrednetworkoperators-info.html#format-var" location="qpreferrednetworkoperators.h" type="uint" static="false"></variable>
                <variable access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QPreferredNetworkOperators::Info::id" href="qpreferrednetworkoperators-info.html#id-var" location="qpreferrednetworkoperators.h" type="uint" static="false"></variable>
                <variable access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QPreferredNetworkOperators::Info::name" href="qpreferrednetworkoperators-info.html#name-var" location="qpreferrednetworkoperators.h" type="QString" static="false"></variable>
                <variable access="public" threadsafety="unspecified" status="commendable" name="technologies" fullname="QPreferredNetworkOperators::Info::technologies" href="qpreferrednetworkoperators-info.html#technologies-var" location="qpreferrednetworkoperators.h" type="QStringList" static="false"></variable>
            </class>
            <class access="public" threadsafety="unspecified" status="main" name="NameInfo" fullname="QPreferredNetworkOperators::NameInfo" href="qpreferrednetworkoperators-nameinfo.html" location="qpreferrednetworkoperators.h" bases="" module="">
                <variable access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QPreferredNetworkOperators::NameInfo::name" href="qpreferrednetworkoperators-nameinfo.html#name-var" location="qpreferrednetworkoperators.h" type="QString" static="false"></variable>
                <variable access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QPreferredNetworkOperators::NameInfo::id" href="qpreferrednetworkoperators-nameinfo.html#id-var" location="qpreferrednetworkoperators.h" type="uint" static="false"></variable>
            </class>
            <function access="public" threadsafety="unspecified" status="commendable" name="resolveNames" fullname="QPreferredNetworkOperators::resolveNames" href="qpreferrednetworkoperators.html#resolveNames" location="qpreferrednetworkoperators.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QPreferredNetworkOperators::Info&gt;" signature="resolveNames(const QList&lt;QPreferredNetworkOperators::Info&gt; &amp; opers, const QList&lt;QPreferredNetworkOperators::NameInfo&gt; &amp; names)">
                <parameter left="const QList&lt;QPreferredNetworkOperators::Info&gt; &amp;" right="" name="opers" default=""></parameter>
                <parameter left="const QList&lt;QPreferredNetworkOperators::NameInfo&gt; &amp;" right="" name="names" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestOperatorNames" fullname="QPreferredNetworkOperators::requestOperatorNames" href="qpreferrednetworkoperators.html#requestOperatorNames" location="qpreferrednetworkoperators.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="requestOperatorNames()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestPreferredOperators" fullname="QPreferredNetworkOperators::requestPreferredOperators" href="qpreferrednetworkoperators.html#requestPreferredOperators" location="qpreferrednetworkoperators.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="requestPreferredOperators(QPreferredNetworkOperators::List list)">
                <parameter left="QPreferredNetworkOperators::List" right="" name="list" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="writePreferredOperator" fullname="QPreferredNetworkOperators::writePreferredOperator" href="qpreferrednetworkoperators.html#writePreferredOperator" location="qpreferrednetworkoperators.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="writePreferredOperator(QPreferredNetworkOperators::List list, const QPreferredNetworkOperators::Info &amp; oper)">
                <parameter left="QPreferredNetworkOperators::List" right="" name="list" default=""></parameter>
                <parameter left="const QPreferredNetworkOperators::Info &amp;" right="" name="oper" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operatorNames" fullname="QPreferredNetworkOperators::operatorNames" href="qpreferrednetworkoperators.html#operatorNames" location="qpreferrednetworkoperators.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="operatorNames(const QList&lt;QPreferredNetworkOperators::NameInfo&gt; &amp; names)">
                <parameter left="const QList&lt;QPreferredNetworkOperators::NameInfo&gt; &amp;" right="" name="names" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="preferredOperators" fullname="QPreferredNetworkOperators::preferredOperators" href="qpreferrednetworkoperators.html#preferredOperators" location="qpreferrednetworkoperators.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="preferredOperators(QPreferredNetworkOperators::List list, const QList&lt;QPreferredNetworkOperators::Info&gt; &amp; opers)">
                <parameter left="QPreferredNetworkOperators::List" right="" name="list" default=""></parameter>
                <parameter left="const QList&lt;QPreferredNetworkOperators::Info&gt; &amp;" right="" name="opers" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="writePreferredOperatorResult" fullname="QPreferredNetworkOperators::writePreferredOperatorResult" href="qpreferrednetworkoperators.html#writePreferredOperatorResult" location="qpreferrednetworkoperators.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="writePreferredOperatorResult(QTelephony::Result result)">
                <parameter left="QTelephony::Result" right="" name="result" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="GsmKeyActions" href="gsmkeyactions.html" location="gsmkeyactions.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="GsmKeyActions" fullname="GsmKeyActions::GsmKeyActions" href="gsmkeyactions.html#GsmKeyActions" location="gsmkeyactions.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="GsmKeyActions(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~GsmKeyActions" fullname="GsmKeyActions::~GsmKeyActions" href="gsmkeyactions.html#dtor.GsmKeyActions" location="gsmkeyactions.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~GsmKeyActions()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDialer" fullname="GsmKeyActions::setDialer" href="gsmkeyactions.html#setDialer" location="gsmkeyactions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDialer(QAbstractDialerScreen * dialer)">
                <parameter left="QAbstractDialerScreen *" right="" name="dialer" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isGsmNumber" fullname="GsmKeyActions::isGsmNumber" href="gsmkeyactions.html#isGsmNumber" location="gsmkeyactions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="isGsmNumber(const QString &amp; number)">
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAudioStateInfo" href="qaudiostateinfo.html" location="qaudiostateinfo.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioStateInfo" fullname="QAudioStateInfo::QAudioStateInfo" href="qaudiostateinfo.html#QAudioStateInfo" location="qaudiostateinfo.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAudioStateInfo(const QByteArray &amp; domain, const QByteArray &amp; profile, const QString &amp; displayName, int priority)">
                <parameter left="const QByteArray &amp;" right="" name="domain" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="profile" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="displayName" default=""></parameter>
                <parameter left="int" right="" name="priority" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioStateInfo" fullname="QAudioStateInfo::QAudioStateInfo" href="qaudiostateinfo.html#QAudioStateInfo-2" location="qaudiostateinfo.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QAudioStateInfo()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioStateInfo" fullname="QAudioStateInfo::QAudioStateInfo" href="qaudiostateinfo.html#QAudioStateInfo-3" location="qaudiostateinfo.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QAudioStateInfo(const QAudioStateInfo &amp; other)">
                <parameter left="const QAudioStateInfo &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAudioStateInfo" fullname="QAudioStateInfo::~QAudioStateInfo" href="qaudiostateinfo.html#dtor.QAudioStateInfo" location="qaudiostateinfo.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAudioStateInfo()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QAudioStateInfo::isValid" href="qaudiostateinfo.html#isValid" location="qaudiostateinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QAudioStateInfo::operator=" href="qaudiostateinfo.html#operator=" location="qaudiostateinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QAudioStateInfo &amp;" signature="operator=(const QAudioStateInfo &amp; other)">
                <parameter left="const QAudioStateInfo &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QAudioStateInfo::operator==" href="qaudiostateinfo.html#operator==" location="qaudiostateinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QAudioStateInfo &amp; other) const">
                <parameter left="const QAudioStateInfo &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QAudioStateInfo::operator!=" href="qaudiostateinfo.html#operator!=" location="qaudiostateinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QAudioStateInfo &amp; other) const">
                <parameter left="const QAudioStateInfo &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="domain" fullname="QAudioStateInfo::domain" href="qaudiostateinfo.html#domain" location="qaudiostateinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="domain() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDomain" fullname="QAudioStateInfo::setDomain" href="qaudiostateinfo.html#setDomain" location="qaudiostateinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDomain(const QByteArray &amp; domain)">
                <parameter left="const QByteArray &amp;" right="" name="domain" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="profile" fullname="QAudioStateInfo::profile" href="qaudiostateinfo.html#profile" location="qaudiostateinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="profile() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setProfile" fullname="QAudioStateInfo::setProfile" href="qaudiostateinfo.html#setProfile" location="qaudiostateinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setProfile(const QByteArray &amp; profile)">
                <parameter left="const QByteArray &amp;" right="" name="profile" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="displayName" fullname="QAudioStateInfo::displayName" href="qaudiostateinfo.html#displayName" location="qaudiostateinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="displayName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDisplayName" fullname="QAudioStateInfo::setDisplayName" href="qaudiostateinfo.html#setDisplayName" location="qaudiostateinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDisplayName(const QString &amp; displayName)">
                <parameter left="const QString &amp;" right="" name="displayName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="priority" fullname="QAudioStateInfo::priority" href="qaudiostateinfo.html#priority" location="qaudiostateinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="priority() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPriority" fullname="QAudioStateInfo::setPriority" href="qaudiostateinfo.html#setPriority" location="qaudiostateinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPriority(int priority)">
                <parameter left="int" right="" name="priority" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QNetworkRegistration" href="qnetworkregistration.html" location="qnetworkregistration.h" bases="QCommInterface" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="initialized" fullname="QNetworkRegistration::initialized" href="qnetworkregistration.html#initialized-prop" location="qnetworkregistration.h" type="bool">
                <getter name="initialized"></getter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="registrationState" fullname="QNetworkRegistration::registrationState" href="qnetworkregistration.html#registrationState-prop" location="qnetworkregistration.h" type="QTelephony::RegistrationState">
                <getter name="registrationState"></getter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="currentOperatorId" fullname="QNetworkRegistration::currentOperatorId" href="qnetworkregistration.html#currentOperatorId-prop" location="qnetworkregistration.h" type="QString">
                <getter name="currentOperatorId"></getter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="currentOperatorName" fullname="QNetworkRegistration::currentOperatorName" href="qnetworkregistration.html#currentOperatorName-prop" location="qnetworkregistration.h" type="QString">
                <getter name="currentOperatorName"></getter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="currentOperatorMode" fullname="QNetworkRegistration::currentOperatorMode" href="qnetworkregistration.html#currentOperatorMode-prop" location="qnetworkregistration.h" type="QTelephony::OperatorMode">
                <getter name="currentOperatorMode"></getter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="currentOperatorTechnology" fullname="QNetworkRegistration::currentOperatorTechnology" href="qnetworkregistration.html#currentOperatorTechnology-prop" location="qnetworkregistration.h" type="QString">
                <getter name="currentOperatorTechnology"></getter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="locationAreaCode" fullname="QNetworkRegistration::locationAreaCode" href="qnetworkregistration.html#locationAreaCode-prop" location="qnetworkregistration.h" type="int">
                <getter name="locationAreaCode"></getter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="cellId" fullname="QNetworkRegistration::cellId" href="qnetworkregistration.html#cellId-prop" location="qnetworkregistration.h" type="int">
                <getter name="cellId"></getter>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkRegistration" fullname="QNetworkRegistration::QNetworkRegistration" href="qnetworkregistration.html#QNetworkRegistration" location="qnetworkregistration.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNetworkRegistration(const QString &amp; service, QObject * parent, QCommInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="service" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QCommInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNetworkRegistration" fullname="QNetworkRegistration::~QNetworkRegistration" href="qnetworkregistration.html#dtor.QNetworkRegistration" location="qnetworkregistration.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNetworkRegistration()"></function>
            <class access="public" threadsafety="unspecified" status="main" name="AvailableOperator" fullname="QNetworkRegistration::AvailableOperator" href="qnetworkregistration-availableoperator.html" location="qnetworkregistration.h" bases="" module="">
                <variable access="public" threadsafety="unspecified" status="commendable" name="availability" fullname="QNetworkRegistration::AvailableOperator::availability" href="qnetworkregistration-availableoperator.html#availability-var" location="qnetworkregistration.h" type="QTelephony::OperatorAvailability" static="false"></variable>
                <variable access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QNetworkRegistration::AvailableOperator::name" href="qnetworkregistration-availableoperator.html#name-var" location="qnetworkregistration.h" type="QString" static="false"></variable>
                <variable access="public" threadsafety="unspecified" status="commendable" name="shortName" fullname="QNetworkRegistration::AvailableOperator::shortName" href="qnetworkregistration-availableoperator.html#shortName-var" location="qnetworkregistration.h" type="QString" static="false"></variable>
                <variable access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QNetworkRegistration::AvailableOperator::id" href="qnetworkregistration-availableoperator.html#id-var" location="qnetworkregistration.h" type="QString" static="false"></variable>
                <variable access="public" threadsafety="unspecified" status="commendable" name="technology" fullname="QNetworkRegistration::AvailableOperator::technology" href="qnetworkregistration-availableoperator.html#technology-var" location="qnetworkregistration.h" type="QString" static="false"></variable>
            </class>
            <function access="public" threadsafety="unspecified" status="commendable" name="initialized" fullname="QNetworkRegistration::initialized" href="qnetworkregistration.html#initialized-prop" location="qnetworkregistration.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="initialized" type="bool" signature="initialized() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="registrationState" fullname="QNetworkRegistration::registrationState" href="qnetworkregistration.html#registrationState-prop" location="qnetworkregistration.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="registrationState" type="QTelephony::RegistrationState" signature="registrationState() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentOperatorId" fullname="QNetworkRegistration::currentOperatorId" href="qnetworkregistration.html#currentOperatorId-prop" location="qnetworkregistration.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="currentOperatorId" type="QString" signature="currentOperatorId() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentOperatorName" fullname="QNetworkRegistration::currentOperatorName" href="qnetworkregistration.html#currentOperatorName-prop" location="qnetworkregistration.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="currentOperatorName" type="QString" signature="currentOperatorName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentOperatorMode" fullname="QNetworkRegistration::currentOperatorMode" href="qnetworkregistration.html#currentOperatorMode-prop" location="qnetworkregistration.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="currentOperatorMode" type="QTelephony::OperatorMode" signature="currentOperatorMode() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentOperatorTechnology" fullname="QNetworkRegistration::currentOperatorTechnology" href="qnetworkregistration.html#currentOperatorTechnology-prop" location="qnetworkregistration.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="currentOperatorTechnology" type="QString" signature="currentOperatorTechnology() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="locationAreaCode" fullname="QNetworkRegistration::locationAreaCode" href="qnetworkregistration.html#locationAreaCode-prop" location="qnetworkregistration.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="locationAreaCode" type="int" signature="locationAreaCode() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cellId" fullname="QNetworkRegistration::cellId" href="qnetworkregistration.html#cellId-prop" location="qnetworkregistration.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="cellId" type="int" signature="cellId() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCurrentOperator" fullname="QNetworkRegistration::setCurrentOperator" href="qnetworkregistration.html#setCurrentOperator" location="qnetworkregistration.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setCurrentOperator(QTelephony::OperatorMode mode, const QString &amp; id, const QString &amp; technology)">
                <parameter left="QTelephony::OperatorMode" right="" name="mode" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="id" default="QString()"></parameter>
                <parameter left="const QString &amp;" right="" name="technology" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestAvailableOperators" fullname="QNetworkRegistration::requestAvailableOperators" href="qnetworkregistration.html#requestAvailableOperators" location="qnetworkregistration.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="requestAvailableOperators()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="initializedChanged" fullname="QNetworkRegistration::initializedChanged" href="qnetworkregistration.html#initializedChanged" location="qnetworkregistration.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="initializedChanged()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="registrationStateChanged" fullname="QNetworkRegistration::registrationStateChanged" href="qnetworkregistration.html#registrationStateChanged" location="qnetworkregistration.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="registrationStateChanged()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="locationChanged" fullname="QNetworkRegistration::locationChanged" href="qnetworkregistration.html#locationChanged" location="qnetworkregistration.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="locationChanged()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentOperatorChanged" fullname="QNetworkRegistration::currentOperatorChanged" href="qnetworkregistration.html#currentOperatorChanged" location="qnetworkregistration.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="currentOperatorChanged()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCurrentOperatorResult" fullname="QNetworkRegistration::setCurrentOperatorResult" href="qnetworkregistration.html#setCurrentOperatorResult" location="qnetworkregistration.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="setCurrentOperatorResult(QTelephony::Result result)">
                <parameter left="QTelephony::Result" right="" name="result" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableOperators" fullname="QNetworkRegistration::availableOperators" href="qnetworkregistration.html#availableOperators" location="qnetworkregistration.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="availableOperators(const QList&lt;QNetworkRegistration::AvailableOperator&gt; &amp; opers)">
                <parameter left="const QList&lt;QNetworkRegistration::AvailableOperator&gt; &amp;" right="" name="opers" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QNetworkRegistrationServer" href="qnetworkregistrationserver.html" location="qnetworkregistration.h" bases="QNetworkRegistration" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkRegistrationServer" fullname="QNetworkRegistrationServer::QNetworkRegistrationServer" href="qnetworkregistrationserver.html#QNetworkRegistrationServer" location="qnetworkregistration.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNetworkRegistrationServer(const QString &amp; service, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNetworkRegistrationServer" fullname="QNetworkRegistrationServer::~QNetworkRegistrationServer" href="qnetworkregistrationserver.html#dtor.QNetworkRegistrationServer" location="qnetworkregistration.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNetworkRegistrationServer()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="updateInitialized" fullname="QNetworkRegistrationServer::updateInitialized" href="qnetworkregistrationserver.html#updateInitialized" location="qnetworkregistration.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="updateInitialized(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="updateRegistrationState" fullname="QNetworkRegistrationServer::updateRegistrationState" href="qnetworkregistrationserver.html#updateRegistrationState" location="qnetworkregistration.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="updateRegistrationState(QTelephony::RegistrationState state)">
                <parameter left="QTelephony::RegistrationState" right="" name="state" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="updateRegistrationState" fullname="QNetworkRegistrationServer::updateRegistrationState" href="qnetworkregistrationserver.html#updateRegistrationState-2" location="qnetworkregistration.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="updateRegistrationState(QTelephony::RegistrationState state, int locationAreaCode, int cellId)">
                <parameter left="QTelephony::RegistrationState" right="" name="state" default=""></parameter>
                <parameter left="int" right="" name="locationAreaCode" default=""></parameter>
                <parameter left="int" right="" name="cellId" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="updateCurrentOperator" fullname="QNetworkRegistrationServer::updateCurrentOperator" href="qnetworkregistrationserver.html#updateCurrentOperator" location="qnetworkregistration.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="updateCurrentOperator(QTelephony::OperatorMode mode, const QString &amp; id, const QString &amp; name, const QString &amp; technology)">
                <parameter left="QTelephony::OperatorMode" right="" name="mode" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="technology" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QWapAccount" href="qwapaccount.html" location="qwapaccount.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="MMSVisibility" fullname="QWapAccount::MMSVisibility" href="qwapaccount.html#MMSVisibility-enum" location="qwapaccount.h">
                <value name="Default" value="0"></value>
                <value name="SenderHidden" value="1"></value>
                <value name="SenderVisible" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QWapAccount" fullname="QWapAccount::QWapAccount" href="qwapaccount.html#QWapAccount" location="qwapaccount.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QWapAccount()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QWapAccount" fullname="QWapAccount::QWapAccount" href="qwapaccount.html#QWapAccount-2" location="qwapaccount.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QWapAccount(const QString &amp; wapConfig)">
                <parameter left="const QString &amp;" right="" name="wapConfig" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QWapAccount" fullname="QWapAccount::QWapAccount" href="qwapaccount.html#QWapAccount-3" location="qwapaccount.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QWapAccount(const QWapAccount &amp; other)">
                <parameter left="const QWapAccount &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QWapAccount" fullname="QWapAccount::~QWapAccount" href="qwapaccount.html#dtor.QWapAccount" location="qwapaccount.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QWapAccount()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QWapAccount::operator=" href="qwapaccount.html#operator=" location="qwapaccount.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QWapAccount &amp;" signature="operator=(const QWapAccount &amp; other)">
                <parameter left="const QWapAccount &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QWapAccount::operator==" href="qwapaccount.html#operator==" location="qwapaccount.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="operator==(const QWapAccount &amp; other)">
                <parameter left="const QWapAccount &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="configuration" fullname="QWapAccount::configuration" href="qwapaccount.html#configuration" location="qwapaccount.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="configuration() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QWapAccount::name" href="qwapaccount.html#name" location="qwapaccount.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setName" fullname="QWapAccount::setName" href="qwapaccount.html#setName" location="qwapaccount.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setName(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dataInterface" fullname="QWapAccount::dataInterface" href="qwapaccount.html#dataInterface" location="qwapaccount.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="dataInterface() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDataInterface" fullname="QWapAccount::setDataInterface" href="qwapaccount.html#setDataInterface" location="qwapaccount.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDataInterface(const QString &amp; ifaceHandle)">
                <parameter left="const QString &amp;" right="" name="ifaceHandle" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="gateway" fullname="QWapAccount::gateway" href="qwapaccount.html#gateway" location="qwapaccount.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUrl" signature="gateway() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setGateway" fullname="QWapAccount::setGateway" href="qwapaccount.html#setGateway" location="qwapaccount.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setGateway(const QUrl &amp; url)">
                <parameter left="const QUrl &amp;" right="" name="url" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mmsServer" fullname="QWapAccount::mmsServer" href="qwapaccount.html#mmsServer" location="qwapaccount.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUrl" signature="mmsServer() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMmsServer" fullname="QWapAccount::setMmsServer" href="qwapaccount.html#setMmsServer" location="qwapaccount.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMmsServer(const QUrl &amp; url)">
                <parameter left="const QUrl &amp;" right="" name="url" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mmsExpiry" fullname="QWapAccount::mmsExpiry" href="qwapaccount.html#mmsExpiry" location="qwapaccount.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="mmsExpiry() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMmsExpiry" fullname="QWapAccount::setMmsExpiry" href="qwapaccount.html#setMmsExpiry" location="qwapaccount.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMmsExpiry(int mmsExpiry)">
                <parameter left="int" right="" name="mmsExpiry" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mmsSenderVisibility" fullname="QWapAccount::mmsSenderVisibility" href="qwapaccount.html#mmsSenderVisibility" location="qwapaccount.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QWapAccount::MMSVisibility" signature="mmsSenderVisibility() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMmsSenderVisibility" fullname="QWapAccount::setMmsSenderVisibility" href="qwapaccount.html#setMmsSenderVisibility" location="qwapaccount.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMmsSenderVisibility(QWapAccount::MMSVisibility v)">
                <parameter left="QWapAccount::MMSVisibility" right="" name="v" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mmsDeliveryReport" fullname="QWapAccount::mmsDeliveryReport" href="qwapaccount.html#mmsDeliveryReport" location="qwapaccount.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="mmsDeliveryReport() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMmsDeliveryReport" fullname="QWapAccount::setMmsDeliveryReport" href="qwapaccount.html#setMmsDeliveryReport" location="qwapaccount.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMmsDeliveryReport(bool delRpt)">
                <parameter left="bool" right="" name="delRpt" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="RingtoneService" href="ringtoneservice.html" location="ringtoneservice.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="startMessageRingtone" fullname="RingtoneService::startMessageRingtone" href="ringtoneservice.html#startMessageRingtone" location="ringtoneservice.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="startMessageRingtone()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stopMessageRingtone" fullname="RingtoneService::stopMessageRingtone" href="ringtoneservice.html#stopMessageRingtone" location="ringtoneservice.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="stopMessageRingtone()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="startRingtone" fullname="RingtoneService::startRingtone" href="ringtoneservice.html#startRingtone" location="ringtoneservice.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="startRingtone(const QString &amp; fileName)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stopRingtone" fullname="RingtoneService::stopRingtone" href="ringtoneservice.html#stopRingtone" location="ringtoneservice.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="stopRingtone(const QString &amp; fileName)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QMimeType" href="qmimetype.html" location="qmimetype.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMimeType" fullname="QMimeType::QMimeType" href="qmimetype.html#QMimeType" location="qmimetype.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMimeType()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMimeType" fullname="QMimeType::QMimeType" href="qmimetype.html#QMimeType-2" location="qmimetype.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMimeType(const QString &amp; ext_or_id)">
                <parameter left="const QString &amp;" right="" name="ext_or_id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMimeType" fullname="QMimeType::QMimeType" href="qmimetype.html#QMimeType-3" location="qmimetype.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMimeType(const QContent &amp; lnk)">
                <parameter left="const QContent &amp;" right="" name="lnk" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMimeType" fullname="QMimeType::QMimeType" href="qmimetype.html#QMimeType-4" location="qmimetype.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QMimeType(const QMimeType &amp; other)">
                <parameter left="const QMimeType &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QMimeType::operator=" href="qmimetype.html#operator=" location="qmimetype.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMimeType &amp;" signature="operator=(const QMimeType &amp; other)">
                <parameter left="const QMimeType &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QMimeType::operator==" href="qmimetype.html#operator==" location="qmimetype.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QMimeType &amp; other) const">
                <parameter left="const QMimeType &amp;" right="" name="other" default=""></parameter>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="IconType" fullname="QMimeType::IconType" href="qmimetype.html#IconType-enum" location="qmimetype.h">
                <value name="Default" value="0"></value>
                <value name="DrmValid" value="1"></value>
                <value name="DrmInvalid" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QMimeType::id" href="qmimetype.html#id" location="qmimetype.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="id() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="description" fullname="QMimeType::description" href="qmimetype.html#description" location="qmimetype.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="description() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="icon" fullname="QMimeType::icon" href="qmimetype.html#icon" location="qmimetype.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QIcon" signature="icon(IconType iconType) const">
                <parameter left="IconType" right="" name="iconType" default="Default"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="extension" fullname="QMimeType::extension" href="qmimetype.html#extension" location="qmimetype.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="extension() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="extensions" fullname="QMimeType::extensions" href="qmimetype.html#extensions" location="qmimetype.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="extensions() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="applications" fullname="QMimeType::applications" href="qmimetype.html#applications" location="qmimetype.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentList" signature="applications() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="application" fullname="QMimeType::application" href="qmimetype.html#application" location="qmimetype.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContent" signature="application() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="permission" fullname="QMimeType::permission" href="qmimetype.html#permission" location="qmimetype.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDrmRights::Permission" signature="permission() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="permissions" fullname="QMimeType::permissions" href="qmimetype.html#permissions" location="qmimetype.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QDrmRights::Permission&gt;" signature="permissions() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QMimeType::isNull" href="qmimetype.html#isNull" location="qmimetype.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromId" fullname="QMimeType::fromId" href="qmimetype.html#fromId" location="qmimetype.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMimeType" signature="fromId(const QString &amp; mimeId)">
                <parameter left="const QString &amp;" right="" name="mimeId" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromExtension" fullname="QMimeType::fromExtension" href="qmimetype.html#fromExtension" location="qmimetype.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMimeType" signature="fromExtension(const QString &amp; extension)">
                <parameter left="const QString &amp;" right="" name="extension" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromFileName" fullname="QMimeType::fromFileName" href="qmimetype.html#fromFileName" location="qmimetype.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMimeType" signature="fromFileName(const QString &amp; fileName)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addAssociation" fullname="QMimeType::addAssociation" href="qmimetype.html#addAssociation" location="qmimetype.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="addAssociation(const QString &amp; mimeType, const QString &amp; application, const QString &amp; icon, QDrmRights::Permission permission)">
                <parameter left="const QString &amp;" right="" name="mimeType" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="application" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="icon" default=""></parameter>
                <parameter left="QDrmRights::Permission" right="" name="permission" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeAssociation" fullname="QMimeType::removeAssociation" href="qmimetype.html#removeAssociation" location="qmimetype.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="removeAssociation(const QString &amp; mimeType, const QString &amp; application)">
                <parameter left="const QString &amp;" right="" name="mimeType" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="application" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="applicationsFor" fullname="QMimeType::applicationsFor" href="qmimetype.html#applicationsFor" location="qmimetype.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QContentList" signature="applicationsFor(const QContent &amp; content)">
                <parameter left="const QContent &amp;" right="" name="content" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="applicationsFor" fullname="QMimeType::applicationsFor" href="qmimetype.html#applicationsFor-2" location="qmimetype.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QContentList" signature="applicationsFor(const QMimeType &amp; mimeType)">
                <parameter left="const QMimeType &amp;" right="" name="mimeType" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultApplicationFor" fullname="QMimeType::defaultApplicationFor" href="qmimetype.html#defaultApplicationFor" location="qmimetype.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QContent" signature="defaultApplicationFor(const QContent &amp; content)">
                <parameter left="const QContent &amp;" right="" name="content" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultApplicationFor" fullname="QMimeType::defaultApplicationFor" href="qmimetype.html#defaultApplicationFor-2" location="qmimetype.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QContent" signature="defaultApplicationFor(const QMimeType &amp; mimeType)">
                <parameter left="const QMimeType &amp;" right="" name="mimeType" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultApplicationFor" fullname="QMimeType::setDefaultApplicationFor" href="qmimetype.html#setDefaultApplicationFor" location="qmimetype.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setDefaultApplicationFor(const QString &amp; mimeType, const QContent &amp; content)">
                <parameter left="const QString &amp;" right="" name="mimeType" default=""></parameter>
                <parameter left="const QContent &amp;" right="" name="content" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="ThemeItem" href="themeitem.html" location="themedview.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="ThemeItem::State" href="themeitem.html#State-enum" location="themedview.h">
                <value name="Default" value="1"></value>
                <value name="Focus" value="2"></value>
                <value name="Pressed" value="6"></value>
                <value name="All" value="7"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="ThemeItem" fullname="ThemeItem::ThemeItem" href="themeitem.html#ThemeItem" location="themedview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ThemeItem(ThemeItem * parent, ThemedView * view, const ThemeAttributes &amp; atts)">
                <parameter left="ThemeItem *" right="" name="parent" default=""></parameter>
                <parameter left="ThemedView *" right="" name="view" default=""></parameter>
                <parameter left="const ThemeAttributes &amp;" right="" name="atts" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ThemeItem" fullname="ThemeItem::~ThemeItem" href="themeitem.html#dtor.ThemeItem" location="themedview.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~ThemeItem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setActive" fullname="ThemeItem::setActive" href="themeitem.html#setActive" location="themedview.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setActive(bool active)">
                <parameter left="bool" right="" name="active" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVisible" fullname="ThemeItem::setVisible" href="themeitem.html#setVisible" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setVisible(bool visible)">
                <parameter left="bool" right="" name="visible" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="active" fullname="ThemeItem::active" href="themeitem.html#active" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="active() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="transient" fullname="ThemeItem::transient" href="themeitem.html#transient" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="transient() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rect" fullname="ThemeItem::rect" href="themeitem.html#rect" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QRect" signature="rect() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="geometry" fullname="ThemeItem::geometry" href="themeitem.html#geometry" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QRect" signature="geometry() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="geometryHint" fullname="ThemeItem::geometryHint" href="themeitem.html#geometryHint" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QRectF" signature="geometryHint() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setGeometry" fullname="ThemeItem::setGeometry" href="themeitem.html#setGeometry" location="themedview.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setGeometry(const QRect &amp; rect)">
                <parameter left="const QRect &amp;" right="" name="rect" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isVisible" fullname="ThemeItem::isVisible" href="themeitem.html#isVisible" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isVisible() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rtti" fullname="ThemeItem::rtti" href="themeitem.html#rtti" location="themedview.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="int" signature="rtti() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemName" fullname="ThemeItem::itemName" href="themeitem.html#itemName" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="itemName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isInteractive" fullname="ThemeItem::isInteractive" href="themeitem.html#isInteractive" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isInteractive() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pressed" fullname="ThemeItem::pressed" href="themeitem.html#pressed" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="pressed() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasFocus" fullname="ThemeItem::hasFocus" href="themeitem.html#hasFocus" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasFocus() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="ThemeItem::state" href="themeitem.html#state" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="ThemeItem::State" signature="state() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parentItem" fullname="ThemeItem::parentItem" href="themeitem.html#parentItem" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="ThemeItem *" signature="parentItem() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="view" fullname="ThemeItem::view" href="themeitem.html#view" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="ThemedView *" signature="view() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="vsPath" fullname="ThemeItem::vsPath" href="themeitem.html#vsPath" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="vsPath()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fullVSPath" fullname="ThemeItem::fullVSPath" href="themeitem.html#fullVSPath" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="fullVSPath()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="children" fullname="ThemeItem::children" href="themeitem.html#children" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;ThemeItem *&gt;" signature="children() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="ThemeItem::stateChanged" href="themeitem.html#stateChanged" location="themedview.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="stateChanged(const ThemeItem::State &amp; state)">
                <parameter left="const ThemeItem::State &amp;" right="" name="state" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="clickedEvent" fullname="ThemeItem::clickedEvent" href="themeitem.html#clickedEvent" location="themedview.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="clickedEvent()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="isStringExpression" fullname="ThemeItem::isStringExpression" href="themeitem.html#isStringExpression" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="isStringExpression(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="stripStringExpression" fullname="ThemeItem::stripStringExpression" href="themeitem.html#stripStringExpression" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="stripStringExpression(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="expressionChanged" fullname="ThemeItem::expressionChanged" href="themeitem.html#expressionChanged" location="themedview.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="expressionChanged(QExpressionEvaluator * expression)">
                <parameter left="QExpressionEvaluator *" right="" name="expression" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="constructionComplete" fullname="ThemeItem::constructionComplete" href="themeitem.html#constructionComplete" location="themedview.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="constructionComplete()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="createExpression" fullname="ThemeItem::createExpression" href="themeitem.html#createExpression" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QExpressionEvaluator *" signature="createExpression(const QString &amp; data)">
                <parameter left="const QString &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="getExpressionResult" fullname="ThemeItem::getExpressionResult" href="themeitem.html#getExpressionResult" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QVariant" signature="getExpressionResult(QExpressionEvaluator * expression, const QVariant::Type &amp; type)">
                <parameter left="QExpressionEvaluator *" right="" name="expression" default=""></parameter>
                <parameter left="const QVariant::Type &amp;" right="" name="type" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setAttribute" fullname="ThemeItem::setAttribute" href="themeitem.html#setAttribute" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAttribute(const QString &amp; key, const int &amp; value, ThemeItem::State state)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
                <parameter left="const int &amp;" right="" name="value" default=""></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setAttribute" fullname="ThemeItem::setAttribute" href="themeitem.html#setAttribute-2" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setAttribute(const QLatin1String &amp; key, const int &amp; value, ThemeItem::State state)">
                <parameter left="const QLatin1String &amp;" right="" name="key" default=""></parameter>
                <parameter left="const int &amp;" right="" name="value" default=""></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="attribute" fullname="ThemeItem::attribute" href="themeitem.html#attribute" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="attribute(const QString &amp; key, ThemeItem::State state) const">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="attribute" fullname="ThemeItem::attribute" href="themeitem.html#attribute-2" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="int" signature="attribute(const QLatin1String &amp; key, ThemeItem::State state) const">
                <parameter left="const QLatin1String &amp;" right="" name="key" default=""></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setAttribute" fullname="ThemeItem::setAttribute" href="themeitem.html#setAttribute-3" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="void" signature="setAttribute(const QString &amp; key, const QString &amp; value, ThemeItem::State state)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setAttribute" fullname="ThemeItem::setAttribute" href="themeitem.html#setAttribute-4" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="4" type="void" signature="setAttribute(const QLatin1String &amp; key, const QString &amp; value, ThemeItem::State state)">
                <parameter left="const QLatin1String &amp;" right="" name="key" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="strAttribute" fullname="ThemeItem::strAttribute" href="themeitem.html#strAttribute" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="strAttribute(const QString &amp; key, ThemeItem::State state)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="strAttribute" fullname="ThemeItem::strAttribute" href="themeitem.html#strAttribute-2" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="QString" signature="strAttribute(const QLatin1String &amp; key, ThemeItem::State state)">
                <parameter left="const QLatin1String &amp;" right="" name="key" default=""></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="paint" fullname="ThemeItem::paint" href="themeitem.html#paint" location="themedview.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="paint(QPainter * painter, const QRect &amp; rect)">
                <parameter left="QPainter *" right="" name="painter" default=""></parameter>
                <parameter left="const QRect &amp;" right="" name="rect" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="layout" fullname="ThemeItem::layout" href="themeitem.html#layout" location="themedview.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="layout()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="update" fullname="ThemeItem::update" href="themeitem.html#update" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="update()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="update" fullname="ThemeItem::update" href="themeitem.html#update-2" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="update(int x, int y, int w, int h)">
                <parameter left="int" right="" name="x" default=""></parameter>
                <parameter left="int" right="" name="y" default=""></parameter>
                <parameter left="int" right="" name="w" default=""></parameter>
                <parameter left="int" right="" name="h" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="addCharacters" fullname="ThemeItem::addCharacters" href="themeitem.html#addCharacters" location="themedview.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="addCharacters(const QString &amp; characters)">
                <parameter left="const QString &amp;" right="" name="characters" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="ThemePageItem" href="themepageitem.html" location="themedview.h" bases="ThemeItem" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ThemePageItem" fullname="ThemePageItem::ThemePageItem" href="themepageitem.html#ThemePageItem" location="themedview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ThemePageItem(ThemedView * view, const ThemeAttributes &amp; atts)">
                <parameter left="ThemedView *" right="" name="view" default=""></parameter>
                <parameter left="const ThemeAttributes &amp;" right="" name="atts" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ThemePageItem" fullname="ThemePageItem::~ThemePageItem" href="themepageitem.html#dtor.ThemePageItem" location="themedview.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~ThemePageItem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="base" fullname="ThemePageItem::base" href="themepageitem.html#base" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QString" signature="base() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sizeHint" fullname="ThemePageItem::sizeHint" href="themepageitem.html#sizeHint" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSize" signature="sizeHint() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="ThemeGroupItem" href="themegroupitem.html" location="themedview.h" bases="ThemeItem" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ThemeGroupItem" fullname="ThemeGroupItem::ThemeGroupItem" href="themegroupitem.html#ThemeGroupItem" location="themedview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ThemeGroupItem(ThemeItem * parent, ThemedView * view, const ThemeAttributes &amp; atts)">
                <parameter left="ThemeItem *" right="" name="parent" default=""></parameter>
                <parameter left="ThemedView *" right="" name="view" default=""></parameter>
                <parameter left="const ThemeAttributes &amp;" right="" name="atts" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="ThemePluginItem" href="themepluginitem.html" location="themedview.h" bases="ThemeItem" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ThemePluginItem" fullname="ThemePluginItem::ThemePluginItem" href="themepluginitem.html#ThemePluginItem" location="themedview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ThemePluginItem(ThemeItem * parent, ThemedView * view, const ThemeAttributes &amp; atts)">
                <parameter left="ThemeItem *" right="" name="parent" default=""></parameter>
                <parameter left="ThemedView *" right="" name="view" default=""></parameter>
                <parameter left="const ThemeAttributes &amp;" right="" name="atts" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ThemePluginItem" fullname="ThemePluginItem::~ThemePluginItem" href="themepluginitem.html#dtor.ThemePluginItem" location="themedview.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~ThemePluginItem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlugin" fullname="ThemePluginItem::setPlugin" href="themepluginitem.html#setPlugin" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPlugin(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBuiltin" fullname="ThemePluginItem::setBuiltin" href="themepluginitem.html#setBuiltin" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBuiltin(ThemedItemPlugin * plugin)">
                <parameter left="ThemedItemPlugin *" right="" name="plugin" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="ThemeLayoutItem" href="themelayoutitem.html" location="themedview.h" bases="ThemeItem" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ThemeLayoutItem" fullname="ThemeLayoutItem::ThemeLayoutItem" href="themelayoutitem.html#ThemeLayoutItem" location="themedview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ThemeLayoutItem(ThemeItem * parent, ThemedView * view, const ThemeAttributes &amp; atts)">
                <parameter left="ThemeItem *" right="" name="parent" default=""></parameter>
                <parameter left="ThemedView *" right="" name="view" default=""></parameter>
                <parameter left="const ThemeAttributes &amp;" right="" name="atts" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ThemeLayoutItem" fullname="ThemeLayoutItem::~ThemeLayoutItem" href="themelayoutitem.html#dtor.ThemeLayoutItem" location="themedview.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~ThemeLayoutItem()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="ThemeTemplateItem" href="themetemplateitem.html" location="themedview.h" bases="ThemeItem" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ThemeTemplateItem" fullname="ThemeTemplateItem::ThemeTemplateItem" href="themetemplateitem.html#ThemeTemplateItem" location="themedview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ThemeTemplateItem(ThemeItem * parent, ThemedView * view, const ThemeAttributes &amp; atts)">
                <parameter left="ThemeItem *" right="" name="parent" default=""></parameter>
                <parameter left="ThemedView *" right="" name="view" default=""></parameter>
                <parameter left="const ThemeAttributes &amp;" right="" name="atts" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ThemeTemplateItem" fullname="ThemeTemplateItem::~ThemeTemplateItem" href="themetemplateitem.html#dtor.ThemeTemplateItem" location="themedview.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~ThemeTemplateItem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="createInstance" fullname="ThemeTemplateItem::createInstance" href="themetemplateitem.html#createInstance" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="ThemeTemplateInstanceItem *" signature="createInstance(const QString &amp; uid)">
                <parameter left="const QString &amp;" right="" name="uid" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="ThemeTemplateInstanceItem" href="themetemplateinstanceitem.html" location="themedview.h" bases="ThemeTemplateItem" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ThemeTemplateInstanceItem" fullname="ThemeTemplateInstanceItem::ThemeTemplateInstanceItem" href="themetemplateinstanceitem.html#ThemeTemplateInstanceItem" location="themedview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ThemeTemplateInstanceItem(ThemeItem * parent, ThemedView * view, const ThemeAttributes &amp; atts)">
                <parameter left="ThemeItem *" right="" name="parent" default=""></parameter>
                <parameter left="ThemedView *" right="" name="view" default=""></parameter>
                <parameter left="const ThemeAttributes &amp;" right="" name="atts" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ThemeTemplateInstanceItem" fullname="ThemeTemplateInstanceItem::~ThemeTemplateInstanceItem" href="themetemplateinstanceitem.html#dtor.ThemeTemplateInstanceItem" location="themedview.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~ThemeTemplateInstanceItem()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="ThemeExclusiveItem" href="themeexclusiveitem.html" location="themedview.h" bases="ThemeItem" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ThemeExclusiveItem" fullname="ThemeExclusiveItem::ThemeExclusiveItem" href="themeexclusiveitem.html#ThemeExclusiveItem" location="themedview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ThemeExclusiveItem(ThemeItem * parent, ThemedView * view, const ThemeAttributes &amp; atts)">
                <parameter left="ThemeItem *" right="" name="parent" default=""></parameter>
                <parameter left="ThemedView *" right="" name="view" default=""></parameter>
                <parameter left="const ThemeAttributes &amp;" right="" name="atts" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="ThemeGraphicItem" href="themegraphicitem.html" location="themedview.h" bases="ThemeItem" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ThemeGraphicItem" fullname="ThemeGraphicItem::ThemeGraphicItem" href="themegraphicitem.html#ThemeGraphicItem" location="themedview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ThemeGraphicItem(ThemeItem * parent, ThemedView * view, const ThemeAttributes &amp; atts)">
                <parameter left="ThemeItem *" right="" name="parent" default=""></parameter>
                <parameter left="ThemedView *" right="" name="view" default=""></parameter>
                <parameter left="const ThemeAttributes &amp;" right="" name="atts" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ThemeGraphicItem" fullname="ThemeGraphicItem::~ThemeGraphicItem" href="themegraphicitem.html#dtor.ThemeGraphicItem" location="themedview.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~ThemeGraphicItem()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setColor" fullname="ThemeGraphicItem::setColor" href="themegraphicitem.html#setColor" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setColor(const QString &amp; key, const QColor &amp; value, ThemeItem::State state)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
                <parameter left="const QColor &amp;" right="" name="value" default=""></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setColor" fullname="ThemeGraphicItem::setColor" href="themegraphicitem.html#setColor-2" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setColor(const QLatin1String &amp; key, const QColor &amp; value, ThemeItem::State state)">
                <parameter left="const QLatin1String &amp;" right="" name="key" default=""></parameter>
                <parameter left="const QColor &amp;" right="" name="value" default=""></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="color" fullname="ThemeGraphicItem::color" href="themegraphicitem.html#color" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QColor" signature="color(const QString &amp; key, ThemeItem::State state) const">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="color" fullname="ThemeGraphicItem::color" href="themegraphicitem.html#color-2" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QColor" signature="color(const QLatin1String &amp; key, ThemeItem::State state) const">
                <parameter left="const QLatin1String &amp;" right="" name="key" default=""></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="font" fullname="ThemeGraphicItem::font" href="themegraphicitem.html#font" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QFont" signature="font(const QString &amp; key, ThemeItem::State state) const">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="font" fullname="ThemeGraphicItem::font" href="themegraphicitem.html#font-2" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QFont" signature="font(const QLatin1String &amp; key, ThemeItem::State state) const">
                <parameter left="const QLatin1String &amp;" right="" name="key" default=""></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setFont" fullname="ThemeGraphicItem::setFont" href="themegraphicitem.html#setFont" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFont(const QString &amp; key, const QFont &amp; value, ThemeItem::State state)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
                <parameter left="const QFont &amp;" right="" name="value" default=""></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setFont" fullname="ThemeGraphicItem::setFont" href="themegraphicitem.html#setFont-2" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setFont(const QLatin1String &amp; key, const QFont &amp; value, ThemeItem::State state)">
                <parameter left="const QLatin1String &amp;" right="" name="key" default=""></parameter>
                <parameter left="const QFont &amp;" right="" name="value" default=""></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setupColor" fullname="ThemeGraphicItem::setupColor" href="themegraphicitem.html#setupColor" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setupColor(const QString &amp; key, const QString &amp; color, ThemeItem::State state)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="color" default=""></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setupColor" fullname="ThemeGraphicItem::setupColor" href="themegraphicitem.html#setupColor-2" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setupColor(const QLatin1String &amp; key, const QLatin1String &amp; roleKey, const QString &amp; color, ThemeItem::State state)">
                <parameter left="const QLatin1String &amp;" right="" name="key" default=""></parameter>
                <parameter left="const QLatin1String &amp;" right="" name="roleKey" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="color" default=""></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setupAlpha" fullname="ThemeGraphicItem::setupAlpha" href="themegraphicitem.html#setupAlpha" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setupAlpha(const QString &amp; key, const QString &amp; alpha, ThemeItem::State state)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="alpha" default=""></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setupAlpha" fullname="ThemeGraphicItem::setupAlpha" href="themegraphicitem.html#setupAlpha-2" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setupAlpha(const QLatin1String &amp; key, const QString &amp; alpha, ThemeItem::State state)">
                <parameter left="const QLatin1String &amp;" right="" name="key" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="alpha" default=""></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="parseFont" fullname="ThemeGraphicItem::parseFont" href="themegraphicitem.html#parseFont" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QFont" signature="parseFont(const QFont &amp; defFont, const QString &amp; size, const QString &amp; bold)">
                <parameter left="const QFont &amp;" right="" name="defFont" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="size" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="bold" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="parseColor" fullname="ThemeGraphicItem::parseColor" href="themegraphicitem.html#parseColor" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="parseColor(const QString &amp; value, QColor &amp; color)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
                <parameter left="QColor &amp;" right="" name="color" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="getColor" fullname="ThemeGraphicItem::getColor" href="themegraphicitem.html#getColor" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QColor" signature="getColor(const QColor &amp; color, int role) const">
                <parameter left="const QColor &amp;" right="" name="color" default=""></parameter>
                <parameter left="int" right="" name="role" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="ThemeTextItem" href="themetextitem.html" location="themedview.h" bases="ThemeGraphicItem" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ThemeTextItem" fullname="ThemeTextItem::ThemeTextItem" href="themetextitem.html#ThemeTextItem" location="themedview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ThemeTextItem(ThemeItem * parent, ThemedView * view, const ThemeAttributes &amp; atts)">
                <parameter left="ThemeItem *" right="" name="parent" default=""></parameter>
                <parameter left="ThemedView *" right="" name="view" default=""></parameter>
                <parameter left="const ThemeAttributes &amp;" right="" name="atts" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ThemeTextItem" fullname="ThemeTextItem::~ThemeTextItem" href="themetextitem.html#dtor.ThemeTextItem" location="themedview.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~ThemeTextItem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setText" fullname="ThemeTextItem::setText" href="themetextitem.html#setText" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setText(const QString &amp; text)">
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="text" fullname="ThemeTextItem::text" href="themetextitem.html#text" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="text() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="shortLabel" fullname="ThemeTextItem::shortLabel" href="themetextitem.html#shortLabel" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="shortLabel() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTextFormat" fullname="ThemeTextItem::setTextFormat" href="themetextitem.html#setTextFormat" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTextFormat(Qt::TextFormat format)">
                <parameter left="Qt::TextFormat" right="" name="format" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="textFormat" fullname="ThemeTextItem::textFormat" href="themetextitem.html#textFormat" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Qt::TextFormat" signature="textFormat() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="ThemeRectItem" href="themerectitem.html" location="themedview.h" bases="ThemeGraphicItem" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ThemeRectItem" fullname="ThemeRectItem::ThemeRectItem" href="themerectitem.html#ThemeRectItem" location="themedview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ThemeRectItem(ThemeItem * parent, ThemedView * view, const ThemeAttributes &amp; atts)">
                <parameter left="ThemeItem *" right="" name="parent" default=""></parameter>
                <parameter left="ThemedView *" right="" name="view" default=""></parameter>
                <parameter left="const ThemeAttributes &amp;" right="" name="atts" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="brushColor" fullname="ThemeRectItem::brushColor" href="themerectitem.html#brushColor" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QColor" signature="brushColor(ThemeItem::State state) const">
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="ThemeLineItem" href="themelineitem.html" location="themedview.h" bases="ThemeGraphicItem" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ThemeLineItem" fullname="ThemeLineItem::ThemeLineItem" href="themelineitem.html#ThemeLineItem" location="themedview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ThemeLineItem(ThemeItem * parent, ThemedView * view, const ThemeAttributes &amp; atts)">
                <parameter left="ThemeItem *" right="" name="parent" default=""></parameter>
                <parameter left="ThemedView *" right="" name="view" default=""></parameter>
                <parameter left="const ThemeAttributes &amp;" right="" name="atts" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="ThemePixmapItem" href="themepixmapitem.html" location="themedview.h" bases="ThemeGraphicItem" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ThemePixmapItem" fullname="ThemePixmapItem::ThemePixmapItem" href="themepixmapitem.html#ThemePixmapItem" location="themedview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ThemePixmapItem(ThemeItem * parent, ThemedView * view, const ThemeAttributes &amp; atts)">
                <parameter left="ThemeItem *" right="" name="parent" default=""></parameter>
                <parameter left="ThemedView *" right="" name="view" default=""></parameter>
                <parameter left="const ThemeAttributes &amp;" right="" name="atts" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ThemePixmapItem" fullname="ThemePixmapItem::~ThemePixmapItem" href="themepixmapitem.html#dtor.ThemePixmapItem" location="themedview.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~ThemePixmapItem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="colorizeImage" fullname="ThemePixmapItem::colorizeImage" href="themepixmapitem.html#colorizeImage" location="themedview.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="colorizeImage(QImage &amp; img, const QColor &amp; col, int alpha, bool blendColor)">
                <parameter left="QImage &amp;" right="" name="img" default=""></parameter>
                <parameter left="const QColor &amp;" right="" name="col" default=""></parameter>
                <parameter left="int" right="" name="alpha" default=""></parameter>
                <parameter left="bool" right="" name="blendColor" default="true"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="loadImage" fullname="ThemePixmapItem::loadImage" href="themepixmapitem.html#loadImage" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QPixmap" signature="loadImage(const QString &amp; filename, int colorRole, const QColor &amp; col, int alpha, int width, int height)">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
                <parameter left="int" right="" name="colorRole" default=""></parameter>
                <parameter left="const QColor &amp;" right="" name="col" default=""></parameter>
                <parameter left="int" right="" name="alpha" default=""></parameter>
                <parameter left="int" right="" name="width" default="0"></parameter>
                <parameter left="int" right="" name="height" default="0"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setPixmap" fullname="ThemePixmapItem::setPixmap" href="themepixmapitem.html#setPixmap" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPixmap(const QString &amp; key, const QPixmap &amp; value, ThemeItem::State state, const QString &amp; filename)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
                <parameter left="const QPixmap &amp;" right="" name="value" default=""></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
                <parameter left="const QString &amp;" right="" name="filename" default="QString::null"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setPixmap" fullname="ThemePixmapItem::setPixmap" href="themepixmapitem.html#setPixmap-2" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setPixmap(const QLatin1String &amp; key, const QPixmap &amp; value, ThemeItem::State state, const QString &amp; filename)">
                <parameter left="const QLatin1String &amp;" right="" name="key" default=""></parameter>
                <parameter left="const QPixmap &amp;" right="" name="value" default=""></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
                <parameter left="const QString &amp;" right="" name="filename" default="QString::null"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="pixmap" fullname="ThemePixmapItem::pixmap" href="themepixmapitem.html#pixmap" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPixmap" signature="pixmap(const QString &amp; key, ThemeItem::State state) const">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="pixmap" fullname="ThemePixmapItem::pixmap" href="themepixmapitem.html#pixmap-2" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QPixmap" signature="pixmap(const QLatin1String &amp; key, ThemeItem::State state) const">
                <parameter left="const QLatin1String &amp;" right="" name="key" default=""></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="ThemeAnimationItem" href="themeanimationitem.html" location="themedview.h" bases="ThemePixmapItem" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ThemeAnimationItem" fullname="ThemeAnimationItem::ThemeAnimationItem" href="themeanimationitem.html#ThemeAnimationItem" location="themedview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ThemeAnimationItem(ThemeItem * parent, ThemedView * view, const ThemeAttributes &amp; atts)">
                <parameter left="ThemeItem *" right="" name="parent" default=""></parameter>
                <parameter left="ThemedView *" right="" name="view" default=""></parameter>
                <parameter left="const ThemeAttributes &amp;" right="" name="atts" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ThemeAnimationItem" fullname="ThemeAnimationItem::~ThemeAnimationItem" href="themeanimationitem.html#dtor.ThemeAnimationItem" location="themedview.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~ThemeAnimationItem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFrame" fullname="ThemeAnimationItem::setFrame" href="themeanimationitem.html#setFrame" location="themedview.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setFrame(int frame)">
                <parameter left="int" right="" name="frame" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frame" fullname="ThemeAnimationItem::frame" href="themeanimationitem.html#frame" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="frame() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frameCount" fullname="ThemeAnimationItem::frameCount" href="themeanimationitem.html#frameCount" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="frameCount() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="ThemeAnimationItem::start" href="themeanimationitem.html#start" location="themedview.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="start()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="ThemeAnimationItem::stop" href="themeanimationitem.html#stop" location="themedview.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="stop()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="advance" fullname="ThemeAnimationItem::advance" href="themeanimationitem.html#advance" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="advance()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="ThemeLevelItem" href="themelevelitem.html" location="themedview.h" bases="ThemeAnimationItem" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ThemeLevelItem" fullname="ThemeLevelItem::ThemeLevelItem" href="themelevelitem.html#ThemeLevelItem" location="themedview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ThemeLevelItem(ThemeItem * parent, ThemedView * view, const ThemeAttributes &amp; atts)">
                <parameter left="ThemeItem *" right="" name="parent" default=""></parameter>
                <parameter left="ThemedView *" right="" name="view" default=""></parameter>
                <parameter left="const ThemeAttributes &amp;" right="" name="atts" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ThemeLevelItem" fullname="ThemeLevelItem::~ThemeLevelItem" href="themelevelitem.html#dtor.ThemeLevelItem" location="themedview.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~ThemeLevelItem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setValue" fullname="ThemeLevelItem::setValue" href="themelevelitem.html#setValue" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setValue(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRange" fullname="ThemeLevelItem::setRange" href="themelevelitem.html#setRange" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRange(int min, int max)">
                <parameter left="int" right="" name="min" default=""></parameter>
                <parameter left="int" right="" name="max" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="ThemeLevelItem::value" href="themelevelitem.html#value" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="value() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="minValue" fullname="ThemeLevelItem::minValue" href="themelevelitem.html#minValue" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="minValue() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="maxValue" fullname="ThemeLevelItem::maxValue" href="themelevelitem.html#maxValue" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="maxValue() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="ThemeStatusItem" href="themestatusitem.html" location="themedview.h" bases="ThemePixmapItem" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ThemeStatusItem" fullname="ThemeStatusItem::ThemeStatusItem" href="themestatusitem.html#ThemeStatusItem" location="themedview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ThemeStatusItem(ThemeItem * parent, ThemedView * view, const ThemeAttributes &amp; atts)">
                <parameter left="ThemeItem *" right="" name="parent" default=""></parameter>
                <parameter left="ThemedView *" right="" name="view" default=""></parameter>
                <parameter left="const ThemeAttributes &amp;" right="" name="atts" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ThemeStatusItem" fullname="ThemeStatusItem::~ThemeStatusItem" href="themestatusitem.html#dtor.ThemeStatusItem" location="themedview.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~ThemeStatusItem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOn" fullname="ThemeStatusItem::setOn" href="themestatusitem.html#setOn" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setOn(bool on)">
                <parameter left="bool" right="" name="on" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isOn" fullname="ThemeStatusItem::isOn" href="themestatusitem.html#isOn" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isOn() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="ThemeImageItem" href="themeimageitem.html" location="themedview.h" bases="ThemePixmapItem" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ThemeImageItem" fullname="ThemeImageItem::ThemeImageItem" href="themeimageitem.html#ThemeImageItem" location="themedview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ThemeImageItem(ThemeItem * parent, ThemedView * view, const ThemeAttributes &amp; atts)">
                <parameter left="ThemeItem *" right="" name="parent" default=""></parameter>
                <parameter left="ThemedView *" right="" name="view" default=""></parameter>
                <parameter left="const ThemeAttributes &amp;" right="" name="atts" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ThemeImageItem" fullname="ThemeImageItem::~ThemeImageItem" href="themeimageitem.html#dtor.ThemeImageItem" location="themedview.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~ThemeImageItem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setImage" fullname="ThemeImageItem::setImage" href="themeimageitem.html#setImage" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setImage(const QPixmap &amp; pixImage, ThemeItem::State state)">
                <parameter left="const QPixmap &amp;" right="" name="pixImage" default=""></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="image" fullname="ThemeImageItem::image" href="themeimageitem.html#image" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPixmap" signature="image(ThemeItem::State state) const">
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::Default"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateDefaultImage" fullname="ThemeImageItem::updateDefaultImage" href="themeimageitem.html#updateDefaultImage" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="updateDefaultImage()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="ThemeWidgetItem" href="themewidgetitem.html" location="themedview.h" bases="ThemeGraphicItem" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ThemeWidgetItem" fullname="ThemeWidgetItem::ThemeWidgetItem" href="themewidgetitem.html#ThemeWidgetItem" location="themedview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ThemeWidgetItem(ThemeItem * parent, ThemedView * view, const ThemeAttributes &amp; atts)">
                <parameter left="ThemeItem *" right="" name="parent" default=""></parameter>
                <parameter left="ThemedView *" right="" name="view" default=""></parameter>
                <parameter left="const ThemeAttributes &amp;" right="" name="atts" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ThemeWidgetItem" fullname="ThemeWidgetItem::~ThemeWidgetItem" href="themewidgetitem.html#dtor.ThemeWidgetItem" location="themedview.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~ThemeWidgetItem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setWidget" fullname="ThemeWidgetItem::setWidget" href="themewidgetitem.html#setWidget" location="themedview.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setWidget(QWidget * widget)">
                <parameter left="QWidget *" right="" name="widget" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="widget" fullname="ThemeWidgetItem::widget" href="themewidgetitem.html#widget" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QWidget *" signature="widget() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAutoDelete" fullname="ThemeWidgetItem::setAutoDelete" href="themewidgetitem.html#setAutoDelete" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAutoDelete(bool autodelete)">
                <parameter left="bool" right="" name="autodelete" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="ThemeListItem" href="themelistitem.html" location="themedview.h" bases="ThemeWidgetItem" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ThemeListItem" fullname="ThemeListItem::ThemeListItem" href="themelistitem.html#ThemeListItem" location="themedview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ThemeListItem(ThemeItem * parent, ThemedView * view, const ThemeAttributes &amp; atts)">
                <parameter left="ThemeItem *" right="" name="parent" default=""></parameter>
                <parameter left="ThemedView *" right="" name="view" default=""></parameter>
                <parameter left="const ThemeAttributes &amp;" right="" name="atts" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ThemeListItem" fullname="ThemeListItem::~ThemeListItem" href="themelistitem.html#dtor.ThemeListItem" location="themedview.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~ThemeListItem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="listView" fullname="ThemeListItem::listView" href="themelistitem.html#listView" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QListView *" signature="listView() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setModel" fullname="ThemeListItem::setModel" href="themelistitem.html#setModel" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setModel(ThemeListModel * model)">
                <parameter left="ThemeListModel *" right="" name="model" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="model" fullname="ThemeListItem::model" href="themelistitem.html#model" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="ThemeListModel *" signature="model() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="ThemedView" href="themedview.html" location="themedview.h" bases="QWidget" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="ThemedView::Type" href="themedview.html#Type-enum" location="themedview.h">
                <value name="Item" value="0"></value>
                <value name="Page" value="1"></value>
                <value name="Animation" value="2"></value>
                <value name="Level" value="3"></value>
                <value name="Status" value="4"></value>
                <value name="Image" value="5"></value>
                <value name="Text" value="6"></value>
                <value name="Rect" value="7"></value>
                <value name="Line" value="8"></value>
                <value name="Plugin" value="9"></value>
                <value name="Exclusive" value="10"></value>
                <value name="Layout" value="11"></value>
                <value name="Group" value="12"></value>
                <value name="Widget" value="13"></value>
                <value name="List" value="14"></value>
                <value name="Template" value="15"></value>
                <value name="TemplateInstance" value="16"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="ThemedView" fullname="ThemedView::ThemedView" href="themedview.html#ThemedView" location="themedview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ThemedView(QWidget * parent, Qt::WFlags f)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
                <parameter left="Qt::WFlags" right="" name="f" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ThemedView" fullname="ThemedView::~ThemedView" href="themedview.html#dtor.ThemedView" location="themedview.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~ThemedView()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sourceLoaded" fullname="ThemedView::sourceLoaded" href="themedview.html#sourceLoaded" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="sourceLoaded() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="loadSource" fullname="ThemedView::loadSource" href="themedview.html#loadSource" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="loadSource(const QString &amp; fileName)">
                <parameter left="const QString &amp;" right="" name="fileName" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSourceFile" fullname="ThemedView::setSourceFile" href="themedview.html#setSourceFile" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSourceFile(const QString &amp; fileName)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="findItems" fullname="ThemedView::findItems" href="themedview.html#findItems" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;ThemeItem *&gt;" signature="findItems(const QString &amp; name, ThemedView::Type type, ThemeItem::State state) const">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="ThemedView::Type" right="" name="type" default="ThemedView::Item"></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::All"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="findItem" fullname="ThemedView::findItem" href="themedview.html#findItem" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="ThemeItem *" signature="findItem(const QString &amp; name, ThemedView::Type type, ThemeItem::State state) const">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="ThemedView::Type" right="" name="type" default="ThemedView::Item"></parameter>
                <parameter left="ThemeItem::State" right="" name="state" default="ThemeItem::All"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="findItems" fullname="ThemedView::findItems" href="themedview.html#findItems-2" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QList&lt;ThemeItem *&gt;" signature="findItems(const QString &amp; name, int type, int state) const">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="int" right="" name="type" default=""></parameter>
                <parameter left="int" right="" name="state" default="ThemeItem::All"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="findItem" fullname="ThemedView::findItem" href="themedview.html#findItem-2" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="ThemeItem *" signature="findItem(const QString &amp; name, int type, int state) const">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="int" right="" name="type" default=""></parameter>
                <parameter left="int" right="" name="state" default="ThemeItem::All"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="themeName" fullname="ThemedView::themeName" href="themedview.html#themeName" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="themeName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setThemeName" fullname="ThemedView::setThemeName" href="themedview.html#setThemeName" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setThemeName(const QString &amp; themeName)">
                <parameter left="const QString &amp;" right="" name="themeName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pageName" fullname="ThemedView::pageName" href="themedview.html#pageName" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QString" signature="pageName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="base" fullname="ThemedView::base" href="themedview.html#base" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QString" signature="base() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultPics" fullname="ThemedView::defaultPics" href="themedview.html#defaultPics" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QString" signature="defaultPics() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemAt" fullname="ThemedView::itemAt" href="themedview.html#itemAt" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="ThemeItem *" signature="itemAt(const QPoint &amp; pos) const">
                <parameter left="const QPoint &amp;" right="" name="pos" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="newWidget" fullname="ThemedView::newWidget" href="themedview.html#newWidget" location="themedview.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QWidget *" signature="newWidget(ThemeWidgetItem * item, const QString &amp; name)">
                <parameter left="ThemeWidgetItem *" right="" name="item" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setGeometryAndLayout" fullname="ThemedView::setGeometryAndLayout" href="themedview.html#setGeometryAndLayout" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setGeometryAndLayout(const QRect &amp; rect)">
                <parameter left="const QRect &amp;" right="" name="rect" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setGeometryAndLayout" fullname="ThemedView::setGeometryAndLayout" href="themedview.html#setGeometryAndLayout-2" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setGeometryAndLayout(int gx, int gy, int w, int h)">
                <parameter left="int" right="" name="gx" default=""></parameter>
                <parameter left="int" right="" name="gy" default=""></parameter>
                <parameter left="int" right="" name="w" default=""></parameter>
                <parameter left="int" right="" name="h" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="paint" fullname="ThemedView::paint" href="themedview.html#paint" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="paint(QPainter * painter, const QRect &amp; clip, ThemeItem * item)">
                <parameter left="QPainter *" right="" name="painter" default=""></parameter>
                <parameter left="const QRect &amp;" right="" name="clip" default=""></parameter>
                <parameter left="ThemeItem *" right="" name="item" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemPressed" fullname="ThemedView::itemPressed" href="themedview.html#itemPressed" location="themedview.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemPressed(ThemeItem * item)">
                <parameter left="ThemeItem *" right="" name="item" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemReleased" fullname="ThemedView::itemReleased" href="themedview.html#itemReleased" location="themedview.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemReleased(ThemeItem * item)">
                <parameter left="ThemeItem *" right="" name="item" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemClicked" fullname="ThemedView::itemClicked" href="themedview.html#itemClicked" location="themedview.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemClicked(ThemeItem * item)">
                <parameter left="ThemeItem *" right="" name="item" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="visibilityChanged" fullname="ThemedView::visibilityChanged" href="themedview.html#visibilityChanged" location="themedview.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="visibilityChanged(ThemeItem * item, bool visible)">
                <parameter left="ThemeItem *" right="" name="item" default=""></parameter>
                <parameter left="bool" right="" name="visible" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="loaded" fullname="ThemedView::loaded" href="themedview.html#loaded" location="themedview.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="loaded()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="themeLoaded" fullname="ThemedView::themeLoaded" href="themedview.html#themeLoaded" location="themedview.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="themeLoaded(const QString &amp; file)">
                <parameter left="const QString &amp;" right="" name="file" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="layout" fullname="ThemedView::layout" href="themedview.html#layout" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="layout(ThemeItem * item)">
                <parameter left="ThemeItem *" right="" name="item" default="0"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="registerExpression" fullname="ThemedView::registerExpression" href="themedview.html#registerExpression" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="registerExpression(ThemeItem * item, QExpressionEvaluator * expression)">
                <parameter left="ThemeItem *" right="" name="item" default=""></parameter>
                <parameter left="QExpressionEvaluator *" right="" name="expression" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="ThemeListModelEntry" href="themelistmodelentry.html" location="themedview.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ThemeListModelEntry" fullname="ThemeListModelEntry::ThemeListModelEntry" href="themelistmodelentry.html#ThemeListModelEntry" location="themedview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ThemeListModelEntry(ThemeListModel * model)">
                <parameter left="ThemeListModel *" right="" name="model" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ThemeListModelEntry" fullname="ThemeListModelEntry::~ThemeListModelEntry" href="themelistmodelentry.html#dtor.ThemeListModelEntry" location="themedview.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~ThemeListModelEntry()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="uid" fullname="ThemeListModelEntry::uid" href="themelistmodelentry.html#uid" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="uid()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="ThemeListModelEntry::type" href="themelistmodelentry.html#type" location="themedview.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="type() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setValue" fullname="ThemeListModelEntry::setValue" href="themelistmodelentry.html#setValue" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setValue(const QString &amp; key, const QVariant &amp; value)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="ThemeListModelEntry::value" href="themelistmodelentry.html#value" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QVariant" signature="value(const QString &amp; key)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="model" fullname="ThemeListModelEntry::model" href="themelistmodelentry.html#model" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="ThemeListModel *" signature="model() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="templateInstance" fullname="ThemeListModelEntry::templateInstance" href="themelistmodelentry.html#templateInstance" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="ThemeTemplateInstanceItem *" signature="templateInstance()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="ThemeListModel" href="themelistmodel.html" location="themedview.h" bases="QAbstractListModel" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ThemeListModel" fullname="ThemeListModel::ThemeListModel" href="themelistmodel.html#ThemeListModel" location="themedview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ThemeListModel(QObject * parent, ThemeListItem * listItem, ThemedView * view)">
                <parameter left="QObject *" right="" name="parent" default=""></parameter>
                <parameter left="ThemeListItem *" right="" name="listItem" default=""></parameter>
                <parameter left="ThemedView *" right="" name="view" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ThemeListModel" fullname="ThemeListModel::~ThemeListModel" href="themelistmodel.html#dtor.ThemeListModel" location="themedview.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~ThemeListModel()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="listItem" fullname="ThemeListModel::listItem" href="themelistmodel.html#listItem" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="ThemeListItem *" signature="listItem() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="themedView" fullname="ThemeListModel::themedView" href="themelistmodel.html#themedView" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="ThemedView *" signature="themedView() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="entryIndex" fullname="ThemeListModel::entryIndex" href="themelistmodel.html#entryIndex" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QModelIndex" signature="entryIndex(const ThemeListModelEntry * entry) const">
                <parameter left="const ThemeListModelEntry *" right="" name="entry" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="themeListModelEntry" fullname="ThemeListModel::themeListModelEntry" href="themelistmodel.html#themeListModelEntry" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="ThemeListModelEntry *" signature="themeListModelEntry(const QModelIndex &amp; index) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addEntry" fullname="ThemeListModel::addEntry" href="themelistmodel.html#addEntry" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addEntry(ThemeListModelEntry * item)">
                <parameter left="ThemeListModelEntry *" right="" name="item" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeEntry" fullname="ThemeListModel::removeEntry" href="themelistmodel.html#removeEntry" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeEntry(const QModelIndex &amp; index)">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="ThemeListModel::clear" href="themelistmodel.html#clear" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="triggerUpdate" fullname="ThemeListModel::triggerUpdate" href="themelistmodel.html#triggerUpdate" location="themedview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="triggerUpdate()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="items" fullname="ThemeListModel::items" href="themelistmodel.html#items" location="themedview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;ThemeListModelEntry *&gt;" signature="items() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothL2CapDatagramSocket" href="qbluetoothl2capdatagramsocket.html" location="qbluetoothl2capdatagramsocket.h" bases="QBluetoothAbstractSocket" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothL2CapDatagramSocket" fullname="QBluetoothL2CapDatagramSocket::QBluetoothL2CapDatagramSocket" href="qbluetoothl2capdatagramsocket.html#QBluetoothL2CapDatagramSocket" location="qbluetoothl2capdatagramsocket.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothL2CapDatagramSocket(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothL2CapDatagramSocket" fullname="QBluetoothL2CapDatagramSocket::~QBluetoothL2CapDatagramSocket" href="qbluetoothl2capdatagramsocket.html#dtor.QBluetoothL2CapDatagramSocket" location="qbluetoothl2capdatagramsocket.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothL2CapDatagramSocket()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connect" fullname="QBluetoothL2CapDatagramSocket::connect" href="qbluetoothl2capdatagramsocket.html#connect" location="qbluetoothl2capdatagramsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="connect(const QBluetoothAddress &amp; local, const QBluetoothAddress &amp; remote, int psm, int incomingMtu, int outgoingMtu)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="local" default=""></parameter>
                <parameter left="const QBluetoothAddress &amp;" right="" name="remote" default=""></parameter>
                <parameter left="int" right="" name="psm" default=""></parameter>
                <parameter left="int" right="" name="incomingMtu" default="672"></parameter>
                <parameter left="int" right="" name="outgoingMtu" default="672"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remoteAddress" fullname="QBluetoothL2CapDatagramSocket::remoteAddress" href="qbluetoothl2capdatagramsocket.html#remoteAddress" location="qbluetoothl2capdatagramsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothAddress" signature="remoteAddress() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localAddress" fullname="QBluetoothL2CapDatagramSocket::localAddress" href="qbluetoothl2capdatagramsocket.html#localAddress" location="qbluetoothl2capdatagramsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothAddress" signature="localAddress() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remotePsm" fullname="QBluetoothL2CapDatagramSocket::remotePsm" href="qbluetoothl2capdatagramsocket.html#remotePsm" location="qbluetoothl2capdatagramsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="remotePsm() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localPsm" fullname="QBluetoothL2CapDatagramSocket::localPsm" href="qbluetoothl2capdatagramsocket.html#localPsm" location="qbluetoothl2capdatagramsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="localPsm() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEncrypted" fullname="QBluetoothL2CapDatagramSocket::isEncrypted" href="qbluetoothl2capdatagramsocket.html#isEncrypted" location="qbluetoothl2capdatagramsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEncrypted() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAuthenticated" fullname="QBluetoothL2CapDatagramSocket::isAuthenticated" href="qbluetoothl2capdatagramsocket.html#isAuthenticated" location="qbluetoothl2capdatagramsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isAuthenticated() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="securityOptions" fullname="QBluetoothL2CapDatagramSocket::securityOptions" href="qbluetoothl2capdatagramsocket.html#securityOptions" location="qbluetoothl2capdatagramsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetooth::SecurityOptions" signature="securityOptions() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSecurityOptions" fullname="QBluetoothL2CapDatagramSocket::setSecurityOptions" href="qbluetoothl2capdatagramsocket.html#setSecurityOptions" location="qbluetoothl2capdatagramsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setSecurityOptions(QFlags&lt;QBluetooth::SecurityOption&gt; options)">
                <parameter left="QFlags&lt;QBluetooth::SecurityOption&gt;" right="" name="options" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="incomingMtu" fullname="QBluetoothL2CapDatagramSocket::incomingMtu" href="qbluetoothl2capdatagramsocket.html#incomingMtu" location="qbluetoothl2capdatagramsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="incomingMtu() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="outgoingMtu" fullname="QBluetoothL2CapDatagramSocket::outgoingMtu" href="qbluetoothl2capdatagramsocket.html#outgoingMtu" location="qbluetoothl2capdatagramsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="outgoingMtu() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bind" fullname="QBluetoothL2CapDatagramSocket::bind" href="qbluetoothl2capdatagramsocket.html#bind" location="qbluetoothl2capdatagramsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="bind(const QBluetoothAddress &amp; local, int psm, int mtu)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="local" default=""></parameter>
                <parameter left="int" right="" name="psm" default=""></parameter>
                <parameter left="int" right="" name="mtu" default="672"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readDatagram" fullname="QBluetoothL2CapDatagramSocket::readDatagram" href="qbluetoothl2capdatagramsocket.html#readDatagram" location="qbluetoothl2capdatagramsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="qint64" signature="readDatagram(char * data, qint64 maxSize, QBluetoothAddress * address, int * psm)">
                <parameter left="char *" right="" name="data" default=""></parameter>
                <parameter left="qint64" right="" name="maxSize" default=""></parameter>
                <parameter left="QBluetoothAddress *" right="" name="address" default="0"></parameter>
                <parameter left="int *" right="" name="psm" default="0"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaStyle" href="qtopiastyle.html" location="qtopiastyle.h" bases="QWindowsStyle" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaStyle" fullname="QtopiaStyle::QtopiaStyle" href="qtopiastyle.html#QtopiaStyle" location="qtopiastyle.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtopiaStyle()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtopiaStyle" fullname="QtopiaStyle::~QtopiaStyle" href="qtopiastyle.html#dtor.QtopiaStyle" location="qtopiastyle.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtopiaStyle()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="drawRoundRect" fullname="QtopiaStyle::drawRoundRect" href="qtopiastyle.html#drawRoundRect" location="qtopiastyle.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="drawRoundRect(QPainter * painter, const QRect &amp; r, int xRnd, int yRnd)">
                <parameter left="QPainter *" right="" name="painter" default=""></parameter>
                <parameter left="const QRect &amp;" right="" name="r" default=""></parameter>
                <parameter left="int" right="" name="xRnd" default=""></parameter>
                <parameter left="int" right="" name="yRnd" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="drawRoundRect" fullname="QtopiaStyle::drawRoundRect" href="qtopiastyle.html#drawRoundRect-2" location="qtopiastyle.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="void" signature="drawRoundRect(QPainter * painter, const QRectF &amp; r, int xRnd, int yRnd)">
                <parameter left="QPainter *" right="" name="painter" default=""></parameter>
                <parameter left="const QRectF &amp;" right="" name="r" default=""></parameter>
                <parameter left="int" right="" name="xRnd" default=""></parameter>
                <parameter left="int" right="" name="yRnd" default=""></parameter>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d" fullname="QtopiaStyle::d" href="qtopiastyle.html#d-var" location="qtopiastyle.h" type="QtopiaStylePrivate *" static="false"></variable>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemServiceNumbers" href="qmodemservicenumbers.html" location="qmodemservicenumbers.h" bases="QServiceNumbers" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemServiceNumbers" fullname="QModemServiceNumbers::QModemServiceNumbers" href="qmodemservicenumbers.html#QModemServiceNumbers" location="qmodemservicenumbers.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemServiceNumbers(QModemService * service)">
                <parameter left="QModemService *" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemServiceNumbers" fullname="QModemServiceNumbers::~QModemServiceNumbers" href="qmodemservicenumbers.html#dtor.QModemServiceNumbers" location="qmodemservicenumbers.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemServiceNumbers()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="requestServiceNumberFromFile" fullname="QModemServiceNumbers::requestServiceNumberFromFile" href="qmodemservicenumbers.html#requestServiceNumberFromFile" location="qmodemservicenumbers.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="requestServiceNumberFromFile(QServiceNumbers::NumberId id)">
                <parameter left="QServiceNumbers::NumberId" right="" name="id" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setServiceNumberInFile" fullname="QModemServiceNumbers::setServiceNumberInFile" href="qmodemservicenumbers.html#setServiceNumberInFile" location="qmodemservicenumbers.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setServiceNumberInFile(QServiceNumbers::NumberId id, const QString &amp; number)">
                <parameter left="QServiceNumbers::NumberId" right="" name="id" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QCommServiceManager" href="qcommservicemanager.html" location="qcommservicemanager.h" bases="QAbstractIpcInterfaceGroupManager" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QCommServiceManager" fullname="QCommServiceManager::QCommServiceManager" href="qcommservicemanager.html#QCommServiceManager" location="qcommservicemanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCommServiceManager(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCommServiceManager" fullname="QCommServiceManager::~QCommServiceManager" href="qcommservicemanager.html#dtor.QCommServiceManager" location="qcommservicemanager.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCommServiceManager()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="services" fullname="QCommServiceManager::services" href="qcommservicemanager.html#services" location="qcommservicemanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="services() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="servicesChanged" fullname="QCommServiceManager::servicesChanged" href="qcommservicemanager.html#servicesChanged" location="qcommservicemanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="servicesChanged()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serviceAdded" fullname="QCommServiceManager::serviceAdded" href="qcommservicemanager.html#serviceAdded" location="qcommservicemanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="serviceAdded(const QString &amp; service)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serviceRemoved" fullname="QCommServiceManager::serviceRemoved" href="qcommservicemanager.html#serviceRemoved" location="qcommservicemanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="serviceRemoved(const QString &amp; service)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="TimeUpdateService" href="timeupdateservice.html" location="timeupdateservice.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="updateFromExternalSources" fullname="TimeUpdateService::updateFromExternalSources" href="timeupdateservice.html#updateFromExternalSources" location="timeupdateservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="updateFromExternalSources(bool autotz, bool autotm, bool ask_tz, bool ask_time)">
                <parameter left="bool" right="" name="autotz" default=""></parameter>
                <parameter left="bool" right="" name="autotm" default=""></parameter>
                <parameter left="bool" right="" name="ask_tz" default=""></parameter>
                <parameter left="bool" right="" name="ask_time" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="storeExternalSource" fullname="TimeUpdateService::storeExternalSource" href="timeupdateservice.html#storeExternalSource" location="timeupdateservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="storeExternalSource(QString sourceid, uint time, int time_zone, int dstoffset)">
                <parameter left="QString" right="" name="sourceid" default=""></parameter>
                <parameter left="uint" right="" name="time" default=""></parameter>
                <parameter left="int" right="" name="time_zone" default=""></parameter>
                <parameter left="int" right="" name="dstoffset" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QObexFolderListingEntryInfo" href="qobexfolderlistingentryinfo.html" location="qobexfolderlistingentryinfo.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Permission" fullname="QObexFolderListingEntryInfo::Permission" href="qobexfolderlistingentryinfo.html#Permission-enum" location="qobexfolderlistingentryinfo.h" typedef="QObexFolderListingEntryInfo::Permissions">
                <value name="ReadOwner" value="0400"></value>
                <value name="WriteOwner" value="0200"></value>
                <value name="DeleteOwner" value="0100"></value>
                <value name="ReadGroup" value="0040"></value>
                <value name="WriteGroup" value="0020"></value>
                <value name="DeleteGroup" value="0010"></value>
                <value name="ReadOther" value="0004"></value>
                <value name="WriteOther" value="0002"></value>
                <value name="DeleteOther" value="0001"></value>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="Permissions" fullname="QObexFolderListingEntryInfo::Permissions" href="qobexfolderlistingentryinfo.html#Permissions-typedef" location="qobexfolderlistingentryinfo.h" enum="QObexFolderListingEntryInfo::Permission"></typedef>
            <function access="public" threadsafety="unspecified" status="commendable" name="QObexFolderListingEntryInfo" fullname="QObexFolderListingEntryInfo::QObexFolderListingEntryInfo" href="qobexfolderlistingentryinfo.html#QObexFolderListingEntryInfo" location="qobexfolderlistingentryinfo.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QObexFolderListingEntryInfo()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QObexFolderListingEntryInfo" fullname="QObexFolderListingEntryInfo::~QObexFolderListingEntryInfo" href="qobexfolderlistingentryinfo.html#dtor.QObexFolderListingEntryInfo" location="qobexfolderlistingentryinfo.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QObexFolderListingEntryInfo()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QObexFolderListingEntryInfo" fullname="QObexFolderListingEntryInfo::QObexFolderListingEntryInfo" href="qobexfolderlistingentryinfo.html#QObexFolderListingEntryInfo-2" location="qobexfolderlistingentryinfo.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QObexFolderListingEntryInfo(const QObexFolderListingEntryInfo &amp; other)">
                <parameter left="const QObexFolderListingEntryInfo &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QObexFolderListingEntryInfo::operator=" href="qobexfolderlistingentryinfo.html#operator=" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QObexFolderListingEntryInfo &amp;" signature="operator=(const QObexFolderListingEntryInfo &amp; other)">
                <parameter left="const QObexFolderListingEntryInfo &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QObexFolderListingEntryInfo::isValid" href="qobexfolderlistingentryinfo.html#isValid" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QObexFolderListingEntryInfo::name" href="qobexfolderlistingentryinfo.html#name" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setName" fullname="QObexFolderListingEntryInfo::setName" href="qobexfolderlistingentryinfo.html#setName" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setName(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="size" fullname="QObexFolderListingEntryInfo::size" href="qobexfolderlistingentryinfo.html#size" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="size() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSize" fullname="QObexFolderListingEntryInfo::setSize" href="qobexfolderlistingentryinfo.html#setSize" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSize(qint64 size)">
                <parameter left="qint64" right="" name="size" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lastModified" fullname="QObexFolderListingEntryInfo::lastModified" href="qobexfolderlistingentryinfo.html#lastModified" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="lastModified() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLastModified" fullname="QObexFolderListingEntryInfo::setLastModified" href="qobexfolderlistingentryinfo.html#setLastModified" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLastModified(const QDateTime &amp; lastModified)">
                <parameter left="const QDateTime &amp;" right="" name="lastModified" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="created" fullname="QObexFolderListingEntryInfo::created" href="qobexfolderlistingentryinfo.html#created" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="created() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCreated" fullname="QObexFolderListingEntryInfo::setCreated" href="qobexfolderlistingentryinfo.html#setCreated" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCreated(const QDateTime &amp; timeCreated)">
                <parameter left="const QDateTime &amp;" right="" name="timeCreated" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lastRead" fullname="QObexFolderListingEntryInfo::lastRead" href="qobexfolderlistingentryinfo.html#lastRead" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="lastRead() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLastRead" fullname="QObexFolderListingEntryInfo::setLastRead" href="qobexfolderlistingentryinfo.html#setLastRead" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLastRead(const QDateTime &amp; lastRead)">
                <parameter left="const QDateTime &amp;" right="" name="lastRead" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFolder" fullname="QObexFolderListingEntryInfo::isFolder" href="qobexfolderlistingentryinfo.html#isFolder" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFolder() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFolder" fullname="QObexFolderListingEntryInfo::setFolder" href="qobexfolderlistingentryinfo.html#setFolder" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFolder(bool b)">
                <parameter left="bool" right="" name="b" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFile" fullname="QObexFolderListingEntryInfo::isFile" href="qobexfolderlistingentryinfo.html#isFile" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFile() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFile" fullname="QObexFolderListingEntryInfo::setFile" href="qobexfolderlistingentryinfo.html#setFile" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFile(bool b)">
                <parameter left="bool" right="" name="b" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isParent" fullname="QObexFolderListingEntryInfo::isParent" href="qobexfolderlistingentryinfo.html#isParent" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isParent() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setParent" fullname="QObexFolderListingEntryInfo::setParent" href="qobexfolderlistingentryinfo.html#setParent" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setParent(bool b)">
                <parameter left="bool" right="" name="b" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPermissions" fullname="QObexFolderListingEntryInfo::setPermissions" href="qobexfolderlistingentryinfo.html#setPermissions" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPermissions(QFlags&lt;QObexFolderListingEntryInfo::Permission&gt; permissions)">
                <parameter left="QFlags&lt;QObexFolderListingEntryInfo::Permission&gt;" right="" name="permissions" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="permissions" fullname="QObexFolderListingEntryInfo::permissions" href="qobexfolderlistingentryinfo.html#permissions" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Permissions" signature="permissions() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="owner" fullname="QObexFolderListingEntryInfo::owner" href="qobexfolderlistingentryinfo.html#owner" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="owner() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOwner" fullname="QObexFolderListingEntryInfo::setOwner" href="qobexfolderlistingentryinfo.html#setOwner" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setOwner(const QString &amp; owner)">
                <parameter left="const QString &amp;" right="" name="owner" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="group" fullname="QObexFolderListingEntryInfo::group" href="qobexfolderlistingentryinfo.html#group" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="group() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setGroup" fullname="QObexFolderListingEntryInfo::setGroup" href="qobexfolderlistingentryinfo.html#setGroup" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setGroup(const QString &amp; group)">
                <parameter left="const QString &amp;" right="" name="group" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QObexFolderListingEntryInfo::type" href="qobexfolderlistingentryinfo.html#type" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="type() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setType" fullname="QObexFolderListingEntryInfo::setType" href="qobexfolderlistingentryinfo.html#setType" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setType(const QString &amp; mimetype)">
                <parameter left="const QString &amp;" right="" name="mimetype" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="description" fullname="QObexFolderListingEntryInfo::description" href="qobexfolderlistingentryinfo.html#description" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="description() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDescription" fullname="QObexFolderListingEntryInfo::setDescription" href="qobexfolderlistingentryinfo.html#setDescription" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDescription(const QString &amp; description)">
                <parameter left="const QString &amp;" right="" name="description" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="extensionAttributes" fullname="QObexFolderListingEntryInfo::extensionAttributes" href="qobexfolderlistingentryinfo.html#extensionAttributes" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QString&gt;" signature="extensionAttributes() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExtensionAttributes" fullname="QObexFolderListingEntryInfo::setExtensionAttributes" href="qobexfolderlistingentryinfo.html#setExtensionAttributes" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setExtensionAttributes(const QMap&lt;QString, QString&gt; &amp; attributes)">
                <parameter left="const QMap&lt;QString, QString&gt; &amp;" right="" name="attributes" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QObexFolderListingEntryInfo::operator==" href="qobexfolderlistingentryinfo.html#operator==" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QObexFolderListingEntryInfo &amp; info) const">
                <parameter left="const QObexFolderListingEntryInfo &amp;" right="" name="info" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QObexFolderListingEntryInfo::operator!=" href="qobexfolderlistingentryinfo.html#operator!=" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QObexFolderListingEntryInfo &amp; info) const">
                <parameter left="const QObexFolderListingEntryInfo &amp;" right="" name="info" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="createFolder" fullname="QObexFolderListingEntryInfo::createFolder" href="qobexfolderlistingentryinfo.html#createFolder" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QObexFolderListingEntryInfo" signature="createFolder(const QString &amp; name, qint64 size, const QDateTime &amp; lastModified, const QDateTime &amp; lastAccessed, const QDateTime &amp; timeCreated, QFlags&lt;QObexFolderListingEntryInfo::Permission&gt; permissions, const QString &amp; owner, const QString &amp; group, const QString &amp; description, const ExtensionAttributes &amp; extensionAttributes)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="qint64" right="" name="size" default=""></parameter>
                <parameter left="const QDateTime &amp;" right="" name="lastModified" default=""></parameter>
                <parameter left="const QDateTime &amp;" right="" name="lastAccessed" default=""></parameter>
                <parameter left="const QDateTime &amp;" right="" name="timeCreated" default=""></parameter>
                <parameter left="QFlags&lt;QObexFolderListingEntryInfo::Permission&gt;" right="" name="permissions" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="owner" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="group" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="description" default="QString()"></parameter>
                <parameter left="const ExtensionAttributes &amp;" right="" name="extensionAttributes" default="ExtensionAttributes()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="createParent" fullname="QObexFolderListingEntryInfo::createParent" href="qobexfolderlistingentryinfo.html#createParent" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QObexFolderListingEntryInfo" signature="createParent()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="createFile" fullname="QObexFolderListingEntryInfo::createFile" href="qobexfolderlistingentryinfo.html#createFile" location="qobexfolderlistingentryinfo.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QObexFolderListingEntryInfo" signature="createFile(const QString &amp; name, qint64 size, const QDateTime &amp; lastModified, const QDateTime &amp; lastAccessed, const QDateTime &amp; timeCreated, QFlags&lt;QObexFolderListingEntryInfo::Permission&gt; permissions, const QString &amp; owner, const QString &amp; group, const QString &amp; mimetype, const QString &amp; description, const ExtensionAttributes &amp; extensionAttributes)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="qint64" right="" name="size" default=""></parameter>
                <parameter left="const QDateTime &amp;" right="" name="lastModified" default=""></parameter>
                <parameter left="const QDateTime &amp;" right="" name="lastAccessed" default=""></parameter>
                <parameter left="const QDateTime &amp;" right="" name="timeCreated" default=""></parameter>
                <parameter left="QFlags&lt;QObexFolderListingEntryInfo::Permission&gt;" right="" name="permissions" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="owner" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="group" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="mimetype" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="description" default="QString()"></parameter>
                <parameter left="const ExtensionAttributes &amp;" right="" name="extensionAttributes" default="ExtensionAttributes()"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSpeedDialList" href="qspeeddiallist.html" location="qspeeddial.h" bases="QListView" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="count" fullname="QSpeedDialList::count" href="qspeeddiallist.html#count-prop" location="qspeeddial.h" type="int">
                <getter name="count"></getter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="currentRow" fullname="QSpeedDialList::currentRow" href="qspeeddiallist.html#currentRow-prop" location="qspeeddial.h" type="int">
                <getter name="currentRow"></getter>
                <setter name="setCurrentRow"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="currentInput" fullname="QSpeedDialList::currentInput" href="qspeeddiallist.html#currentInput-prop" location="qspeeddial.h" type="QString">
                <getter name="currentInput"></getter>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSpeedDialList" fullname="QSpeedDialList::QSpeedDialList" href="qspeeddiallist.html#QSpeedDialList" location="qspeeddial.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSpeedDialList(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSpeedDialList" fullname="QSpeedDialList::~QSpeedDialList" href="qspeeddiallist.html#dtor.QSpeedDialList" location="qspeeddial.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSpeedDialList()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentInput" fullname="QSpeedDialList::currentInput" href="qspeeddiallist.html#currentInput-prop" location="qspeeddial.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="currentInput" type="QString" signature="currentInput() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCurrentInput" fullname="QSpeedDialList::setCurrentInput" href="qspeeddiallist.html#setCurrentInput" location="qspeeddial.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCurrentInput(const QString &amp; input)">
                <parameter left="const QString &amp;" right="" name="input" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rowInput" fullname="QSpeedDialList::rowInput" href="qspeeddiallist.html#rowInput" location="qspeeddial.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="rowInput(int row) const">
                <parameter left="int" right="" name="row" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCurrentRow" fullname="QSpeedDialList::setCurrentRow" href="qspeeddiallist.html#currentRow-prop" location="qspeeddial.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="currentRow" type="void" signature="setCurrentRow(int row)">
                <parameter left="int" right="" name="row" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentRow" fullname="QSpeedDialList::currentRow" href="qspeeddiallist.html#currentRow-prop" location="qspeeddial.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="currentRow" type="int" signature="currentRow() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="count" fullname="QSpeedDialList::count" href="qspeeddiallist.html#count-prop" location="qspeeddial.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="count" type="int" signature="count() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBlankSetEnabled" fullname="QSpeedDialList::setBlankSetEnabled" href="qspeeddiallist.html#setBlankSetEnabled" location="qspeeddial.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBlankSetEnabled(bool on)">
                <parameter left="bool" right="" name="on" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isBlankSetEnabled" fullname="QSpeedDialList::isBlankSetEnabled" href="qspeeddiallist.html#isBlankSetEnabled" location="qspeeddial.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isBlankSetEnabled() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="reload" fullname="QSpeedDialList::reload" href="qspeeddiallist.html#reload" location="qspeeddial.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="reload(const QString &amp; input)">
                <parameter left="const QString &amp;" right="" name="input" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="editItem" fullname="QSpeedDialList::editItem" href="qspeeddiallist.html#editItem" location="qspeeddial.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="editItem(int row)">
                <parameter left="int" right="" name="row" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="editItem" fullname="QSpeedDialList::editItem" href="qspeeddiallist.html#editItem-2" location="qspeeddial.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="editItem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearItem" fullname="QSpeedDialList::clearItem" href="qspeeddiallist.html#clearItem" location="qspeeddial.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="clearItem(int row)">
                <parameter left="int" right="" name="row" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearItem" fullname="QSpeedDialList::clearItem" href="qspeeddiallist.html#clearItem-2" location="qspeeddial.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="clearItem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentRowChanged" fullname="QSpeedDialList::currentRowChanged" href="qspeeddiallist.html#currentRowChanged" location="qspeeddial.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="currentRowChanged(int row)">
                <parameter left="int" right="" name="row" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rowClicked" fullname="QSpeedDialList::rowClicked" href="qspeeddiallist.html#rowClicked" location="qspeeddial.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="rowClicked(int row)">
                <parameter left="int" right="" name="row" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemSelected" fullname="QSpeedDialList::itemSelected" href="qspeeddiallist.html#itemSelected" location="qspeeddial.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemSelected(QString input)">
                <parameter left="QString" right="" name="input" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSpeedDial" href="qspeeddial.html" location="qspeeddial.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="addWithDialog" fullname="QSpeedDial::addWithDialog" href="qspeeddial.html#addWithDialog" location="qspeeddial.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="addWithDialog(const QString &amp; label, const QString &amp; icon, const QtopiaServiceRequest &amp; action, QWidget * parent)">
                <parameter left="const QString &amp;" right="" name="label" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="icon" default=""></parameter>
                <parameter left="const QtopiaServiceRequest &amp;" right="" name="action" default=""></parameter>
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectWithDialog" fullname="QSpeedDial::selectWithDialog" href="qspeeddial.html#selectWithDialog" location="qspeeddial.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="selectWithDialog(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="assignedInputs" fullname="QSpeedDial::assignedInputs" href="qspeeddial.html#assignedInputs" location="qspeeddial.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QString&gt;" signature="assignedInputs()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="possibleInputs" fullname="QSpeedDial::possibleInputs" href="qspeeddial.html#possibleInputs" location="qspeeddial.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QString&gt;" signature="possibleInputs()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="find" fullname="QSpeedDial::find" href="qspeeddial.html#find" location="qspeeddial.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QtopiaServiceDescription *" signature="find(const QString &amp; input)">
                <parameter left="const QString &amp;" right="" name="input" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remove" fullname="QSpeedDial::remove" href="qspeeddial.html#remove" location="qspeeddial.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="remove(const QString &amp; input)">
                <parameter left="const QString &amp;" right="" name="input" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="set" fullname="QSpeedDial::set" href="qspeeddial.html#set" location="qspeeddial.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="set(const QString &amp; input, const QtopiaServiceDescription &amp; r)">
                <parameter left="const QString &amp;" right="" name="input" default=""></parameter>
                <parameter left="const QtopiaServiceDescription &amp;" right="" name="r" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="CallScreen" href="callscreen.html" location="callscreen.h" bases="ThemedView" module=""></class>
        <class access="public" threadsafety="unspecified" status="main" name="QMailViewerPluginInterface" href="qmailviewerplugininterface.html" location="qmailviewerplugin.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="key" fullname="QMailViewerPluginInterface::key" href="qmailviewerplugininterface.html#key" location="qmailviewerplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="key() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSupported" fullname="QMailViewerPluginInterface::isSupported" href="qmailviewerplugininterface.html#isSupported" location="qmailviewerplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSupported(QMailViewerFactory::ContentType type) const">
                <parameter left="QMailViewerFactory::ContentType" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="create" fullname="QMailViewerPluginInterface::create" href="qmailviewerplugininterface.html#create" location="qmailviewerplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QMailViewerInterface *" signature="create(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QMailViewerPlugin" href="qmailviewerplugin.html" location="qmailviewerplugin.h" bases="QObject,QMailViewerPluginInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailViewerPlugin" fullname="QMailViewerPlugin::QMailViewerPlugin" href="qmailviewerplugin.html#QMailViewerPlugin" location="qmailviewerplugin.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMailViewerPlugin()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMailViewerPlugin" fullname="QMailViewerPlugin::~QMailViewerPlugin" href="qmailviewerplugin.html#dtor.QMailViewerPlugin" location="qmailviewerplugin.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMailViewerPlugin()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="keys" fullname="QMailViewerPlugin::keys" href="qmailviewerplugin.html#keys" location="qmailviewerplugin.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="keys() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QObexFtpClient" href="qobexftpclient.html" location="qobexftpclient.h" bases="QObject" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Command" fullname="QObexFtpClient::Command" href="qobexftpclient.html#Command-enum" location="qobexftpclient.h">
                <value name="None" value="0"></value>
                <value name="Connect" value="1"></value>
                <value name="Cd" value="2"></value>
                <value name="CdUp" value="3"></value>
                <value name="List" value="4"></value>
                <value name="Get" value="5"></value>
                <value name="Put" value="6"></value>
                <value name="Mkdir" value="7"></value>
                <value name="Rmdir" value="8"></value>
                <value name="Remove" value="9"></value>
                <value name="Disconnect" value="10"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QObexFtpClient::State" href="qobexftpclient.html#State-enum" location="qobexftpclient.h">
                <value name="Unconnected" value="0"></value>
                <value name="Connecting" value="1"></value>
                <value name="Connected" value="2"></value>
                <value name="Disconnecting" value="3"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QObexFtpClient::Error" href="qobexftpclient.html#Error-enum" location="qobexftpclient.h">
                <value name="NoError" value="0"></value>
                <value name="RequestFailed" value="1"></value>
                <value name="InvalidRequest" value="2"></value>
                <value name="InvalidResponse" value="3"></value>
                <value name="ListingParseError" value="4"></value>
                <value name="Aborted" value="5"></value>
                <value name="AuthenticationFailed" value="6"></value>
                <value name="UnknownError" value="100"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QObexFtpClient" fullname="QObexFtpClient::QObexFtpClient" href="qobexftpclient.html#QObexFtpClient" location="qobexftpclient.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QObexFtpClient(QIODevice * device, QObject * parent)">
                <parameter left="QIODevice *" right="" name="device" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QObexFtpClient" fullname="QObexFtpClient::~QObexFtpClient" href="qobexftpclient.html#dtor.QObexFtpClient" location="qobexftpclient.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QObexFtpClient()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sessionDevice" fullname="QObexFtpClient::sessionDevice" href="qobexftpclient.html#sessionDevice" location="qobexftpclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QIODevice *" signature="sessionDevice() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QObexFtpClient::error" href="qobexftpclient.html#error" location="qobexftpclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Error" signature="error() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QObexFtpClient::errorString" href="qobexftpclient.html#errorString" location="qobexftpclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentId" fullname="QObexFtpClient::currentId" href="qobexftpclient.html#currentId" location="qobexftpclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="currentId() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QObexFtpClient::state" href="qobexftpclient.html#state" location="qobexftpclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QObexFtpClient::State" signature="state() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentCommand" fullname="QObexFtpClient::currentCommand" href="qobexftpclient.html#currentCommand" location="qobexftpclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QObexFtpClient::Command" signature="currentCommand() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentDevice" fullname="QObexFtpClient::currentDevice" href="qobexftpclient.html#currentDevice" location="qobexftpclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QIODevice *" signature="currentDevice() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasPendingCommands" fullname="QObexFtpClient::hasPendingCommands" href="qobexftpclient.html#hasPendingCommands" location="qobexftpclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasPendingCommands() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearPendingCommands" fullname="QObexFtpClient::clearPendingCommands" href="qobexftpclient.html#clearPendingCommands" location="qobexftpclient.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearPendingCommands()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lastCommandResponse" fullname="QObexFtpClient::lastCommandResponse" href="qobexftpclient.html#lastCommandResponse" location="qobexftpclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QObex::ResponseCode" signature="lastCommandResponse() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connect" fullname="QObexFtpClient::connect" href="qobexftpclient.html#connect" location="qobexftpclient.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="connect()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="list" fullname="QObexFtpClient::list" href="qobexftpclient.html#list" location="qobexftpclient.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="list(const QString &amp; dir)">
                <parameter left="const QString &amp;" right="" name="dir" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cd" fullname="QObexFtpClient::cd" href="qobexftpclient.html#cd" location="qobexftpclient.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="cd(const QString &amp; dir)">
                <parameter left="const QString &amp;" right="" name="dir" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cdUp" fullname="QObexFtpClient::cdUp" href="qobexftpclient.html#cdUp" location="qobexftpclient.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="cdUp()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mkdir" fullname="QObexFtpClient::mkdir" href="qobexftpclient.html#mkdir" location="qobexftpclient.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="mkdir(const QString &amp; dir)">
                <parameter left="const QString &amp;" right="" name="dir" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rmdir" fullname="QObexFtpClient::rmdir" href="qobexftpclient.html#rmdir" location="qobexftpclient.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="rmdir(const QString &amp; dir)">
                <parameter left="const QString &amp;" right="" name="dir" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="get" fullname="QObexFtpClient::get" href="qobexftpclient.html#get" location="qobexftpclient.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="get(const QString &amp; file, QIODevice * dev)">
                <parameter left="const QString &amp;" right="" name="file" default=""></parameter>
                <parameter left="QIODevice *" right="" name="dev" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="put" fullname="QObexFtpClient::put" href="qobexftpclient.html#put" location="qobexftpclient.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="put(QIODevice * dev, const QString &amp; file, qint64 size, const QString &amp; mimetype, const QString &amp; description, const QDateTime &amp; lastModified)">
                <parameter left="QIODevice *" right="" name="dev" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="file" default=""></parameter>
                <parameter left="qint64" right="" name="size" default="0"></parameter>
                <parameter left="const QString &amp;" right="" name="mimetype" default="QString()"></parameter>
                <parameter left="const QString &amp;" right="" name="description" default="QString()"></parameter>
                <parameter left="const QDateTime &amp;" right="" name="lastModified" default="QDateTime()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="put" fullname="QObexFtpClient::put" href="qobexftpclient.html#put-2" location="qobexftpclient.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="int" signature="put(const QByteArray &amp; data, const QString &amp; file, const QString &amp; mimetype, const QString &amp; description, const QDateTime &amp; lastModified)">
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="file" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="mimetype" default="QString()"></parameter>
                <parameter left="const QString &amp;" right="" name="description" default="QString()"></parameter>
                <parameter left="const QDateTime &amp;" right="" name="lastModified" default="QDateTime()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remove" fullname="QObexFtpClient::remove" href="qobexftpclient.html#remove" location="qobexftpclient.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="remove(const QString &amp; file)">
                <parameter left="const QString &amp;" right="" name="file" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disconnect" fullname="QObexFtpClient::disconnect" href="qobexftpclient.html#disconnect" location="qobexftpclient.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="disconnect()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="read" fullname="QObexFtpClient::read" href="qobexftpclient.html#read" location="qobexftpclient.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="qint64" signature="read(char * data, qint64 maxlen)">
                <parameter left="char *" right="" name="data" default=""></parameter>
                <parameter left="qint64" right="" name="maxlen" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readAll" fullname="QObexFtpClient::readAll" href="qobexftpclient.html#readAll" location="qobexftpclient.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QByteArray" signature="readAll()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bytesAvailable" fullname="QObexFtpClient::bytesAvailable" href="qobexftpclient.html#bytesAvailable" location="qobexftpclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="bytesAvailable() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="abort" fullname="QObexFtpClient::abort" href="qobexftpclient.html#abort" location="qobexftpclient.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="abort()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="listInfo" fullname="QObexFtpClient::listInfo" href="qobexftpclient.html#listInfo" location="qobexftpclient.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="listInfo(const QObexFolderListingEntryInfo &amp; info)">
                <parameter left="const QObexFolderListingEntryInfo &amp;" right="" name="info" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="getInfo" fullname="QObexFtpClient::getInfo" href="qobexftpclient.html#getInfo" location="qobexftpclient.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="getInfo(const QString &amp; mimetype, const QString &amp; description, const QDateTime &amp; lastModified)">
                <parameter left="const QString &amp;" right="" name="mimetype" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="description" default=""></parameter>
                <parameter left="const QDateTime &amp;" right="" name="lastModified" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="done" fullname="QObexFtpClient::done" href="qobexftpclient.html#done" location="qobexftpclient.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="done(bool error)">
                <parameter left="bool" right="" name="error" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dataTransferProgress" fullname="QObexFtpClient::dataTransferProgress" href="qobexftpclient.html#dataTransferProgress" location="qobexftpclient.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="dataTransferProgress(qint64 completed, qint64 total)">
                <parameter left="qint64" right="" name="completed" default=""></parameter>
                <parameter left="qint64" right="" name="total" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="commandFinished" fullname="QObexFtpClient::commandFinished" href="qobexftpclient.html#commandFinished" location="qobexftpclient.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="commandFinished(int id, bool error)">
                <parameter left="int" right="" name="id" default=""></parameter>
                <parameter left="bool" right="" name="error" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="commandStarted" fullname="QObexFtpClient::commandStarted" href="qobexftpclient.html#commandStarted" location="qobexftpclient.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="commandStarted(int id)">
                <parameter left="int" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readyRead" fullname="QObexFtpClient::readyRead" href="qobexftpclient.html#readyRead" location="qobexftpclient.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="readyRead()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QObexFtpClient::stateChanged" href="qobexftpclient.html#stateChanged" location="qobexftpclient.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QObexFtpClient::State state)">
                <parameter left="QObexFtpClient::State" right="" name="state" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="HomeScreenWidgets" href="homescreenwidgets.html" location="homescreenwidgets.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="create" fullname="HomeScreenWidgets::create" href="homescreenwidgets.html#create" location="homescreenwidgets.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QWidget *" signature="create(const QString &amp; name, QWidget * parent)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="LauncherHSWidget" href="launcherhswidget.html" location="homescreenwidgets.h" bases="QWidget" module=""></class>
        <class access="public" threadsafety="unspecified" status="commendable" name="AppointmentsHSWidget" href="appointmentshswidget.html" location="homescreenwidgets.h" bases="QWidget" module=""></class>
        <class access="public" threadsafety="unspecified" status="commendable" name="WorldmapHSWidget" href="worldmaphswidget.html" location="homescreenwidgets.h" bases="QWorldmap" module=""></class>
        <class access="public" threadsafety="unspecified" status="commendable" name="AnalogClockHSWidget" href="analogclockhswidget.html" location="homescreenwidgets.h" bases="QAnalogClock" module=""></class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemConfiguration" href="qmodemconfiguration.html" location="qmodemconfiguration.h" bases="QTelephonyConfiguration" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemConfiguration" fullname="QModemConfiguration::QModemConfiguration" href="qmodemconfiguration.html#QModemConfiguration" location="qmodemconfiguration.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemConfiguration(QModemService * service)">
                <parameter left="QModemService *" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemConfiguration" fullname="QModemConfiguration::~QModemConfiguration" href="qmodemconfiguration.html#dtor.QModemConfiguration" location="qmodemconfiguration.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemConfiguration()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemPhoneBook" href="qmodemphonebook.html" location="qmodemphonebook.h" bases="QPhoneBook" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemPhoneBook" fullname="QModemPhoneBook::QModemPhoneBook" href="qmodemphonebook.html#QModemPhoneBook" location="qmodemphonebook.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemPhoneBook(QModemService * service)">
                <parameter left="QModemService *" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemPhoneBook" fullname="QModemPhoneBook::~QModemPhoneBook" href="qmodemphonebook.html#dtor.QModemPhoneBook" location="qmodemphonebook.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemPhoneBook()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stringCodec" fullname="QModemPhoneBook::stringCodec" href="qmodemphonebook.html#stringCodec" location="qmodemphonebook.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QTextCodec *" signature="stringCodec() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="preload" fullname="QModemPhoneBook::preload" href="qmodemphonebook.html#preload" location="qmodemphonebook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="preload(const QString &amp; store)">
                <parameter left="const QString &amp;" right="" name="store" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="flushCaches" fullname="QModemPhoneBook::flushCaches" href="qmodemphonebook.html#flushCaches" location="qmodemphonebook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="flushCaches()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="phoneBooksReady" fullname="QModemPhoneBook::phoneBooksReady" href="qmodemphonebook.html#phoneBooksReady" location="qmodemphonebook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="phoneBooksReady()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateCodec" fullname="QModemPhoneBook::updateCodec" href="qmodemphonebook.html#updateCodec" location="qmodemphonebook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="updateCodec(const QString &amp; gsmCharset)">
                <parameter left="const QString &amp;" right="" name="gsmCharset" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="hasModemPhoneBookCache" fullname="QModemPhoneBook::hasModemPhoneBookCache" href="qmodemphonebook.html#hasModemPhoneBookCache" location="qmodemphonebook.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasModemPhoneBookCache() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="hasEmptyPhoneBookIndex" fullname="QModemPhoneBook::hasEmptyPhoneBookIndex" href="qmodemphonebook.html#hasEmptyPhoneBookIndex" location="qmodemphonebook.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasEmptyPhoneBookIndex() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="ScreenClick" href="screenclick.html" location="screenclick.h" bases="QObject,QWSEventFilter" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ScreenClick" fullname="ScreenClick::ScreenClick" href="screenclick.html#ScreenClick" location="screenclick.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ScreenClick()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ScreenClick" fullname="ScreenClick::~ScreenClick" href="screenclick.html#dtor.ScreenClick" location="screenclick.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~ScreenClick()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="screenClick" fullname="ScreenClick::screenClick" href="screenclick.html#screenClick" location="screenclick.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="screenClick(bool pressed)">
                <parameter left="bool" right="" name="pressed" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QDeviceButtonManager" href="qdevicebuttonmanager.html" location="qdevicebuttonmanager.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="instance" fullname="QDeviceButtonManager::instance" href="qdevicebuttonmanager.html#instance" location="qdevicebuttonmanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QDeviceButtonManager &amp;" signature="instance()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="buttons" fullname="QDeviceButtonManager::buttons" href="qdevicebuttonmanager.html#buttons" location="qdevicebuttonmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QList&lt;QDeviceButton *&gt; &amp;" signature="buttons() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="buttonForKeycode" fullname="QDeviceButtonManager::buttonForKeycode" href="qdevicebuttonmanager.html#buttonForKeycode" location="qdevicebuttonmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QDeviceButton *" signature="buttonForKeycode(int keyCode) const">
                <parameter left="int" right="" name="keyCode" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="buttonForKeycode" fullname="QDeviceButtonManager::buttonForKeycode" href="qdevicebuttonmanager.html#buttonForKeycode-2" location="qdevicebuttonmanager.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="const QDeviceButton *" signature="buttonForKeycode(int keyCode, const QString &amp; context) const">
                <parameter left="int" right="" name="keyCode" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="context" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remapPressedAction" fullname="QDeviceButtonManager::remapPressedAction" href="qdevicebuttonmanager.html#remapPressedAction" location="qdevicebuttonmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="remapPressedAction(int button_index, const QtopiaServiceRequest &amp; action)">
                <parameter left="int" right="" name="button_index" default=""></parameter>
                <parameter left="const QtopiaServiceRequest &amp;" right="" name="action" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remapHeldAction" fullname="QDeviceButtonManager::remapHeldAction" href="qdevicebuttonmanager.html#remapHeldAction" location="qdevicebuttonmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="remapHeldAction(int button_index, const QtopiaServiceRequest &amp; action)">
                <parameter left="int" right="" name="button_index" default=""></parameter>
                <parameter left="const QtopiaServiceRequest &amp;" right="" name="action" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remapReleasedAction" fullname="QDeviceButtonManager::remapReleasedAction" href="qdevicebuttonmanager.html#remapReleasedAction" location="qdevicebuttonmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="remapReleasedAction(int button_index, const QtopiaServiceRequest &amp; action)">
                <parameter left="int" right="" name="button_index" default=""></parameter>
                <parameter left="const QtopiaServiceRequest &amp;" right="" name="action" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="factoryResetButtons" fullname="QDeviceButtonManager::factoryResetButtons" href="qdevicebuttonmanager.html#factoryResetButtons" location="qdevicebuttonmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="factoryResetButtons()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QMailAddress" href="qmailaddress.html" location="qmailaddress.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailAddress" fullname="QMailAddress::QMailAddress" href="qmailaddress.html#QMailAddress" location="qmailaddress.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMailAddress()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailAddress" fullname="QMailAddress::QMailAddress" href="qmailaddress.html#QMailAddress-2" location="qmailaddress.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMailAddress(const QString &amp; addressText)">
                <parameter left="const QString &amp;" right="" name="addressText" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailAddress" fullname="QMailAddress::QMailAddress" href="qmailaddress.html#QMailAddress-3" location="qmailaddress.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMailAddress(const QString &amp; name, const QString &amp; address)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="address" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMailAddress" fullname="QMailAddress::~QMailAddress" href="qmailaddress.html#dtor.QMailAddress" location="qmailaddress.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMailAddress()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QMailAddress::isNull" href="qmailaddress.html#isNull" location="qmailaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QMailAddress::name" href="qmailaddress.html#name" location="qmailaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="address" fullname="QMailAddress::address" href="qmailaddress.html#address" location="qmailaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="address() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="displayName" fullname="QMailAddress::displayName" href="qmailaddress.html#displayName" location="qmailaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="displayName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="displayName" fullname="QMailAddress::displayName" href="qmailaddress.html#displayName-2" location="qmailaddress.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QString" signature="displayName(QContactModel &amp; fromModel) const">
                <parameter left="QContactModel &amp;" right="" name="fromModel" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isGroup" fullname="QMailAddress::isGroup" href="qmailaddress.html#isGroup" location="qmailaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isGroup() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="groupMembers" fullname="QMailAddress::groupMembers" href="qmailaddress.html#groupMembers" location="qmailaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QMailAddress&gt;" signature="groupMembers() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="matchContact" fullname="QMailAddress::matchContact" href="qmailaddress.html#matchContact" location="qmailaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContact" signature="matchContact() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="matchesExistingContact" fullname="QMailAddress::matchesExistingContact" href="qmailaddress.html#matchesExistingContact" location="qmailaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="matchesExistingContact() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="matchContact" fullname="QMailAddress::matchContact" href="qmailaddress.html#matchContact-2" location="qmailaddress.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QContact" signature="matchContact(QContactModel &amp; fromModel) const">
                <parameter left="QContactModel &amp;" right="" name="fromModel" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isPhoneNumber" fullname="QMailAddress::isPhoneNumber" href="qmailaddress.html#isPhoneNumber" location="qmailaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isPhoneNumber() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmailAddress" fullname="QMailAddress::isEmailAddress" href="qmailaddress.html#isEmailAddress" location="qmailaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmailAddress() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toString" fullname="QMailAddress::toString" href="qmailaddress.html#toString" location="qmailaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="toString() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toStringList" fullname="QMailAddress::toStringList" href="qmailaddress.html#toStringList" location="qmailaddress.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStringList" signature="toStringList(const QList&lt;QMailAddress&gt; &amp; list)">
                <parameter left="const QList&lt;QMailAddress&gt; &amp;" right="" name="list" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromStringList" fullname="QMailAddress::fromStringList" href="qmailaddress.html#fromStringList" location="qmailaddress.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QMailAddress&gt;" signature="fromStringList(const QString &amp; list)">
                <parameter left="const QString &amp;" right="" name="list" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromStringList" fullname="QMailAddress::fromStringList" href="qmailaddress.html#fromStringList-2" location="qmailaddress.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QList&lt;QMailAddress&gt;" signature="fromStringList(const QStringList &amp; list)">
                <parameter left="const QStringList &amp;" right="" name="list" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeComments" fullname="QMailAddress::removeComments" href="qmailaddress.html#removeComments" location="qmailaddress.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="removeComments(const QString &amp; input)">
                <parameter left="const QString &amp;" right="" name="input" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeWhitespace" fullname="QMailAddress::removeWhitespace" href="qmailaddress.html#removeWhitespace" location="qmailaddress.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="removeWhitespace(const QString &amp; input)">
                <parameter left="const QString &amp;" right="" name="input" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothPasskeyAgent" href="qbluetoothpasskeyagent.html" location="qbluetoothpasskeyagent.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothPasskeyAgent" fullname="QBluetoothPasskeyAgent::QBluetoothPasskeyAgent" href="qbluetoothpasskeyagent.html#QBluetoothPasskeyAgent" location="qbluetoothpasskeyagent.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothPasskeyAgent(const QString &amp; name, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothPasskeyAgent" fullname="QBluetoothPasskeyAgent::~QBluetoothPasskeyAgent" href="qbluetoothpasskeyagent.html#dtor.QBluetoothPasskeyAgent" location="qbluetoothpasskeyagent.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothPasskeyAgent()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QBluetoothPasskeyAgent::name" href="qbluetoothpasskeyagent.html#name" location="qbluetoothpasskeyagent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestPasskey" fullname="QBluetoothPasskeyAgent::requestPasskey" href="qbluetoothpasskeyagent.html#requestPasskey" location="qbluetoothpasskeyagent.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="requestPasskey(QBluetoothPasskeyRequest &amp; request)">
                <parameter left="QBluetoothPasskeyRequest &amp;" right="" name="request" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancelRequest" fullname="QBluetoothPasskeyAgent::cancelRequest" href="qbluetoothpasskeyagent.html#cancelRequest" location="qbluetoothpasskeyagent.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="cancelRequest(const QString &amp; localDevice, const QBluetoothAddress &amp; remoteAddr)">
                <parameter left="const QString &amp;" right="" name="localDevice" default=""></parameter>
                <parameter left="const QBluetoothAddress &amp;" right="" name="remoteAddr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="confirmPasskey" fullname="QBluetoothPasskeyAgent::confirmPasskey" href="qbluetoothpasskeyagent.html#confirmPasskey" location="qbluetoothpasskeyagent.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="confirmPasskey(const QString &amp; localDevice, const QBluetoothAddress &amp; remoteAddr, const QString &amp; passkey)">
                <parameter left="const QString &amp;" right="" name="localDevice" default=""></parameter>
                <parameter left="const QBluetoothAddress &amp;" right="" name="remoteAddr" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="passkey" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="release" fullname="QBluetoothPasskeyAgent::release" href="qbluetoothpasskeyagent.html#release" location="qbluetoothpasskeyagent.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="release()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QBluetoothPasskeyAgent::Error" href="qbluetoothpasskeyagent.html#Error-enum" location="qbluetoothpasskeyagent.h">
                <value name="NoError" value="0"></value>
                <value name="AlreadyExists" value="1"></value>
                <value name="DoesNotExist" value="2"></value>
                <value name="UnknownAddress" value="3"></value>
                <value name="UnknownError" value="4"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QBluetoothPasskeyAgent::error" href="qbluetoothpasskeyagent.html#error" location="qbluetoothpasskeyagent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothPasskeyAgent::Error" signature="error() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="registerDefault" fullname="QBluetoothPasskeyAgent::registerDefault" href="qbluetoothpasskeyagent.html#registerDefault" location="qbluetoothpasskeyagent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="registerDefault()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unregisterDefault" fullname="QBluetoothPasskeyAgent::unregisterDefault" href="qbluetoothpasskeyagent.html#unregisterDefault" location="qbluetoothpasskeyagent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="unregisterDefault()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="registerDefault" fullname="QBluetoothPasskeyAgent::registerDefault" href="qbluetoothpasskeyagent.html#registerDefault-2" location="qbluetoothpasskeyagent.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="registerDefault(const QString &amp; localDevice)">
                <parameter left="const QString &amp;" right="" name="localDevice" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unregisterDefault" fullname="QBluetoothPasskeyAgent::unregisterDefault" href="qbluetoothpasskeyagent.html#unregisterDefault-2" location="qbluetoothpasskeyagent.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="unregisterDefault(const QString &amp; localDevice)">
                <parameter left="const QString &amp;" right="" name="localDevice" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="registerForAddress" fullname="QBluetoothPasskeyAgent::registerForAddress" href="qbluetoothpasskeyagent.html#registerForAddress" location="qbluetoothpasskeyagent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="registerForAddress(QBluetoothAddress &amp; addr)">
                <parameter left="QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unregisterForAddress" fullname="QBluetoothPasskeyAgent::unregisterForAddress" href="qbluetoothpasskeyagent.html#unregisterForAddress" location="qbluetoothpasskeyagent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="unregisterForAddress(QBluetoothAddress &amp; addr)">
                <parameter left="QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="registerForAddress" fullname="QBluetoothPasskeyAgent::registerForAddress" href="qbluetoothpasskeyagent.html#registerForAddress-2" location="qbluetoothpasskeyagent.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="registerForAddress(const QString &amp; localDevice, QBluetoothAddress &amp; addr)">
                <parameter left="const QString &amp;" right="" name="localDevice" default=""></parameter>
                <parameter left="QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unregisterForAddress" fullname="QBluetoothPasskeyAgent::unregisterForAddress" href="qbluetoothpasskeyagent.html#unregisterForAddress-2" location="qbluetoothpasskeyagent.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="unregisterForAddress(const QString &amp; localDevice, QBluetoothAddress &amp; addr)">
                <parameter left="const QString &amp;" right="" name="localDevice" default=""></parameter>
                <parameter left="QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPowerSource" href="qpowersource.html" location="qpowersource.h" bases="QHardwareInterface" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="QPowerSource::Type" href="qpowersource.html#Type-enum" location="qpowersource.h">
                <value name="Wall" value="0"></value>
                <value name="Battery" value="1"></value>
                <value name="Virtual" value="2"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Availability" fullname="QPowerSource::Availability" href="qpowersource.html#Availability-enum" location="qpowersource.h">
                <value name="Available" value="0"></value>
                <value name="NotAvailable" value="1"></value>
                <value name="Failed" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QPowerSource" fullname="QPowerSource::QPowerSource" href="qpowersource.html#QPowerSource" location="qpowersource.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPowerSource(const QString &amp; id, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="id" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPowerSource" fullname="QPowerSource::~QPowerSource" href="qpowersource.html#dtor.QPowerSource" location="qpowersource.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPowerSource()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QPowerSource::type" href="qpowersource.html#type" location="qpowersource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Type" signature="type() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availability" fullname="QPowerSource::availability" href="qpowersource.html#availability" location="qpowersource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Availability" signature="availability() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="charging" fullname="QPowerSource::charging" href="qpowersource.html#charging" location="qpowersource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="charging() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="charge" fullname="QPowerSource::charge" href="qpowersource.html#charge" location="qpowersource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="charge() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="capacity" fullname="QPowerSource::capacity" href="qpowersource.html#capacity" location="qpowersource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="capacity() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="timeRemaining" fullname="QPowerSource::timeRemaining" href="qpowersource.html#timeRemaining" location="qpowersource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="timeRemaining() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availabilityChanged" fullname="QPowerSource::availabilityChanged" href="qpowersource.html#availabilityChanged" location="qpowersource.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="availabilityChanged(QPowerSource::Availability availability)">
                <parameter left="QPowerSource::Availability" right="" name="availability" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="chargingChanged" fullname="QPowerSource::chargingChanged" href="qpowersource.html#chargingChanged" location="qpowersource.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="chargingChanged(bool isCharging)">
                <parameter left="bool" right="" name="isCharging" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="chargeChanged" fullname="QPowerSource::chargeChanged" href="qpowersource.html#chargeChanged" location="qpowersource.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="chargeChanged(int charge)">
                <parameter left="int" right="" name="charge" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="capacityChanged" fullname="QPowerSource::capacityChanged" href="qpowersource.html#capacityChanged" location="qpowersource.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="capacityChanged(int capacity)">
                <parameter left="int" right="" name="capacity" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="timeRemainingChanged" fullname="QPowerSource::timeRemainingChanged" href="qpowersource.html#timeRemainingChanged" location="qpowersource.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="timeRemainingChanged(int minutes)">
                <parameter left="int" right="" name="minutes" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPowerSourceProvider" href="qpowersourceprovider.html" location="qpowersource.h" bases="QPowerSource" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QPowerSourceProvider" fullname="QPowerSourceProvider::QPowerSourceProvider" href="qpowersourceprovider.html#QPowerSourceProvider" location="qpowersource.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPowerSourceProvider(Type type, const QString &amp; id, QObject * parent)">
                <parameter left="Type" right="" name="type" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPowerSourceProvider" fullname="QPowerSourceProvider::~QPowerSourceProvider" href="qpowersourceprovider.html#dtor.QPowerSourceProvider" location="qpowersource.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPowerSourceProvider()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAvailability" fullname="QPowerSourceProvider::setAvailability" href="qpowersourceprovider.html#setAvailability" location="qpowersource.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setAvailability(QPowerSource::Availability availability)">
                <parameter left="QPowerSource::Availability" right="" name="availability" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCharging" fullname="QPowerSourceProvider::setCharging" href="qpowersourceprovider.html#setCharging" location="qpowersource.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setCharging(bool charging)">
                <parameter left="bool" right="" name="charging" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCharge" fullname="QPowerSourceProvider::setCharge" href="qpowersourceprovider.html#setCharge" location="qpowersource.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setCharge(int charge)">
                <parameter left="int" right="" name="charge" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCapacity" fullname="QPowerSourceProvider::setCapacity" href="qpowersourceprovider.html#setCapacity" location="qpowersource.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setCapacity(int capacity)">
                <parameter left="int" right="" name="capacity" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTimeRemaining" fullname="QPowerSourceProvider::setTimeRemaining" href="qpowersourceprovider.html#setTimeRemaining" location="qpowersource.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setTimeRemaining(int remaining)">
                <parameter left="int" right="" name="remaining" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPowerStatus" href="qpowerstatus.html" location="qpowersource.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QPowerStatus" fullname="QPowerStatus::QPowerStatus" href="qpowerstatus.html#QPowerStatus" location="qpowersource.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPowerStatus(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPowerStatus" fullname="QPowerStatus::~QPowerStatus" href="qpowerstatus.html#dtor.QPowerStatus" location="qpowersource.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPowerStatus()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="WallStatus" fullname="QPowerStatus::WallStatus" href="qpowerstatus.html#WallStatus-enum" location="qpowersource.h">
                <value name="Available" value="0"></value>
                <value name="NotAvailable" value="1"></value>
                <value name="NoWallSource" value="2"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="BatteryStatus" fullname="QPowerStatus::BatteryStatus" href="qpowerstatus.html#BatteryStatus-enum" location="qpowersource.h">
                <value name="Normal" value="0"></value>
                <value name="Low" value="1"></value>
                <value name="VeryLow" value="2"></value>
                <value name="Critical" value="3"></value>
                <value name="NoBattery" value="4"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="wallStatus" fullname="QPowerStatus::wallStatus" href="qpowerstatus.html#wallStatus" location="qpowersource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="WallStatus" signature="wallStatus() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="batteryCharging" fullname="QPowerStatus::batteryCharging" href="qpowerstatus.html#batteryCharging" location="qpowersource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="batteryCharging() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="batteryStatus" fullname="QPowerStatus::batteryStatus" href="qpowerstatus.html#batteryStatus" location="qpowersource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="BatteryStatus" signature="batteryStatus() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="wallSource" fullname="QPowerStatus::wallSource" href="qpowerstatus.html#wallSource" location="qpowersource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPowerSource *" signature="wallSource() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="batterySource" fullname="QPowerStatus::batterySource" href="qpowerstatus.html#batterySource" location="qpowersource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPowerSource *" signature="batterySource() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="wallStatusChanged" fullname="QPowerStatus::wallStatusChanged" href="qpowerstatus.html#wallStatusChanged" location="qpowersource.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="wallStatusChanged(QPowerStatus::WallStatus status)">
                <parameter left="QPowerStatus::WallStatus" right="" name="status" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="batteryStatusChanged" fullname="QPowerStatus::batteryStatusChanged" href="qpowerstatus.html#batteryStatusChanged" location="qpowersource.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="batteryStatusChanged(QPowerStatus::BatteryStatus status)">
                <parameter left="QPowerStatus::BatteryStatus" right="" name="status" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="batteryChargingChanged" fullname="QPowerStatus::batteryChargingChanged" href="qpowerstatus.html#batteryChargingChanged" location="qpowersource.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="batteryChargingChanged(bool charging)">
                <parameter left="bool" right="" name="charging" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="BluetoothPushingService" href="bluetoothpushingservice.html" location="obexservicemanager.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="pushPersonalBusinessCard" fullname="BluetoothPushingService::pushPersonalBusinessCard" href="bluetoothpushingservice.html#pushPersonalBusinessCard" location="obexservicemanager.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="pushPersonalBusinessCard()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pushPersonalBusinessCard" fullname="BluetoothPushingService::pushPersonalBusinessCard" href="bluetoothpushingservice.html#pushPersonalBusinessCard-2" location="obexservicemanager.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="pushPersonalBusinessCard(const QBluetoothAddress &amp; addr)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pushBusinessCard" fullname="BluetoothPushingService::pushBusinessCard" href="bluetoothpushingservice.html#pushBusinessCard" location="obexservicemanager.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="pushBusinessCard(const QContact &amp; contact)">
                <parameter left="const QContact &amp;" right="" name="contact" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pushBusinessCard" fullname="BluetoothPushingService::pushBusinessCard" href="bluetoothpushingservice.html#pushBusinessCard-2" location="obexservicemanager.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="pushBusinessCard(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pushCalendar" fullname="BluetoothPushingService::pushCalendar" href="bluetoothpushingservice.html#pushCalendar" location="obexservicemanager.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="pushCalendar(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pushFile" fullname="BluetoothPushingService::pushFile" href="bluetoothpushingservice.html#pushFile" location="obexservicemanager.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="pushFile(const QString &amp; fileName, const QString &amp; mimeType, const QString &amp; description, bool autodelete)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="mimeType" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="description" default=""></parameter>
                <parameter left="bool" right="" name="autodelete" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pushFile" fullname="BluetoothPushingService::pushFile" href="bluetoothpushingservice.html#pushFile-2" location="obexservicemanager.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="pushFile(const QContentId &amp; id)">
                <parameter left="const QContentId &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pushFile" fullname="BluetoothPushingService::pushFile" href="bluetoothpushingservice.html#pushFile-3" location="obexservicemanager.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="3" type="void" signature="pushFile(const QBluetoothAddress &amp; addr, const QContentId &amp; id)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
                <parameter left="const QContentId &amp;" right="" name="id" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="InfraredBeamingService" href="infraredbeamingservice.html" location="obexservicemanager.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="beamPersonalBusinessCard" fullname="InfraredBeamingService::beamPersonalBusinessCard" href="infraredbeamingservice.html#beamPersonalBusinessCard" location="obexservicemanager.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="beamPersonalBusinessCard()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="beamBusinessCard" fullname="InfraredBeamingService::beamBusinessCard" href="infraredbeamingservice.html#beamBusinessCard" location="obexservicemanager.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="beamBusinessCard(const QContact &amp; contact)">
                <parameter left="const QContact &amp;" right="" name="contact" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="beamBusinessCard" fullname="InfraredBeamingService::beamBusinessCard" href="infraredbeamingservice.html#beamBusinessCard-2" location="obexservicemanager.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="beamBusinessCard(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="beamFile" fullname="InfraredBeamingService::beamFile" href="infraredbeamingservice.html#beamFile" location="obexservicemanager.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="beamFile(const QString &amp; fileName, const QString &amp; mimeType, const QString &amp; description, bool autodelete)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="mimeType" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="description" default=""></parameter>
                <parameter left="bool" right="" name="autodelete" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="beamFile" fullname="InfraredBeamingService::beamFile" href="infraredbeamingservice.html#beamFile-2" location="obexservicemanager.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="beamFile(const QContentId &amp; id)">
                <parameter left="const QContentId &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="beamCalendar" fullname="InfraredBeamingService::beamCalendar" href="infraredbeamingservice.html#beamCalendar" location="obexservicemanager.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="beamCalendar(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="ObexServiceManager" href="obexservicemanager.html" location="obexservicemanager.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ObexServiceManager" fullname="ObexServiceManager::ObexServiceManager" href="obexservicemanager.html#ObexServiceManager" location="obexservicemanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ObexServiceManager(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ObexServiceManager" fullname="ObexServiceManager::~ObexServiceManager" href="obexservicemanager.html#dtor.ObexServiceManager" location="obexservicemanager.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~ObexServiceManager()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="abortTransfer" fullname="ObexServiceManager::abortTransfer" href="obexservicemanager.html#abortTransfer" location="obexservicemanager.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="abortTransfer(int id)">
                <parameter left="int" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="receiveInitiated" fullname="ObexServiceManager::receiveInitiated" href="obexservicemanager.html#receiveInitiated" location="obexservicemanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="receiveInitiated(int id, const QString &amp; fileName, const QString &amp; mimeType, const QString &amp; description)">
                <parameter left="int" right="" name="id" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="mimeType" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="description" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sendInitiated" fullname="ObexServiceManager::sendInitiated" href="obexservicemanager.html#sendInitiated" location="obexservicemanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="sendInitiated(int id, const QString &amp; fileName, const QString &amp; mimeType, const QString &amp; description)">
                <parameter left="int" right="" name="id" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="mimeType" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="description" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="progress" fullname="ObexServiceManager::progress" href="obexservicemanager.html#progress" location="obexservicemanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="progress(int id, qint64 bytes, qint64 total)">
                <parameter left="int" right="" name="id" default=""></parameter>
                <parameter left="qint64" right="" name="bytes" default=""></parameter>
                <parameter left="qint64" right="" name="total" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="completed" fullname="ObexServiceManager::completed" href="obexservicemanager.html#completed" location="obexservicemanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="completed(int id, bool error)">
                <parameter left="int" right="" name="id" default=""></parameter>
                <parameter left="bool" right="" name="error" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QCopEnvelope" href="qcopenvelope.html" location="qcopenvelope_p.h" bases="QDataStream" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QCopEnvelope" fullname="QCopEnvelope::QCopEnvelope" href="qcopenvelope.html#QCopEnvelope" location="qcopenvelope_p.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCopEnvelope(const QString &amp; channel, const QString &amp; message)">
                <parameter left="const QString &amp;" right="" name="channel" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="message" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCopEnvelope" fullname="QCopEnvelope::~QCopEnvelope" href="qcopenvelope.html#dtor.QCopEnvelope" location="qcopenvelope_p.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCopEnvelope()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="BtDialupServiceTask" href="btdialupservicetask.html" location="btdialupservice.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="BtDialupServiceTask" fullname="BtDialupServiceTask::BtDialupServiceTask" href="btdialupservicetask.html#BtDialupServiceTask" location="btdialupservice.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="BtDialupServiceTask(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~BtDialupServiceTask" fullname="BtDialupServiceTask::~BtDialupServiceTask" href="btdialupservicetask.html#dtor.BtDialupServiceTask" location="btdialupservice.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~BtDialupServiceTask()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QColorSelectorDialog" href="qcolorselectordialog.html" location="qcolorselector.h" bases="QDialog" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QColorSelectorDialog" fullname="QColorSelectorDialog::QColorSelectorDialog" href="qcolorselectordialog.html#QColorSelectorDialog" location="qcolorselector.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QColorSelectorDialog(const QColor &amp; color, QWidget * parent, Qt::WindowFlags flags)">
                <parameter left="const QColor &amp;" right="" name="color" default=""></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
                <parameter left="Qt::WindowFlags" right="" name="flags" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QColorSelectorDialog" fullname="QColorSelectorDialog::QColorSelectorDialog" href="qcolorselectordialog.html#QColorSelectorDialog-2" location="qcolorselector.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QColorSelectorDialog(QWidget * parent, Qt::WindowFlags flags)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
                <parameter left="Qt::WindowFlags" right="" name="flags" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QColorSelectorDialog" fullname="QColorSelectorDialog::~QColorSelectorDialog" href="qcolorselectordialog.html#dtor.QColorSelectorDialog" location="qcolorselector.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QColorSelectorDialog()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="color" fullname="QColorSelectorDialog::color" href="qcolorselectordialog.html#color" location="qcolorselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QColor" signature="color() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultColor" fullname="QColorSelectorDialog::setDefaultColor" href="qcolorselectordialog.html#setDefaultColor" location="qcolorselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefaultColor(const QColor &amp; color)">
                <parameter left="const QColor &amp;" right="" name="color" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultColor" fullname="QColorSelectorDialog::defaultColor" href="qcolorselectordialog.html#defaultColor" location="qcolorselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QColor &amp;" signature="defaultColor() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="getColor" fullname="QColorSelectorDialog::getColor" href="qcolorselectordialog.html#getColor" location="qcolorselector.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QColor" signature="getColor(const QColor &amp; color, QWidget * parent)">
                <parameter left="const QColor &amp;" right="" name="color" default="Qt::white"></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setColor" fullname="QColorSelectorDialog::setColor" href="qcolorselectordialog.html#setColor" location="qcolorselector.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setColor(const QColor &amp; color)">
                <parameter left="const QColor &amp;" right="" name="color" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selected" fullname="QColorSelectorDialog::selected" href="qcolorselectordialog.html#selected" location="qcolorselector.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="selected(const QColor &amp; color)">
                <parameter left="const QColor &amp;" right="" name="color" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QColorButton" href="qcolorbutton.html" location="qcolorselector.h" bases="QPushButton" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QColorButton" fullname="QColorButton::QColorButton" href="qcolorbutton.html#QColorButton" location="qcolorselector.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QColorButton(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QColorButton" fullname="QColorButton::QColorButton" href="qcolorbutton.html#QColorButton-2" location="qcolorselector.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QColorButton(const QColor &amp; color, QWidget * parent)">
                <parameter left="const QColor &amp;" right="" name="color" default=""></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QColorButton" fullname="QColorButton::~QColorButton" href="qcolorbutton.html#dtor.QColorButton" location="qcolorselector.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QColorButton()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="color" fullname="QColorButton::color" href="qcolorbutton.html#color" location="qcolorselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QColor" signature="color() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultColor" fullname="QColorButton::setDefaultColor" href="qcolorbutton.html#setDefaultColor" location="qcolorselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefaultColor(const QColor &amp; color)">
                <parameter left="const QColor &amp;" right="" name="color" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultColor" fullname="QColorButton::defaultColor" href="qcolorbutton.html#defaultColor" location="qcolorselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QColor &amp;" signature="defaultColor() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setColor" fullname="QColorButton::setColor" href="qcolorbutton.html#setColor" location="qcolorselector.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setColor(const QColor &amp; color)">
                <parameter left="const QColor &amp;" right="" name="color" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selected" fullname="QColorButton::selected" href="qcolorbutton.html#selected" location="qcolorselector.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="selected(const QColor &amp; color)">
                <parameter left="const QColor &amp;" right="" name="color" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="drawButtonLabel" fullname="QColorButton::drawButtonLabel" href="qcolorbutton.html#drawButtonLabel" location="qcolorselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="drawButtonLabel(QPainter * painter)">
                <parameter left="QPainter *" right="" name="painter" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="PhoneBrowserScreen" href="phonebrowserscreen.html" location="phonebrowser.h" bases="QAbstractBrowserScreen" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="PhoneBrowserScreen" fullname="PhoneBrowserScreen::PhoneBrowserScreen" href="phonebrowserscreen.html#PhoneBrowserScreen" location="phonebrowser.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="PhoneBrowserScreen(QWidget * parent, Qt::WFlags flags)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
                <parameter left="Qt::WFlags" right="" name="flags" default="0"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QIrRemoteDevice" href="qirremotedevice.html" location="qirremotedevice.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QIrRemoteDevice" fullname="QIrRemoteDevice::QIrRemoteDevice" href="qirremotedevice.html#QIrRemoteDevice" location="qirremotedevice.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QIrRemoteDevice(const QString &amp; name, QIr::DeviceClasses &amp; devClasses, uint addr)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="QIr::DeviceClasses &amp;" right="" name="devClasses" default=""></parameter>
                <parameter left="uint" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QIrRemoteDevice" fullname="QIrRemoteDevice::QIrRemoteDevice" href="qirremotedevice.html#QIrRemoteDevice-2" location="qirremotedevice.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QIrRemoteDevice(const QIrRemoteDevice &amp; dev)">
                <parameter left="const QIrRemoteDevice &amp;" right="" name="dev" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QIrRemoteDevice" fullname="QIrRemoteDevice::~QIrRemoteDevice" href="qirremotedevice.html#dtor.QIrRemoteDevice" location="qirremotedevice.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QIrRemoteDevice()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QIrRemoteDevice::operator=" href="qirremotedevice.html#operator=" location="qirremotedevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QIrRemoteDevice &amp;" signature="operator=(const QIrRemoteDevice &amp; other)">
                <parameter left="const QIrRemoteDevice &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QIrRemoteDevice::operator==" href="qirremotedevice.html#operator==" location="qirremotedevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QIrRemoteDevice &amp; other) const">
                <parameter left="const QIrRemoteDevice &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="address" fullname="QIrRemoteDevice::address" href="qirremotedevice.html#address" location="qirremotedevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="address() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceClasses" fullname="QIrRemoteDevice::deviceClasses" href="qirremotedevice.html#deviceClasses" location="qirremotedevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QIr::DeviceClasses" signature="deviceClasses() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QIrRemoteDevice::name" href="qirremotedevice.html#name" location="qirremotedevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPacketProtocol" href="qpacketprotocol.html" location="qpacketprotocol.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QPacketProtocol" fullname="QPacketProtocol::QPacketProtocol" href="qpacketprotocol.html#QPacketProtocol" location="qpacketprotocol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPacketProtocol(QIODevice * dev, QObject * parent)">
                <parameter left="QIODevice *" right="" name="dev" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPacketProtocol" fullname="QPacketProtocol::~QPacketProtocol" href="qpacketprotocol.html#dtor.QPacketProtocol" location="qpacketprotocol.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPacketProtocol()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumPacketSize" fullname="QPacketProtocol::maximumPacketSize" href="qpacketprotocol.html#maximumPacketSize" location="qpacketprotocol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint32" signature="maximumPacketSize() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMaximumPacketSize" fullname="QPacketProtocol::setMaximumPacketSize" href="qpacketprotocol.html#setMaximumPacketSize" location="qpacketprotocol.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="qint32" signature="setMaximumPacketSize(qint32 max)">
                <parameter left="qint32" right="" name="max" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="send" fullname="QPacketProtocol::send" href="qpacketprotocol.html#send" location="qpacketprotocol.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QPacketAutoSend" signature="send()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="send" fullname="QPacketProtocol::send" href="qpacketprotocol.html#send-2" location="qpacketprotocol.cpp" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="send(const QPacket &amp; packet)">
                <parameter left="const QPacket &amp;" right="" name="packet" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="packetsAvailable" fullname="QPacketProtocol::packetsAvailable" href="qpacketprotocol.html#packetsAvailable" location="qpacketprotocol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="packetsAvailable() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="read" fullname="QPacketProtocol::read" href="qpacketprotocol.html#read" location="qpacketprotocol.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QPacket" signature="read()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QPacketProtocol::clear" href="qpacketprotocol.html#clear" location="qpacketprotocol.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="device" fullname="QPacketProtocol::device" href="qpacketprotocol.html#device" location="qpacketprotocol.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QIODevice *" signature="device()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readyRead" fullname="QPacketProtocol::readyRead" href="qpacketprotocol.html#readyRead" location="qpacketprotocol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="readyRead()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="invalidPacket" fullname="QPacketProtocol::invalidPacket" href="qpacketprotocol.html#invalidPacket" location="qpacketprotocol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="invalidPacket()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="packetWritten" fullname="QPacketProtocol::packetWritten" href="qpacketprotocol.html#packetWritten" location="qpacketprotocol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="packetWritten()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPacket" href="qpacket.html" location="qpacketprotocol.h" bases="QDataStream" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QPacket" fullname="QPacket::QPacket" href="qpacket.html#QPacket" location="qpacketprotocol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPacket()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QPacket" fullname="QPacket::QPacket" href="qpacket.html#QPacket-2" location="qpacketprotocol.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QPacket(const QPacket &amp; other)">
                <parameter left="const QPacket &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPacket" fullname="QPacket::~QPacket" href="qpacket.html#dtor.QPacket" location="qpacketprotocol.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPacket()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QPacket::clear" href="qpacket.html#clear" location="qpacketprotocol.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QPacket::isEmpty" href="qpacket.html#isEmpty" location="qpacketprotocol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"></function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="b" fullname="QPacket::b" href="qpacket.html#b-var" location="qpacketprotocol.h" type="QByteArray" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="buf" fullname="QPacket::buf" href="qpacket.html#buf-var" location="qpacketprotocol.h" type="QBuffer *" static="false"></variable>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSMSReader" href="qsmsreader.html" location="qsmsreader.h" bases="QCommInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSMSReader" fullname="QSMSReader::QSMSReader" href="qsmsreader.html#QSMSReader" location="qsmsreader.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSMSReader(const QString &amp; service, QObject * parent, QCommInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="service" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QCommInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSMSReader" fullname="QSMSReader::~QSMSReader" href="qsmsreader.html#dtor.QSMSReader" location="qsmsreader.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSMSReader()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unreadCount" fullname="QSMSReader::unreadCount" href="qsmsreader.html#unreadCount" location="qsmsreader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="unreadCount() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unreadList" fullname="QSMSReader::unreadList" href="qsmsreader.html#unreadList" location="qsmsreader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="unreadList() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="usedMessages" fullname="QSMSReader::usedMessages" href="qsmsreader.html#usedMessages" location="qsmsreader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="usedMessages() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="totalMessages" fullname="QSMSReader::totalMessages" href="qsmsreader.html#totalMessages" location="qsmsreader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="totalMessages() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="ready" fullname="QSMSReader::ready" href="qsmsreader.html#ready" location="qsmsreader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="ready() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="check" fullname="QSMSReader::check" href="qsmsreader.html#check" location="qsmsreader.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="check()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="firstMessage" fullname="QSMSReader::firstMessage" href="qsmsreader.html#firstMessage" location="qsmsreader.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="firstMessage()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="nextMessage" fullname="QSMSReader::nextMessage" href="qsmsreader.html#nextMessage" location="qsmsreader.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="nextMessage()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deleteMessage" fullname="QSMSReader::deleteMessage" href="qsmsreader.html#deleteMessage" location="qsmsreader.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="deleteMessage(const QString &amp; id)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUnreadCount" fullname="QSMSReader::setUnreadCount" href="qsmsreader.html#setUnreadCount" location="qsmsreader.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setUnreadCount(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setReady" fullname="QSMSReader::setReady" href="qsmsreader.html#setReady" location="qsmsreader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setReady(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unreadCountChanged" fullname="QSMSReader::unreadCountChanged" href="qsmsreader.html#unreadCountChanged" location="qsmsreader.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="unreadCountChanged()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="messageCount" fullname="QSMSReader::messageCount" href="qsmsreader.html#messageCount" location="qsmsreader.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="messageCount(int total)">
                <parameter left="int" right="" name="total" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fetched" fullname="QSMSReader::fetched" href="qsmsreader.html#fetched" location="qsmsreader.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="fetched(const QString &amp; id, const QSMSMessage &amp; m)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
                <parameter left="const QSMSMessage &amp;" right="" name="m" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readyChanged" fullname="QSMSReader::readyChanged" href="qsmsreader.html#readyChanged" location="qsmsreader.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="readyChanged()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="AtParseUtils" href="atparseutils.html" location="atparseutils.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="mode" fullname="AtParseUtils::mode" href="atparseutils.html#mode" location="atparseutils.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="Mode" signature="mode(const QString &amp; params)">
                <parameter left="const QString &amp;" right="" name="params" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMailMessageKey" href="qmailmessagekey.html" location="qmailmessagekey.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Operand" fullname="QMailMessageKey::Operand" href="qmailmessagekey.html#Operand-enum" location="qmailmessagekey.h">
                <value name="LessThan" value="0"></value>
                <value name="LessThanEqual" value="1"></value>
                <value name="GreaterThan" value="2"></value>
                <value name="GreaterThanEqual" value="3"></value>
                <value name="Equal" value="4"></value>
                <value name="NotEqual" value="5"></value>
                <value name="Contains" value="6"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Property" fullname="QMailMessageKey::Property" href="qmailmessagekey.html#Property-enum" location="qmailmessagekey.h" typedef="QMailMessageKey::Properties">
                <value name="Id" value="0x0001"></value>
                <value name="Type" value="0x0002"></value>
                <value name="ParentFolderId" value="0x0004"></value>
                <value name="Sender" value="0x0008"></value>
                <value name="Recipients" value="0x0010"></value>
                <value name="Subject" value="0x0020"></value>
                <value name="TimeStamp" value="0x0040"></value>
                <value name="Status" value="0x0080"></value>
                <value name="FromAccount" value="0x0100"></value>
                <value name="FromMailbox" value="0x0200"></value>
                <value name="ServerUid" value="0x0400"></value>
                <value name="Size" value="0x0800"></value>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="Properties" fullname="QMailMessageKey::Properties" href="qmailmessagekey.html#Properties-typedef" location="qmailmessagekey.h" enum="QMailMessageKey::Property"></typedef>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailMessageKey" fullname="QMailMessageKey::QMailMessageKey" href="qmailmessagekey.html#QMailMessageKey" location="qmailmessagekey.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMailMessageKey()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailMessageKey" fullname="QMailMessageKey::QMailMessageKey" href="qmailmessagekey.html#QMailMessageKey-2" location="qmailmessagekey.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMailMessageKey(const Property &amp; p, const QVariant &amp; value, const Operand &amp; c)">
                <parameter left="const Property &amp;" right="" name="p" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
                <parameter left="const Operand &amp;" right="" name="c" default="Equal"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailMessageKey" fullname="QMailMessageKey::QMailMessageKey" href="qmailmessagekey.html#QMailMessageKey-3" location="qmailmessagekey.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMailMessageKey(const QMailIdList &amp; idList)">
                <parameter left="const QMailIdList &amp;" right="" name="idList" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailMessageKey" fullname="QMailMessageKey::QMailMessageKey" href="qmailmessagekey.html#QMailMessageKey-4" location="qmailmessagekey.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QMailMessageKey(const QMailMessageKey &amp; other)">
                <parameter left="const QMailMessageKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMailMessageKey" fullname="QMailMessageKey::~QMailMessageKey" href="qmailmessagekey.html#dtor.QMailMessageKey" location="qmailmessagekey.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMailMessageKey()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator~" fullname="QMailMessageKey::operator~" href="qmailmessagekey.html#operator~" location="qmailmessagekey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailMessageKey" signature="operator~() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&amp;" fullname="QMailMessageKey::operator&amp;" href="qmailmessagekey.html#operator&amp;" location="qmailmessagekey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailMessageKey" signature="operator&amp;(const QMailMessageKey &amp; other) const">
                <parameter left="const QMailMessageKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator|" fullname="QMailMessageKey::operator|" href="qmailmessagekey.html#operator|" location="qmailmessagekey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailMessageKey" signature="operator|(const QMailMessageKey &amp; other) const">
                <parameter left="const QMailMessageKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&amp;=" fullname="QMailMessageKey::operator&amp;=" href="qmailmessagekey.html#operator&amp;=" location="qmailmessagekey.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMailMessageKey &amp;" signature="operator&amp;=(const QMailMessageKey &amp; other)">
                <parameter left="const QMailMessageKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator|=" fullname="QMailMessageKey::operator|=" href="qmailmessagekey.html#operator|=" location="qmailmessagekey.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMailMessageKey &amp;" signature="operator|=(const QMailMessageKey &amp; other)">
                <parameter left="const QMailMessageKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QMailMessageKey::operator==" href="qmailmessagekey.html#operator==" location="qmailmessagekey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QMailMessageKey &amp; other) const">
                <parameter left="const QMailMessageKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QMailMessageKey::operator!=" href="qmailmessagekey.html#operator!=" location="qmailmessagekey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QMailMessageKey &amp; other) const">
                <parameter left="const QMailMessageKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QMailMessageKey::operator=" href="qmailmessagekey.html#operator=" location="qmailmessagekey.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMailMessageKey &amp;" signature="operator=(const QMailMessageKey &amp; other)">
                <parameter left="const QMailMessageKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QMailMessageKey::isEmpty" href="qmailmessagekey.html#isEmpty" location="qmailmessagekey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="WindowManagement" href="windowmanagement.html" location="windowmanagement.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="WindowManagement" fullname="WindowManagement::WindowManagement" href="windowmanagement.html#WindowManagement" location="windowmanagement.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="WindowManagement(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="DockArea" fullname="WindowManagement::DockArea" href="windowmanagement.html#DockArea-enum" location="windowmanagement.h">
                <value name="Top" value="0"></value>
                <value name="Bottom" value="1"></value>
                <value name="Left" value="2"></value>
                <value name="Right" value="3"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="protectWindow" fullname="WindowManagement::protectWindow" href="windowmanagement.html#protectWindow" location="windowmanagement.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="protectWindow(QWidget * window)">
                <parameter left="QWidget *" right="" name="window" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dockWindow" fullname="WindowManagement::dockWindow" href="windowmanagement.html#dockWindow" location="windowmanagement.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="dockWindow(QWidget * window, DockArea placement, int screen)">
                <parameter left="QWidget *" right="" name="window" default=""></parameter>
                <parameter left="DockArea" right="" name="placement" default=""></parameter>
                <parameter left="int" right="" name="screen" default="-1"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dockWindow" fullname="WindowManagement::dockWindow" href="windowmanagement.html#dockWindow-2" location="windowmanagement.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="void" signature="dockWindow(QWidget * window, DockArea placement, const QSize &amp; size, int screen)">
                <parameter left="QWidget *" right="" name="window" default=""></parameter>
                <parameter left="DockArea" right="" name="placement" default=""></parameter>
                <parameter left="const QSize &amp;" right="" name="size" default=""></parameter>
                <parameter left="int" right="" name="screen" default="-1"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="showDockedWindow" fullname="WindowManagement::showDockedWindow" href="windowmanagement.html#showDockedWindow" location="windowmanagement.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="showDockedWindow(QWidget * window)">
                <parameter left="QWidget *" right="" name="window" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hideDockedWindow" fullname="WindowManagement::hideDockedWindow" href="windowmanagement.html#hideDockedWindow" location="windowmanagement.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="hideDockedWindow(QWidget * window)">
                <parameter left="QWidget *" right="" name="window" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLowestWindow" fullname="WindowManagement::setLowestWindow" href="windowmanagement.html#setLowestWindow" location="windowmanagement.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setLowestWindow(QWidget * window)">
                <parameter left="QWidget *" right="" name="window" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activeAppName" fullname="WindowManagement::activeAppName" href="windowmanagement.html#activeAppName" location="windowmanagement.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="activeAppName()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportsSoftMenus" fullname="WindowManagement::supportsSoftMenus" href="windowmanagement.html#supportsSoftMenus" location="windowmanagement.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="supportsSoftMenus(WId winId)">
                <parameter left="WId" right="" name="winId" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="closeWindow" fullname="WindowManagement::closeWindow" href="windowmanagement.html#closeWindow" location="windowmanagement.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="closeWindow(WId winId)">
                <parameter left="WId" right="" name="winId" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="windowActive" fullname="WindowManagement::windowActive" href="windowmanagement.html#windowActive" location="windowmanagement.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="windowActive(const QString &amp; caption, const QRect &amp; rect, WId window)">
                <parameter left="const QString &amp;" right="" name="caption" default=""></parameter>
                <parameter left="const QRect &amp;" right="" name="rect" default=""></parameter>
                <parameter left="WId" right="" name="window" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="windowCaption" fullname="WindowManagement::windowCaption" href="windowmanagement.html#windowCaption" location="windowmanagement.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="windowCaption(const QString &amp; caption)">
                <parameter left="const QString &amp;" right="" name="caption" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="ThemeControl" href="themecontrol.html" location="themecontrol.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="instance" fullname="ThemeControl::instance" href="themecontrol.html#instance" location="themecontrol.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="ThemeControl *" signature="instance()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="registerThemedView" fullname="ThemeControl::registerThemedView" href="themecontrol.html#registerThemedView" location="themecontrol.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="registerThemedView(ThemedView * view, const QString &amp; name)">
                <parameter left="ThemedView *" right="" name="view" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exportBackground" fullname="ThemeControl::exportBackground" href="themecontrol.html#exportBackground" location="themecontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="exportBackground() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="refresh" fullname="ThemeControl::refresh" href="themecontrol.html#refresh" location="themecontrol.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="refresh()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setThemeWidgetFactory" fullname="ThemeControl::setThemeWidgetFactory" href="themecontrol.html#setThemeWidgetFactory" location="themecontrol.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setThemeWidgetFactory(QAbstractThemeWidgetFactory * factory)">
                <parameter left="QAbstractThemeWidgetFactory *" right="" name="factory" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="themeChanging" fullname="ThemeControl::themeChanging" href="themecontrol.html#themeChanging" location="themecontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="themeChanging()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="themeChanged" fullname="ThemeControl::themeChanged" href="themecontrol.html#themeChanged" location="themecontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="themeChanged()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaService" href="qtopiaservice.html" location="qtopiaservices.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="list" fullname="QtopiaService::list" href="qtopiaservice.html#list" location="qtopiaservices.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStringList" signature="list()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="binding" fullname="QtopiaService::binding" href="qtopiaservice.html#binding" location="qtopiaservices.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="binding(const QString &amp; service)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="apps" fullname="QtopiaService::apps" href="qtopiaservice.html#apps" location="qtopiaservices.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStringList" signature="apps(const QString &amp; service)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="app" fullname="QtopiaService::app" href="qtopiaservice.html#app" location="qtopiaservices.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="app(const QString &amp; service, const QString &amp; appname)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="appname" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="appConfig" fullname="QtopiaService::appConfig" href="qtopiaservice.html#appConfig" location="qtopiaservices.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="appConfig(const QString &amp; service, const QString &amp; appname)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="appname" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="config" fullname="QtopiaService::config" href="qtopiaservice.html#config" location="qtopiaservices.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="config(const QString &amp; service)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="channels" fullname="QtopiaService::channels" href="qtopiaservice.html#channels" location="qtopiaservices.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStringList" signature="channels(const QString &amp; service)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="channel" fullname="QtopiaService::channel" href="qtopiaservice.html#channel" location="qtopiaservices.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="channel(const QString &amp; service, const QString &amp; appname)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="appname" default="QString()"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaServiceRequest" href="qtopiaservicerequest.html" location="qtopiaservices.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaServiceRequest" fullname="QtopiaServiceRequest::QtopiaServiceRequest" href="qtopiaservicerequest.html#QtopiaServiceRequest" location="qtopiaservices.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtopiaServiceRequest()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaServiceRequest" fullname="QtopiaServiceRequest::QtopiaServiceRequest" href="qtopiaservicerequest.html#QtopiaServiceRequest-2" location="qtopiaservices.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QtopiaServiceRequest(const QString &amp; service, const QString &amp; message)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="message" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaServiceRequest" fullname="QtopiaServiceRequest::QtopiaServiceRequest" href="qtopiaservicerequest.html#QtopiaServiceRequest-3" location="qtopiaservices.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QtopiaServiceRequest(const QtopiaServiceRequest &amp; orig)">
                <parameter left="const QtopiaServiceRequest &amp;" right="" name="orig" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtopiaServiceRequest" fullname="QtopiaServiceRequest::~QtopiaServiceRequest" href="qtopiaservicerequest.html#dtor.QtopiaServiceRequest" location="qtopiaservices.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtopiaServiceRequest()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="send" fullname="QtopiaServiceRequest::send" href="qtopiaservicerequest.html#send" location="qtopiaservices.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="send() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QtopiaServiceRequest::isNull" href="qtopiaservicerequest.html#isNull" location="qtopiaservices.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setService" fullname="QtopiaServiceRequest::setService" href="qtopiaservicerequest.html#setService" location="qtopiaservices.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setService(const QString &amp; service)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="service" fullname="QtopiaServiceRequest::service" href="qtopiaservicerequest.html#service" location="qtopiaservices.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="service() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMessage" fullname="QtopiaServiceRequest::setMessage" href="qtopiaservicerequest.html#setMessage" location="qtopiaservices.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMessage(const QString &amp; message)">
                <parameter left="const QString &amp;" right="" name="message" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="message" fullname="QtopiaServiceRequest::message" href="qtopiaservicerequest.html#message" location="qtopiaservices.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="message() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="arguments" fullname="QtopiaServiceRequest::arguments" href="qtopiaservicerequest.html#arguments" location="qtopiaservices.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QList&lt;QVariant&gt; &amp;" signature="arguments() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setArguments" fullname="QtopiaServiceRequest::setArguments" href="qtopiaservicerequest.html#setArguments" location="qtopiaservices.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setArguments(const QList&lt;QVariant&gt; &amp; arguments)">
                <parameter left="const QList&lt;QVariant&gt; &amp;" right="" name="arguments" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QtopiaServiceRequest::operator=" href="qtopiaservicerequest.html#operator=" location="qtopiaservices.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QtopiaServiceRequest &amp;" signature="operator=(const QtopiaServiceRequest &amp; orig)">
                <parameter left="const QtopiaServiceRequest &amp;" right="" name="orig" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;&lt;" fullname="QtopiaServiceRequest::operator&lt;&lt;" href="qtopiaservicerequest.html#operator&lt;&lt;" location="qtopiaservices.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QtopiaServiceRequest &amp;" signature="operator&lt;&lt;(const T &amp; var)">
                <parameter left="const T &amp;" right="" name="var" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;&lt;" fullname="QtopiaServiceRequest::operator&lt;&lt;" href="qtopiaservicerequest.html#operator&lt;&lt;-2" location="qtopiaservices.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="QtopiaServiceRequest &amp;" signature="operator&lt;&lt;(const char * var)">
                <parameter left="const char *" right="" name="var" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addVariantArg" fullname="QtopiaServiceRequest::addVariantArg" href="qtopiaservicerequest.html#addVariantArg" location="qtopiaservices.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addVariantArg(const QVariant &amp; var)">
                <parameter left="const QVariant &amp;" right="" name="var" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="NetworkSetupService" href="networksetupservice.html" location="networkui.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="configureData" fullname="NetworkSetupService::configureData" href="networksetupservice.html#configureData" location="networkui.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="configureData()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="configureWap" fullname="NetworkSetupService::configureWap" href="networksetupservice.html#configureWap" location="networkui.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="configureWap()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pushWapNetworkSettings" fullname="NetworkSetupService::pushWapNetworkSettings" href="networksetupservice.html#pushWapNetworkSettings" location="networkui.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="pushWapNetworkSettings(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pushNokiaNetworkSettings" fullname="NetworkSetupService::pushNokiaNetworkSettings" href="networksetupservice.html#pushNokiaNetworkSettings" location="networkui.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="pushNokiaNetworkSettings(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QMailComposerPluginInterface" href="qmailcomposerplugininterface.html" location="qmailcomposerplugin.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="isSupported" fullname="QMailComposerPluginInterface::isSupported" href="qmailcomposerplugininterface.html#isSupported" location="qmailcomposerplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSupported(QMailMessage::MessageType type) const">
                <parameter left="QMailMessage::MessageType" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="create" fullname="QMailComposerPluginInterface::create" href="qmailcomposerplugininterface.html#create" location="qmailcomposerplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QMailComposerInterface *" signature="create(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="key" fullname="QMailComposerPluginInterface::key" href="qmailcomposerplugininterface.html#key" location="qmailcomposerplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="key() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="messageType" fullname="QMailComposerPluginInterface::messageType" href="qmailcomposerplugininterface.html#messageType" location="qmailcomposerplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMailMessage::MessageType" signature="messageType() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QMailComposerPluginInterface::name" href="qmailcomposerplugininterface.html#name" location="qmailcomposerplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="displayName" fullname="QMailComposerPluginInterface::displayName" href="qmailcomposerplugininterface.html#displayName" location="qmailcomposerplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="displayName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="displayIcon" fullname="QMailComposerPluginInterface::displayIcon" href="qmailcomposerplugininterface.html#displayIcon" location="qmailcomposerplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QIcon" signature="displayIcon() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QMailComposerPlugin" href="qmailcomposerplugin.html" location="qmailcomposerplugin.h" bases="QObject,QMailComposerPluginInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailComposerPlugin" fullname="QMailComposerPlugin::QMailComposerPlugin" href="qmailcomposerplugin.html#QMailComposerPlugin" location="qmailcomposerplugin.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMailComposerPlugin()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMailComposerPlugin" fullname="QMailComposerPlugin::~QMailComposerPlugin" href="qmailcomposerplugin.html#dtor.QMailComposerPlugin" location="qmailcomposerplugin.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMailComposerPlugin()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="keys" fullname="QMailComposerPlugin::keys" href="qmailcomposerplugin.html#keys" location="qmailcomposerplugin.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="keys() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSupported" fullname="QMailComposerPlugin::isSupported" href="qmailcomposerplugin.html#isSupported" location="qmailcomposerplugin.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSupported(QMailMessage::MessageType type) const">
                <parameter left="QMailMessage::MessageType" right="" name="type" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="IrPowerService" href="irpowerservice.html" location="irpowerservice.h" bases="QAbstractCommDeviceManager" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="IrPowerService" fullname="IrPowerService::IrPowerService" href="irpowerservice.html#IrPowerService" location="irpowerservice.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="IrPowerService(const QByteArray &amp; serverPath, const QByteArray &amp; devId, QObject * parent)">
                <parameter left="const QByteArray &amp;" right="" name="serverPath" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="devId" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~IrPowerService" fullname="IrPowerService::~IrPowerService" href="irpowerservice.html#dtor.IrPowerService" location="irpowerservice.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~IrPowerService()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="IrPowerServiceTask" href="irpowerservicetask.html" location="irpowerservice.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="IrPowerServiceTask" fullname="IrPowerServiceTask::IrPowerServiceTask" href="irpowerservicetask.html#IrPowerServiceTask" location="irpowerservice.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="IrPowerServiceTask(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~IrPowerServiceTask" fullname="IrPowerServiceTask::~IrPowerServiceTask" href="irpowerservicetask.html#dtor.IrPowerServiceTask" location="irpowerservice.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~IrPowerServiceTask()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="GenericMemoryMonitorTask" href="genericmemorymonitortask.html" location="genericmemorymonitor.h" bases="MemoryMonitor" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="memoryState" fullname="GenericMemoryMonitorTask::memoryState" href="genericmemorymonitortask.html#memoryState" location="genericmemorymonitor.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="MemState" signature="memoryState() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="timeInState" fullname="GenericMemoryMonitorTask::timeInState" href="genericmemorymonitortask.html#timeInState" location="genericmemorymonitor.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="unsigned int" signature="timeInState() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSimTerminalResponse" href="qsimterminalresponse.html" location="qsimterminalresponse.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSimTerminalResponse" fullname="QSimTerminalResponse::QSimTerminalResponse" href="qsimterminalresponse.html#QSimTerminalResponse" location="qsimterminalresponse.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSimTerminalResponse()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSimTerminalResponse" fullname="QSimTerminalResponse::QSimTerminalResponse" href="qsimterminalresponse.html#QSimTerminalResponse-2" location="qsimterminalresponse.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QSimTerminalResponse(const QSimTerminalResponse &amp; value)">
                <parameter left="const QSimTerminalResponse &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSimTerminalResponse" fullname="QSimTerminalResponse::~QSimTerminalResponse" href="qsimterminalresponse.html#dtor.QSimTerminalResponse" location="qsimterminalresponse.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSimTerminalResponse()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Result" fullname="QSimTerminalResponse::Result" href="qsimterminalresponse.html#Result-enum" location="qsimterminalresponse.h">
                <value name="Success" value="0x00"></value>
                <value name="PartialComprehension" value="0x01"></value>
                <value name="MissingInformation" value="0x02"></value>
                <value name="RefreshPerformed" value="0x03"></value>
                <value name="IconNotDisplayed" value="0x04"></value>
                <value name="ModifiedCallControl" value="0x05"></value>
                <value name="LimitedService" value="0x06"></value>
                <value name="WithModification" value="0x07"></value>
                <value name="SessionTerminated" value="0x10"></value>
                <value name="BackwardMove" value="0x11"></value>
                <value name="NoResponseFromUser" value="0x12"></value>
                <value name="HelpInformationRequested" value="0x13"></value>
                <value name="UssdOrSsTerminatedByUser" value="0x14"></value>
                <value name="MEUnableToProcess" value="0x20"></value>
                <value name="NetworkUnableToProcess" value="0x21"></value>
                <value name="UserDidNotAccept" value="0x22"></value>
                <value name="UserClearedDownCall" value="0x23"></value>
                <value name="ActionInContradictionWithTimer" value="0x24"></value>
                <value name="TemporaryCallControlProblem" value="0x25"></value>
                <value name="LaunchBrowserError" value="0x26"></value>
                <value name="BeyondMECapabilities" value="0x30"></value>
                <value name="TypeNotUnderstood" value="0x31"></value>
                <value name="DataNotUnderstood" value="0x32"></value>
                <value name="NumberNotUnderstood" value="0x33"></value>
                <value name="SsReturnError" value="0x34"></value>
                <value name="SmsRpError" value="0x35"></value>
                <value name="RequiredValuesMissing" value="0x36"></value>
                <value name="UssdReturnError" value="0x37"></value>
                <value name="MultipleCardError" value="0x38"></value>
                <value name="PermanentCallControlProblem" value="0x39"></value>
                <value name="BearerIndependentProtocolProblem" value="0x3A"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Cause" fullname="QSimTerminalResponse::Cause" href="qsimterminalresponse.html#Cause-enum" location="qsimterminalresponse.h">
                <value name="NoSpecificCause" value="0x00"></value>
                <value name="ScreenIsBusy" value="0x01"></value>
                <value name="BusyOnCall" value="0x02"></value>
                <value name="BusyOnSsTransaction" value="0x03"></value>
                <value name="NoService" value="0x04"></value>
                <value name="AccessControlClassBar" value="0x05"></value>
                <value name="RadioResourceNotGranted" value="0x06"></value>
                <value name="NotInSpeechCall" value="0x07"></value>
                <value name="BusyOnUssdTransaction" value="0x08"></value>
                <value name="BusyOnDtmf" value="0x09"></value>
                <value name="ActionNotAllowed" value="0x01"></value>
                <value name="TypeOfRequestHasChanged" value="0x02"></value>
                <value name="CardReaderRemovedOrNotPresent" value="0x01"></value>
                <value name="CardRemovedOrNotPresent" value="0x02"></value>
                <value name="CardReaderBusy" value="0x03"></value>
                <value name="CardPoweredOff" value="0x04"></value>
                <value name="CAPDUFormatError" value="0x05"></value>
                <value name="MuteCard" value="0x06"></value>
                <value name="TransmissionError" value="0x07"></value>
                <value name="ProtocolNotSupported" value="0x08"></value>
                <value name="SpecifiedReaderNotValid" value="0x09"></value>
                <value name="BearerUnavailable" value="0x01"></value>
                <value name="BrowserUnavailable" value="0x02"></value>
                <value name="UnableToReadProvisioningData" value="0x03"></value>
                <value name="NoChannelAvailable" value="0x01"></value>
                <value name="ChannelClosed" value="0x02"></value>
                <value name="ChannelIdentifierNotValid" value="0x03"></value>
                <value name="RequestedBufferSizeNotAvailable" value="0x04"></value>
                <value name="SecurityError" value="0x05"></value>
                <value name="RequestedTransportNotAvailable" value="0x06"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="command" fullname="QSimTerminalResponse::command" href="qsimterminalresponse.html#command" location="qsimterminalresponse.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSimCommand" signature="command() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCommand" fullname="QSimTerminalResponse::setCommand" href="qsimterminalresponse.html#setCommand" location="qsimterminalresponse.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCommand(const QSimCommand &amp; value)">
                <parameter left="const QSimCommand &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="commandPdu" fullname="QSimTerminalResponse::commandPdu" href="qsimterminalresponse.html#commandPdu" location="qsimterminalresponse.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="commandPdu() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCommandPdu" fullname="QSimTerminalResponse::setCommandPdu" href="qsimterminalresponse.html#setCommandPdu" location="qsimterminalresponse.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCommandPdu(const QByteArray &amp; value)">
                <parameter left="const QByteArray &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sourceDevice" fullname="QSimTerminalResponse::sourceDevice" href="qsimterminalresponse.html#sourceDevice" location="qsimterminalresponse.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSimCommand::Device" signature="sourceDevice() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSourceDevice" fullname="QSimTerminalResponse::setSourceDevice" href="qsimterminalresponse.html#setSourceDevice" location="qsimterminalresponse.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSourceDevice(QSimCommand::Device value)">
                <parameter left="QSimCommand::Device" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="destinationDevice" fullname="QSimTerminalResponse::destinationDevice" href="qsimterminalresponse.html#destinationDevice" location="qsimterminalresponse.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSimCommand::Device" signature="destinationDevice() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDestinationDevice" fullname="QSimTerminalResponse::setDestinationDevice" href="qsimterminalresponse.html#setDestinationDevice" location="qsimterminalresponse.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDestinationDevice(QSimCommand::Device value)">
                <parameter left="QSimCommand::Device" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="result" fullname="QSimTerminalResponse::result" href="qsimterminalresponse.html#result" location="qsimterminalresponse.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSimTerminalResponse::Result" signature="result() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setResult" fullname="QSimTerminalResponse::setResult" href="qsimterminalresponse.html#setResult" location="qsimterminalresponse.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setResult(QSimTerminalResponse::Result value)">
                <parameter left="QSimTerminalResponse::Result" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cause" fullname="QSimTerminalResponse::cause" href="qsimterminalresponse.html#cause" location="qsimterminalresponse.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSimTerminalResponse::Cause" signature="cause() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCause" fullname="QSimTerminalResponse::setCause" href="qsimterminalresponse.html#setCause" location="qsimterminalresponse.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCause(QSimTerminalResponse::Cause value)">
                <parameter left="QSimTerminalResponse::Cause" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="causeData" fullname="QSimTerminalResponse::causeData" href="qsimterminalresponse.html#causeData" location="qsimterminalresponse.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="causeData() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCauseData" fullname="QSimTerminalResponse::setCauseData" href="qsimterminalresponse.html#setCauseData" location="qsimterminalresponse.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCauseData(const QByteArray &amp; value)">
                <parameter left="const QByteArray &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="text" fullname="QSimTerminalResponse::text" href="qsimterminalresponse.html#text" location="qsimterminalresponse.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="text() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setText" fullname="QSimTerminalResponse::setText" href="qsimterminalresponse.html#setText" location="qsimterminalresponse.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setText(const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QSimTerminalResponse::duration" href="qsimterminalresponse.html#duration" location="qsimterminalresponse.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="duration() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDuration" fullname="QSimTerminalResponse::setDuration" href="qsimterminalresponse.html#setDuration" location="qsimterminalresponse.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDuration(uint value)">
                <parameter left="uint" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="menuItem" fullname="QSimTerminalResponse::menuItem" href="qsimterminalresponse.html#menuItem" location="qsimterminalresponse.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="menuItem() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMenuItem" fullname="QSimTerminalResponse::setMenuItem" href="qsimterminalresponse.html#setMenuItem" location="qsimterminalresponse.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMenuItem(uint value)">
                <parameter left="uint" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dataCodingScheme" fullname="QSimTerminalResponse::dataCodingScheme" href="qsimterminalresponse.html#dataCodingScheme" location="qsimterminalresponse.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="dataCodingScheme() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDataCodingScheme" fullname="QSimTerminalResponse::setDataCodingScheme" href="qsimterminalresponse.html#setDataCodingScheme" location="qsimterminalresponse.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDataCodingScheme(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="extensionData" fullname="QSimTerminalResponse::extensionData" href="qsimterminalresponse.html#extensionData" location="qsimterminalresponse.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="extensionData() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExtensionData" fullname="QSimTerminalResponse::setExtensionData" href="qsimterminalresponse.html#setExtensionData" location="qsimterminalresponse.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setExtensionData(QByteArray value)">
                <parameter left="QByteArray" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="extensionField" fullname="QSimTerminalResponse::extensionField" href="qsimterminalresponse.html#extensionField" location="qsimterminalresponse.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="extensionField(int tag) const">
                <parameter left="int" right="" name="tag" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addExtensionField" fullname="QSimTerminalResponse::addExtensionField" href="qsimterminalresponse.html#addExtensionField" location="qsimterminalresponse.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addExtensionField(int tag, const QByteArray &amp; value)">
                <parameter left="int" right="" name="tag" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromPdu" fullname="QSimTerminalResponse::fromPdu" href="qsimterminalresponse.html#fromPdu" location="qsimterminalresponse.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QSimTerminalResponse" signature="fromPdu(const QByteArray &amp; pdu)">
                <parameter left="const QByteArray &amp;" right="" name="pdu" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toPdu" fullname="QSimTerminalResponse::toPdu" href="qsimterminalresponse.html#toPdu" location="qsimterminalresponse.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="toPdu() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QSimTerminalResponse::operator=" href="qsimterminalresponse.html#operator=" location="qsimterminalresponse.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QSimTerminalResponse &amp;" signature="operator=(const QSimTerminalResponse &amp; value)">
                <parameter left="const QSimTerminalResponse &amp;" right="" name="value" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="PhoneServer" href="phoneserver.html" location="phoneserver.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="PhoneServer" fullname="PhoneServer::PhoneServer" href="phoneserver.html#PhoneServer" location="phoneserver.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="PhoneServer(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~PhoneServer" fullname="PhoneServer::~PhoneServer" href="phoneserver.html#dtor.PhoneServer" location="phoneserver.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~PhoneServer()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSoftMenuBar" href="qsoftmenubar.html" location="qsoftmenubar.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="FocusState" fullname="QSoftMenuBar::FocusState" href="qsoftmenubar.html#FocusState-enum" location="qsoftmenubar.h">
                <value name="EditFocus" value="1"></value>
                <value name="NavigationFocus" value="2"></value>
                <value name="AnyFocus" value="3"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="StandardLabel" fullname="QSoftMenuBar::StandardLabel" href="qsoftmenubar.html#StandardLabel-enum" location="qsoftmenubar.h">
                <value name="NoLabel" value="0"></value>
                <value name="Options" value="1"></value>
                <value name="Ok" value="2"></value>
                <value name="Edit" value="3"></value>
                <value name="Select" value="4"></value>
                <value name="View" value="5"></value>
                <value name="Cancel" value="6"></value>
                <value name="Back" value="7"></value>
                <value name="BackSpace" value="8"></value>
                <value name="Next" value="9"></value>
                <value name="Previous" value="10"></value>
                <value name="EndEdit" value="11"></value>
                <value name="RevertEdit" value="12"></value>
                <value name="Deselect" value="13"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="LabelType" fullname="QSoftMenuBar::LabelType" href="qsoftmenubar.html#LabelType-enum" location="qsoftmenubar.h">
                <value name="IconLabel" value="0"></value>
                <value name="TextLabel" value="1"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLabel" fullname="QSoftMenuBar::setLabel" href="qsoftmenubar.html#setLabel" location="qsoftmenubar.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setLabel(QWidget * widget, int key, const QString &amp; pixmap, const QString &amp; text, FocusState state)">
                <parameter left="QWidget *" right="" name="widget" default=""></parameter>
                <parameter left="int" right="" name="key" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="pixmap" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
                <parameter left="FocusState" right="" name="state" default="AnyFocus"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLabel" fullname="QSoftMenuBar::setLabel" href="qsoftmenubar.html#setLabel-2" location="qsoftmenubar.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="void" signature="setLabel(QWidget * widget, int key, StandardLabel label, FocusState state)">
                <parameter left="QWidget *" right="" name="widget" default=""></parameter>
                <parameter left="int" right="" name="key" default=""></parameter>
                <parameter left="StandardLabel" right="" name="label" default=""></parameter>
                <parameter left="FocusState" right="" name="state" default="AnyFocus"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearLabel" fullname="QSoftMenuBar::clearLabel" href="qsoftmenubar.html#clearLabel" location="qsoftmenubar.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="clearLabel(QWidget * widget, int key, FocusState state)">
                <parameter left="QWidget *" right="" name="widget" default=""></parameter>
                <parameter left="int" right="" name="key" default=""></parameter>
                <parameter left="FocusState" right="" name="state" default="AnyFocus"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="keys" fullname="QSoftMenuBar::keys" href="qsoftmenubar.html#keys" location="qsoftmenubar.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="const QList&lt;int&gt; &amp;" signature="keys()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="menuKey" fullname="QSoftMenuBar::menuKey" href="qsoftmenubar.html#menuKey" location="qsoftmenubar.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="menuKey()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="menuFor" fullname="QSoftMenuBar::menuFor" href="qsoftmenubar.html#menuFor" location="qsoftmenubar.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMenu *" signature="menuFor(QWidget * widget, FocusState state)">
                <parameter left="QWidget *" right="" name="widget" default=""></parameter>
                <parameter left="FocusState" right="" name="state" default="AnyFocus"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasMenu" fullname="QSoftMenuBar::hasMenu" href="qsoftmenubar.html#hasMenu" location="qsoftmenubar.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="hasMenu(QWidget * widget, FocusState state)">
                <parameter left="QWidget *" right="" name="widget" default=""></parameter>
                <parameter left="FocusState" right="" name="state" default="AnyFocus"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addMenuTo" fullname="QSoftMenuBar::addMenuTo" href="qsoftmenubar.html#addMenuTo" location="qsoftmenubar.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="addMenuTo(QWidget * widget, QMenu * menu, FocusState state)">
                <parameter left="QWidget *" right="" name="widget" default=""></parameter>
                <parameter left="QMenu *" right="" name="menu" default=""></parameter>
                <parameter left="FocusState" right="" name="state" default="AnyFocus"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeMenuFrom" fullname="QSoftMenuBar::removeMenuFrom" href="qsoftmenubar.html#removeMenuFrom" location="qsoftmenubar.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="removeMenuFrom(QWidget * widget, QMenu * menu, FocusState state)">
                <parameter left="QWidget *" right="" name="widget" default=""></parameter>
                <parameter left="QMenu *" right="" name="menu" default=""></parameter>
                <parameter left="FocusState" right="" name="state" default="AnyFocus"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="widgetsFor" fullname="QSoftMenuBar::widgetsFor" href="qsoftmenubar.html#widgetsFor" location="qsoftmenubar.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QWidgetList" signature="widgetsFor(const QMenu * menu, FocusState state)">
                <parameter left="const QMenu *" right="" name="menu" default=""></parameter>
                <parameter left="FocusState" right="" name="state" default="AnyFocus"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHelpEnabled" fullname="QSoftMenuBar::setHelpEnabled" href="qsoftmenubar.html#setHelpEnabled" location="qsoftmenubar.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setHelpEnabled(QWidget * widget, bool enable)">
                <parameter left="QWidget *" right="" name="widget" default=""></parameter>
                <parameter left="bool" right="" name="enable" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCancelEnabled" fullname="QSoftMenuBar::setCancelEnabled" href="qsoftmenubar.html#setCancelEnabled" location="qsoftmenubar.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setCancelEnabled(QWidget * widget, bool enable)">
                <parameter left="QWidget *" right="" name="widget" default=""></parameter>
                <parameter left="bool" right="" name="enable" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setInputMethodEnabled" fullname="QSoftMenuBar::setInputMethodEnabled" href="qsoftmenubar.html#setInputMethodEnabled" location="qsoftmenubar.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setInputMethodEnabled(QWidget * widget, bool enable)">
                <parameter left="QWidget *" right="" name="widget" default=""></parameter>
                <parameter left="bool" right="" name="enable" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="createEditMenu" fullname="QSoftMenuBar::createEditMenu" href="qsoftmenubar.html#createEditMenu" location="qsoftmenubar.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMenu *" signature="createEditMenu()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="BtHeadsetServiceTask" href="btheadsetservicetask.html" location="btheadsettask.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="BtHeadsetServiceTask" fullname="BtHeadsetServiceTask::BtHeadsetServiceTask" href="btheadsetservicetask.html#BtHeadsetServiceTask" location="btheadsettask.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="BtHeadsetServiceTask(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~BtHeadsetServiceTask" fullname="BtHeadsetServiceTask::~BtHeadsetServiceTask" href="btheadsetservicetask.html#dtor.BtHeadsetServiceTask" location="btheadsettask.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~BtHeadsetServiceTask()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QTimeZoneSelector" href="qtimezoneselector.html" location="qtimezoneselector.h" bases="QWidget" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="currentZone" fullname="QTimeZoneSelector::currentZone" href="qtimezoneselector.html#currentZone-prop" location="qtimezoneselector.h" type="QString">
                <getter name="currentZone"></getter>
                <setter name="setCurrentZone"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="allowNoZone" fullname="QTimeZoneSelector::allowNoZone" href="qtimezoneselector.html#allowNoZone-prop" location="qtimezoneselector.h" type="bool">
                <getter name="allowNoZone"></getter>
                <setter name="setAllowNoZone"></setter>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QTimeZoneSelector" fullname="QTimeZoneSelector::QTimeZoneSelector" href="qtimezoneselector.html#QTimeZoneSelector" location="qtimezoneselector.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QTimeZoneSelector(QWidget * p)">
                <parameter left="QWidget *" right="" name="p" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QTimeZoneSelector" fullname="QTimeZoneSelector::~QTimeZoneSelector" href="qtimezoneselector.html#dtor.QTimeZoneSelector" location="qtimezoneselector.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QTimeZoneSelector()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentZone" fullname="QTimeZoneSelector::currentZone" href="qtimezoneselector.html#currentZone-prop" location="qtimezoneselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="currentZone" type="QString" signature="currentZone() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCurrentZone" fullname="QTimeZoneSelector::setCurrentZone" href="qtimezoneselector.html#currentZone-prop" location="qtimezoneselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="currentZone" type="void" signature="setCurrentZone(const QString &amp; id)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAllowNoZone" fullname="QTimeZoneSelector::setAllowNoZone" href="qtimezoneselector.html#allowNoZone-prop" location="qtimezoneselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="allowNoZone" type="void" signature="setAllowNoZone(bool b)">
                <parameter left="bool" right="" name="b" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="allowNoZone" fullname="QTimeZoneSelector::allowNoZone" href="qtimezoneselector.html#allowNoZone-prop" location="qtimezoneselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="allowNoZone" type="bool" signature="allowNoZone() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="zoneChanged" fullname="QTimeZoneSelector::zoneChanged" href="qtimezoneselector.html#zoneChanged" location="qtimezoneselector.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="zoneChanged(const QString &amp; id)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaVideoControlServer" href="qmediavideocontrolserver.html" location="qmediavideocontrolserver.h" bases="QMediaAbstractControlServer" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaVideoControlServer" fullname="QMediaVideoControlServer::QMediaVideoControlServer" href="qmediavideocontrolserver.html#QMediaVideoControlServer" location="qmediavideocontrolserver.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaVideoControlServer(QMediaHandle const &amp; handle, QWidget * target, QObject * parent)">
                <parameter left="QMediaHandle const &amp;" right="" name="handle" default=""></parameter>
                <parameter left="QWidget *" right="" name="target" default="0"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaVideoControlServer" fullname="QMediaVideoControlServer::~QMediaVideoControlServer" href="qmediavideocontrolserver.html#dtor.QMediaVideoControlServer" location="qmediavideocontrolserver.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaVideoControlServer()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRenderTarget" fullname="QMediaVideoControlServer::setRenderTarget" href="qmediavideocontrolserver.html#setRenderTarget" location="qmediavideocontrolserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRenderTarget(QWidget * renderTarget)">
                <parameter left="QWidget *" right="" name="renderTarget" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRenderTarget" fullname="QMediaVideoControlServer::setRenderTarget" href="qmediavideocontrolserver.html#setRenderTarget-2" location="qmediavideocontrolserver.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setRenderTarget(int wid)">
                <parameter left="int" right="" name="wid" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unsetRenderTarget" fullname="QMediaVideoControlServer::unsetRenderTarget" href="qmediavideocontrolserver.html#unsetRenderTarget" location="qmediavideocontrolserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="unsetRenderTarget()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoTargetAvailable" fullname="QMediaVideoControlServer::videoTargetAvailable" href="qmediavideocontrolserver.html#videoTargetAvailable" location="qmediavideocontrolserver.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="videoTargetAvailable()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoTargetRemoved" fullname="QMediaVideoControlServer::videoTargetRemoved" href="qmediavideocontrolserver.html#videoTargetRemoved" location="qmediavideocontrolserver.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="videoTargetRemoved()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothSdpQueryResult" href="qbluetoothsdpqueryresult.html" location="qbluetoothsdpquery.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothSdpQueryResult" fullname="QBluetoothSdpQueryResult::QBluetoothSdpQueryResult" href="qbluetoothsdpqueryresult.html#QBluetoothSdpQueryResult" location="qbluetoothsdpquery.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothSdpQueryResult()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothSdpQueryResult" fullname="QBluetoothSdpQueryResult::QBluetoothSdpQueryResult" href="qbluetoothsdpqueryresult.html#QBluetoothSdpQueryResult-2" location="qbluetoothsdpquery.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QBluetoothSdpQueryResult(const QBluetoothSdpQueryResult &amp; other)">
                <parameter left="const QBluetoothSdpQueryResult &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QBluetoothSdpQueryResult::operator=" href="qbluetoothsdpqueryresult.html#operator=" location="qbluetoothsdpquery.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QBluetoothSdpQueryResult &amp;" signature="operator=(const QBluetoothSdpQueryResult &amp; other)">
                <parameter left="const QBluetoothSdpQueryResult &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QBluetoothSdpQueryResult::isValid" href="qbluetoothsdpqueryresult.html#isValid" location="qbluetoothsdpquery.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setError" fullname="QBluetoothSdpQueryResult::setError" href="qbluetoothsdpqueryresult.html#setError" location="qbluetoothsdpquery.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setError(const QString &amp; error)">
                <parameter left="const QString &amp;" right="" name="error" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QBluetoothSdpQueryResult::error" href="qbluetoothsdpqueryresult.html#error" location="qbluetoothsdpquery.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="error() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="services" fullname="QBluetoothSdpQueryResult::services" href="qbluetoothsdpqueryresult.html#services" location="qbluetoothsdpquery.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QList&lt;QBluetoothSdpRecord&gt; &amp;" signature="services() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addService" fullname="QBluetoothSdpQueryResult::addService" href="qbluetoothsdpqueryresult.html#addService" location="qbluetoothsdpquery.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addService(const QBluetoothSdpRecord &amp; service)">
                <parameter left="const QBluetoothSdpRecord &amp;" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="reset" fullname="QBluetoothSdpQueryResult::reset" href="qbluetoothsdpqueryresult.html#reset" location="qbluetoothsdpquery.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="reset()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothSdpQuery" href="qbluetoothsdpquery.html" location="qbluetoothsdpquery.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothSdpQuery" fullname="QBluetoothSdpQuery::QBluetoothSdpQuery" href="qbluetoothsdpquery.html#QBluetoothSdpQuery" location="qbluetoothsdpquery.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothSdpQuery(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothSdpQuery" fullname="QBluetoothSdpQuery::~QBluetoothSdpQuery" href="qbluetoothsdpquery.html#dtor.QBluetoothSdpQuery" location="qbluetoothsdpquery.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothSdpQuery()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchServices" fullname="QBluetoothSdpQuery::searchServices" href="qbluetoothsdpquery.html#searchServices" location="qbluetoothsdpquery.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="searchServices(const QBluetoothAddress &amp; remote, const QBluetoothLocalDevice &amp; local, QBluetooth::SDPProfile profile)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="remote" default=""></parameter>
                <parameter left="const QBluetoothLocalDevice &amp;" right="" name="local" default=""></parameter>
                <parameter left="QBluetooth::SDPProfile" right="" name="profile" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchServices" fullname="QBluetoothSdpQuery::searchServices" href="qbluetoothsdpquery.html#searchServices-2" location="qbluetoothsdpquery.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="searchServices(const QBluetoothAddress &amp; remote, const QBluetoothLocalDevice &amp; local, const QBluetoothSdpUuid &amp; uuid)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="remote" default=""></parameter>
                <parameter left="const QBluetoothLocalDevice &amp;" right="" name="local" default=""></parameter>
                <parameter left="const QBluetoothSdpUuid &amp;" right="" name="uuid" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="browseServices" fullname="QBluetoothSdpQuery::browseServices" href="qbluetoothsdpquery.html#browseServices" location="qbluetoothsdpquery.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="browseServices(const QBluetoothAddress &amp; remote, const QBluetoothLocalDevice &amp; local)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="remote" default=""></parameter>
                <parameter left="const QBluetoothLocalDevice &amp;" right="" name="local" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancelSearch" fullname="QBluetoothSdpQuery::cancelSearch" href="qbluetoothsdpquery.html#cancelSearch" location="qbluetoothsdpquery.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="cancelSearch()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchComplete" fullname="QBluetoothSdpQuery::searchComplete" href="qbluetoothsdpquery.html#searchComplete" location="qbluetoothsdpquery.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="searchComplete(const QBluetoothSdpQueryResult &amp; result)">
                <parameter left="const QBluetoothSdpQueryResult &amp;" right="" name="result" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchCancelled" fullname="QBluetoothSdpQuery::searchCancelled" href="qbluetoothsdpquery.html#searchCancelled" location="qbluetoothsdpquery.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="searchCancelled()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QValueSpaceItem" href="qvaluespaceitem.html" location="qvaluespace.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QValueSpaceItem" fullname="QValueSpaceItem::QValueSpaceItem" href="qvaluespaceitem.html#QValueSpaceItem" location="qvaluespace.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QValueSpaceItem(const QValueSpaceItem &amp; base, const QByteArray &amp; path, QObject * parent)">
                <parameter left="const QValueSpaceItem &amp;" right="" name="base" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="path" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QValueSpaceItem" fullname="QValueSpaceItem::QValueSpaceItem" href="qvaluespaceitem.html#QValueSpaceItem-5" location="qvaluespace.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="5" type="" signature="QValueSpaceItem(const QValueSpaceItem &amp; base, const QString &amp; path, QObject * parent)">
                <parameter left="const QValueSpaceItem &amp;" right="" name="base" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="path" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QValueSpaceItem" fullname="QValueSpaceItem::QValueSpaceItem" href="qvaluespaceitem.html#QValueSpaceItem-6" location="qvaluespace.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="6" type="" signature="QValueSpaceItem(const QValueSpaceItem &amp; base, const char * path, QObject * parent)">
                <parameter left="const QValueSpaceItem &amp;" right="" name="base" default=""></parameter>
                <parameter left="const char *" right="" name="path" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QValueSpaceItem" fullname="QValueSpaceItem::QValueSpaceItem" href="qvaluespaceitem.html#QValueSpaceItem-2" location="qvaluespace.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QValueSpaceItem(const QValueSpaceItem &amp; other, QObject * parent)">
                <parameter left="const QValueSpaceItem &amp;" right="" name="other" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QValueSpaceItem" fullname="QValueSpaceItem::QValueSpaceItem" href="qvaluespaceitem.html#QValueSpaceItem-3" location="qvaluespace.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QValueSpaceItem(const QByteArray &amp; path, QObject * parent)">
                <parameter left="const QByteArray &amp;" right="" name="path" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QValueSpaceItem" fullname="QValueSpaceItem::QValueSpaceItem" href="qvaluespaceitem.html#QValueSpaceItem-7" location="qvaluespace.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="7" type="" signature="QValueSpaceItem(const QString &amp; path, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="path" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QValueSpaceItem" fullname="QValueSpaceItem::QValueSpaceItem" href="qvaluespaceitem.html#QValueSpaceItem-8" location="qvaluespace.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="8" type="" signature="QValueSpaceItem(const char * path, QObject * parent)">
                <parameter left="const char *" right="" name="path" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QValueSpaceItem" fullname="QValueSpaceItem::QValueSpaceItem" href="qvaluespaceitem.html#QValueSpaceItem-4" location="qvaluespace.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QValueSpaceItem(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QValueSpaceItem" fullname="QValueSpaceItem::~QValueSpaceItem" href="qvaluespaceitem.html#dtor.QValueSpaceItem" location="qvaluespace.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QValueSpaceItem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemName" fullname="QValueSpaceItem::itemName" href="qvaluespaceitem.html#itemName" location="qvaluespace.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="itemName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="subPaths" fullname="QValueSpaceItem::subPaths" href="qvaluespaceitem.html#subPaths" location="qvaluespace.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QString&gt;" signature="subPaths() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remove" fullname="QValueSpaceItem::remove" href="qvaluespaceitem.html#remove" location="qvaluespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="remove()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remove" fullname="QValueSpaceItem::remove" href="qvaluespaceitem.html#remove-2" location="qvaluespace.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="remove(const QByteArray &amp; subPath)">
                <parameter left="const QByteArray &amp;" right="" name="subPath" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remove" fullname="QValueSpaceItem::remove" href="qvaluespaceitem.html#remove-3" location="qvaluespace.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="void" signature="remove(const char * subPath)">
                <parameter left="const char *" right="" name="subPath" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remove" fullname="QValueSpaceItem::remove" href="qvaluespaceitem.html#remove-4" location="qvaluespace.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="4" type="void" signature="remove(const QString &amp; subPath)">
                <parameter left="const QString &amp;" right="" name="subPath" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setValue" fullname="QValueSpaceItem::setValue" href="qvaluespaceitem.html#setValue" location="qvaluespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setValue(const QVariant &amp; value)">
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setValue" fullname="QValueSpaceItem::setValue" href="qvaluespaceitem.html#setValue-2" location="qvaluespace.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setValue(const QByteArray &amp; subPath, const QVariant &amp; value)">
                <parameter left="const QByteArray &amp;" right="" name="subPath" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setValue" fullname="QValueSpaceItem::setValue" href="qvaluespaceitem.html#setValue-3" location="qvaluespace.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="void" signature="setValue(const char * subPath, const QVariant &amp; value)">
                <parameter left="const char *" right="" name="subPath" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setValue" fullname="QValueSpaceItem::setValue" href="qvaluespaceitem.html#setValue-4" location="qvaluespace.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="4" type="void" signature="setValue(const QString &amp; subPath, const QVariant &amp; value)">
                <parameter left="const QString &amp;" right="" name="subPath" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sync" fullname="QValueSpaceItem::sync" href="qvaluespaceitem.html#sync" location="qvaluespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="sync()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QValueSpaceItem::value" href="qvaluespaceitem.html#value" location="qvaluespace.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="value(const QByteArray &amp; subPath, const QVariant &amp; def) const">
                <parameter left="const QByteArray &amp;" right="" name="subPath" default="QByteArray()"></parameter>
                <parameter left="const QVariant &amp;" right="" name="def" default="QVariant()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QValueSpaceItem::value" href="qvaluespaceitem.html#value-3" location="qvaluespace.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="3" type="QVariant" signature="value(const char * subPath, const QVariant &amp; def) const">
                <parameter left="const char *" right="" name="subPath" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="def" default="QVariant()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QValueSpaceItem::value" href="qvaluespaceitem.html#value-2" location="qvaluespace.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QVariant" signature="value(const QString &amp; subPath, const QVariant &amp; def) const">
                <parameter left="const QString &amp;" right="" name="subPath" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="def" default="QVariant()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QValueSpaceItem::operator=" href="qvaluespaceitem.html#operator=" location="qvaluespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QValueSpaceItem &amp;" signature="operator=(const QValueSpaceItem &amp; other)">
                <parameter left="const QValueSpaceItem &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentsChanged" fullname="QValueSpaceItem::contentsChanged" href="qvaluespaceitem.html#contentsChanged" location="qvaluespace.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="contentsChanged()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QValueSpaceObject" href="qvaluespaceobject.html" location="qvaluespace.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QValueSpaceObject" fullname="QValueSpaceObject::QValueSpaceObject" href="qvaluespaceobject.html#QValueSpaceObject-2" location="qvaluespace.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QValueSpaceObject(const char * objectPath, QObject * parent)">
                <parameter left="const char *" right="" name="objectPath" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QValueSpaceObject" fullname="QValueSpaceObject::QValueSpaceObject" href="qvaluespaceobject.html#QValueSpaceObject-3" location="qvaluespace.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QValueSpaceObject(const QString &amp; objectPath, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="objectPath" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QValueSpaceObject" fullname="QValueSpaceObject::QValueSpaceObject" href="qvaluespaceobject.html#QValueSpaceObject" location="qvaluespace.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QValueSpaceObject(const QByteArray &amp; objectPath, QObject * parent)">
                <parameter left="const QByteArray &amp;" right="" name="objectPath" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QValueSpaceObject" fullname="QValueSpaceObject::~QValueSpaceObject" href="qvaluespaceobject.html#dtor.QValueSpaceObject" location="qvaluespace.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QValueSpaceObject()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="objectPath" fullname="QValueSpaceObject::objectPath" href="qvaluespaceobject.html#objectPath" location="qvaluespace.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="objectPath() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sync" fullname="QValueSpaceObject::sync" href="qvaluespaceobject.html#sync" location="qvaluespace.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="sync()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemRemove" fullname="QValueSpaceObject::itemRemove" href="qvaluespaceobject.html#itemRemove" location="qvaluespace.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemRemove(const QByteArray &amp; attribute)">
                <parameter left="const QByteArray &amp;" right="" name="attribute" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemSetValue" fullname="QValueSpaceObject::itemSetValue" href="qvaluespaceobject.html#itemSetValue" location="qvaluespace.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemSetValue(const QByteArray &amp; attribute, const QVariant &amp; value)">
                <parameter left="const QByteArray &amp;" right="" name="attribute" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttribute" fullname="QValueSpaceObject::setAttribute" href="qvaluespaceobject.html#setAttribute-2" location="qvaluespace.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="setAttribute(const char * attribute, const QVariant &amp; data)">
                <parameter left="const char *" right="" name="attribute" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeAttribute" fullname="QValueSpaceObject::removeAttribute" href="qvaluespaceobject.html#removeAttribute-3" location="qvaluespace.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="3" type="void" signature="removeAttribute(const char * attribute)">
                <parameter left="const char *" right="" name="attribute" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttribute" fullname="QValueSpaceObject::setAttribute" href="qvaluespaceobject.html#setAttribute-3" location="qvaluespace.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="3" type="void" signature="setAttribute(const QString &amp; attribute, const QVariant &amp; data)">
                <parameter left="const QString &amp;" right="" name="attribute" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeAttribute" fullname="QValueSpaceObject::removeAttribute" href="qvaluespaceobject.html#removeAttribute-2" location="qvaluespace.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="removeAttribute(const QString &amp; attribute)">
                <parameter left="const QString &amp;" right="" name="attribute" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttribute" fullname="QValueSpaceObject::setAttribute" href="qvaluespaceobject.html#setAttribute" location="qvaluespace.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setAttribute(const QByteArray &amp; attribute, const QVariant &amp; data)">
                <parameter left="const QByteArray &amp;" right="" name="attribute" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeAttribute" fullname="QValueSpaceObject::removeAttribute" href="qvaluespaceobject.html#removeAttribute" location="qvaluespace.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="removeAttribute(const QByteArray &amp; attribute)">
                <parameter left="const QByteArray &amp;" right="" name="attribute" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QObexAuthenticationChallenge" href="qobexauthenticationchallenge.html" location="qobexauthenticationchallenge.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QObexAuthenticationChallenge" fullname="QObexAuthenticationChallenge::QObexAuthenticationChallenge" href="qobexauthenticationchallenge.html#QObexAuthenticationChallenge" location="qobexauthenticationchallenge.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QObexAuthenticationChallenge()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QObexAuthenticationChallenge" fullname="QObexAuthenticationChallenge::QObexAuthenticationChallenge" href="qobexauthenticationchallenge.html#QObexAuthenticationChallenge-2" location="qobexauthenticationchallenge.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QObexAuthenticationChallenge(const QObexAuthenticationChallenge &amp; other)">
                <parameter left="const QObexAuthenticationChallenge &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QObexAuthenticationChallenge" fullname="QObexAuthenticationChallenge::~QObexAuthenticationChallenge" href="qobexauthenticationchallenge.html#dtor.QObexAuthenticationChallenge" location="qobexauthenticationchallenge.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QObexAuthenticationChallenge()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QObexAuthenticationChallenge::operator=" href="qobexauthenticationchallenge.html#operator=" location="qobexauthenticationchallenge.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QObexAuthenticationChallenge &amp;" signature="operator=(const QObexAuthenticationChallenge &amp; other)">
                <parameter left="const QObexAuthenticationChallenge &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUser" fullname="QObexAuthenticationChallenge::setUser" href="qobexauthenticationchallenge.html#setUser" location="qobexauthenticationchallenge.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setUser(const QString &amp; userName)">
                <parameter left="const QString &amp;" right="" name="userName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="user" fullname="QObexAuthenticationChallenge::user" href="qobexauthenticationchallenge.html#user" location="qobexauthenticationchallenge.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="user() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPassword" fullname="QObexAuthenticationChallenge::setPassword" href="qobexauthenticationchallenge.html#setPassword" location="qobexauthenticationchallenge.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPassword(const QString &amp; password)">
                <parameter left="const QString &amp;" right="" name="password" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="password" fullname="QObexAuthenticationChallenge::password" href="qobexauthenticationchallenge.html#password" location="qobexauthenticationchallenge.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="password() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="options" fullname="QObexAuthenticationChallenge::options" href="qobexauthenticationchallenge.html#options" location="qobexauthenticationchallenge.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QObex::AuthChallengeOptions" signature="options() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="realm" fullname="QObexAuthenticationChallenge::realm" href="qobexauthenticationchallenge.html#realm" location="qobexauthenticationchallenge.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="realm() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QDLClient" href="qdlclient.html" location="qdlclient.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QDLClient" fullname="QDLClient::QDLClient" href="qdlclient.html#QDLClient" location="qdlclient.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDLClient(QObject * parent, const QString &amp; name)">
                <parameter left="QObject *" right="" name="parent" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDLClient" fullname="QDLClient::~QDLClient" href="qdlclient.html#dtor.QDLClient" location="qdlclient.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDLClient()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveLinks" fullname="QDLClient::saveLinks" href="qdlclient.html#saveLinks" location="qdlclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="saveLinks(QDataStream &amp; stream) const">
                <parameter left="QDataStream &amp;" right="" name="stream" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="link" fullname="QDLClient::link" href="qdlclient.html#link" location="qdlclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDLLink" signature="link(const int linkId) const">
                <parameter left="const int" right="" name="linkId" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="linkIds" fullname="QDLClient::linkIds" href="qdlclient.html#linkIds" location="qdlclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;int&gt;" signature="linkIds() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hint" fullname="QDLClient::hint" href="qdlclient.html#hint" location="qdlclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="hint() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="linkAnchorText" fullname="QDLClient::linkAnchorText" href="qdlclient.html#linkAnchorText" location="qdlclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="linkAnchorText(const int linkId, const bool noIcon) const">
                <parameter left="const int" right="" name="linkId" default=""></parameter>
                <parameter left="const bool" right="" name="noIcon" default="false"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="validLinkId" fullname="QDLClient::validLinkId" href="qdlclient.html#validLinkId" location="qdlclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="validLinkId(const int linkId) const">
                <parameter left="const int" right="" name="linkId" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHint" fullname="QDLClient::setHint" href="qdlclient.html#setHint" location="qdlclient.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHint(const QString &amp; hint)">
                <parameter left="const QString &amp;" right="" name="hint" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="loadLinks" fullname="QDLClient::loadLinks" href="qdlclient.html#loadLinks" location="qdlclient.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="loadLinks(QDataStream &amp; stream)">
                <parameter left="QDataStream &amp;" right="" name="stream" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addLink" fullname="QDLClient::addLink" href="qdlclient.html#addLink" location="qdlclient.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="int" signature="addLink(QDSData &amp; link)">
                <parameter left="QDSData &amp;" right="" name="link" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLink" fullname="QDLClient::setLink" href="qdlclient.html#setLink" location="qdlclient.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setLink(const int linkId, const QDLLink &amp; link)">
                <parameter left="const int" right="" name="linkId" default=""></parameter>
                <parameter left="const QDLLink &amp;" right="" name="link" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeLink" fullname="QDLClient::removeLink" href="qdlclient.html#removeLink" location="qdlclient.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="removeLink(const int linkId)">
                <parameter left="const int" right="" name="linkId" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="breakLink" fullname="QDLClient::breakLink" href="qdlclient.html#breakLink" location="qdlclient.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="breakLink(const int linkId, const bool broken)">
                <parameter left="const int" right="" name="linkId" default=""></parameter>
                <parameter left="const bool" right="" name="broken" default="true"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QDLClient::clear" href="qdlclient.html#clear" location="qdlclient.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="clear()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestLinks" fullname="QDLClient::requestLinks" href="qdlclient.html#requestLinks" location="qdlclient.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="requestLinks(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestLinks" fullname="QDLClient::requestLinks" href="qdlclient.html#requestLinks-2" location="qdlclient.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="requestLinks(const QDSServiceInfo &amp; qdlService)">
                <parameter left="const QDSServiceInfo &amp;" right="" name="qdlService" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activateLink" fullname="QDLClient::activateLink" href="qdlclient.html#activateLink" location="qdlclient.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="activateLink(const int linkId)">
                <parameter left="const int" right="" name="linkId" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="verifyLinks" fullname="QDLClient::verifyLinks" href="qdlclient.html#verifyLinks" location="qdlclient.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="verifyLinks()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QKeyboardLock" href="qkeyboardlock.html" location="qkeyboardlock.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QKeyboardLock" fullname="QKeyboardLock::QKeyboardLock" href="qkeyboardlock.html#QKeyboardLock" location="qkeyboardlock.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QKeyboardLock(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QKeyboardLock" fullname="QKeyboardLock::~QKeyboardLock" href="qkeyboardlock.html#dtor.QKeyboardLock" location="qkeyboardlock.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QKeyboardLock()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isLocked" fullname="QKeyboardLock::isLocked" href="qkeyboardlock.html#isLocked" location="qkeyboardlock.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isLocked() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lock" fullname="QKeyboardLock::lock" href="qkeyboardlock.html#lock" location="qkeyboardlock.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="lock(bool locked)">
                <parameter left="bool" right="" name="locked" default="true"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unlock" fullname="QKeyboardLock::unlock" href="qkeyboardlock.html#unlock" location="qkeyboardlock.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="unlock()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exemptions" fullname="QKeyboardLock::exemptions" href="qkeyboardlock.html#exemptions" location="qkeyboardlock.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;Qt::Key&gt;" signature="exemptions() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExemptions" fullname="QKeyboardLock::setExemptions" href="qkeyboardlock.html#setExemptions" location="qkeyboardlock.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setExemptions(const QList&lt;Qt::Key&gt; &amp; exempt)">
                <parameter left="const QList&lt;Qt::Key&gt; &amp;" right="" name="exempt" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lockedKeyEvent" fullname="QKeyboardLock::lockedKeyEvent" href="qkeyboardlock.html#lockedKeyEvent" location="qkeyboardlock.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="lockedKeyEvent(uint keycode, ushort unicode, bool isPressed)">
                <parameter left="uint" right="" name="keycode" default=""></parameter>
                <parameter left="ushort" right="" name="unicode" default=""></parameter>
                <parameter left="bool" right="" name="isPressed" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QPresence" href="qpresence.html" location="qpresence.h" bases="QCommInterface" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="localPresence" fullname="QPresence::localPresence" href="qpresence.html#localPresence-prop" location="qpresence.h" type="QPresence::Status">
                <getter name="localPresence"></getter>
                <setter name="setLocalPresence"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="monitoredUris" fullname="QPresence::monitoredUris" href="qpresence.html#monitoredUris-prop" location="qpresence.h" type="QStringList">
                <getter name="monitoredUris"></getter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="allMonitoredUris" fullname="QPresence::allMonitoredUris" href="qpresence.html#allMonitoredUris-prop" location="qpresence.h" type="QStringList">
                <getter name="allMonitoredUris"></getter>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QPresence" fullname="QPresence::QPresence" href="qpresence.html#QPresence" location="qpresence.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPresence(const QString &amp; service, QObject * parent, QCommInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="service" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QCommInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPresence" fullname="QPresence::~QPresence" href="qpresence.html#dtor.QPresence" location="qpresence.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPresence()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Status" fullname="QPresence::Status" href="qpresence.html#Status-enum" location="qpresence.h">
                <value name="Unavailable" value="0"></value>
                <value name="Available" value="1"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="localPresence" fullname="QPresence::localPresence" href="qpresence.html#localPresence-prop" location="qpresence.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="localPresence" type="QPresence::Status" signature="localPresence() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="monitoredUris" fullname="QPresence::monitoredUris" href="qpresence.html#monitoredUris-prop" location="qpresence.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="monitoredUris" type="QStringList" signature="monitoredUris() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="allMonitoredUris" fullname="QPresence::allMonitoredUris" href="qpresence.html#allMonitoredUris-prop" location="qpresence.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="allMonitoredUris" type="QStringList" signature="allMonitoredUris() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="monitoredUriStatus" fullname="QPresence::monitoredUriStatus" href="qpresence.html#monitoredUriStatus" location="qpresence.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPresence::Status" signature="monitoredUriStatus(const QString &amp; uri) const">
                <parameter left="const QString &amp;" right="" name="uri" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="startMonitoring" fullname="QPresence::startMonitoring" href="qpresence.html#startMonitoring" location="qpresence.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="bool" signature="startMonitoring(const QString &amp; uri)">
                <parameter left="const QString &amp;" right="" name="uri" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stopMonitoring" fullname="QPresence::stopMonitoring" href="qpresence.html#stopMonitoring" location="qpresence.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="bool" signature="stopMonitoring(const QString &amp; uri)">
                <parameter left="const QString &amp;" right="" name="uri" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLocalPresence" fullname="QPresence::setLocalPresence" href="qpresence.html#localPresence-prop" location="qpresence.h" virtual="impure" meta="slot" const="false" static="false" overload="false" associated-property="localPresence" type="void" signature="setLocalPresence(QPresence::Status status)">
                <parameter left="QPresence::Status" right="" name="status" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="monitoredPresence" fullname="QPresence::monitoredPresence" href="qpresence.html#monitoredPresence" location="qpresence.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="monitoredPresence(const QString &amp; uri, QPresence::Status status)">
                <parameter left="const QString &amp;" right="" name="uri" default=""></parameter>
                <parameter left="QPresence::Status" right="" name="status" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localPresenceChanged" fullname="QPresence::localPresenceChanged" href="qpresence.html#localPresenceChanged" location="qpresence.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="localPresenceChanged()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="updateMonitoredPresence" fullname="QPresence::updateMonitoredPresence" href="qpresence.html#updateMonitoredPresence" location="qpresence.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="updateMonitoredPresence(const QString &amp; uri, QPresence::Status status)">
                <parameter left="const QString &amp;" right="" name="uri" default=""></parameter>
                <parameter left="QPresence::Status" right="" name="status" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemPinManager" href="qmodempinmanager.html" location="qmodempinmanager.h" bases="QPinManager" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemPinManager" fullname="QModemPinManager::QModemPinManager" href="qmodempinmanager.html#QModemPinManager" location="qmodempinmanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemPinManager(QModemService * service)">
                <parameter left="QModemService *" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemPinManager" fullname="QModemPinManager::~QModemPinManager" href="qmodempinmanager.html#dtor.QModemPinManager" location="qmodempinmanager.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemPinManager()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="needPin" fullname="QModemPinManager::needPin" href="qmodempinmanager.html#needPin" location="qmodempinmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="needPin(const QString &amp; type, QObject * target, const char * pinSlot, const char * cancelSlot)">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
                <parameter left="QObject *" right="" name="target" default=""></parameter>
                <parameter left="const char *" right="" name="pinSlot" default=""></parameter>
                <parameter left="const char *" right="" name="cancelSlot" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="emptyPinIsReady" fullname="QModemPinManager::emptyPinIsReady" href="qmodempinmanager.html#emptyPinIsReady" location="qmodempinmanager.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="emptyPinIsReady() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="pinTypeToCode" fullname="QModemPinManager::pinTypeToCode" href="qmodempinmanager.html#pinTypeToCode" location="qmodempinmanager.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="pinTypeToCode(const QString &amp; type) const">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="pinMaximum" fullname="QModemPinManager::pinMaximum" href="qmodempinmanager.html#pinMaximum" location="qmodempinmanager.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="int" signature="pinMaximum() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtopiaAppService" href="qtopiaappservice.html" location="qtopiaservice.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="quit" fullname="QtopiaAppService::quit" href="qtopiaappservice.html#quit" location="qtopiaservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="quit()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="quitIfInvisible" fullname="QtopiaAppService::quitIfInvisible" href="qtopiaappservice.html#quitIfInvisible" location="qtopiaservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="quitIfInvisible()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="close" fullname="QtopiaAppService::close" href="qtopiaappservice.html#close" location="qtopiaservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="close()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="enablePreload" fullname="QtopiaAppService::enablePreload" href="qtopiaappservice.html#enablePreload" location="qtopiaservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="enablePreload()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disablePreload" fullname="QtopiaAppService::disablePreload" href="qtopiaappservice.html#disablePreload" location="qtopiaservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="disablePreload()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="raise" fullname="QtopiaAppService::raise" href="qtopiaappservice.html#raise" location="qtopiaservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="raise()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="flush" fullname="QtopiaAppService::flush" href="qtopiaappservice.html#flush" location="qtopiaservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="flush()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="reload" fullname="QtopiaAppService::reload" href="qtopiaappservice.html#reload" location="qtopiaservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="reload()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDocument" fullname="QtopiaAppService::setDocument" href="qtopiaappservice.html#setDocument" location="qtopiaservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setDocument(const QString &amp; doc)">
                <parameter left="const QString &amp;" right="" name="doc" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QDSAction" href="qdsaction.html" location="qdsaction.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QDSAction" fullname="QDSAction::QDSAction" href="qdsaction.html#QDSAction" location="qdsaction.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDSAction(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDSAction" fullname="QDSAction::QDSAction" href="qdsaction.html#QDSAction-2" location="qdsaction.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QDSAction(const QDSAction &amp; other)">
                <parameter left="const QDSAction &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDSAction" fullname="QDSAction::QDSAction" href="qdsaction.html#QDSAction-3" location="qdsaction.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QDSAction(const QString &amp; name, const QString &amp; service, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDSAction" fullname="QDSAction::QDSAction" href="qdsaction.html#QDSAction-4" location="qdsaction.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QDSAction(const QDSServiceInfo &amp; serviceInfo, QObject * parent)">
                <parameter left="const QDSServiceInfo &amp;" right="" name="serviceInfo" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDSAction" fullname="QDSAction::~QDSAction" href="qdsaction.html#dtor.QDSAction" location="qdsaction.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDSAction()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QDSAction::operator=" href="qdsaction.html#operator=" location="qdsaction.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="const QDSAction &amp;" signature="operator=(const QDSAction &amp; other)">
                <parameter left="const QDSAction &amp;" right="" name="other" default=""></parameter>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ResponseCode" fullname="QDSAction::ResponseCode" href="qdsaction.html#ResponseCode-enum" location="qdsaction.h">
                <value name="Invalid" value="0"></value>
                <value name="Complete" value="1"></value>
                <value name="CompleteData" value="2"></value>
                <value name="Error" value="3"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QDSAction::isValid" href="qdsaction.html#isValid" location="qdsaction.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAvailable" fullname="QDSAction::isAvailable" href="qdsaction.html#isAvailable" location="qdsaction.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isAvailable() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isActive" fullname="QDSAction::isActive" href="qdsaction.html#isActive" location="qdsaction.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isActive() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QDSAction::id" href="qdsaction.html#id" location="qdsaction.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUniqueId" signature="id() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serviceInfo" fullname="QDSAction::serviceInfo" href="qdsaction.html#serviceInfo" location="qdsaction.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QDSServiceInfo &amp;" signature="serviceInfo() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="responseData" fullname="QDSAction::responseData" href="qdsaction.html#responseData" location="qdsaction.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDSData" signature="responseData() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorMessage" fullname="QDSAction::errorMessage" href="qdsaction.html#errorMessage" location="qdsaction.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorMessage() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="invoke" fullname="QDSAction::invoke" href="qdsaction.html#invoke" location="qdsaction.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="invoke()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="invoke" fullname="QDSAction::invoke" href="qdsaction.html#invoke-2" location="qdsaction.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="invoke(const QDSData &amp; requestData, const QByteArray &amp; auxiliary)">
                <parameter left="const QDSData &amp;" right="" name="requestData" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="auxiliary" default="QByteArray()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exec" fullname="QDSAction::exec" href="qdsaction.html#exec" location="qdsaction.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="exec()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exec" fullname="QDSAction::exec" href="qdsaction.html#exec-2" location="qdsaction.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="int" signature="exec(const QDSData &amp; requestData, const QByteArray &amp; auxiliary)">
                <parameter left="const QDSData &amp;" right="" name="requestData" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="auxiliary" default="QByteArray()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="response" fullname="QDSAction::response" href="qdsaction.html#response" location="qdsaction.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="response(const QUniqueId &amp; actionId)">
                <parameter left="const QUniqueId &amp;" right="" name="actionId" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="response" fullname="QDSAction::response" href="qdsaction.html#response-2" location="qdsaction.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="response(const QUniqueId &amp; actionId, const QDSData &amp; responseData)">
                <parameter left="const QUniqueId &amp;" right="" name="actionId" default=""></parameter>
                <parameter left="const QDSData &amp;" right="" name="responseData" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QDSAction::error" href="qdsaction.html#error" location="qdsaction.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="error(const QUniqueId &amp; actionId, const QString &amp; message)">
                <parameter left="const QUniqueId &amp;" right="" name="actionId" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="message" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSoundControl" href="qsoundcontrol.html" location="qsoundcontrol.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSoundControl" fullname="QSoundControl::QSoundControl" href="qsoundcontrol.html#QSoundControl" location="qsoundcontrol.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSoundControl(QSound * sound, QObject * parent)">
                <parameter left="QSound *" right="" name="sound" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVolume" fullname="QSoundControl::setVolume" href="qsoundcontrol.html#setVolume" location="qsoundcontrol.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="QSoundControl::volume" href="qsoundcontrol.html#volume" location="qsoundcontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="volume() const"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Priority" fullname="QSoundControl::Priority" href="qsoundcontrol.html#Priority-enum" location="qsoundcontrol.h">
                <value name="Default" value="0"></value>
                <value name="RingTone" value="1"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPriority" fullname="QSoundControl::setPriority" href="qsoundcontrol.html#setPriority" location="qsoundcontrol.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPriority(Priority priority)">
                <parameter left="Priority" right="" name="priority" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="priority" fullname="QSoundControl::priority" href="qsoundcontrol.html#priority" location="qsoundcontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Priority" signature="priority() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sound" fullname="QSoundControl::sound" href="qsoundcontrol.html#sound" location="qsoundcontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSound *" signature="sound() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="done" fullname="QSoundControl::done" href="qsoundcontrol.html#done" location="qsoundcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="done()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="SysMessagesService" href="sysmessagesservice.html" location="sysmessages.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="SysMessagesService" fullname="SysMessagesService::SysMessagesService" href="sysmessagesservice.html#SysMessagesService" location="sysmessages.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="SysMessagesService(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="showDialog" fullname="SysMessagesService::showDialog" href="sysmessagesservice.html#showDialog" location="sysmessages.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="showDialog(const QString &amp; title, const QString &amp; text)">
                <parameter left="const QString &amp;" right="" name="title" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPhoneNumber" href="qphonenumber.html" location="qphonenumber.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="stripNumber" fullname="QPhoneNumber::stripNumber" href="qphonenumber.html#stripNumber" location="qphonenumber.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="stripNumber(const QString &amp; number)">
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="matchNumbers" fullname="QPhoneNumber::matchNumbers" href="qphonenumber.html#matchNumbers" location="qphonenumber.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="matchNumbers(const QString &amp; num1, const QString &amp; num2)">
                <parameter left="const QString &amp;" right="" name="num1" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="num2" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="matchPrefix" fullname="QPhoneNumber::matchPrefix" href="qphonenumber.html#matchPrefix" location="qphonenumber.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="matchPrefix(const QString &amp; num, const QString &amp; prefix)">
                <parameter left="const QString &amp;" right="" name="num" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="prefix" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resolveLetters" fullname="QPhoneNumber::resolveLetters" href="qphonenumber.html#resolveLetters" location="qphonenumber.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="resolveLetters(const QString &amp; number)">
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localNumber" fullname="QPhoneNumber::localNumber" href="qphonenumber.html#localNumber" location="qphonenumber.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="localNumber(const QString &amp; number)">
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="PhoneTouchDialerScreen" href="phonetouchdialerscreen.html" location="dialer.h" bases="QAbstractDialerScreen" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="PhoneTouchDialerScreen" fullname="PhoneTouchDialerScreen::PhoneTouchDialerScreen" href="phonetouchdialerscreen.html#PhoneTouchDialerScreen" location="dialer.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="PhoneTouchDialerScreen(QWidget * parent, Qt::WFlags flags)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
                <parameter left="Qt::WFlags" right="" name="flags" default="0"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QDrmContent" href="qdrmcontent.html" location="qdrmcontent.h" bases="QObject" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="RenderState" fullname="QDrmContent::RenderState" href="qdrmcontent.html#RenderState-enum" location="qdrmcontent.h">
                <value name="Started" value="0"></value>
                <value name="Stopped" value="1"></value>
                <value name="Paused" value="2"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="LicenseOption" fullname="QDrmContent::LicenseOption" href="qdrmcontent.html#LicenseOption-enum" location="qdrmcontent.h" typedef="QDrmContent::LicenseOptions">
                <value name="NoLicenseOptions" value="0x00"></value>
                <value name="Activate" value="0x01"></value>
                <value name="Reactivate" value="0x02"></value>
                <value name="Handover" value="0x04"></value>
                <value name="Default" value="Activate | Reactivate"></value>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="LicenseOptions" fullname="QDrmContent::LicenseOptions" href="qdrmcontent.html#LicenseOptions-typedef" location="qdrmcontent.h" enum="QDrmContent::LicenseOption"></typedef>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDrmContent" fullname="QDrmContent::QDrmContent" href="qdrmcontent.html#QDrmContent" location="qdrmcontent.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDrmContent(QDrmRights::Permission permission, QFlags&lt;QDrmContent::LicenseOption&gt; options, QObject * parent)">
                <parameter left="QDrmRights::Permission" right="" name="permission" default="QDrmRights::Unrestricted"></parameter>
                <parameter left="QFlags&lt;QDrmContent::LicenseOption&gt;" right="" name="options" default="Default"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDrmContent" fullname="QDrmContent::~QDrmContent" href="qdrmcontent.html#dtor.QDrmContent" location="qdrmcontent.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDrmContent()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="renderState" fullname="QDrmContent::renderState" href="qdrmcontent.html#renderState" location="qdrmcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="RenderState" signature="renderState() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="permission" fullname="QDrmContent::permission" href="qdrmcontent.html#permission" location="qdrmcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDrmRights::Permission" signature="permission() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPermission" fullname="QDrmContent::setPermission" href="qdrmcontent.html#setPermission" location="qdrmcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPermission(QDrmRights::Permission permission)">
                <parameter left="QDrmRights::Permission" right="" name="permission" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="licenseOptions" fullname="QDrmContent::licenseOptions" href="qdrmcontent.html#licenseOptions" location="qdrmcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="LicenseOptions" signature="licenseOptions() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLicenseOptions" fullname="QDrmContent::setLicenseOptions" href="qdrmcontent.html#setLicenseOptions" location="qdrmcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLicenseOptions(QFlags&lt;QDrmContent::LicenseOption&gt; options)">
                <parameter left="QFlags&lt;QDrmContent::LicenseOption&gt;" right="" name="options" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="enableLicenseOptions" fullname="QDrmContent::enableLicenseOptions" href="qdrmcontent.html#enableLicenseOptions" location="qdrmcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="enableLicenseOptions(QFlags&lt;QDrmContent::LicenseOption&gt; options)">
                <parameter left="QFlags&lt;QDrmContent::LicenseOption&gt;" right="" name="options" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disableLicenseOptions" fullname="QDrmContent::disableLicenseOptions" href="qdrmcontent.html#disableLicenseOptions" location="qdrmcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="disableLicenseOptions(QFlags&lt;QDrmContent::LicenseOption&gt; options)">
                <parameter left="QFlags&lt;QDrmContent::LicenseOption&gt;" right="" name="options" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusWidget" fullname="QDrmContent::focusWidget" href="qdrmcontent.html#focusWidget" location="qdrmcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QWidget *" signature="focusWidget() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFocusWidget" fullname="QDrmContent::setFocusWidget" href="qdrmcontent.html#setFocusWidget" location="qdrmcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFocusWidget(QWidget * widget)">
                <parameter left="QWidget *" right="" name="widget" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="content" fullname="QDrmContent::content" href="qdrmcontent.html#content" location="qdrmcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContent" signature="content() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activate" fullname="QDrmContent::activate" href="qdrmcontent.html#activate" location="qdrmcontent.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="activate(const QContent &amp; content, QWidget * focus)">
                <parameter left="const QContent &amp;" right="" name="content" default=""></parameter>
                <parameter left="QWidget *" right="" name="focus" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="canActivate" fullname="QDrmContent::canActivate" href="qdrmcontent.html#canActivate" location="qdrmcontent.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="canActivate(const QContent &amp; content)">
                <parameter left="const QContent &amp;" right="" name="content" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedTypes" fullname="QDrmContent::supportedTypes" href="qdrmcontent.html#supportedTypes" location="qdrmcontent.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStringList" signature="supportedTypes()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="httpHeaders" fullname="QDrmContent::httpHeaders" href="qdrmcontent.html#httpHeaders" location="qdrmcontent.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QPair&lt;QString, QString&gt; &gt;" signature="httpHeaders()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestLicense" fullname="QDrmContent::requestLicense" href="qdrmcontent.html#requestLicense" location="qdrmcontent.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="bool" signature="requestLicense(const QContent &amp; content)">
                <parameter left="const QContent &amp;" right="" name="content" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="releaseLicense" fullname="QDrmContent::releaseLicense" href="qdrmcontent.html#releaseLicense" location="qdrmcontent.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="releaseLicense()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="renderStarted" fullname="QDrmContent::renderStarted" href="qdrmcontent.html#renderStarted" location="qdrmcontent.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="renderStarted()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="renderStopped" fullname="QDrmContent::renderStopped" href="qdrmcontent.html#renderStopped" location="qdrmcontent.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="renderStopped()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="renderPaused" fullname="QDrmContent::renderPaused" href="qdrmcontent.html#renderPaused" location="qdrmcontent.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="renderPaused()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="licenseGranted" fullname="QDrmContent::licenseGranted" href="qdrmcontent.html#licenseGranted" location="qdrmcontent.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="licenseGranted(const QContent &amp; content)">
                <parameter left="const QContent &amp;" right="" name="content" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="licenseDenied" fullname="QDrmContent::licenseDenied" href="qdrmcontent.html#licenseDenied" location="qdrmcontent.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="licenseDenied(const QContent &amp; content)">
                <parameter left="const QContent &amp;" right="" name="content" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="renderStateChanged" fullname="QDrmContent::renderStateChanged" href="qdrmcontent.html#renderStateChanged" location="qdrmcontent.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="renderStateChanged(const QDrmContent &amp; content)">
                <parameter left="const QDrmContent &amp;" right="" name="content" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rightsExpired" fullname="QDrmContent::rightsExpired" href="qdrmcontent.html#rightsExpired" location="qdrmcontent.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="rightsExpired(const QDrmContent &amp; content)">
                <parameter left="const QDrmContent &amp;" right="" name="content" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMailMessageHeaderField" href="qmailmessageheaderfield.html" location="qmailmessage.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="FieldType" fullname="QMailMessageHeaderField::FieldType" href="qmailmessageheaderfield.html#FieldType-enum" location="qmailmessage.h">
                <value name="StructuredField" value="1"></value>
                <value name="UnstructuredField" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailMessageHeaderField" fullname="QMailMessageHeaderField::QMailMessageHeaderField" href="qmailmessageheaderfield.html#QMailMessageHeaderField" location="qmailmessage.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMailMessageHeaderField()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailMessageHeaderField" fullname="QMailMessageHeaderField::QMailMessageHeaderField" href="qmailmessageheaderfield.html#QMailMessageHeaderField-2" location="qmailmessage.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMailMessageHeaderField(const QByteArray &amp; text, FieldType fieldType)">
                <parameter left="const QByteArray &amp;" right="" name="text" default=""></parameter>
                <parameter left="FieldType" right="" name="fieldType" default="StructuredField"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailMessageHeaderField" fullname="QMailMessageHeaderField::QMailMessageHeaderField" href="qmailmessageheaderfield.html#QMailMessageHeaderField-3" location="qmailmessage.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMailMessageHeaderField(const QByteArray &amp; id, const QByteArray &amp; text, FieldType fieldType)">
                <parameter left="const QByteArray &amp;" right="" name="id" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="text" default=""></parameter>
                <parameter left="FieldType" right="" name="fieldType" default="StructuredField"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QMailMessageHeaderField::isNull" href="qmailmessageheaderfield.html#isNull" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QMailMessageHeaderField::id" href="qmailmessageheaderfield.html#id" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="id() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setId" fullname="QMailMessageHeaderField::setId" href="qmailmessageheaderfield.html#setId" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setId(const QByteArray &amp; id)">
                <parameter left="const QByteArray &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="content" fullname="QMailMessageHeaderField::content" href="qmailmessageheaderfield.html#content" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="content() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContent" fullname="QMailMessageHeaderField::setContent" href="qmailmessageheaderfield.html#setContent" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setContent(const QByteArray &amp; text)">
                <parameter left="const QByteArray &amp;" right="" name="text" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parameter" fullname="QMailMessageHeaderField::parameter" href="qmailmessageheaderfield.html#parameter" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="parameter(const QByteArray &amp; name) const">
                <parameter left="const QByteArray &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setParameter" fullname="QMailMessageHeaderField::setParameter" href="qmailmessageheaderfield.html#setParameter" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setParameter(const QByteArray &amp; name, const QByteArray &amp; value)">
                <parameter left="const QByteArray &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isParameterEncoded" fullname="QMailMessageHeaderField::isParameterEncoded" href="qmailmessageheaderfield.html#isParameterEncoded" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isParameterEncoded(const QByteArray &amp; name) const">
                <parameter left="const QByteArray &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setParameterEncoded" fullname="QMailMessageHeaderField::setParameterEncoded" href="qmailmessageheaderfield.html#setParameterEncoded" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setParameterEncoded(const QByteArray &amp; name)">
                <parameter left="const QByteArray &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parameters" fullname="QMailMessageHeaderField::parameters" href="qmailmessageheaderfield.html#parameters" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;ParameterType&gt;" signature="parameters() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toString" fullname="QMailMessageHeaderField::toString" href="qmailmessageheaderfield.html#toString" location="qmailmessage.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="toString(bool includeName, bool presentable) const">
                <parameter left="bool" right="" name="includeName" default="true"></parameter>
                <parameter left="bool" right="" name="presentable" default="true"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodedContent" fullname="QMailMessageHeaderField::decodedContent" href="qmailmessageheaderfield.html#decodedContent" location="qmailmessage.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="decodedContent() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodeWord" fullname="QMailMessageHeaderField::encodeWord" href="qmailmessageheaderfield.html#encodeWord" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QByteArray" signature="encodeWord(const QString &amp; input, const QByteArray &amp; charset)">
                <parameter left="const QString &amp;" right="" name="input" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="charset" default="&quot;&quot;"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodeWord" fullname="QMailMessageHeaderField::decodeWord" href="qmailmessageheaderfield.html#decodeWord" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="decodeWord(const QByteArray &amp; input)">
                <parameter left="const QByteArray &amp;" right="" name="input" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodeParameter" fullname="QMailMessageHeaderField::encodeParameter" href="qmailmessageheaderfield.html#encodeParameter" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QByteArray" signature="encodeParameter(const QString &amp; input, const QByteArray &amp; charset, const QByteArray &amp; language)">
                <parameter left="const QString &amp;" right="" name="input" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="charset" default="&quot;&quot;"></parameter>
                <parameter left="const QByteArray &amp;" right="" name="language" default="&quot;&quot;"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodeParameter" fullname="QMailMessageHeaderField::decodeParameter" href="qmailmessageheaderfield.html#decodeParameter" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="decodeParameter(const QByteArray &amp; input)">
                <parameter left="const QByteArray &amp;" right="" name="input" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodeContent" fullname="QMailMessageHeaderField::encodeContent" href="qmailmessageheaderfield.html#encodeContent" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QByteArray" signature="encodeContent(const QString &amp; input, const QByteArray &amp; charset)">
                <parameter left="const QString &amp;" right="" name="input" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="charset" default="&quot;&quot;"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodeContent" fullname="QMailMessageHeaderField::decodeContent" href="qmailmessageheaderfield.html#decodeContent" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="decodeContent(const QByteArray &amp; input)">
                <parameter left="const QByteArray &amp;" right="" name="input" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeComments" fullname="QMailMessageHeaderField::removeComments" href="qmailmessageheaderfield.html#removeComments" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QByteArray" signature="removeComments(const QByteArray &amp; input)">
                <parameter left="const QByteArray &amp;" right="" name="input" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeWhitespace" fullname="QMailMessageHeaderField::removeWhitespace" href="qmailmessageheaderfield.html#removeWhitespace" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QByteArray" signature="removeWhitespace(const QByteArray &amp; input)">
                <parameter left="const QByteArray &amp;" right="" name="input" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMailMessageContentType" href="qmailmessagecontenttype.html" location="qmailmessage.h" bases="QMailMessageHeaderField" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailMessageContentType" fullname="QMailMessageContentType::QMailMessageContentType" href="qmailmessagecontenttype.html#QMailMessageContentType" location="qmailmessage.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMailMessageContentType(const QByteArray &amp; type)">
                <parameter left="const QByteArray &amp;" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailMessageContentType" fullname="QMailMessageContentType::QMailMessageContentType" href="qmailmessagecontenttype.html#QMailMessageContentType-3" location="qmailmessage.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMailMessageContentType(const QMailMessageHeaderField &amp; field)">
                <parameter left="const QMailMessageHeaderField &amp;" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QMailMessageContentType::type" href="qmailmessagecontenttype.html#type" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="type() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setType" fullname="QMailMessageContentType::setType" href="qmailmessagecontenttype.html#setType" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setType(const QByteArray &amp; type)">
                <parameter left="const QByteArray &amp;" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="subType" fullname="QMailMessageContentType::subType" href="qmailmessagecontenttype.html#subType" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="subType() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSubType" fullname="QMailMessageContentType::setSubType" href="qmailmessagecontenttype.html#setSubType" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSubType(const QByteArray &amp; subType)">
                <parameter left="const QByteArray &amp;" right="" name="subType" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QMailMessageContentType::name" href="qmailmessagecontenttype.html#name" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="name() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setName" fullname="QMailMessageContentType::setName" href="qmailmessagecontenttype.html#setName" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setName(const QByteArray &amp; name)">
                <parameter left="const QByteArray &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="boundary" fullname="QMailMessageContentType::boundary" href="qmailmessagecontenttype.html#boundary" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="boundary() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBoundary" fullname="QMailMessageContentType::setBoundary" href="qmailmessagecontenttype.html#setBoundary" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBoundary(const QByteArray &amp; boundary)">
                <parameter left="const QByteArray &amp;" right="" name="boundary" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="charset" fullname="QMailMessageContentType::charset" href="qmailmessagecontenttype.html#charset" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="charset() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCharset" fullname="QMailMessageContentType::setCharset" href="qmailmessagecontenttype.html#setCharset" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCharset(const QByteArray &amp; charset)">
                <parameter left="const QByteArray &amp;" right="" name="charset" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMailMessageContentDisposition" href="qmailmessagecontentdisposition.html" location="qmailmessage.h" bases="QMailMessageHeaderField" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="DispositionType" fullname="QMailMessageContentDisposition::DispositionType" href="qmailmessagecontentdisposition.html#DispositionType-enum" location="qmailmessage.h">
                <value name="None" value="0"></value>
                <value name="Inline" value="1"></value>
                <value name="Attachment" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailMessageContentDisposition" fullname="QMailMessageContentDisposition::QMailMessageContentDisposition" href="qmailmessagecontentdisposition.html#QMailMessageContentDisposition" location="qmailmessage.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMailMessageContentDisposition(const QByteArray &amp; type)">
                <parameter left="const QByteArray &amp;" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailMessageContentDisposition" fullname="QMailMessageContentDisposition::QMailMessageContentDisposition" href="qmailmessagecontentdisposition.html#QMailMessageContentDisposition-3" location="qmailmessage.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMailMessageContentDisposition(DispositionType type)">
                <parameter left="DispositionType" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailMessageContentDisposition" fullname="QMailMessageContentDisposition::QMailMessageContentDisposition" href="qmailmessagecontentdisposition.html#QMailMessageContentDisposition-4" location="qmailmessage.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QMailMessageContentDisposition(const QMailMessageHeaderField &amp; field)">
                <parameter left="const QMailMessageHeaderField &amp;" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QMailMessageContentDisposition::type" href="qmailmessagecontentdisposition.html#type" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="DispositionType" signature="type() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setType" fullname="QMailMessageContentDisposition::setType" href="qmailmessagecontentdisposition.html#setType" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setType(DispositionType type)">
                <parameter left="DispositionType" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filename" fullname="QMailMessageContentDisposition::filename" href="qmailmessagecontentdisposition.html#filename" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="filename() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilename" fullname="QMailMessageContentDisposition::setFilename" href="qmailmessagecontentdisposition.html#setFilename" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilename(const QByteArray &amp; filename)">
                <parameter left="const QByteArray &amp;" right="" name="filename" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="creationDate" fullname="QMailMessageContentDisposition::creationDate" href="qmailmessagecontentdisposition.html#creationDate" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailTimeStamp" signature="creationDate() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCreationDate" fullname="QMailMessageContentDisposition::setCreationDate" href="qmailmessagecontentdisposition.html#setCreationDate" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCreationDate(const QMailTimeStamp &amp; timeStamp)">
                <parameter left="const QMailTimeStamp &amp;" right="" name="timeStamp" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="modificationDate" fullname="QMailMessageContentDisposition::modificationDate" href="qmailmessagecontentdisposition.html#modificationDate" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailTimeStamp" signature="modificationDate() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setModificationDate" fullname="QMailMessageContentDisposition::setModificationDate" href="qmailmessagecontentdisposition.html#setModificationDate" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setModificationDate(const QMailTimeStamp &amp; timeStamp)">
                <parameter left="const QMailTimeStamp &amp;" right="" name="timeStamp" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readDate" fullname="QMailMessageContentDisposition::readDate" href="qmailmessagecontentdisposition.html#readDate" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailTimeStamp" signature="readDate() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setReadDate" fullname="QMailMessageContentDisposition::setReadDate" href="qmailmessagecontentdisposition.html#setReadDate" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setReadDate(const QMailTimeStamp &amp; timeStamp)">
                <parameter left="const QMailTimeStamp &amp;" right="" name="timeStamp" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="size" fullname="QMailMessageContentDisposition::size" href="qmailmessagecontentdisposition.html#size" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="size() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSize" fullname="QMailMessageContentDisposition::setSize" href="qmailmessagecontentdisposition.html#setSize" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSize(int size)">
                <parameter left="int" right="" name="size" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMailMessageBody" href="qmailmessagebody.html" location="qmailmessage.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="TransferEncoding" fullname="QMailMessageBody::TransferEncoding" href="qmailmessagebody.html#TransferEncoding-enum" location="qmailmessage.h">
                <value name="NoEncoding" value="0"></value>
                <value name="SevenBit" value="1"></value>
                <value name="EightBit" value="2"></value>
                <value name="Base64" value="3"></value>
                <value name="QuotedPrintable" value="4"></value>
                <value name="Binary" value="5"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="EncodingStatus" fullname="QMailMessageBody::EncodingStatus" href="qmailmessagebody.html#EncodingStatus-enum" location="qmailmessage.h">
                <value name="AlreadyEncoded" value="1"></value>
                <value name="RequiresEncoding" value="2"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="EncodingFormat" fullname="QMailMessageBody::EncodingFormat" href="qmailmessagebody.html#EncodingFormat-enum" location="qmailmessage.h">
                <value name="Encoded" value="1"></value>
                <value name="Decoded" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromFile" fullname="QMailMessageBody::fromFile" href="qmailmessagebody.html#fromFile" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMailMessageBody" signature="fromFile(const QString &amp; filename, const QMailMessageContentType &amp; type, TransferEncoding encoding, EncodingStatus status)">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
                <parameter left="const QMailMessageContentType &amp;" right="" name="type" default=""></parameter>
                <parameter left="TransferEncoding" right="" name="encoding" default=""></parameter>
                <parameter left="EncodingStatus" right="" name="status" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromStream" fullname="QMailMessageBody::fromStream" href="qmailmessagebody.html#fromStream" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMailMessageBody" signature="fromStream(QDataStream &amp; in, const QMailMessageContentType &amp; type, TransferEncoding encoding, EncodingStatus status)">
                <parameter left="QDataStream &amp;" right="" name="in" default=""></parameter>
                <parameter left="const QMailMessageContentType &amp;" right="" name="type" default=""></parameter>
                <parameter left="TransferEncoding" right="" name="encoding" default=""></parameter>
                <parameter left="EncodingStatus" right="" name="status" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromData" fullname="QMailMessageBody::fromData" href="qmailmessagebody.html#fromData" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMailMessageBody" signature="fromData(const QByteArray &amp; input, const QMailMessageContentType &amp; type, TransferEncoding encoding, EncodingStatus status)">
                <parameter left="const QByteArray &amp;" right="" name="input" default=""></parameter>
                <parameter left="const QMailMessageContentType &amp;" right="" name="type" default=""></parameter>
                <parameter left="TransferEncoding" right="" name="encoding" default=""></parameter>
                <parameter left="EncodingStatus" right="" name="status" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromStream" fullname="QMailMessageBody::fromStream" href="qmailmessagebody.html#fromStream-2" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QMailMessageBody" signature="fromStream(QTextStream &amp; in, const QMailMessageContentType &amp; type, TransferEncoding encoding)">
                <parameter left="QTextStream &amp;" right="" name="in" default=""></parameter>
                <parameter left="const QMailMessageContentType &amp;" right="" name="type" default=""></parameter>
                <parameter left="TransferEncoding" right="" name="encoding" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromData" fullname="QMailMessageBody::fromData" href="qmailmessagebody.html#fromData-2" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QMailMessageBody" signature="fromData(const QString &amp; input, const QMailMessageContentType &amp; type, TransferEncoding encoding)">
                <parameter left="const QString &amp;" right="" name="input" default=""></parameter>
                <parameter left="const QMailMessageContentType &amp;" right="" name="type" default=""></parameter>
                <parameter left="TransferEncoding" right="" name="encoding" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toFile" fullname="QMailMessageBody::toFile" href="qmailmessagebody.html#toFile" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="toFile(const QString &amp; filename, EncodingFormat format) const">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
                <parameter left="EncodingFormat" right="" name="format" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="data" fullname="QMailMessageBody::data" href="qmailmessagebody.html#data" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="data(EncodingFormat format) const">
                <parameter left="EncodingFormat" right="" name="format" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toStream" fullname="QMailMessageBody::toStream" href="qmailmessagebody.html#toStream" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="toStream(QDataStream &amp; out, EncodingFormat format) const">
                <parameter left="QDataStream &amp;" right="" name="out" default=""></parameter>
                <parameter left="EncodingFormat" right="" name="format" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="data" fullname="QMailMessageBody::data" href="qmailmessagebody.html#data-2" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QString" signature="data() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toStream" fullname="QMailMessageBody::toStream" href="qmailmessagebody.html#toStream-2" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="bool" signature="toStream(QTextStream &amp; out) const">
                <parameter left="QTextStream &amp;" right="" name="out" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="transferEncoding" fullname="QMailMessageBody::transferEncoding" href="qmailmessagebody.html#transferEncoding" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="TransferEncoding" signature="transferEncoding() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentType" fullname="QMailMessageBody::contentType" href="qmailmessagebody.html#contentType" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailMessageContentType" signature="contentType() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMailMessagePartContainer" href="qmailmessagepartcontainer.html" location="qmailmessage.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="MultipartType" fullname="QMailMessagePartContainer::MultipartType" href="qmailmessagepartcontainer.html#MultipartType-enum" location="qmailmessage.h">
                <value name="MultipartNone" value="0"></value>
                <value name="MultipartSigned" value="1"></value>
                <value name="MultipartEncrypted" value="2"></value>
                <value name="MultipartMixed" value="3"></value>
                <value name="MultipartAlternative" value="4"></value>
                <value name="MultipartDigest" value="5"></value>
                <value name="MultipartParallel" value="6"></value>
                <value name="MultipartRelated" value="7"></value>
                <value name="MultipartFormData" value="8"></value>
                <value name="MultipartReport" value="9"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="multipartType" fullname="QMailMessagePartContainer::multipartType" href="qmailmessagepartcontainer.html#multipartType" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="MultipartType" signature="multipartType() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMultipartType" fullname="QMailMessagePartContainer::setMultipartType" href="qmailmessagepartcontainer.html#setMultipartType" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMultipartType(MultipartType type)">
                <parameter left="MultipartType" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="partCount" fullname="QMailMessagePartContainer::partCount" href="qmailmessagepartcontainer.html#partCount" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="partCount() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="appendPart" fullname="QMailMessagePartContainer::appendPart" href="qmailmessagepartcontainer.html#appendPart" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="appendPart(const QMailMessagePart &amp; part)">
                <parameter left="const QMailMessagePart &amp;" right="" name="part" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="prependPart" fullname="QMailMessagePartContainer::prependPart" href="qmailmessagepartcontainer.html#prependPart" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="prependPart(const QMailMessagePart &amp; part)">
                <parameter left="const QMailMessagePart &amp;" right="" name="part" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="partAt" fullname="QMailMessagePartContainer::partAt" href="qmailmessagepartcontainer.html#partAt" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QMailMessagePart &amp;" signature="partAt(uint pos) const">
                <parameter left="uint" right="" name="pos" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="partAt" fullname="QMailMessagePartContainer::partAt" href="qmailmessagepartcontainer.html#partAt-2" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="QMailMessagePart &amp;" signature="partAt(uint pos)">
                <parameter left="uint" right="" name="pos" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearParts" fullname="QMailMessagePartContainer::clearParts" href="qmailmessagepartcontainer.html#clearParts" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearParts()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="boundary" fullname="QMailMessagePartContainer::boundary" href="qmailmessagepartcontainer.html#boundary" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="boundary() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBoundary" fullname="QMailMessagePartContainer::setBoundary" href="qmailmessagepartcontainer.html#setBoundary" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBoundary(const QByteArray &amp; text)">
                <parameter left="const QByteArray &amp;" right="" name="text" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBody" fullname="QMailMessagePartContainer::setBody" href="qmailmessagepartcontainer.html#setBody" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBody(const QMailMessageBody &amp; body)">
                <parameter left="const QMailMessageBody &amp;" right="" name="body" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="body" fullname="QMailMessagePartContainer::body" href="qmailmessagepartcontainer.html#body" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailMessageBody" signature="body() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasBody" fullname="QMailMessagePartContainer::hasBody" href="qmailmessagepartcontainer.html#hasBody" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasBody() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="transferEncoding" fullname="QMailMessagePartContainer::transferEncoding" href="qmailmessagepartcontainer.html#transferEncoding" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailMessageBody::TransferEncoding" signature="transferEncoding() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentType" fullname="QMailMessagePartContainer::contentType" href="qmailmessagepartcontainer.html#contentType" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailMessageContentType" signature="contentType() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="headerFieldText" fullname="QMailMessagePartContainer::headerFieldText" href="qmailmessagepartcontainer.html#headerFieldText" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="headerFieldText(const QString &amp; id) const">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="headerField" fullname="QMailMessagePartContainer::headerField" href="qmailmessagepartcontainer.html#headerField" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailMessageHeaderField" signature="headerField(const QString &amp; id, QMailMessageHeaderField::FieldType fieldType) const">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
                <parameter left="QMailMessageHeaderField::FieldType" right="" name="fieldType" default="QMailMessageHeaderField::StructuredField"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="headerFieldsText" fullname="QMailMessagePartContainer::headerFieldsText" href="qmailmessagepartcontainer.html#headerFieldsText" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="headerFieldsText(const QString &amp; id) const">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="headerFields" fullname="QMailMessagePartContainer::headerFields" href="qmailmessagepartcontainer.html#headerFields" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QMailMessageHeaderField&gt;" signature="headerFields(const QString &amp; id, QMailMessageHeaderField::FieldType fieldType) const">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
                <parameter left="QMailMessageHeaderField::FieldType" right="" name="fieldType" default="QMailMessageHeaderField::StructuredField"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="headerFields" fullname="QMailMessagePartContainer::headerFields" href="qmailmessagepartcontainer.html#headerFields-2" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QList&lt;QMailMessageHeaderField&gt;" signature="headerFields() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHeaderField" fullname="QMailMessagePartContainer::setHeaderField" href="qmailmessagepartcontainer.html#setHeaderField" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHeaderField(const QString &amp; id, const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHeaderField" fullname="QMailMessagePartContainer::setHeaderField" href="qmailmessagepartcontainer.html#setHeaderField-2" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setHeaderField(const QMailMessageHeaderField &amp; field)">
                <parameter left="const QMailMessageHeaderField &amp;" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="appendHeaderField" fullname="QMailMessagePartContainer::appendHeaderField" href="qmailmessagepartcontainer.html#appendHeaderField" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="appendHeaderField(const QString &amp; id, const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="appendHeaderField" fullname="QMailMessagePartContainer::appendHeaderField" href="qmailmessagepartcontainer.html#appendHeaderField-2" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="appendHeaderField(const QMailMessageHeaderField &amp; field)">
                <parameter left="const QMailMessageHeaderField &amp;" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeHeaderField" fullname="QMailMessagePartContainer::removeHeaderField" href="qmailmessagepartcontainer.html#removeHeaderField" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeHeaderField(const QString &amp; id)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QMailMessagePartContainer" fullname="QMailMessagePartContainer::QMailMessagePartContainer" href="qmailmessagepartcontainer.html#QMailMessagePartContainer" location="qmailmessage.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMailMessagePartContainer(Subclass * p)">
                <parameter left="Subclass *" right="" name="p" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMailMessagePart" href="qmailmessagepart.html" location="qmailmessage.h" bases="QMailMessagePartContainer" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailMessagePart" fullname="QMailMessagePart::QMailMessagePart" href="qmailmessagepart.html#QMailMessagePart" location="qmailmessage.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMailMessagePart()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromFile" fullname="QMailMessagePart::fromFile" href="qmailmessagepart.html#fromFile" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMailMessagePart" signature="fromFile(const QString &amp; filename, const QMailMessageContentDisposition &amp; disposition, const QMailMessageContentType &amp; type, QMailMessageBody::TransferEncoding encoding, QMailMessageBody::EncodingStatus status)">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
                <parameter left="const QMailMessageContentDisposition &amp;" right="" name="disposition" default=""></parameter>
                <parameter left="const QMailMessageContentType &amp;" right="" name="type" default=""></parameter>
                <parameter left="QMailMessageBody::TransferEncoding" right="" name="encoding" default=""></parameter>
                <parameter left="QMailMessageBody::EncodingStatus" right="" name="status" default="QMailMessageBody::RequiresEncoding"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromStream" fullname="QMailMessagePart::fromStream" href="qmailmessagepart.html#fromStream" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMailMessagePart" signature="fromStream(QDataStream &amp; in, const QMailMessageContentDisposition &amp; disposition, const QMailMessageContentType &amp; type, QMailMessageBody::TransferEncoding encoding, QMailMessageBody::EncodingStatus status)">
                <parameter left="QDataStream &amp;" right="" name="in" default=""></parameter>
                <parameter left="const QMailMessageContentDisposition &amp;" right="" name="disposition" default=""></parameter>
                <parameter left="const QMailMessageContentType &amp;" right="" name="type" default=""></parameter>
                <parameter left="QMailMessageBody::TransferEncoding" right="" name="encoding" default=""></parameter>
                <parameter left="QMailMessageBody::EncodingStatus" right="" name="status" default="QMailMessageBody::RequiresEncoding"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromData" fullname="QMailMessagePart::fromData" href="qmailmessagepart.html#fromData" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMailMessagePart" signature="fromData(const QByteArray &amp; input, const QMailMessageContentDisposition &amp; disposition, const QMailMessageContentType &amp; type, QMailMessageBody::TransferEncoding encoding, QMailMessageBody::EncodingStatus status)">
                <parameter left="const QByteArray &amp;" right="" name="input" default=""></parameter>
                <parameter left="const QMailMessageContentDisposition &amp;" right="" name="disposition" default=""></parameter>
                <parameter left="const QMailMessageContentType &amp;" right="" name="type" default=""></parameter>
                <parameter left="QMailMessageBody::TransferEncoding" right="" name="encoding" default=""></parameter>
                <parameter left="QMailMessageBody::EncodingStatus" right="" name="status" default="QMailMessageBody::RequiresEncoding"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromStream" fullname="QMailMessagePart::fromStream" href="qmailmessagepart.html#fromStream-2" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QMailMessagePart" signature="fromStream(QTextStream &amp; in, const QMailMessageContentDisposition &amp; disposition, const QMailMessageContentType &amp; type, QMailMessageBody::TransferEncoding encoding)">
                <parameter left="QTextStream &amp;" right="" name="in" default=""></parameter>
                <parameter left="const QMailMessageContentDisposition &amp;" right="" name="disposition" default=""></parameter>
                <parameter left="const QMailMessageContentType &amp;" right="" name="type" default=""></parameter>
                <parameter left="QMailMessageBody::TransferEncoding" right="" name="encoding" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromData" fullname="QMailMessagePart::fromData" href="qmailmessagepart.html#fromData-2" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QMailMessagePart" signature="fromData(const QString &amp; input, const QMailMessageContentDisposition &amp; disposition, const QMailMessageContentType &amp; type, QMailMessageBody::TransferEncoding encoding)">
                <parameter left="const QString &amp;" right="" name="input" default=""></parameter>
                <parameter left="const QMailMessageContentDisposition &amp;" right="" name="disposition" default=""></parameter>
                <parameter left="const QMailMessageContentType &amp;" right="" name="type" default=""></parameter>
                <parameter left="QMailMessageBody::TransferEncoding" right="" name="encoding" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentID" fullname="QMailMessagePart::contentID" href="qmailmessagepart.html#contentID" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="contentID() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContentID" fullname="QMailMessagePart::setContentID" href="qmailmessagepart.html#setContentID" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setContentID(const QString &amp; id)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentLocation" fullname="QMailMessagePart::contentLocation" href="qmailmessagepart.html#contentLocation" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="contentLocation() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContentLocation" fullname="QMailMessagePart::setContentLocation" href="qmailmessagepart.html#setContentLocation" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setContentLocation(const QString &amp; location)">
                <parameter left="const QString &amp;" right="" name="location" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentDescription" fullname="QMailMessagePart::contentDescription" href="qmailmessagepart.html#contentDescription" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="contentDescription() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContentDescription" fullname="QMailMessagePart::setContentDescription" href="qmailmessagepart.html#setContentDescription" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setContentDescription(const QString &amp; description)">
                <parameter left="const QString &amp;" right="" name="description" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentDisposition" fullname="QMailMessagePart::contentDisposition" href="qmailmessagepart.html#contentDisposition" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailMessageContentDisposition" signature="contentDisposition() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContentDisposition" fullname="QMailMessagePart::setContentDisposition" href="qmailmessagepart.html#setContentDisposition" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setContentDisposition(const QMailMessageContentDisposition &amp; disposition)">
                <parameter left="const QMailMessageContentDisposition &amp;" right="" name="disposition" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentLanguage" fullname="QMailMessagePart::contentLanguage" href="qmailmessagepart.html#contentLanguage" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="contentLanguage() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContentLanguage" fullname="QMailMessagePart::setContentLanguage" href="qmailmessagepart.html#setContentLanguage" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setContentLanguage(const QString &amp; language)">
                <parameter left="const QString &amp;" right="" name="language" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="partNumber" fullname="QMailMessagePart::partNumber" href="qmailmessagepart.html#partNumber" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="partNumber() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPartNumber" fullname="QMailMessagePart::setPartNumber" href="qmailmessagepart.html#setPartNumber" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPartNumber(int partNumber)">
                <parameter left="int" right="" name="partNumber" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="displayName" fullname="QMailMessagePart::displayName" href="qmailmessagepart.html#displayName" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="displayName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="identifier" fullname="QMailMessagePart::identifier" href="qmailmessagepart.html#identifier" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="identifier() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attachmentPath" fullname="QMailMessagePart::attachmentPath" href="qmailmessagepart.html#attachmentPath" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="attachmentPath() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detachAttachment" fullname="QMailMessagePart::detachAttachment" href="qmailmessagepart.html#detachAttachment" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="detachAttachment(const QString &amp; path)">
                <parameter left="const QString &amp;" right="" name="path" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMailMessage" href="qmailmessage.html" location="qmailmessage.h" bases="QMailMessagePartContainer" module="">
            <variable access="public" threadsafety="unspecified" status="commendable" name="CarriageReturn" fullname="QMailMessage::CarriageReturn" href="qmailmessage.html#CarriageReturn-var" location="qmailmessage.h" type="const char" static="true"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="LineFeed" fullname="QMailMessage::LineFeed" href="qmailmessage.html#LineFeed-var" location="qmailmessage.h" type="const char" static="true"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="CRLF" fullname="QMailMessage::CRLF" href="qmailmessage.html#CRLF-var" location="qmailmessage.h" type="const char *" static="true"></variable>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromRfc2822" fullname="QMailMessage::fromRfc2822" href="qmailmessage.html#fromRfc2822" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMailMessage" signature="fromRfc2822(const QByteArray &amp; byteArray)">
                <parameter left="const QByteArray &amp;" right="" name="byteArray" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromRfc2822File" fullname="QMailMessage::fromRfc2822File" href="qmailmessage.html#fromRfc2822File" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMailMessage" signature="fromRfc2822File(const QString &amp; fileName)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="EncodingFormat" fullname="QMailMessage::EncodingFormat" href="qmailmessage.html#EncodingFormat-enum" location="qmailmessage.h">
                <value name="HeaderOnlyFormat" value="1"></value>
                <value name="StorageFormat" value="2"></value>
                <value name="TransmissionFormat" value="3"></value>
                <value name="IdentityFormat" value="4"></value>
                <value name="SerializationFormat" value="5"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="toRfc2822" fullname="QMailMessage::toRfc2822" href="qmailmessage.html#toRfc2822" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="toRfc2822(EncodingFormat format) const">
                <parameter left="EncodingFormat" right="" name="format" default="TransmissionFormat"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toRfc2822" fullname="QMailMessage::toRfc2822" href="qmailmessage.html#toRfc2822-2" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="void" signature="toRfc2822(QDataStream &amp; out, EncodingFormat format) const">
                <parameter left="QDataStream &amp;" right="" name="out" default=""></parameter>
                <parameter left="EncodingFormat" right="" name="format" default="TransmissionFormat"></parameter>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="MailDataSelection" fullname="QMailMessage::MailDataSelection" href="qmailmessage.html#MailDataSelection-enum" location="qmailmessage.h">
                <value name="Header" value="0"></value>
                <value name="HeaderAndBody" value="1"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailMessage" fullname="QMailMessage::QMailMessage" href="qmailmessage.html#QMailMessage" location="qmailmessage.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMailMessage()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailMessage" fullname="QMailMessage::QMailMessage" href="qmailmessage.html#QMailMessage-2" location="qmailmessage.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMailMessage(const QMailId &amp; id, MailDataSelection selection)">
                <parameter left="const QMailId &amp;" right="" name="id" default=""></parameter>
                <parameter left="MailDataSelection" right="" name="selection" default="HeaderAndBody"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailMessage" fullname="QMailMessage::QMailMessage" href="qmailmessage.html#QMailMessage-3" location="qmailmessage.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMailMessage(const QString &amp; uid, const QString &amp; account, MailDataSelection selection)">
                <parameter left="const QString &amp;" right="" name="uid" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="account" default=""></parameter>
                <parameter left="MailDataSelection" right="" name="selection" default="HeaderAndBody"></parameter>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="MessageType" fullname="QMailMessage::MessageType" href="qmailmessage.html#MessageType-enum" location="qmailmessage.h">
                <value name="Mms" value="0x1"></value>
                <value name="Sms" value="0x4"></value>
                <value name="Email" value="0x8"></value>
                <value name="System" value="0x10"></value>
                <value name="None" value="0"></value>
                <value name="AnyType" value="Mms | Sms | Email | System"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="MessageStatusFlag" fullname="QMailMessage::MessageStatusFlag" href="qmailmessage.html#MessageStatusFlag-enum" location="qmailmessage.h" typedef="QMailMessage::Status">
                <value name="Incoming" value="0x0001"></value>
                <value name="Outgoing" value="0x0002"></value>
                <value name="Sent" value="0x0004"></value>
                <value name="Replied" value="0x0008"></value>
                <value name="RepliedAll" value="0x0010"></value>
                <value name="Forwarded" value="0x0020"></value>
                <value name="Downloaded" value="0x0040"></value>
                <value name="Read" value="0x0080"></value>
                <value name="Removed" value="0x0100"></value>
                <value name="ReadElsewhere" value="0x0200"></value>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="Status" fullname="QMailMessage::Status" href="qmailmessage.html#Status-typedef" location="qmailmessage.h" enum="QMailMessage::MessageStatusFlag"></typedef>
            <enum access="public" threadsafety="unspecified" status="commendable" name="AttachmentsAction" fullname="QMailMessage::AttachmentsAction" href="qmailmessage.html#AttachmentsAction-enum" location="qmailmessage.h">
                <value name="LinkToAttachments" value="0"></value>
                <value name="CopyAttachments" value="1"></value>
                <value name="CopyAndDeleteAttachments" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QMailMessage::id" href="qmailmessage.html#id" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailId" signature="id() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setId" fullname="QMailMessage::setId" href="qmailmessage.html#setId" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setId(QMailId id)">
                <parameter left="QMailId" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parentFolderId" fullname="QMailMessage::parentFolderId" href="qmailmessage.html#parentFolderId" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailId" signature="parentFolderId() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setParentFolderId" fullname="QMailMessage::setParentFolderId" href="qmailmessage.html#setParentFolderId" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setParentFolderId(QMailId id)">
                <parameter left="QMailId" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="messageType" fullname="QMailMessage::messageType" href="qmailmessage.html#messageType" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="MessageType" signature="messageType() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMessageType" fullname="QMailMessage::setMessageType" href="qmailmessage.html#setMessageType" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMessageType(MessageType type)">
                <parameter left="MessageType" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="from" fullname="QMailMessage::from" href="qmailmessage.html#from" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailAddress" signature="from() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFrom" fullname="QMailMessage::setFrom" href="qmailmessage.html#setFrom" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFrom(const QMailAddress &amp; from)">
                <parameter left="const QMailAddress &amp;" right="" name="from" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="subject" fullname="QMailMessage::subject" href="qmailmessage.html#subject" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="subject() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSubject" fullname="QMailMessage::setSubject" href="qmailmessage.html#setSubject" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSubject(const QString &amp; subject)">
                <parameter left="const QString &amp;" right="" name="subject" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="date" fullname="QMailMessage::date" href="qmailmessage.html#date" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailTimeStamp" signature="date() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDate" fullname="QMailMessage::setDate" href="qmailmessage.html#setDate" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDate(const QMailTimeStamp &amp; timeStamp)">
                <parameter left="const QMailTimeStamp &amp;" right="" name="timeStamp" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="to" fullname="QMailMessage::to" href="qmailmessage.html#to" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QMailAddress&gt;" signature="to() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTo" fullname="QMailMessage::setTo" href="qmailmessage.html#setTo" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTo(const QList&lt;QMailAddress&gt; &amp; toList)">
                <parameter left="const QList&lt;QMailAddress&gt; &amp;" right="" name="toList" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTo" fullname="QMailMessage::setTo" href="qmailmessage.html#setTo-2" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setTo(const QMailAddress &amp; address)">
                <parameter left="const QMailAddress &amp;" right="" name="address" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cc" fullname="QMailMessage::cc" href="qmailmessage.html#cc" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QMailAddress&gt;" signature="cc() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCc" fullname="QMailMessage::setCc" href="qmailmessage.html#setCc" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCc(const QList&lt;QMailAddress&gt; &amp; ccList)">
                <parameter left="const QList&lt;QMailAddress&gt; &amp;" right="" name="ccList" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bcc" fullname="QMailMessage::bcc" href="qmailmessage.html#bcc" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QMailAddress&gt;" signature="bcc() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBcc" fullname="QMailMessage::setBcc" href="qmailmessage.html#setBcc" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBcc(const QList&lt;QMailAddress&gt; &amp; bccList)">
                <parameter left="const QList&lt;QMailAddress&gt; &amp;" right="" name="bccList" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="recipients" fullname="QMailMessage::recipients" href="qmailmessage.html#recipients" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QMailAddress&gt;" signature="recipients() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasRecipients" fullname="QMailMessage::hasRecipients" href="qmailmessage.html#hasRecipients" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasRecipients() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="replyTo" fullname="QMailMessage::replyTo" href="qmailmessage.html#replyTo" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailAddress" signature="replyTo() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setReplyTo" fullname="QMailMessage::setReplyTo" href="qmailmessage.html#setReplyTo" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setReplyTo(const QMailAddress &amp; address)">
                <parameter left="const QMailAddress &amp;" right="" name="address" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="inReplyTo" fullname="QMailMessage::inReplyTo" href="qmailmessage.html#inReplyTo" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="inReplyTo() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setInReplyTo" fullname="QMailMessage::setInReplyTo" href="qmailmessage.html#setInReplyTo" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setInReplyTo(const QString &amp; messageId)">
                <parameter left="const QString &amp;" right="" name="messageId" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="status" fullname="QMailMessage::status" href="qmailmessage.html#status" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Status" signature="status() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStatus" fullname="QMailMessage::setStatus" href="qmailmessage.html#setStatus" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setStatus(QFlags&lt;QMailMessage::MessageStatusFlag&gt; flags)">
                <parameter left="QFlags&lt;QMailMessage::MessageStatusFlag&gt;" right="" name="flags" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStatus" fullname="QMailMessage::setStatus" href="qmailmessage.html#setStatus-2" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setStatus(MessageStatusFlag flag, bool set)">
                <parameter left="MessageStatusFlag" right="" name="flag" default=""></parameter>
                <parameter left="bool" right="" name="set" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromAccount" fullname="QMailMessage::fromAccount" href="qmailmessage.html#fromAccount" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="fromAccount() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFromAccount" fullname="QMailMessage::setFromAccount" href="qmailmessage.html#setFromAccount" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFromAccount(const QString &amp; account)">
                <parameter left="const QString &amp;" right="" name="account" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromMailbox" fullname="QMailMessage::fromMailbox" href="qmailmessage.html#fromMailbox" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="fromMailbox() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFromMailbox" fullname="QMailMessage::setFromMailbox" href="qmailmessage.html#setFromMailbox" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFromMailbox(const QString &amp; mailBox)">
                <parameter left="const QString &amp;" right="" name="mailBox" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serverUid" fullname="QMailMessage::serverUid" href="qmailmessage.html#serverUid" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="serverUid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setServerUid" fullname="QMailMessage::setServerUid" href="qmailmessage.html#setServerUid" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setServerUid(const QString &amp; server)">
                <parameter left="const QString &amp;" right="" name="server" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="size" fullname="QMailMessage::size" href="qmailmessage.html#size" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="size() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSize" fullname="QMailMessage::setSize" href="qmailmessage.html#setSize" location="qmailmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSize(uint size)">
                <parameter left="uint" right="" name="size" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="indicativeSize" fullname="QMailMessage::indicativeSize" href="qmailmessage.html#indicativeSize" location="qmailmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="indicativeSize() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="VoiceRecordingService" href="voicerecordingservice.html" location="mediarecorder.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="toggleRecording" fullname="VoiceRecordingService::toggleRecording" href="voicerecordingservice.html#toggleRecording" location="mediarecorder.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="toggleRecording()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="recordAudio" fullname="VoiceRecordingService::recordAudio" href="voicerecordingservice.html#recordAudio" location="mediarecorder.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="recordAudio(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="VirtualKeyboardService" href="virtualkeyboardservice.html" location="virtualkeyboardservice.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="keyPress" fullname="VirtualKeyboardService::keyPress" href="virtualkeyboardservice.html#keyPress" location="virtualkeyboardservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="keyPress(int key)">
                <parameter left="int" right="" name="key" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sendKeyEvent" fullname="VirtualKeyboardService::sendKeyEvent" href="virtualkeyboardservice.html#sendKeyEvent" location="virtualkeyboardservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="sendKeyEvent(int unicode, int keycode, int modifiers, bool isPress, bool autoRepeat)">
                <parameter left="int" right="" name="unicode" default=""></parameter>
                <parameter left="int" right="" name="keycode" default=""></parameter>
                <parameter left="int" right="" name="modifiers" default=""></parameter>
                <parameter left="bool" right="" name="isPress" default=""></parameter>
                <parameter left="bool" right="" name="autoRepeat" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="processKeyEvent" fullname="VirtualKeyboardService::processKeyEvent" href="virtualkeyboardservice.html#processKeyEvent" location="virtualkeyboardservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="processKeyEvent(int unicode, int keycode, int modifiers, bool isPress, bool autoRepeat)">
                <parameter left="int" right="" name="unicode" default=""></parameter>
                <parameter left="int" right="" name="keycode" default=""></parameter>
                <parameter left="int" right="" name="modifiers" default=""></parameter>
                <parameter left="bool" right="" name="isPress" default=""></parameter>
                <parameter left="bool" right="" name="autoRepeat" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSimFiles" href="qsimfiles.html" location="qsimfiles.h" bases="QCommInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSimFiles" fullname="QSimFiles::QSimFiles" href="qsimfiles.html#QSimFiles" location="qsimfiles.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSimFiles(const QString &amp; service, QObject * parent, QCommInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="service" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QCommInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSimFiles" fullname="QSimFiles::~QSimFiles" href="qsimfiles.html#dtor.QSimFiles" location="qsimfiles.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSimFiles()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestFileInfo" fullname="QSimFiles::requestFileInfo" href="qsimfiles.html#requestFileInfo" location="qsimfiles.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="requestFileInfo(const QString &amp; reqid, const QString &amp; fileid)">
                <parameter left="const QString &amp;" right="" name="reqid" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="fileid" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readBinary" fullname="QSimFiles::readBinary" href="qsimfiles.html#readBinary" location="qsimfiles.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="readBinary(const QString &amp; reqid, const QString &amp; fileid, int pos, int len)">
                <parameter left="const QString &amp;" right="" name="reqid" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="fileid" default=""></parameter>
                <parameter left="int" right="" name="pos" default=""></parameter>
                <parameter left="int" right="" name="len" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="writeBinary" fullname="QSimFiles::writeBinary" href="qsimfiles.html#writeBinary" location="qsimfiles.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="writeBinary(const QString &amp; reqid, const QString &amp; fileid, int pos, const QByteArray &amp; data)">
                <parameter left="const QString &amp;" right="" name="reqid" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="fileid" default=""></parameter>
                <parameter left="int" right="" name="pos" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readRecord" fullname="QSimFiles::readRecord" href="qsimfiles.html#readRecord" location="qsimfiles.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="readRecord(const QString &amp; reqid, const QString &amp; fileid, int recno, int recordSize)">
                <parameter left="const QString &amp;" right="" name="reqid" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="fileid" default=""></parameter>
                <parameter left="int" right="" name="recno" default=""></parameter>
                <parameter left="int" right="" name="recordSize" default="-1"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="writeRecord" fullname="QSimFiles::writeRecord" href="qsimfiles.html#writeRecord" location="qsimfiles.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="writeRecord(const QString &amp; reqid, const QString &amp; fileid, int recno, const QByteArray &amp; data)">
                <parameter left="const QString &amp;" right="" name="reqid" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="fileid" default=""></parameter>
                <parameter left="int" right="" name="recno" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QSimFiles::error" href="qsimfiles.html#error" location="qsimfiles.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="error(const QString &amp; reqid, QTelephony::SimFileError err)">
                <parameter left="const QString &amp;" right="" name="reqid" default=""></parameter>
                <parameter left="QTelephony::SimFileError" right="" name="err" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fileInfo" fullname="QSimFiles::fileInfo" href="qsimfiles.html#fileInfo" location="qsimfiles.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="fileInfo(const QString &amp; reqid, int size, int recordSize, QTelephony::SimFileType type)">
                <parameter left="const QString &amp;" right="" name="reqid" default=""></parameter>
                <parameter left="int" right="" name="size" default=""></parameter>
                <parameter left="int" right="" name="recordSize" default=""></parameter>
                <parameter left="QTelephony::SimFileType" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readDone" fullname="QSimFiles::readDone" href="qsimfiles.html#readDone" location="qsimfiles.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="readDone(const QString &amp; reqid, const QByteArray &amp; data, int pos)">
                <parameter left="const QString &amp;" right="" name="reqid" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
                <parameter left="int" right="" name="pos" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="writeDone" fullname="QSimFiles::writeDone" href="qsimfiles.html#writeDone" location="qsimfiles.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="writeDone(const QString &amp; reqid, int pos)">
                <parameter left="const QString &amp;" right="" name="reqid" default=""></parameter>
                <parameter left="int" right="" name="pos" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QStorageDeviceSelector" href="qstoragedeviceselector.html" location="qstoragedeviceselector.h" bases="QComboBox" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QStorageDeviceSelector" fullname="QStorageDeviceSelector::QStorageDeviceSelector" href="qstoragedeviceselector.html#QStorageDeviceSelector" location="qstoragedeviceselector.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QStorageDeviceSelector(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QStorageDeviceSelector" fullname="QStorageDeviceSelector::QStorageDeviceSelector" href="qstoragedeviceselector.html#QStorageDeviceSelector-2" location="qstoragedeviceselector.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QStorageDeviceSelector(const QContent &amp; lnk, QWidget * parent)">
                <parameter left="const QContent &amp;" right="" name="lnk" default=""></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QStorageDeviceSelector" fullname="QStorageDeviceSelector::~QStorageDeviceSelector" href="qstoragedeviceselector.html#dtor.QStorageDeviceSelector" location="qstoragedeviceselector.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QStorageDeviceSelector()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLocation" fullname="QStorageDeviceSelector::setLocation" href="qstoragedeviceselector.html#setLocation" location="qstoragedeviceselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLocation(const QString &amp; path)">
                <parameter left="const QString &amp;" right="" name="path" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLocation" fullname="QStorageDeviceSelector::setLocation" href="qstoragedeviceselector.html#setLocation-2" location="qstoragedeviceselector.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setLocation(const QContent &amp; lnk)">
                <parameter left="const QContent &amp;" right="" name="lnk" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="installationPath" fullname="QStorageDeviceSelector::installationPath" href="qstoragedeviceselector.html#installationPath" location="qstoragedeviceselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="installationPath() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="documentPath" fullname="QStorageDeviceSelector::documentPath" href="qstoragedeviceselector.html#documentPath" location="qstoragedeviceselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="documentPath() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fileSystem" fullname="QStorageDeviceSelector::fileSystem" href="qstoragedeviceselector.html#fileSystem" location="qstoragedeviceselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QFileSystem *" signature="fileSystem() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isChanged" fullname="QStorageDeviceSelector::isChanged" href="qstoragedeviceselector.html#isChanged" location="qstoragedeviceselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isChanged() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilter" fullname="QStorageDeviceSelector::setFilter" href="qstoragedeviceselector.html#setFilter" location="qstoragedeviceselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilter(QFileSystemFilter * fsf)">
                <parameter left="QFileSystemFilter *" right="" name="fsf" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="newPath" fullname="QStorageDeviceSelector::newPath" href="qstoragedeviceselector.html#newPath" location="qstoragedeviceselector.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="newPath()"></function>
        </class>
        <typedef access="public" threadsafety="unspecified" status="commendable" name="QtopiaDatabaseId" href="qcontent.html#QtopiaDatabaseId-typedef" location="qcontent.h"></typedef>
        <typedef access="public" threadsafety="unspecified" status="commendable" name="QContentId" href="qcontent.html#QContentId-typedef" location="qcontent.h"></typedef>
        <typedef access="public" threadsafety="unspecified" status="commendable" name="QContentIdList" href="qcontent.html#QContentIdList-typedef" location="qcontent.h"></typedef>
        <class access="public" threadsafety="unspecified" status="main" name="QContent" href="qcontent.html" location="qcontent.h" bases="" module="">
            <variable access="public" threadsafety="unspecified" status="commendable" name="InvalidId" fullname="QContent::InvalidId" href="qcontent.html#InvalidId-var" location="qcontent.h" type="const QContentId" static="true"></variable>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContent" fullname="QContent::QContent" href="qcontent.html#QContent" location="qcontent.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContent()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContent" fullname="QContent::QContent" href="qcontent.html#QContent-2" location="qcontent.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContent(QContentId id)">
                <parameter left="QContentId" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContent" fullname="QContent::QContent" href="qcontent.html#QContent-3" location="qcontent.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QContent(const QString &amp; fileName, bool store)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
                <parameter left="bool" right="" name="store" default="true"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContent" fullname="QContent::QContent" href="qcontent.html#QContent-4" location="qcontent.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QContent(const QFileInfo &amp; fi, bool store)">
                <parameter left="const QFileInfo &amp;" right="" name="fi" default=""></parameter>
                <parameter left="bool" right="" name="store" default="true"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContent" fullname="QContent::QContent" href="qcontent.html#QContent-5" location="qcontent.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="5" type="" signature="QContent(const QContent &amp; other)">
                <parameter left="const QContent &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContent" fullname="QContent::~QContent" href="qcontent.html#dtor.QContent" location="qcontent.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContent()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QContent::isValid" href="qcontent.html#isValid" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid(bool force) const">
                <parameter left="bool" right="" name="force" default="false"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QContent::id" href="qcontent.html#id" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentId" signature="id() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QContent::name" href="qcontent.html#name" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setName" fullname="QContent::setName" href="qcontent.html#setName" location="qcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setName(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="untranslatedName" fullname="QContent::untranslatedName" href="qcontent.html#untranslatedName" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="untranslatedName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QContent::type" href="qcontent.html#type" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="type() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setType" fullname="QContent::setType" href="qcontent.html#setType" location="qcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setType(const QString &amp; type)">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="size" fullname="QContent::size" href="qcontent.html#size" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="size() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="icon" fullname="QContent::icon" href="qcontent.html#icon" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QIcon" signature="icon() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="icon" fullname="QContent::icon" href="qcontent.html#icon-2" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QIcon" signature="icon(QDrmRights::Permission permission) const">
                <parameter left="QDrmRights::Permission" right="" name="permission" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIcon" fullname="QContent::setIcon" href="qcontent.html#setIcon" location="qcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIcon(const QString &amp; iconpath)">
                <parameter left="const QString &amp;" right="" name="iconpath" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="install" fullname="QContent::install" href="qcontent.html#install" location="qcontent.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QContentId" signature="install(const QFileInfo &amp; fi)">
                <parameter left="const QFileInfo &amp;" right="" name="fi" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="uninstall" fullname="QContent::uninstall" href="qcontent.html#uninstall" location="qcontent.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="uninstall(QContentId id)">
                <parameter left="QContentId" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="installBatch" fullname="QContent::installBatch" href="qcontent.html#installBatch" location="qcontent.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="installBatch(const QList&lt;QFileInfo&gt; &amp; batch)">
                <parameter left="const QList&lt;QFileInfo&gt; &amp;" right="" name="batch" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="uninstallBatch" fullname="QContent::uninstallBatch" href="qcontent.html#uninstallBatch" location="qcontent.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="uninstallBatch(const QList&lt;QContentId&gt; &amp; batch)">
                <parameter left="const QList&lt;QContentId&gt; &amp;" right="" name="batch" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearErrors" fullname="QContent::clearErrors" href="qcontent.html#clearErrors" location="qcontent.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="clearErrors()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="execToContent" fullname="QContent::execToContent" href="qcontent.html#execToContent" location="qcontent.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QContentId" signature="execToContent(const QString &amp; bin)">
                <parameter left="const QString &amp;" right="" name="bin" default=""></parameter>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ChangeType" fullname="QContent::ChangeType" href="qcontent.html#ChangeType-enum" location="qcontent.h">
                <value name="Added" value="0"></value>
                <value name="Removed" value="1"></value>
                <value name="Updated" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="commit" fullname="QContent::commit" href="qcontent.html#commit" location="qcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="commit()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="DrmState" fullname="QContent::DrmState" href="qcontent.html#DrmState-enum" location="qcontent.h">
                <value name="Unprotected" value="0"></value>
                <value name="Protected" value="1"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="drmState" fullname="QContent::drmState" href="qcontent.html#drmState" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="DrmState" signature="drmState() const"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Role" fullname="QContent::Role" href="qcontent.html#Role-enum" location="qcontent.h">
                <value name="UnknownUsage" value="0"></value>
                <value name="Document" value="1"></value>
                <value name="Data" value="2"></value>
                <value name="Application" value="3"></value>
                <value name="Folder" value="4"></value>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="deprecated" name="UsageMode" fullname="QContent::UsageMode" href="qcontent.html#UsageMode-typedef" location="qcontent.h"></typedef>
            <function access="public" threadsafety="unspecified" status="commendable" name="role" fullname="QContent::role" href="qcontent.html#role" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Role" signature="role() const"></function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="usageMode" fullname="QContent::usageMode" href="qcontent.html#usageMode" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="UsageMode" signature="usageMode() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRole" fullname="QContent::setRole" href="qcontent.html#setRole" location="qcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRole(Role role)">
                <parameter left="Role" right="" name="role" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fileName" fullname="QContent::fileName" href="qcontent.html#fileName" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="fileName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="comment" fullname="QContent::comment" href="qcontent.html#comment" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="comment() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setComment" fullname="QContent::setComment" href="qcontent.html#setComment" location="qcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setComment(const QString &amp; comment)">
                <parameter left="const QString &amp;" right="" name="comment" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QContent::errorString" href="qcontent.html#errorString" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QContent::error" href="qcontent.html#error" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="error() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="permissions" fullname="QContent::permissions" href="qcontent.html#permissions" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDrmRights::Permissions" signature="permissions(bool force) const">
                <parameter left="bool" right="" name="force" default="true"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rights" fullname="QContent::rights" href="qcontent.html#rights" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDrmRights" signature="rights(QDrmRights::Permission permission) const">
                <parameter left="QDrmRights::Permission" right="" name="permission" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="file" fullname="QContent::file" href="qcontent.html#file" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="file() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFile" fullname="QContent::setFile" href="qcontent.html#setFile" location="qcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFile(const QString &amp; filename)">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="linkFile" fullname="QContent::linkFile" href="qcontent.html#linkFile" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="linkFile() const"></function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="setLinkFile" fullname="QContent::setLinkFile" href="qcontent.html#setLinkFile" location="qcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLinkFile(const QString &amp; filename)">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="fileKnown" fullname="QContent::fileKnown" href="qcontent.html#fileKnown" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="fileKnown() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="linkFileKnown" fullname="QContent::linkFileKnown" href="qcontent.html#linkFileKnown" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="linkFileKnown() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mimeTypePermissions" fullname="QContent::mimeTypePermissions" href="qcontent.html#mimeTypePermissions" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QDrmRights::Permission&gt;" signature="mimeTypePermissions() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mimeTypeIcons" fullname="QContent::mimeTypeIcons" href="qcontent.html#mimeTypeIcons" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="mimeTypeIcons() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mimeTypes" fullname="QContent::mimeTypes" href="qcontent.html#mimeTypes" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="mimeTypes() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMimeTypes" fullname="QContent::setMimeTypes" href="qcontent.html#setMimeTypes" location="qcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMimeTypes(const QStringList &amp; mimeTypes)">
                <parameter left="const QStringList &amp;" right="" name="mimeTypes" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMimeTypes" fullname="QContent::setMimeTypes" href="qcontent.html#setMimeTypes-2" location="qcontent.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setMimeTypes(const QStringList &amp; mimeTypes, const QStringList &amp; mimeTypeIcons, const QList&lt;QDrmRights::Permission&gt; &amp; permissions)">
                <parameter left="const QStringList &amp;" right="" name="mimeTypes" default=""></parameter>
                <parameter left="const QStringList &amp;" right="" name="mimeTypeIcons" default=""></parameter>
                <parameter left="const QList&lt;QDrmRights::Permission&gt; &amp;" right="" name="permissions" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="execute" fullname="QContent::execute" href="qcontent.html#execute" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="execute() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="execute" fullname="QContent::execute" href="qcontent.html#execute-2" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="void" signature="execute(const QStringList &amp; args) const">
                <parameter left="const QStringList &amp;" right="" name="args" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="iconName" fullname="QContent::iconName" href="qcontent.html#iconName" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="iconName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMedia" fullname="QContent::setMedia" href="qcontent.html#setMedia" location="qcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setMedia(const QString &amp; media)">
                <parameter left="const QString &amp;" right="" name="media" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="media" fullname="QContent::media" href="qcontent.html#media" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="media() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="categories" fullname="QContent::categories" href="qcontent.html#categories" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="categories() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCategories" fullname="QContent::setCategories" href="qcontent.html#setCategories" location="qcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCategories(const QStringList &amp; categoryList)">
                <parameter left="const QStringList &amp;" right="" name="categoryList" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QContent::operator==" href="qcontent.html#operator==" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QContent &amp; other) const">
                <parameter left="const QContent &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QContent::operator=" href="qcontent.html#operator=" location="qcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QContent &amp;" signature="operator=(const QContent &amp; other)">
                <parameter left="const QContent &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isPreloaded" fullname="QContent::isPreloaded" href="qcontent.html#isPreloaded" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isPreloaded() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="executableName" fullname="QContent::executableName" href="qcontent.html#executableName" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="executableName() const"></function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="setExecutableName" fullname="QContent::setExecutableName" href="qcontent.html#setExecutableName" location="qcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setExecutableName(const QString &amp; exec)">
                <parameter left="const QString &amp;" right="" name="exec" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isDocument" fullname="QContent::isDocument" href="qcontent.html#isDocument" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isDocument() const"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Property" fullname="QContent::Property" href="qcontent.html#Property-enum" location="qcontent.h">
                <value name="Album" value="0"></value>
                <value name="Artist" value="1"></value>
                <value name="Author" value="2"></value>
                <value name="Composer" value="3"></value>
                <value name="ContentUrl" value="4"></value>
                <value name="Copyright" value="5"></value>
                <value name="CopyrightUrl" value="6"></value>
                <value name="Description" value="7"></value>
                <value name="Genre" value="8"></value>
                <value name="InformationUrl" value="9"></value>
                <value name="PublisherUrl" value="10"></value>
                <value name="RightsIssuerUrl" value="11"></value>
                <value name="Track" value="12"></value>
                <value name="Version" value="13"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="setProperty" fullname="QContent::setProperty" href="qcontent.html#setProperty" location="qcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setProperty(const QString &amp; key, const QString &amp; value, const QString &amp; group)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="group" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setProperty" fullname="QContent::setProperty" href="qcontent.html#setProperty-2" location="qcontent.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setProperty(Property key, const QString &amp; value)">
                <parameter left="Property" right="" name="key" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="property" fullname="QContent::property" href="qcontent.html#property" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="property(const QString &amp; key, const QString &amp; group) const">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="group" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="property" fullname="QContent::property" href="qcontent.html#property-2" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QString" signature="property(Property key) const">
                <parameter left="Property" right="" name="key" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeFiles" fullname="QContent::removeFiles" href="qcontent.html#removeFiles" location="qcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeFiles()"></function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="removeLinkFile" fullname="QContent::removeLinkFile" href="qcontent.html#removeLinkFile" location="qcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeLinkFile()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="open" fullname="QContent::open" href="qcontent.html#open" location="qcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QIODevice *" signature="open(QIODevice::OpenMode mode)">
                <parameter left="QIODevice::OpenMode" right="" name="mode" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="open" fullname="QContent::open" href="qcontent.html#open-2" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QIODevice *" signature="open() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="save" fullname="QContent::save" href="qcontent.html#save" location="qcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="save(const QByteArray &amp; data)">
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="load" fullname="QContent::load" href="qcontent.html#load" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="load(QByteArray &amp; data) const">
                <parameter left="QByteArray &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="copyContent" fullname="QContent::copyContent" href="qcontent.html#copyContent" location="qcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="copyContent(const QContent &amp; from)">
                <parameter left="const QContent &amp;" right="" name="from" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="copyTo" fullname="QContent::copyTo" href="qcontent.html#copyTo" location="qcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="copyTo(const QString &amp; newPath)">
                <parameter left="const QString &amp;" right="" name="newPath" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="moveTo" fullname="QContent::moveTo" href="qcontent.html#moveTo" location="qcontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="moveTo(const QString &amp; newPath)">
                <parameter left="const QString &amp;" right="" name="newPath" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lastUpdated" fullname="QContent::lastUpdated" href="qcontent.html#lastUpdated" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="lastUpdated() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="propertyKey" fullname="QContent::propertyKey" href="qcontent.html#propertyKey" location="qcontent.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="propertyKey(Property property)">
                <parameter left="Property" right="" name="property" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QContent::isNull" href="qcontent.html#isNull" location="qcontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="DocumentSystemConnection" fullname="QContent::DocumentSystemConnection" href="qcontent.html#DocumentSystemConnection-enum" location="qcontent.h">
                <value name="DocumentSystemDirect" value="0"></value>
                <value name="DocumentSystemClient" value="1"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="documentSystemConnection" fullname="QContent::documentSystemConnection" href="qcontent.html#documentSystemConnection" location="qcontent.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="DocumentSystemConnection" signature="documentSystemConnection()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDocumentSystemConnection" fullname="QContent::setDocumentSystemConnection" href="qcontent.html#setDocumentSystemConnection" location="qcontent.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="setDocumentSystemConnection(DocumentSystemConnection connection)">
                <parameter left="DocumentSystemConnection" right="" name="connection" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="commit" fullname="QContent::commit" href="qcontent.html#commit-2" location="qcontent.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="commit(ChangeType &amp; change)">
                <parameter left="ChangeType &amp;" right="" name="change" default=""></parameter>
            </function>
        </class>
        <typedef access="public" threadsafety="unspecified" status="commendable" name="QContentList" href="qcontentset.html#QContentList-typedef" location="qcontent.h"></typedef>
        <function access="public" threadsafety="unspecified" status="commendable" name="qHash" href="#qHash-19" location="qcontent.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="19" type="uint" signature="qHash(const QContentId &amp; id)">
            <parameter left="const QContentId &amp;" right="" name="id" default=""></parameter>
        </function>
        <class access="public" threadsafety="unspecified" status="commendable" name="QDeviceIndicatorsProvider" href="qdeviceindicatorsprovider.html" location="qdeviceindicatorsprovider.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QDeviceIndicatorsProvider" fullname="QDeviceIndicatorsProvider::QDeviceIndicatorsProvider" href="qdeviceindicatorsprovider.html#QDeviceIndicatorsProvider" location="qdeviceindicatorsprovider.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDeviceIndicatorsProvider(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setSupportedIndicators" fullname="QDeviceIndicatorsProvider::setSupportedIndicators" href="qdeviceindicatorsprovider.html#setSupportedIndicators" location="qdeviceindicatorsprovider.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSupportedIndicators(const QStringList &amp; indicators)">
                <parameter left="const QStringList &amp;" right="" name="indicators" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setIndicatorState" fullname="QDeviceIndicatorsProvider::setIndicatorState" href="qdeviceindicatorsprovider.html#setIndicatorState" location="qdeviceindicatorsprovider.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIndicatorState(const QString &amp; indicator, QDeviceIndicators::IndicatorState state)">
                <parameter left="const QString &amp;" right="" name="indicator" default=""></parameter>
                <parameter left="QDeviceIndicators::IndicatorState" right="" name="state" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="changeIndicatorState" fullname="QDeviceIndicatorsProvider::changeIndicatorState" href="qdeviceindicatorsprovider.html#changeIndicatorState" location="qdeviceindicatorsprovider.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="changeIndicatorState(const QString &amp; indicator, QDeviceIndicators::IndicatorState state)">
                <parameter left="const QString &amp;" right="" name="indicator" default=""></parameter>
                <parameter left="QDeviceIndicators::IndicatorState" right="" name="state" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QContentSet" href="qcontentset.html" location="qcontentset.h" bases="QObject" module="">
            <contents name="asynchronous-and-synchronous-updates" title="Asynchronous and Synchronous updates" level="1"></contents>
            <contents name="explicit-content" title="Explicit content" level="1"></contents>
            <contents name="example-iterating-over-a-set-of-user-audio-recordings-sorted-by-most-recently-modified" title="Example: Iterating over a set of user audio recordings sorted by most recently modified." level="1"></contents>
            <contents name="tutorials" title="Tutorials" level="1"></contents>
            <enum access="public" threadsafety="unspecified" status="commendable" name="UpdateMode" fullname="QContentSet::UpdateMode" href="qcontentset.html#UpdateMode-enum" location="qcontentset.h">
                <value name="Asynchronous" value="0"></value>
                <value name="Synchronous" value="1"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentSet" fullname="QContentSet::QContentSet" href="qcontentset.html#QContentSet" location="qcontentset.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContentSet(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentSet" fullname="QContentSet::QContentSet" href="qcontentset.html#QContentSet-2" location="qcontentset.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContentSet(const QContentFilter &amp; criteria, QObject * parent)">
                <parameter left="const QContentFilter &amp;" right="" name="criteria" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="QContentSet" fullname="QContentSet::QContentSet" href="qcontentset.html#QContentSet-3" location="qcontentset.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QContentSet(const QContentFilter &amp; criteria, const QStringList &amp; sortOrder, QObject * parent)">
                <parameter left="const QContentFilter &amp;" right="" name="criteria" default=""></parameter>
                <parameter left="const QStringList &amp;" right="" name="sortOrder" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentSet" fullname="QContentSet::QContentSet" href="qcontentset.html#QContentSet-4" location="qcontentset.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QContentSet(QContentFilter::FilterType tag, const QString &amp; filter, QObject * parent)">
                <parameter left="QContentFilter::FilterType" right="" name="tag" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="filter" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="QContentSet" fullname="QContentSet::QContentSet" href="qcontentset.html#QContentSet-5" location="qcontentset.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="5" type="" signature="QContentSet(QContentFilter::FilterType tag, const QString &amp; filter, const QStringList &amp; sortOrder, QObject * parent)">
                <parameter left="QContentFilter::FilterType" right="" name="tag" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="filter" default=""></parameter>
                <parameter left="const QStringList &amp;" right="" name="sortOrder" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentSet" fullname="QContentSet::QContentSet" href="qcontentset.html#QContentSet-6" location="qcontentset.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="6" type="" signature="QContentSet(const QContentSet &amp; original, QObject * parent)">
                <parameter left="const QContentSet &amp;" right="" name="original" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentSet" fullname="QContentSet::QContentSet" href="qcontentset.html#QContentSet-7" location="qcontentset.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="7" type="" signature="QContentSet(UpdateMode mode, QObject * parent)">
                <parameter left="UpdateMode" right="" name="mode" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentSet" fullname="QContentSet::QContentSet" href="qcontentset.html#QContentSet-8" location="qcontentset.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="8" type="" signature="QContentSet(const QContentFilter &amp; criteria, UpdateMode mode, QObject * parent)">
                <parameter left="const QContentFilter &amp;" right="" name="criteria" default=""></parameter>
                <parameter left="UpdateMode" right="" name="mode" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentSet" fullname="QContentSet::QContentSet" href="qcontentset.html#QContentSet-9" location="qcontentset.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="9" type="" signature="QContentSet(const QContentFilter &amp; criteria, const QContentSortCriteria &amp; sort, UpdateMode mode, QObject * parent)">
                <parameter left="const QContentFilter &amp;" right="" name="criteria" default=""></parameter>
                <parameter left="const QContentSortCriteria &amp;" right="" name="sort" default=""></parameter>
                <parameter left="UpdateMode" right="" name="mode" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContentSet" fullname="QContentSet::~QContentSet" href="qcontentset.html#dtor.QContentSet" location="qcontentset.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContentSet()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateMode" fullname="QContentSet::updateMode" href="qcontentset.html#updateMode" location="qcontentset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="UpdateMode" signature="updateMode() const"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Priority" fullname="QContentSet::Priority" href="qcontentset.html#Priority-enum" location="qcontentset.h">
                <value name="LowPriority" value="0"></value>
                <value name="NormalPriority" value="1"></value>
                <value name="HighPriority" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="scan" fullname="QContentSet::scan" href="qcontentset.html#scan" location="qcontentset.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="scan(const QString &amp; path, Priority priority)">
                <parameter left="const QString &amp;" right="" name="path" default=""></parameter>
                <parameter left="Priority" right="" name="priority" default="NormalPriority"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="findDocuments" fullname="QContentSet::findDocuments" href="qcontentset.html#findDocuments" location="qcontentset.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="findDocuments(QContentSet * folder, const QString &amp; mimefilter)">
                <parameter left="QContentSet *" right="" name="folder" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="mimefilter" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contains" fullname="QContentSet::contains" href="qcontentset.html#contains" location="qcontentset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="contains(const QContent &amp; content) const">
                <parameter left="const QContent &amp;" right="" name="content" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="add" fullname="QContentSet::add" href="qcontentset.html#add" location="qcontentset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="add(const QContent &amp; content)">
                <parameter left="const QContent &amp;" right="" name="content" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remove" fullname="QContentSet::remove" href="qcontentset.html#remove" location="qcontentset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="remove(const QContent &amp; content)">
                <parameter left="const QContent &amp;" right="" name="content" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QContentSet::clear" href="qcontentset.html#clear" location="qcontentset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="items" fullname="QContentSet::items" href="qcontentset.html#items" location="qcontentset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentList" signature="items() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemIds" fullname="QContentSet::itemIds" href="qcontentset.html#itemIds" location="qcontentset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentIdList" signature="itemIds() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="content" fullname="QContentSet::content" href="qcontentset.html#content" location="qcontentset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContent" signature="content(int index) const">
                <parameter left="int" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentId" fullname="QContentSet::contentId" href="qcontentset.html#contentId" location="qcontentset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentId" signature="contentId(int index) const">
                <parameter left="int" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QContentSet::isEmpty" href="qcontentset.html#isEmpty" location="qcontentset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="appendFrom" fullname="QContentSet::appendFrom" href="qcontentset.html#appendFrom" location="qcontentset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="appendFrom(QContentSet &amp; other)">
                <parameter left="QContentSet &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="count" fullname="QContentSet::count" href="qcontentset.html#count" location="qcontentset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="count() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="findExecutable" fullname="QContentSet::findExecutable" href="qcontentset.html#findExecutable" location="qcontentset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContent" signature="findExecutable(const QString &amp; exec) const">
                <parameter left="const QString &amp;" right="" name="exec" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="findFileName" fullname="QContentSet::findFileName" href="qcontentset.html#findFileName" location="qcontentset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContent" signature="findFileName(const QString &amp; filename) const">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="types" fullname="QContentSet::types" href="qcontentset.html#types" location="qcontentset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="types() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QContentSet::operator=" href="qcontentset.html#operator=" location="qcontentset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QContentSet &amp;" signature="operator=(const QContentSet &amp; contentset)">
                <parameter left="const QContentSet &amp;" right="" name="contentset" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addCriteria" fullname="QContentSet::addCriteria" href="qcontentset.html#addCriteria" location="qcontentset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addCriteria(QContentFilter::FilterType kind, const QString &amp; filter, QContentFilter::Operand operand)">
                <parameter left="QContentFilter::FilterType" right="" name="kind" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="filter" default=""></parameter>
                <parameter left="QContentFilter::Operand" right="" name="operand" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addCriteria" fullname="QContentSet::addCriteria" href="qcontentset.html#addCriteria-2" location="qcontentset.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="addCriteria(const QContentFilter &amp; filter, QContentFilter::Operand operand)">
                <parameter left="const QContentFilter &amp;" right="" name="filter" default=""></parameter>
                <parameter left="QContentFilter::Operand" right="" name="operand" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCriteria" fullname="QContentSet::setCriteria" href="qcontentset.html#setCriteria" location="qcontentset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCriteria(QContentFilter::FilterType kind, const QString &amp; filter)">
                <parameter left="QContentFilter::FilterType" right="" name="kind" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="filter" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCriteria" fullname="QContentSet::setCriteria" href="qcontentset.html#setCriteria-2" location="qcontentset.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setCriteria(const QContentFilter &amp; filter)">
                <parameter left="const QContentFilter &amp;" right="" name="filter" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearFilter" fullname="QContentSet::clearFilter" href="qcontentset.html#clearFilter" location="qcontentset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearFilter()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QContentSet::filter" href="qcontentset.html#filter" location="qcontentset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentFilter" signature="filter() const"></function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="setSortOrder" fullname="QContentSet::setSortOrder" href="qcontentset.html#setSortOrder" location="qcontentset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSortOrder(const QStringList &amp; sortOrder)">
                <parameter left="const QStringList &amp;" right="" name="sortOrder" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="sortOrder" fullname="QContentSet::sortOrder" href="qcontentset.html#sortOrder" location="qcontentset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="sortOrder() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSortCriteria" fullname="QContentSet::setSortCriteria" href="qcontentset.html#setSortCriteria" location="qcontentset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSortCriteria(const QContentSortCriteria &amp; criteria)">
                <parameter left="const QContentSortCriteria &amp;" right="" name="criteria" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sortCriteria" fullname="QContentSet::sortCriteria" href="qcontentset.html#sortCriteria" location="qcontentset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentSortCriteria" signature="sortCriteria() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="count" fullname="QContentSet::count" href="qcontentset.html#count-2" location="qcontentset.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="int" signature="count(const QContentFilter &amp; filter)">
                <parameter left="const QContentFilter &amp;" right="" name="filter" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentAboutToBeInserted" fullname="QContentSet::contentAboutToBeInserted" href="qcontentset.html#contentAboutToBeInserted" location="qcontentset.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="contentAboutToBeInserted(int start, int end)">
                <parameter left="int" right="" name="start" default=""></parameter>
                <parameter left="int" right="" name="end" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentInserted" fullname="QContentSet::contentInserted" href="qcontentset.html#contentInserted" location="qcontentset.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="contentInserted()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentAboutToBeRemoved" fullname="QContentSet::contentAboutToBeRemoved" href="qcontentset.html#contentAboutToBeRemoved" location="qcontentset.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="contentAboutToBeRemoved(int start, int end)">
                <parameter left="int" right="" name="start" default=""></parameter>
                <parameter left="int" right="" name="end" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentRemoved" fullname="QContentSet::contentRemoved" href="qcontentset.html#contentRemoved" location="qcontentset.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="contentRemoved()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentChanged" fullname="QContentSet::contentChanged" href="qcontentset.html#contentChanged" location="qcontentset.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="contentChanged(int start, int end)">
                <parameter left="int" right="" name="start" default=""></parameter>
                <parameter left="int" right="" name="end" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="aboutToSort" fullname="QContentSet::aboutToSort" href="qcontentset.html#aboutToSort" location="qcontentset.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="aboutToSort()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sorted" fullname="QContentSet::sorted" href="qcontentset.html#sorted" location="qcontentset.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="sorted()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="changed" fullname="QContentSet::changed" href="qcontentset.html#changed" location="qcontentset.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="changed(const QContentIdList &amp; idList, QContent::ChangeType type)">
                <parameter left="const QContentIdList &amp;" right="" name="idList" default=""></parameter>
                <parameter left="QContent::ChangeType" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="changed" fullname="QContentSet::changed" href="qcontentset.html#changed-2" location="qcontentset.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="changed()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QContentSetModel" href="qcontentsetmodel.html" location="qcontentset.h" bases="QAbstractListModel" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentSetModel" fullname="QContentSetModel::QContentSetModel" href="qcontentsetmodel.html#QContentSetModel" location="qcontentset.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContentSetModel(const QContentSet * cls, QObject * parent)">
                <parameter left="const QContentSet *" right="" name="cls" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContentSetModel" fullname="QContentSetModel::~QContentSetModel" href="qcontentsetmodel.html#dtor.QContentSetModel" location="qcontentset.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContentSetModel()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rowCount" fullname="QContentSetModel::rowCount" href="qcontentsetmodel.html#rowCount" location="qcontentset.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="int" signature="rowCount(const QModelIndex &amp; parent) const">
                <parameter left="const QModelIndex &amp;" right="" name="parent" default="QModelIndex()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="data" fullname="QContentSetModel::data" href="qcontentsetmodel.html#data" location="qcontentset.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="data(const QModelIndex &amp; index, int role) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
                <parameter left="int" right="" name="role" default="Qt::DisplayRole"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="content" fullname="QContentSetModel::content" href="qcontentsetmodel.html#content" location="qcontentset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContent" signature="content(uint row) const">
                <parameter left="uint" right="" name="row" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentId" fullname="QContentSetModel::contentId" href="qcontentsetmodel.html#contentId" location="qcontentset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentId" signature="contentId(uint row) const">
                <parameter left="uint" right="" name="row" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="content" fullname="QContentSetModel::content" href="qcontentsetmodel.html#content-2" location="qcontentset.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QContent" signature="content(const QModelIndex &amp; index) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentId" fullname="QContentSetModel::contentId" href="qcontentsetmodel.html#contentId-2" location="qcontentset.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QContentId" signature="contentId(const QModelIndex &amp; index) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSelectPermission" fullname="QContentSetModel::setSelectPermission" href="qcontentsetmodel.html#setSelectPermission" location="qcontentset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSelectPermission(QDrmRights::Permission permission)">
                <parameter left="QDrmRights::Permission" right="" name="permission" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectPermission" fullname="QContentSetModel::selectPermission" href="qcontentsetmodel.html#selectPermission" location="qcontentset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDrmRights::Permission" signature="selectPermission() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMandatoryPermissions" fullname="QContentSetModel::setMandatoryPermissions" href="qcontentsetmodel.html#setMandatoryPermissions" location="qcontentset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMandatoryPermissions(QFlags&lt;QDrmRights::Permission&gt; permissions)">
                <parameter left="QFlags&lt;QDrmRights::Permission&gt;" right="" name="permissions" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mandatoryPermissions" fullname="QContentSetModel::mandatoryPermissions" href="qcontentsetmodel.html#mandatoryPermissions" location="qcontentset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDrmRights::Permissions" signature="mandatoryPermissions() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateInProgress" fullname="QContentSetModel::updateInProgress" href="qcontentsetmodel.html#updateInProgress" location="qcontentset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="updateInProgress() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateStarted" fullname="QContentSetModel::updateStarted" href="qcontentsetmodel.html#updateStarted" location="qcontentset.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="updateStarted()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateFinished" fullname="QContentSetModel::updateFinished" href="qcontentsetmodel.html#updateFinished" location="qcontentset.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="updateFinished()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QServiceIndicationReader" href="qserviceindicationreader.html" location="qserviceindicationreader.h" bases="QWbXmlReader" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QServiceIndicationReader" fullname="QServiceIndicationReader::QServiceIndicationReader" href="qserviceindicationreader.html#QServiceIndicationReader" location="qserviceindicationreader.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QServiceIndicationReader()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QServiceIndicationReader" fullname="QServiceIndicationReader::~QServiceIndicationReader" href="qserviceindicationreader.html#dtor.QServiceIndicationReader" location="qserviceindicationreader.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QServiceIndicationReader()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QCallVolume" href="qcallvolume.html" location="qcallvolume.h" bases="QCommInterface" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="speakerVolume" fullname="QCallVolume::speakerVolume" href="qcallvolume.html#speakerVolume-prop" location="qcallvolume.h" type="int">
                <getter name="speakerVolume"></getter>
                <setter name="setSpeakerVolume"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="minimumSpeakerVolume" fullname="QCallVolume::minimumSpeakerVolume" href="qcallvolume.html#minimumSpeakerVolume-prop" location="qcallvolume.h" type="int">
                <getter name="minimumSpeakerVolume"></getter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="maximumSpeakerVolume" fullname="QCallVolume::maximumSpeakerVolume" href="qcallvolume.html#maximumSpeakerVolume-prop" location="qcallvolume.h" type="int">
                <getter name="maximumSpeakerVolume"></getter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="microphoneVolume" fullname="QCallVolume::microphoneVolume" href="qcallvolume.html#microphoneVolume-prop" location="qcallvolume.h" type="int">
                <getter name="microphoneVolume"></getter>
                <setter name="setMicrophoneVolume"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="minimumMicrophoneVolume" fullname="QCallVolume::minimumMicrophoneVolume" href="qcallvolume.html#minimumMicrophoneVolume-prop" location="qcallvolume.h" type="int">
                <getter name="minimumMicrophoneVolume"></getter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="maximumMicrophoneVolume" fullname="QCallVolume::maximumMicrophoneVolume" href="qcallvolume.html#maximumMicrophoneVolume-prop" location="qcallvolume.h" type="int">
                <getter name="maximumMicrophoneVolume"></getter>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QCallVolume" fullname="QCallVolume::QCallVolume" href="qcallvolume.html#QCallVolume" location="qcallvolume.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCallVolume(const QString &amp; service, QObject * parent, QCommInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="service" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QCommInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCallVolume" fullname="QCallVolume::~QCallVolume" href="qcallvolume.html#dtor.QCallVolume" location="qcallvolume.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCallVolume()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="speakerVolume" fullname="QCallVolume::speakerVolume" href="qcallvolume.html#speakerVolume-prop" location="qcallvolume.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="speakerVolume" type="int" signature="speakerVolume() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="minimumSpeakerVolume" fullname="QCallVolume::minimumSpeakerVolume" href="qcallvolume.html#minimumSpeakerVolume-prop" location="qcallvolume.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="minimumSpeakerVolume" type="int" signature="minimumSpeakerVolume() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumSpeakerVolume" fullname="QCallVolume::maximumSpeakerVolume" href="qcallvolume.html#maximumSpeakerVolume-prop" location="qcallvolume.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="maximumSpeakerVolume" type="int" signature="maximumSpeakerVolume() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="microphoneVolume" fullname="QCallVolume::microphoneVolume" href="qcallvolume.html#microphoneVolume-prop" location="qcallvolume.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="microphoneVolume" type="int" signature="microphoneVolume() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="minimumMicrophoneVolume" fullname="QCallVolume::minimumMicrophoneVolume" href="qcallvolume.html#minimumMicrophoneVolume-prop" location="qcallvolume.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="minimumMicrophoneVolume" type="int" signature="minimumMicrophoneVolume() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumMicrophoneVolume" fullname="QCallVolume::maximumMicrophoneVolume" href="qcallvolume.html#maximumMicrophoneVolume-prop" location="qcallvolume.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="maximumMicrophoneVolume" type="int" signature="maximumMicrophoneVolume() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="speakerVolumeChanged" fullname="QCallVolume::speakerVolumeChanged" href="qcallvolume.html#speakerVolumeChanged" location="qcallvolume.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="speakerVolumeChanged(int volume)">
                <parameter left="int" right="" name="volume" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="microphoneVolumeChanged" fullname="QCallVolume::microphoneVolumeChanged" href="qcallvolume.html#microphoneVolumeChanged" location="qcallvolume.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="microphoneVolumeChanged(int volume)">
                <parameter left="int" right="" name="volume" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSpeakerVolume" fullname="QCallVolume::setSpeakerVolume" href="qcallvolume.html#speakerVolume-prop" location="qcallvolume.cpp" virtual="impure" meta="slot" const="false" static="false" overload="false" associated-property="speakerVolume" type="void" signature="setSpeakerVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMicrophoneVolume" fullname="QCallVolume::setMicrophoneVolume" href="qcallvolume.html#microphoneVolume-prop" location="qcallvolume.cpp" virtual="impure" meta="slot" const="false" static="false" overload="false" associated-property="microphoneVolume" type="void" signature="setMicrophoneVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="SettingsManagerService" href="settingsmanagerservice.html" location="settingsmanagerservice.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="pullSettingStatus" fullname="SettingsManagerService::pullSettingStatus" href="settingsmanagerservice.html#pullSettingStatus" location="settingsmanagerservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="pullSettingStatus(const QString &amp; appName, const QString &amp; windowTitle, const QString &amp; details)">
                <parameter left="const QString &amp;" right="" name="appName" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="windowTitle" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="details" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pushSettingStatus" fullname="SettingsManagerService::pushSettingStatus" href="settingsmanagerservice.html#pushSettingStatus" location="settingsmanagerservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="pushSettingStatus(const QString &amp; appName, const QString &amp; windowTitle, const QString &amp; details)">
                <parameter left="const QString &amp;" right="" name="appName" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="windowTitle" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="details" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QExpressionEvaluator" href="qexpressionevaluator.html" location="qexpressionevaluator.h" bases="QObject" module="">
            <contents name="overview" title="Overview" level="1"></contents>
            <contents name="details" title="Details" level="1"></contents>
            <contents name="supported-data-types" title="Supported Data Types" level="1"></contents>
            <contents name="supported-operators" title="Supported Operators" level="1"></contents>
            <contents name="type-conversion" title="Type Conversion" level="1"></contents>
            <contents name="valuespace-integration" title="Valuespace integration" level="1"></contents>
            <enum access="public" threadsafety="unspecified" status="commendable" name="FloatingPointFormat" fullname="QExpressionEvaluator::FloatingPointFormat" href="qexpressionevaluator.html#FloatingPointFormat-enum" location="qexpressionevaluator.h">
                <value name="Double" value="0"></value>
                <value name="FixedPoint" value="1"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QExpressionEvaluator" fullname="QExpressionEvaluator::QExpressionEvaluator" href="qexpressionevaluator.html#QExpressionEvaluator" location="qexpressionevaluator.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QExpressionEvaluator(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QExpressionEvaluator" fullname="QExpressionEvaluator::QExpressionEvaluator" href="qexpressionevaluator.html#QExpressionEvaluator-2" location="qexpressionevaluator.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QExpressionEvaluator(const QByteArray &amp; expr, QObject * parent)">
                <parameter left="const QByteArray &amp;" right="" name="expr" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QExpressionEvaluator" fullname="QExpressionEvaluator::~QExpressionEvaluator" href="qexpressionevaluator.html#dtor.QExpressionEvaluator" location="qexpressionevaluator.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QExpressionEvaluator()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QExpressionEvaluator::isValid" href="qexpressionevaluator.html#isValid" location="qexpressionevaluator.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="evaluate" fullname="QExpressionEvaluator::evaluate" href="qexpressionevaluator.html#evaluate" location="qexpressionevaluator.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="evaluate()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="result" fullname="QExpressionEvaluator::result" href="qexpressionevaluator.html#result" location="qexpressionevaluator.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QVariant" signature="result()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFloatingPointFormat" fullname="QExpressionEvaluator::setFloatingPointFormat" href="qexpressionevaluator.html#setFloatingPointFormat" location="qexpressionevaluator.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFloatingPointFormat(const FloatingPointFormat &amp; fmt)">
                <parameter left="const FloatingPointFormat &amp;" right="" name="fmt" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="floatingPointFormat" fullname="QExpressionEvaluator::floatingPointFormat" href="qexpressionevaluator.html#floatingPointFormat" location="qexpressionevaluator.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="FloatingPointFormat" signature="floatingPointFormat() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="expression" fullname="QExpressionEvaluator::expression" href="qexpressionevaluator.html#expression" location="qexpressionevaluator.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="expression() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExpression" fullname="QExpressionEvaluator::setExpression" href="qexpressionevaluator.html#setExpression" location="qexpressionevaluator.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="bool" signature="setExpression(const QByteArray &amp; expr)">
                <parameter left="const QByteArray &amp;" right="" name="expr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QExpressionEvaluator::clear" href="qexpressionevaluator.html#clear" location="qexpressionevaluator.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="clear()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="termsChanged" fullname="QExpressionEvaluator::termsChanged" href="qexpressionevaluator.html#termsChanged" location="qexpressionevaluator.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="termsChanged()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="PhotoEditService" href="photoeditservice.html" location="photoeditui.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="showCategory" fullname="PhotoEditService::showCategory" href="photoeditservice.html#showCategory" location="photoeditui.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="showCategory(const QString &amp; category)">
                <parameter left="const QString &amp;" right="" name="category" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="editImage" fullname="PhotoEditService::editImage" href="photoeditservice.html#editImage" location="photoeditui.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="editImage(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QVibrateAccessory" href="qvibrateaccessory.html" location="qvibrateaccessory.h" bases="QHardwareInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QVibrateAccessory" fullname="QVibrateAccessory::QVibrateAccessory" href="qvibrateaccessory.html#QVibrateAccessory" location="qvibrateaccessory.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVibrateAccessory(const QString &amp; id, QObject * parent, QAbstractIpcInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="id" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QAbstractIpcInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVibrateAccessory" fullname="QVibrateAccessory::~QVibrateAccessory" href="qvibrateaccessory.html#dtor.QVibrateAccessory" location="qvibrateaccessory.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVibrateAccessory()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="vibrateOnRing" fullname="QVibrateAccessory::vibrateOnRing" href="qvibrateaccessory.html#vibrateOnRing" location="qvibrateaccessory.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="vibrateOnRing() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="vibrateNow" fullname="QVibrateAccessory::vibrateNow" href="qvibrateaccessory.html#vibrateNow" location="qvibrateaccessory.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="vibrateNow() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportsVibrateOnRing" fullname="QVibrateAccessory::supportsVibrateOnRing" href="qvibrateaccessory.html#supportsVibrateOnRing" location="qvibrateaccessory.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="supportsVibrateOnRing() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportsVibrateNow" fullname="QVibrateAccessory::supportsVibrateNow" href="qvibrateaccessory.html#supportsVibrateNow" location="qvibrateaccessory.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="supportsVibrateNow() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVibrateOnRing" fullname="QVibrateAccessory::setVibrateOnRing" href="qvibrateaccessory.html#setVibrateOnRing" location="qvibrateaccessory.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setVibrateOnRing(const bool value)">
                <parameter left="const bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVibrateNow" fullname="QVibrateAccessory::setVibrateNow" href="qvibrateaccessory.html#setVibrateNow" location="qvibrateaccessory.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setVibrateNow(const bool value)">
                <parameter left="const bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="vibrateOnRingModified" fullname="QVibrateAccessory::vibrateOnRingModified" href="qvibrateaccessory.html#vibrateOnRingModified" location="qvibrateaccessory.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="vibrateOnRingModified()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="vibrateNowModified" fullname="QVibrateAccessory::vibrateNowModified" href="qvibrateaccessory.html#vibrateNowModified" location="qvibrateaccessory.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="vibrateNowModified()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QVibrateAccessoryProvider" href="qvibrateaccessoryprovider.html" location="qvibrateaccessory.h" bases="QVibrateAccessory" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QVibrateAccessoryProvider" fullname="QVibrateAccessoryProvider::QVibrateAccessoryProvider" href="qvibrateaccessoryprovider.html#QVibrateAccessoryProvider" location="qvibrateaccessory.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVibrateAccessoryProvider(const QString &amp; id, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVibrateAccessoryProvider" fullname="QVibrateAccessoryProvider::~QVibrateAccessoryProvider" href="qvibrateaccessoryprovider.html#dtor.QVibrateAccessoryProvider" location="qvibrateaccessory.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVibrateAccessoryProvider()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setSupportsVibrateOnRing" fullname="QVibrateAccessoryProvider::setSupportsVibrateOnRing" href="qvibrateaccessoryprovider.html#setSupportsVibrateOnRing" location="qvibrateaccessory.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSupportsVibrateOnRing(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setSupportsVibrateNow" fullname="QVibrateAccessoryProvider::setSupportsVibrateNow" href="qvibrateaccessoryprovider.html#setSupportsVibrateNow" location="qvibrateaccessory.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSupportsVibrateNow(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVibrateOnRing" fullname="QVibrateAccessoryProvider::setVibrateOnRing" href="qvibrateaccessoryprovider.html#setVibrateOnRing" location="qvibrateaccessory.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setVibrateOnRing(const bool value)">
                <parameter left="const bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVibrateNow" fullname="QVibrateAccessoryProvider::setVibrateNow" href="qvibrateaccessoryprovider.html#setVibrateNow" location="qvibrateaccessory.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setVibrateNow(const bool value)">
                <parameter left="const bool" right="" name="value" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSimEnvelope" href="qsimenvelope.html" location="qsimenvelope.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSimEnvelope" fullname="QSimEnvelope::QSimEnvelope" href="qsimenvelope.html#QSimEnvelope" location="qsimenvelope.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSimEnvelope()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSimEnvelope" fullname="QSimEnvelope::QSimEnvelope" href="qsimenvelope.html#QSimEnvelope-2" location="qsimenvelope.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QSimEnvelope(const QSimEnvelope &amp; value)">
                <parameter left="const QSimEnvelope &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSimEnvelope" fullname="QSimEnvelope::~QSimEnvelope" href="qsimenvelope.html#dtor.QSimEnvelope" location="qsimenvelope.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSimEnvelope()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="QSimEnvelope::Type" href="qsimenvelope.html#Type-enum" location="qsimenvelope.h">
                <value name="NoEnvelope" value="-1"></value>
                <value name="SMSPPDownload" value="0xD1"></value>
                <value name="CellBroadcastDownload" value="0xD2"></value>
                <value name="MenuSelection" value="0xD3"></value>
                <value name="CallControl" value="0xD4"></value>
                <value name="MOSMSControl" value="0xD5"></value>
                <value name="EventDownload" value="0xD6"></value>
                <value name="TimerExpiration" value="0xD7"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Event" fullname="QSimEnvelope::Event" href="qsimenvelope.html#Event-enum" location="qsimenvelope.h">
                <value name="NoEvent" value="-1"></value>
                <value name="MTCall" value="0"></value>
                <value name="CallConnected" value="1"></value>
                <value name="CallDisconnected" value="2"></value>
                <value name="LocationStatus" value="3"></value>
                <value name="UserActivity" value="4"></value>
                <value name="IdleScreenAvailable" value="5"></value>
                <value name="CardReaderStatus" value="6"></value>
                <value name="LanguageSelection" value="7"></value>
                <value name="BrowserTermination" value="8"></value>
                <value name="DataAvailable" value="9"></value>
                <value name="ChannelStatus" value="10"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QSimEnvelope::type" href="qsimenvelope.html#type" location="qsimenvelope.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSimEnvelope::Type" signature="type() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setType" fullname="QSimEnvelope::setType" href="qsimenvelope.html#setType" location="qsimenvelope.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setType(QSimEnvelope::Type value)">
                <parameter left="QSimEnvelope::Type" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sourceDevice" fullname="QSimEnvelope::sourceDevice" href="qsimenvelope.html#sourceDevice" location="qsimenvelope.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSimCommand::Device" signature="sourceDevice() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSourceDevice" fullname="QSimEnvelope::setSourceDevice" href="qsimenvelope.html#setSourceDevice" location="qsimenvelope.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSourceDevice(QSimCommand::Device value)">
                <parameter left="QSimCommand::Device" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="destinationDevice" fullname="QSimEnvelope::destinationDevice" href="qsimenvelope.html#destinationDevice" location="qsimenvelope.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSimCommand::Device" signature="destinationDevice() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDestinationDevice" fullname="QSimEnvelope::setDestinationDevice" href="qsimenvelope.html#setDestinationDevice" location="qsimenvelope.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDestinationDevice(QSimCommand::Device value)">
                <parameter left="QSimCommand::Device" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="menuItem" fullname="QSimEnvelope::menuItem" href="qsimenvelope.html#menuItem" location="qsimenvelope.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="menuItem() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMenuItem" fullname="QSimEnvelope::setMenuItem" href="qsimenvelope.html#setMenuItem" location="qsimenvelope.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMenuItem(uint value)">
                <parameter left="uint" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestHelp" fullname="QSimEnvelope::requestHelp" href="qsimenvelope.html#requestHelp" location="qsimenvelope.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="requestHelp() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRequestHelp" fullname="QSimEnvelope::setRequestHelp" href="qsimenvelope.html#setRequestHelp" location="qsimenvelope.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRequestHelp(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="event" fullname="QSimEnvelope::event" href="qsimenvelope.html#event" location="qsimenvelope.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSimEnvelope::Event" signature="event() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEvent" fullname="QSimEnvelope::setEvent" href="qsimenvelope.html#setEvent" location="qsimenvelope.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setEvent(QSimEnvelope::Event value)">
                <parameter left="QSimEnvelope::Event" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="extensionData" fullname="QSimEnvelope::extensionData" href="qsimenvelope.html#extensionData" location="qsimenvelope.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="extensionData() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExtensionData" fullname="QSimEnvelope::setExtensionData" href="qsimenvelope.html#setExtensionData" location="qsimenvelope.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setExtensionData(QByteArray value)">
                <parameter left="QByteArray" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="extensionField" fullname="QSimEnvelope::extensionField" href="qsimenvelope.html#extensionField" location="qsimenvelope.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="extensionField(int tag) const">
                <parameter left="int" right="" name="tag" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addExtensionField" fullname="QSimEnvelope::addExtensionField" href="qsimenvelope.html#addExtensionField" location="qsimenvelope.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addExtensionField(int tag, const QByteArray &amp; value)">
                <parameter left="int" right="" name="tag" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromPdu" fullname="QSimEnvelope::fromPdu" href="qsimenvelope.html#fromPdu" location="qsimenvelope.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QSimEnvelope" signature="fromPdu(const QByteArray &amp; pdu)">
                <parameter left="const QByteArray &amp;" right="" name="pdu" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toPdu" fullname="QSimEnvelope::toPdu" href="qsimenvelope.html#toPdu" location="qsimenvelope.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="toPdu() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QSimEnvelope::operator=" href="qsimenvelope.html#operator=" location="qsimenvelope.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QSimEnvelope &amp;" signature="operator=(const QSimEnvelope &amp; value)">
                <parameter left="const QSimEnvelope &amp;" right="" name="value" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QTelephony" href="qtelephony.html" location="qtelephonynamespace.h" bases="QObject" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="RegistrationState" fullname="QTelephony::RegistrationState" href="qtelephony.html#RegistrationState-enum" location="qtelephonynamespace.h">
                <value name="RegistrationNone" value="0"></value>
                <value name="RegistrationHome" value="1"></value>
                <value name="RegistrationSearching" value="2"></value>
                <value name="RegistrationDenied" value="3"></value>
                <value name="RegistrationUnknown" value="4"></value>
                <value name="RegistrationRoaming" value="5"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="OperatorMode" fullname="QTelephony::OperatorMode" href="qtelephony.html#OperatorMode-enum" location="qtelephonynamespace.h">
                <value name="OperatorModeAutomatic" value="0"></value>
                <value name="OperatorModeManual" value="1"></value>
                <value name="OperatorModeDeregister" value="2"></value>
                <value name="OperatorModeManualAutomatic" value="3"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="OperatorAvailability" fullname="QTelephony::OperatorAvailability" href="qtelephony.html#OperatorAvailability-enum" location="qtelephonynamespace.h">
                <value name="OperatorUnavailable" value="0"></value>
                <value name="OperatorAvailable" value="1"></value>
                <value name="OperatorCurrent" value="2"></value>
                <value name="OperatorForbidden" value="3"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="CallClass" fullname="QTelephony::CallClass" href="qtelephony.html#CallClass-enum" location="qtelephonynamespace.h">
                <value name="CallClassNone" value="0"></value>
                <value name="CallClassVoice" value="1"></value>
                <value name="CallClassData" value="2"></value>
                <value name="CallClassFax" value="4"></value>
                <value name="CallClassSMS" value="8"></value>
                <value name="CallClassDataCircuitSync" value="16"></value>
                <value name="CallClassDataCircuitAsync" value="32"></value>
                <value name="CallClassDedicatedPacketAccess" value="64"></value>
                <value name="CallClassDedicatedPADAccess" value="128"></value>
                <value name="CallClassDefault" value="7"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Result" fullname="QTelephony::Result" href="qtelephony.html#Result-enum" location="qtelephonynamespace.h">
                <value name="OK" value="-1"></value>
                <value name="Connect" value="-2"></value>
                <value name="NoCarrier" value="-3"></value>
                <value name="Error" value="-4"></value>
                <value name="NoDialtone" value="-5"></value>
                <value name="Busy" value="-6"></value>
                <value name="NoAnswer" value="-7"></value>
                <value name="Dead" value="-8"></value>
                <value name="PhoneFailure" value="0"></value>
                <value name="NoConnectionToPhone" value="1"></value>
                <value name="PhoneAdapterLinkReserved" value="2"></value>
                <value name="OperationNotAllowed" value="3"></value>
                <value name="OperationNotSupported" value="4"></value>
                <value name="PhSimPinRequired" value="5"></value>
                <value name="PhFSimPinRequired" value="6"></value>
                <value name="PhFSimPukRequired" value="7"></value>
                <value name="SimNotInserted" value="10"></value>
                <value name="SimPinRequired" value="11"></value>
                <value name="SimPukRequired" value="12"></value>
                <value name="SimFailure" value="13"></value>
                <value name="SimBusy" value="14"></value>
                <value name="SimWrong" value="15"></value>
                <value name="IncorrectPassword" value="16"></value>
                <value name="SimPin2Required" value="17"></value>
                <value name="SimPuk2Required" value="18"></value>
                <value name="MemoryFull" value="20"></value>
                <value name="InvalidIndex" value="21"></value>
                <value name="NotFound" value="22"></value>
                <value name="MemoryFailure" value="23"></value>
                <value name="TextStringTooLong" value="24"></value>
                <value name="InvalidCharsInTextString" value="25"></value>
                <value name="DialStringTooLong" value="26"></value>
                <value name="InvalidCharsInDialString" value="27"></value>
                <value name="NoNetworkService" value="30"></value>
                <value name="NetworkTimeout" value="31"></value>
                <value name="NetworkNotAllowed" value="32"></value>
                <value name="NetPersPinRequired" value="40"></value>
                <value name="NetPersPukRequired" value="41"></value>
                <value name="NetSubsetPersPinRequired" value="42"></value>
                <value name="NetSubsetPersPukRequired" value="43"></value>
                <value name="ServProvPersPinRequired" value="44"></value>
                <value name="ServProvPersPukRequired" value="45"></value>
                <value name="CorpPersPinRequired" value="46"></value>
                <value name="CorpPersPukRequired" value="47"></value>
                <value name="HiddenKeyRequired" value="48"></value>
                <value name="Unknown" value="100"></value>
                <value name="IllegalMS" value="103"></value>
                <value name="IllegalME" value="106"></value>
                <value name="GPRSServicesNotAllowed" value="107"></value>
                <value name="PLMNNotAllowed" value="111"></value>
                <value name="LocationAreaNotAllowed" value="112"></value>
                <value name="RoamingNotAllowed" value="113"></value>
                <value name="ServiceOptionNotSupported" value="132"></value>
                <value name="ServiceOptionNotSubscribed" value="133"></value>
                <value name="ServiceOptionOutOfOrder" value="134"></value>
                <value name="UnspecifiedGPRSError" value="148"></value>
                <value name="PDPAuthenticationFailure" value="149"></value>
                <value name="InvalidMobileClass" value="150"></value>
                <value name="VBSVGCSNotSupported" value="151"></value>
                <value name="NoServiceSubscriptionOnSim" value="152"></value>
                <value name="NoSubscriptionForGroupId" value="153"></value>
                <value name="GroupIdNotActivatedOnSim" value="154"></value>
                <value name="NoMatchingNotification" value="155"></value>
                <value name="VBSVGCSCallAlreadyPresent" value="156"></value>
                <value name="Congestion" value="157"></value>
                <value name="NetworkFailure" value="158"></value>
                <value name="UplinkBusy" value="159"></value>
                <value name="NoAccessRightsForSimFile" value="160"></value>
                <value name="NoSubscriptionForPriority" value="161"></value>
                <value name="OperationNotApplicable" value="162"></value>
                <value name="MEFailure" value="300"></value>
                <value name="SMSServiceOfMEReserved" value="301"></value>
                <value name="SMSOperationNotAllowed" value="302"></value>
                <value name="SMSOperationNotSupported" value="303"></value>
                <value name="InvalidPDUModeParameter" value="304"></value>
                <value name="InvalidTextModeParameter" value="305"></value>
                <value name="USimNotInserted" value="310"></value>
                <value name="USimPinRequired" value="311"></value>
                <value name="PHUSimPinRequired" value="312"></value>
                <value name="USimFailure" value="313"></value>
                <value name="USimBusy" value="314"></value>
                <value name="USimWrong" value="315"></value>
                <value name="USimPukRequired" value="316"></value>
                <value name="USimPin2Required" value="317"></value>
                <value name="USimPuk2Required" value="318"></value>
                <value name="SMSMemoryFailure" value="320"></value>
                <value name="InvalidMemoryIndex" value="321"></value>
                <value name="SMSMemoryFull" value="322"></value>
                <value name="SMSCAddressUnknown" value="330"></value>
                <value name="SMSNoNetworkService" value="331"></value>
                <value name="SMSNetworkTimeout" value="332"></value>
                <value name="NoCNMAAckExpected" value="340"></value>
                <value name="UnknownError" value="500"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SimFileType" fullname="QTelephony::SimFileType" href="qtelephony.html#SimFileType-enum" location="qtelephonynamespace.h">
                <value name="SimFileRootDirectory" value="0"></value>
                <value name="SimFileDirectory" value="1"></value>
                <value name="SimFileTransparent" value="2"></value>
                <value name="SimFileLinearFixed" value="3"></value>
                <value name="SimFileCyclic" value="4"></value>
                <value name="SimFileUnknown" value="5"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SimFileError" fullname="QTelephony::SimFileError" href="qtelephony.html#SimFileError-enum" location="qtelephonynamespace.h">
                <value name="SimFileServiceUnavailable" value="0"></value>
                <value name="SimFileSimUnavailable" value="1"></value>
                <value name="SimFileNotFound" value="2"></value>
                <value name="SimFileInvalidRead" value="3"></value>
                <value name="SimFileInvalidWrite" value="4"></value>
            </enum>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="ShutdownSplashScreen" href="shutdownsplashscreen.html" location="shutdownsplash.h" bases="SystemShutdownHandler" module=""></class>
        <class access="public" threadsafety="unspecified" status="main" name="QMallocPool" href="qmallocpool.html" location="qmallocpool.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="PoolType" fullname="QMallocPool::PoolType" href="qmallocpool.html#PoolType-enum" location="qmallocpool.h">
                <value name="Owned" value="0"></value>
                <value name="NewShared" value="1"></value>
                <value name="Shared" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMallocPool" fullname="QMallocPool::QMallocPool" href="qmallocpool.html#QMallocPool" location="qmallocpool.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMallocPool()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMallocPool" fullname="QMallocPool::QMallocPool" href="qmallocpool.html#QMallocPool-2" location="qmallocpool.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMallocPool(void * poolBase, unsigned int poolLength, PoolType type, const QString &amp; name)">
                <parameter left="void *" right="" name="poolBase" default=""></parameter>
                <parameter left="unsigned int" right="" name="poolLength" default=""></parameter>
                <parameter left="PoolType" right="" name="type" default="Owned"></parameter>
                <parameter left="const QString &amp;" right="" name="name" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMallocPool" fullname="QMallocPool::~QMallocPool" href="qmallocpool.html#dtor.QMallocPool" location="qmallocpool.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMallocPool()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="size_of" fullname="QMallocPool::size_of" href="qmallocpool.html#size_of" location="qmallocpool.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="size_t" signature="size_of(void * mem)">
                <parameter left="void *" right="" name="mem" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="calloc" fullname="QMallocPool::calloc" href="qmallocpool.html#calloc" location="qmallocpool.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void *" signature="calloc(size_t nmemb, size_t size)">
                <parameter left="size_t" right="" name="nmemb" default=""></parameter>
                <parameter left="size_t" right="" name="size" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="malloc" fullname="QMallocPool::malloc" href="qmallocpool.html#malloc" location="qmallocpool.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void *" signature="malloc(size_t size)">
                <parameter left="size_t" right="" name="size" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="free" fullname="QMallocPool::free" href="qmallocpool.html#free" location="qmallocpool.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="free(void * ptr)">
                <parameter left="void *" right="" name="ptr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="realloc" fullname="QMallocPool::realloc" href="qmallocpool.html#realloc" location="qmallocpool.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void *" signature="realloc(void * ptr, size_t size)">
                <parameter left="void *" right="" name="ptr" default=""></parameter>
                <parameter left="size_t" right="" name="size" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QMallocPool::isValid" href="qmallocpool.html#isValid" location="qmallocpool.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <class access="public" threadsafety="unspecified" status="commendable" name="MemoryStats" fullname="QMallocPool::MemoryStats" href="qmallocpool-memorystats.html" location="qmallocpool.h" bases="" module="">
                <variable access="public" threadsafety="unspecified" status="commendable" name="poolSize" fullname="QMallocPool::MemoryStats::poolSize" href="qmallocpool-memorystats.html#poolSize-var" location="qmallocpool.h" type="unsigned long" static="false"></variable>
                <variable access="public" threadsafety="unspecified" status="commendable" name="maxSystemBytes" fullname="QMallocPool::MemoryStats::maxSystemBytes" href="qmallocpool-memorystats.html#maxSystemBytes-var" location="qmallocpool.h" type="unsigned long" static="false"></variable>
                <variable access="public" threadsafety="unspecified" status="commendable" name="systemBytes" fullname="QMallocPool::MemoryStats::systemBytes" href="qmallocpool-memorystats.html#systemBytes-var" location="qmallocpool.h" type="unsigned long" static="false"></variable>
                <variable access="public" threadsafety="unspecified" status="commendable" name="inuseBytes" fullname="QMallocPool::MemoryStats::inuseBytes" href="qmallocpool-memorystats.html#inuseBytes-var" location="qmallocpool.h" type="unsigned long" static="false"></variable>
                <variable access="public" threadsafety="unspecified" status="commendable" name="keepCost" fullname="QMallocPool::MemoryStats::keepCost" href="qmallocpool-memorystats.html#keepCost-var" location="qmallocpool.h" type="unsigned long" static="false"></variable>
            </class>
            <function access="public" threadsafety="unspecified" status="commendable" name="memoryStatistics" fullname="QMallocPool::memoryStatistics" href="qmallocpool.html#memoryStatistics" location="qmallocpool.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="MemoryStats" signature="memoryStatistics() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dumpStats" fullname="QMallocPool::dumpStats" href="qmallocpool.html#dumpStats" location="qmallocpool.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="dumpStats() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaCodecPlugin" href="qmediacodecplugin.html" location="qmediacodecplugin.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaCodecPlugin" fullname="QMediaCodecPlugin::~QMediaCodecPlugin" href="qmediacodecplugin.html#dtor.QMediaCodecPlugin" location="qmediacodecplugin.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaCodecPlugin()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QMediaCodecPlugin::name" href="qmediacodecplugin.html#name" location="qmediacodecplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="comment" fullname="QMediaCodecPlugin::comment" href="qmediacodecplugin.html#comment" location="qmediacodecplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="comment() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mimeTypes" fullname="QMediaCodecPlugin::mimeTypes" href="qmediacodecplugin.html#mimeTypes" location="qmediacodecplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="mimeTypes() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fileExtensions" fullname="QMediaCodecPlugin::fileExtensions" href="qmediacodecplugin.html#fileExtensions" location="qmediacodecplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="fileExtensions() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="version" fullname="QMediaCodecPlugin::version" href="qmediacodecplugin.html#version" location="qmediacodecplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="double" signature="version() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="canEncode" fullname="QMediaCodecPlugin::canEncode" href="qmediacodecplugin.html#canEncode" location="qmediacodecplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="canEncode() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="canDecode" fullname="QMediaCodecPlugin::canDecode" href="qmediacodecplugin.html#canDecode" location="qmediacodecplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="canDecode() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encoder" fullname="QMediaCodecPlugin::encoder" href="qmediacodecplugin.html#encoder" location="qmediacodecplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QMediaEncoder *" signature="encoder(QString const &amp; mimeType)">
                <parameter left="QString const &amp;" right="" name="mimeType" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decoder" fullname="QMediaCodecPlugin::decoder" href="qmediacodecplugin.html#decoder" location="qmediacodecplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QMediaDecoder *" signature="decoder(QString const &amp; mimeType)">
                <parameter left="QString const &amp;" right="" name="mimeType" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="DialerControl" href="dialercontrol.html" location="dialercontrol.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="instance" fullname="DialerControl::instance" href="dialercontrol.html#instance" location="dialercontrol.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="DialerControl *" signature="instance()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasIncomingCall" fullname="DialerControl::hasIncomingCall" href="dialercontrol.html#hasIncomingCall" location="dialercontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasIncomingCall() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isDialing" fullname="DialerControl::isDialing" href="dialercontrol.html#isDialing" location="dialercontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isDialing() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="allCalls" fullname="DialerControl::allCalls" href="dialercontrol.html#allCalls" location="dialercontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QPhoneCall&gt;" signature="allCalls() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activeCalls" fullname="DialerControl::activeCalls" href="dialercontrol.html#activeCalls" location="dialercontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QPhoneCall&gt;" signature="activeCalls() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callsOnHold" fullname="DialerControl::callsOnHold" href="dialercontrol.html#callsOnHold" location="dialercontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QPhoneCall&gt;" signature="callsOnHold() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activeCallsCount" fullname="DialerControl::activeCallsCount" href="dialercontrol.html#activeCallsCount" location="dialercontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="activeCallsCount() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callsOnHoldCount" fullname="DialerControl::callsOnHoldCount" href="dialercontrol.html#callsOnHoldCount" location="dialercontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="callsOnHoldCount() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasActiveCalls" fullname="DialerControl::hasActiveCalls" href="dialercontrol.html#hasActiveCalls" location="dialercontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasActiveCalls() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasCallsOnHold" fullname="DialerControl::hasCallsOnHold" href="dialercontrol.html#hasCallsOnHold" location="dialercontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasCallsOnHold() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isConnected" fullname="DialerControl::isConnected" href="dialercontrol.html#isConnected" location="dialercontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isConnected() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callerIdNeeded" fullname="DialerControl::callerIdNeeded" href="dialercontrol.html#callerIdNeeded" location="dialercontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="callerIdNeeded(const QString &amp; n) const">
                <parameter left="const QString &amp;" right="" name="n" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="incomingCall" fullname="DialerControl::incomingCall" href="dialercontrol.html#incomingCall" location="dialercontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPhoneCall" signature="incomingCall() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callList" fullname="DialerControl::callList" href="dialercontrol.html#callList" location="dialercontrol.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QCallList &amp;" signature="callList()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="missedCallCount" fullname="DialerControl::missedCallCount" href="dialercontrol.html#missedCallCount" location="dialercontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="missedCallCount() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resetMissedCalls" fullname="DialerControl::resetMissedCalls" href="dialercontrol.html#resetMissedCalls" location="dialercontrol.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="resetMissedCalls()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="missedCount" fullname="DialerControl::missedCount" href="dialercontrol.html#missedCount" location="dialercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="missedCount(int missedCalls)">
                <parameter left="int" right="" name="missedCalls" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activeCount" fullname="DialerControl::activeCount" href="dialercontrol.html#activeCount" location="dialercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="activeCount(int activeCalls)">
                <parameter left="int" right="" name="activeCalls" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="DialerControl::stateChanged" href="dialercontrol.html#stateChanged" location="dialercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pendingTonesChanged" fullname="DialerControl::pendingTonesChanged" href="dialercontrol.html#pendingTonesChanged" location="dialercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="pendingTonesChanged(const QPhoneCall &amp; call)">
                <parameter left="const QPhoneCall &amp;" right="" name="call" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestFailed" fullname="DialerControl::requestFailed" href="dialercontrol.html#requestFailed" location="dialercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="requestFailed(const QPhoneCall &amp; call, QPhoneCall::Request request)">
                <parameter left="const QPhoneCall &amp;" right="" name="call" default=""></parameter>
                <parameter left="QPhoneCall::Request" right="" name="request" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callCreated" fullname="DialerControl::callCreated" href="dialercontrol.html#callCreated" location="dialercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="callCreated(const QPhoneCall &amp; call)">
                <parameter left="const QPhoneCall &amp;" right="" name="call" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callMissed" fullname="DialerControl::callMissed" href="dialercontrol.html#callMissed" location="dialercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="callMissed(const QPhoneCall &amp; call)">
                <parameter left="const QPhoneCall &amp;" right="" name="call" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callDropped" fullname="DialerControl::callDropped" href="dialercontrol.html#callDropped" location="dialercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="callDropped(const QPhoneCall &amp; call)">
                <parameter left="const QPhoneCall &amp;" right="" name="call" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callPutOnHold" fullname="DialerControl::callPutOnHold" href="dialercontrol.html#callPutOnHold" location="dialercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="callPutOnHold(const QPhoneCall &amp; call)">
                <parameter left="const QPhoneCall &amp;" right="" name="call" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callConnected" fullname="DialerControl::callConnected" href="dialercontrol.html#callConnected" location="dialercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="callConnected(const QPhoneCall &amp; call)">
                <parameter left="const QPhoneCall &amp;" right="" name="call" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callIncoming" fullname="DialerControl::callIncoming" href="dialercontrol.html#callIncoming" location="dialercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="callIncoming(const QPhoneCall &amp; call)">
                <parameter left="const QPhoneCall &amp;" right="" name="call" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callDialing" fullname="DialerControl::callDialing" href="dialercontrol.html#callDialing" location="dialercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="callDialing(const QPhoneCall &amp; call)">
                <parameter left="const QPhoneCall &amp;" right="" name="call" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="autoAnswerCall" fullname="DialerControl::autoAnswerCall" href="dialercontrol.html#autoAnswerCall" location="dialercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="autoAnswerCall()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="modifyDial" fullname="DialerControl::modifyDial" href="dialercontrol.html#modifyDial" location="dialercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="modifyDial(QDialOptions &amp; options, bool &amp; handledAlready)">
                <parameter left="QDialOptions &amp;" right="" name="options" default=""></parameter>
                <parameter left="bool &amp;" right="" name="handledAlready" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callControlRequested" fullname="DialerControl::callControlRequested" href="dialercontrol.html#callControlRequested" location="dialercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="callControlRequested()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callControlSucceeded" fullname="DialerControl::callControlSucceeded" href="dialercontrol.html#callControlSucceeded" location="dialercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="callControlSucceeded()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dial" fullname="DialerControl::dial" href="dialercontrol.html#dial" location="dialercontrol.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="dial(const QString &amp; number, bool sendcallerid, const QString &amp; callType, const QUniqueId &amp; contact)">
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
                <parameter left="bool" right="" name="sendcallerid" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="callType" default="&quot;Voice&quot;"></parameter>
                <parameter left="const QUniqueId &amp;" right="" name="contact" default="QUniqueId()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="endCall" fullname="DialerControl::endCall" href="dialercontrol.html#endCall" location="dialercontrol.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="endCall()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="endCall" fullname="DialerControl::endCall" href="dialercontrol.html#endCall-2" location="dialercontrol.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="endCall(int id)">
                <parameter left="int" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activateCall" fullname="DialerControl::activateCall" href="dialercontrol.html#activateCall" location="dialercontrol.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="activateCall(int id)">
                <parameter left="int" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="endAllCalls" fullname="DialerControl::endAllCalls" href="dialercontrol.html#endAllCalls" location="dialercontrol.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="endAllCalls()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="endHeldCalls" fullname="DialerControl::endHeldCalls" href="dialercontrol.html#endHeldCalls" location="dialercontrol.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="endHeldCalls()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="accept" fullname="DialerControl::accept" href="dialercontrol.html#accept" location="dialercontrol.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="accept()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hold" fullname="DialerControl::hold" href="dialercontrol.html#hold" location="dialercontrol.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="hold()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unhold" fullname="DialerControl::unhold" href="dialercontrol.html#unhold" location="dialercontrol.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="unhold()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="join" fullname="DialerControl::join" href="dialercontrol.html#join" location="dialercontrol.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="join()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sendBusy" fullname="DialerControl::sendBusy" href="dialercontrol.html#sendBusy" location="dialercontrol.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="sendBusy()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="transfer" fullname="DialerControl::transfer" href="dialercontrol.html#transfer" location="dialercontrol.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="transfer()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deflect" fullname="DialerControl::deflect" href="dialercontrol.html#deflect" location="dialercontrol.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="deflect(const QString &amp; number)">
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="recordCall" fullname="DialerControl::recordCall" href="dialercontrol.html#recordCall" location="dialercontrol.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="recordCall(const QPhoneCall &amp; call)">
                <parameter left="const QPhoneCall &amp;" right="" name="call" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="DBMigrateTask" href="dbmigratetask.html" location="dbmigratetask.h" bases="" module=""></class>
        <class access="public" threadsafety="unspecified" status="main" name="QFormLayout" href="qformlayout.html" location="qformlayout.h" bases="QLayout" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="fieldGrowthPolicy" fullname="QFormLayout::fieldGrowthPolicy" href="qformlayout.html#fieldGrowthPolicy-prop" location="qformlayout.h" type="FieldGrowthPolicy">
                <getter name="fieldGrowthPolicy"></getter>
                <setter name="setFieldGrowthPolicy"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="rowWrapPolicy" fullname="QFormLayout::rowWrapPolicy" href="qformlayout.html#rowWrapPolicy-prop" location="qformlayout.h" type="RowWrapPolicy">
                <getter name="rowWrapPolicy"></getter>
                <setter name="setRowWrapPolicy"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="labelAlignment" fullname="QFormLayout::labelAlignment" href="qformlayout.html#labelAlignment-prop" location="qformlayout.h" type="Qt::Alignment">
                <getter name="labelAlignment"></getter>
                <setter name="setLabelAlignment"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="formAlignment" fullname="QFormLayout::formAlignment" href="qformlayout.html#formAlignment-prop" location="qformlayout.h" type="Qt::Alignment">
                <getter name="formAlignment"></getter>
                <setter name="setFormAlignment"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="horizontalSpacing" fullname="QFormLayout::horizontalSpacing" href="qformlayout.html#horizontalSpacing-prop" location="qformlayout.h" type="int">
                <getter name="horizontalSpacing"></getter>
                <setter name="setHorizontalSpacing"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="verticalSpacing" fullname="QFormLayout::verticalSpacing" href="qformlayout.html#verticalSpacing-prop" location="qformlayout.h" type="int">
                <getter name="verticalSpacing"></getter>
                <setter name="setVerticalSpacing"></setter>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="FieldGrowthPolicy" fullname="QFormLayout::FieldGrowthPolicy" href="qformlayout.html#FieldGrowthPolicy-enum" location="qformlayout.h">
                <value name="FieldsStayAtSizeHint" value="0"></value>
                <value name="ExpandingFieldsGrow" value="1"></value>
                <value name="AllNonFixedFieldsGrow" value="2"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="RowWrapPolicy" fullname="QFormLayout::RowWrapPolicy" href="qformlayout.html#RowWrapPolicy-enum" location="qformlayout.h">
                <value name="DontWrapRows" value="0"></value>
                <value name="WrapLongRows" value="1"></value>
                <value name="WrapAllRows" value="2"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ItemRole" fullname="QFormLayout::ItemRole" href="qformlayout.html#ItemRole-enum" location="qformlayout.h">
                <value name="LabelRole" value="0"></value>
                <value name="FieldRole" value="1"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QFormLayout" fullname="QFormLayout::QFormLayout" href="qformlayout.html#QFormLayout" location="qformlayout.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QFormLayout(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QFormLayout" fullname="QFormLayout::~QFormLayout" href="qformlayout.html#dtor.QFormLayout" location="qformlayout.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QFormLayout()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFieldGrowthPolicy" fullname="QFormLayout::setFieldGrowthPolicy" href="qformlayout.html#fieldGrowthPolicy-prop" location="qformlayout.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="fieldGrowthPolicy" type="void" signature="setFieldGrowthPolicy(FieldGrowthPolicy policy)">
                <parameter left="FieldGrowthPolicy" right="" name="policy" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fieldGrowthPolicy" fullname="QFormLayout::fieldGrowthPolicy" href="qformlayout.html#fieldGrowthPolicy-prop" location="qformlayout.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="fieldGrowthPolicy" type="FieldGrowthPolicy" signature="fieldGrowthPolicy() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRowWrapPolicy" fullname="QFormLayout::setRowWrapPolicy" href="qformlayout.html#rowWrapPolicy-prop" location="qformlayout.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="rowWrapPolicy" type="void" signature="setRowWrapPolicy(RowWrapPolicy policy)">
                <parameter left="RowWrapPolicy" right="" name="policy" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rowWrapPolicy" fullname="QFormLayout::rowWrapPolicy" href="qformlayout.html#rowWrapPolicy-prop" location="qformlayout.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="rowWrapPolicy" type="RowWrapPolicy" signature="rowWrapPolicy() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLabelAlignment" fullname="QFormLayout::setLabelAlignment" href="qformlayout.html#labelAlignment-prop" location="qformlayout.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="labelAlignment" type="void" signature="setLabelAlignment(Qt::Alignment alignment)">
                <parameter left="Qt::Alignment" right="" name="alignment" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="labelAlignment" fullname="QFormLayout::labelAlignment" href="qformlayout.html#labelAlignment-prop" location="qformlayout.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="labelAlignment" type="Qt::Alignment" signature="labelAlignment() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFormAlignment" fullname="QFormLayout::setFormAlignment" href="qformlayout.html#formAlignment-prop" location="qformlayout.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="formAlignment" type="void" signature="setFormAlignment(Qt::Alignment alignment)">
                <parameter left="Qt::Alignment" right="" name="alignment" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="formAlignment" fullname="QFormLayout::formAlignment" href="qformlayout.html#formAlignment-prop" location="qformlayout.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="formAlignment" type="Qt::Alignment" signature="formAlignment() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHorizontalSpacing" fullname="QFormLayout::setHorizontalSpacing" href="qformlayout.html#horizontalSpacing-prop" location="qformlayout.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="horizontalSpacing" type="void" signature="setHorizontalSpacing(int spacing)">
                <parameter left="int" right="" name="spacing" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="horizontalSpacing" fullname="QFormLayout::horizontalSpacing" href="qformlayout.html#horizontalSpacing-prop" location="qformlayout.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="horizontalSpacing" type="int" signature="horizontalSpacing() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVerticalSpacing" fullname="QFormLayout::setVerticalSpacing" href="qformlayout.html#verticalSpacing-prop" location="qformlayout.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="verticalSpacing" type="void" signature="setVerticalSpacing(int spacing)">
                <parameter left="int" right="" name="spacing" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="verticalSpacing" fullname="QFormLayout::verticalSpacing" href="qformlayout.html#verticalSpacing-prop" location="qformlayout.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="verticalSpacing" type="int" signature="verticalSpacing() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="spacing" fullname="QFormLayout::spacing" href="qformlayout.html#spacing" location="qformlayout.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="spacing() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSpacing" fullname="QFormLayout::setSpacing" href="qformlayout.html#setSpacing" location="qformlayout.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSpacing(int spacing)">
                <parameter left="int" right="" name="spacing" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addRow" fullname="QFormLayout::addRow" href="qformlayout.html#addRow" location="qformlayout.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addRow(QWidget * label, QWidget * field)">
                <parameter left="QWidget *" right="" name="label" default=""></parameter>
                <parameter left="QWidget *" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addRow" fullname="QFormLayout::addRow" href="qformlayout.html#addRow-2" location="qformlayout.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="addRow(QWidget * label, QLayout * field)">
                <parameter left="QWidget *" right="" name="label" default=""></parameter>
                <parameter left="QLayout *" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addRow" fullname="QFormLayout::addRow" href="qformlayout.html#addRow-3" location="qformlayout.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="void" signature="addRow(const QString &amp; labelText, QWidget * field)">
                <parameter left="const QString &amp;" right="" name="labelText" default=""></parameter>
                <parameter left="QWidget *" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addRow" fullname="QFormLayout::addRow" href="qformlayout.html#addRow-4" location="qformlayout.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="4" type="void" signature="addRow(const QString &amp; labelText, QLayout * field)">
                <parameter left="const QString &amp;" right="" name="labelText" default=""></parameter>
                <parameter left="QLayout *" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addRow" fullname="QFormLayout::addRow" href="qformlayout.html#addRow-5" location="qformlayout.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="5" type="void" signature="addRow(QWidget * widget)">
                <parameter left="QWidget *" right="" name="widget" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addRow" fullname="QFormLayout::addRow" href="qformlayout.html#addRow-6" location="qformlayout.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="6" type="void" signature="addRow(QLayout * layout)">
                <parameter left="QLayout *" right="" name="layout" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertRow" fullname="QFormLayout::insertRow" href="qformlayout.html#insertRow" location="qformlayout.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insertRow(int row, QWidget * label, QWidget * field)">
                <parameter left="int" right="" name="row" default=""></parameter>
                <parameter left="QWidget *" right="" name="label" default=""></parameter>
                <parameter left="QWidget *" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertRow" fullname="QFormLayout::insertRow" href="qformlayout.html#insertRow-2" location="qformlayout.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="insertRow(int row, QWidget * label, QLayout * field)">
                <parameter left="int" right="" name="row" default=""></parameter>
                <parameter left="QWidget *" right="" name="label" default=""></parameter>
                <parameter left="QLayout *" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertRow" fullname="QFormLayout::insertRow" href="qformlayout.html#insertRow-3" location="qformlayout.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="void" signature="insertRow(int row, const QString &amp; labelText, QWidget * field)">
                <parameter left="int" right="" name="row" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="labelText" default=""></parameter>
                <parameter left="QWidget *" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertRow" fullname="QFormLayout::insertRow" href="qformlayout.html#insertRow-4" location="qformlayout.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="4" type="void" signature="insertRow(int row, const QString &amp; labelText, QLayout * field)">
                <parameter left="int" right="" name="row" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="labelText" default=""></parameter>
                <parameter left="QLayout *" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertRow" fullname="QFormLayout::insertRow" href="qformlayout.html#insertRow-5" location="qformlayout.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="5" type="void" signature="insertRow(int row, QWidget * widget)">
                <parameter left="int" right="" name="row" default=""></parameter>
                <parameter left="QWidget *" right="" name="widget" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertRow" fullname="QFormLayout::insertRow" href="qformlayout.html#insertRow-6" location="qformlayout.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="6" type="void" signature="insertRow(int row, QLayout * layout)">
                <parameter left="int" right="" name="row" default=""></parameter>
                <parameter left="QLayout *" right="" name="layout" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setItem" fullname="QFormLayout::setItem" href="qformlayout.html#setItem" location="qformlayout.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setItem(int row, ItemRole role, QLayoutItem * item)">
                <parameter left="int" right="" name="row" default=""></parameter>
                <parameter left="ItemRole" right="" name="role" default=""></parameter>
                <parameter left="QLayoutItem *" right="" name="item" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setWidget" fullname="QFormLayout::setWidget" href="qformlayout.html#setWidget" location="qformlayout.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setWidget(int row, ItemRole role, QWidget * widget)">
                <parameter left="int" right="" name="row" default=""></parameter>
                <parameter left="ItemRole" right="" name="role" default=""></parameter>
                <parameter left="QWidget *" right="" name="widget" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLayout" fullname="QFormLayout::setLayout" href="qformlayout.html#setLayout" location="qformlayout.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLayout(int row, ItemRole role, QLayout * layout)">
                <parameter left="int" right="" name="row" default=""></parameter>
                <parameter left="ItemRole" right="" name="role" default=""></parameter>
                <parameter left="QLayout *" right="" name="layout" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemAt" fullname="QFormLayout::itemAt" href="qformlayout.html#itemAt" location="qformlayout.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QLayoutItem *" signature="itemAt(int row, ItemRole role) const">
                <parameter left="int" right="" name="row" default=""></parameter>
                <parameter left="ItemRole" right="" name="role" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="getItemPosition" fullname="QFormLayout::getItemPosition" href="qformlayout.html#getItemPosition" location="qformlayout.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="getItemPosition(int index, int * rowPtr, ItemRole * rolePtr) const">
                <parameter left="int" right="" name="index" default=""></parameter>
                <parameter left="int *" right="" name="rowPtr" default=""></parameter>
                <parameter left="ItemRole *" right="" name="rolePtr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="getWidgetPosition" fullname="QFormLayout::getWidgetPosition" href="qformlayout.html#getWidgetPosition" location="qformlayout.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="getWidgetPosition(QWidget * widget, int * rowPtr, ItemRole * rolePtr) const">
                <parameter left="QWidget *" right="" name="widget" default=""></parameter>
                <parameter left="int *" right="" name="rowPtr" default=""></parameter>
                <parameter left="ItemRole *" right="" name="rolePtr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="getLayoutPosition" fullname="QFormLayout::getLayoutPosition" href="qformlayout.html#getLayoutPosition" location="qformlayout.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="getLayoutPosition(QLayout * layout, int * rowPtr, ItemRole * rolePtr) const">
                <parameter left="QLayout *" right="" name="layout" default=""></parameter>
                <parameter left="int *" right="" name="rowPtr" default=""></parameter>
                <parameter left="ItemRole *" right="" name="rolePtr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="labelForField" fullname="QFormLayout::labelForField" href="qformlayout.html#labelForField" location="qformlayout.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QWidget *" signature="labelForField(QWidget * field) const">
                <parameter left="QWidget *" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="labelForField" fullname="QFormLayout::labelForField" href="qformlayout.html#labelForField-2" location="qformlayout.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QWidget *" signature="labelForField(QLayout * field) const">
                <parameter left="QLayout *" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rowCount" fullname="QFormLayout::rowCount" href="qformlayout.html#rowCount" location="qformlayout.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="rowCount() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QUniqueId" href="quniqueid.html" location="quniqueid.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QUniqueId" fullname="QUniqueId::QUniqueId" href="quniqueid.html#QUniqueId" location="quniqueid.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QUniqueId()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QUniqueId" fullname="QUniqueId::QUniqueId" href="quniqueid.html#QUniqueId-2" location="quniqueid.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QUniqueId(const QUniqueId &amp; other)">
                <parameter left="const QUniqueId &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QUniqueId" fullname="QUniqueId::QUniqueId" href="quniqueid.html#QUniqueId-3" location="quniqueid.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QUniqueId(const QString &amp; string)">
                <parameter left="const QString &amp;" right="" name="string" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QUniqueId" fullname="QUniqueId::QUniqueId" href="quniqueid.html#QUniqueId-4" location="quniqueid.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QUniqueId(const QByteArray &amp; array)">
                <parameter left="const QByteArray &amp;" right="" name="array" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="index" fullname="QUniqueId::index" href="quniqueid.html#index" location="quniqueid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="index() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="context" fullname="QUniqueId::context" href="quniqueid.html#context" location="quniqueid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUuid" signature="context() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mappedContext" fullname="QUniqueId::mappedContext" href="quniqueid.html#mappedContext" location="quniqueid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="mappedContext() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QUniqueId::operator=" href="quniqueid.html#operator=" location="quniqueid.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QUniqueId" signature="operator=(const QUniqueId &amp; o)">
                <parameter left="const QUniqueId &amp;" right="" name="o" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QUniqueId::operator==" href="quniqueid.html#operator==" location="quniqueid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QUniqueId &amp; i) const">
                <parameter left="const QUniqueId &amp;" right="" name="i" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QUniqueId::operator!=" href="quniqueid.html#operator!=" location="quniqueid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QUniqueId &amp; i) const">
                <parameter left="const QUniqueId &amp;" right="" name="i" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;" fullname="QUniqueId::operator&lt;" href="quniqueid.html#operator&lt;" location="quniqueid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator&lt;(QUniqueId i) const">
                <parameter left="QUniqueId" right="" name="i" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&gt;" fullname="QUniqueId::operator&gt;" href="quniqueid.html#operator&gt;" location="quniqueid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator&gt;(QUniqueId i) const">
                <parameter left="QUniqueId" right="" name="i" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;=" fullname="QUniqueId::operator&lt;=" href="quniqueid.html#operator&lt;=" location="quniqueid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator&lt;=(QUniqueId i) const">
                <parameter left="QUniqueId" right="" name="i" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&gt;=" fullname="QUniqueId::operator&gt;=" href="quniqueid.html#operator&gt;=" location="quniqueid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator&gt;=(QUniqueId i) const">
                <parameter left="QUniqueId" right="" name="i" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QUniqueId::isNull" href="quniqueid.html#isNull" location="quniqueid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isTemporary" fullname="QUniqueId::isTemporary" href="quniqueid.html#isTemporary" location="quniqueid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isTemporary() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toString" fullname="QUniqueId::toString" href="quniqueid.html#toString" location="quniqueid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="toString() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toByteArray" fullname="QUniqueId::toByteArray" href="quniqueid.html#toByteArray" location="quniqueid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="toByteArray() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toUInt" fullname="QUniqueId::toUInt" href="quniqueid.html#toUInt" location="quniqueid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="toUInt() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromUInt" fullname="QUniqueId::fromUInt" href="quniqueid.html#fromUInt" location="quniqueid.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QUniqueId" signature="fromUInt(uint value)">
                <parameter left="uint" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toLocalContextString" fullname="QUniqueId::toLocalContextString" href="quniqueid.html#toLocalContextString" location="quniqueid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="toLocalContextString() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toLocalContextByteArray" fullname="QUniqueId::toLocalContextByteArray" href="quniqueid.html#toLocalContextByteArray" location="quniqueid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="toLocalContextByteArray() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="fromLocalContextDataStream" fullname="QUniqueId::fromLocalContextDataStream" href="quniqueid.html#fromLocalContextDataStream" location="quniqueid.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QDataStream &amp;" signature="fromLocalContextDataStream(QDataStream &amp; stream)">
                <parameter left="QDataStream &amp;" right="" name="stream" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="toLocalContextDataStream" fullname="QUniqueId::toLocalContextDataStream" href="quniqueid.html#toLocalContextDataStream" location="quniqueid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDataStream &amp;" signature="toLocalContextDataStream(QDataStream &amp; stream) const">
                <parameter left="QDataStream &amp;" right="" name="stream" default=""></parameter>
            </function>
        </class>
        <function access="public" threadsafety="unspecified" status="commendable" name="qHash" href="#qHash-20" location="quniqueid.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="20" type="uint" signature="qHash(const QUniqueId &amp; uid)">
            <parameter left="const QUniqueId &amp;" right="" name="uid" default=""></parameter>
        </function>
        <class access="public" threadsafety="unspecified" status="main" name="QUniqueIdGenerator" href="quniqueidgenerator.html" location="quniqueid.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QUniqueIdGenerator" fullname="QUniqueIdGenerator::QUniqueIdGenerator" href="quniqueidgenerator.html#QUniqueIdGenerator" location="quniqueid.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QUniqueIdGenerator(const QUuid &amp; context)">
                <parameter left="const QUuid &amp;" right="" name="context" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QUniqueIdGenerator" fullname="QUniqueIdGenerator::QUniqueIdGenerator" href="quniqueidgenerator.html#QUniqueIdGenerator-2" location="quniqueid.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QUniqueIdGenerator(const QUniqueIdGenerator &amp; other)">
                <parameter left="const QUniqueIdGenerator &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QUniqueIdGenerator" fullname="QUniqueIdGenerator::~QUniqueIdGenerator" href="quniqueidgenerator.html#dtor.QUniqueIdGenerator" location="quniqueid.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QUniqueIdGenerator()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QUniqueIdGenerator::isValid" href="quniqueidgenerator.html#isValid" location="quniqueid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="createUniqueId" fullname="QUniqueIdGenerator::createUniqueId" href="quniqueidgenerator.html#createUniqueId" location="quniqueid.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QUniqueId" signature="createUniqueId()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="constructUniqueId" fullname="QUniqueIdGenerator::constructUniqueId" href="quniqueidgenerator.html#constructUniqueId" location="quniqueid.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QUniqueId" signature="constructUniqueId(uint index)">
                <parameter left="uint" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="constructTemporaryId" fullname="QUniqueIdGenerator::constructTemporaryId" href="quniqueidgenerator.html#constructTemporaryId" location="quniqueid.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QUniqueId" signature="constructTemporaryId(uint index)">
                <parameter left="uint" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="createTemporaryId" fullname="QUniqueIdGenerator::createTemporaryId" href="quniqueidgenerator.html#createTemporaryId" location="quniqueid.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QUniqueId" signature="createTemporaryId()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mappedContext" fullname="QUniqueIdGenerator::mappedContext" href="quniqueidgenerator.html#mappedContext" location="quniqueid.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="uint" signature="mappedContext(const QUuid &amp; context)">
                <parameter left="const QUuid &amp;" right="" name="context" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothL2CapSocket" href="qbluetoothl2capsocket.html" location="qbluetoothl2capsocket.h" bases="QBluetoothAbstractSocket" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothL2CapSocket" fullname="QBluetoothL2CapSocket::QBluetoothL2CapSocket" href="qbluetoothl2capsocket.html#QBluetoothL2CapSocket" location="qbluetoothl2capsocket.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothL2CapSocket(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothL2CapSocket" fullname="QBluetoothL2CapSocket::~QBluetoothL2CapSocket" href="qbluetoothl2capsocket.html#dtor.QBluetoothL2CapSocket" location="qbluetoothl2capsocket.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothL2CapSocket()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connect" fullname="QBluetoothL2CapSocket::connect" href="qbluetoothl2capsocket.html#connect" location="qbluetoothl2capsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="connect(const QBluetoothAddress &amp; local, const QBluetoothAddress &amp; remote, int psm, int incomingMtu, int outgoingMtu, QFlags&lt;QBluetooth::SecurityOption&gt; options)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="local" default=""></parameter>
                <parameter left="const QBluetoothAddress &amp;" right="" name="remote" default=""></parameter>
                <parameter left="int" right="" name="psm" default=""></parameter>
                <parameter left="int" right="" name="incomingMtu" default="672"></parameter>
                <parameter left="int" right="" name="outgoingMtu" default="672"></parameter>
                <parameter left="QFlags&lt;QBluetooth::SecurityOption&gt;" right="" name="options" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remoteAddress" fullname="QBluetoothL2CapSocket::remoteAddress" href="qbluetoothl2capsocket.html#remoteAddress" location="qbluetoothl2capsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothAddress" signature="remoteAddress() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localAddress" fullname="QBluetoothL2CapSocket::localAddress" href="qbluetoothl2capsocket.html#localAddress" location="qbluetoothl2capsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothAddress" signature="localAddress() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remotePsm" fullname="QBluetoothL2CapSocket::remotePsm" href="qbluetoothl2capsocket.html#remotePsm" location="qbluetoothl2capsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="remotePsm() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEncrypted" fullname="QBluetoothL2CapSocket::isEncrypted" href="qbluetoothl2capsocket.html#isEncrypted" location="qbluetoothl2capsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEncrypted() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAuthenticated" fullname="QBluetoothL2CapSocket::isAuthenticated" href="qbluetoothl2capsocket.html#isAuthenticated" location="qbluetoothl2capsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isAuthenticated() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="securityOptions" fullname="QBluetoothL2CapSocket::securityOptions" href="qbluetoothl2capsocket.html#securityOptions" location="qbluetoothl2capsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetooth::SecurityOptions" signature="securityOptions() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="incomingMtu" fullname="QBluetoothL2CapSocket::incomingMtu" href="qbluetoothl2capsocket.html#incomingMtu" location="qbluetoothl2capsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="incomingMtu() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="outgoingMtu" fullname="QBluetoothL2CapSocket::outgoingMtu" href="qbluetoothl2capsocket.html#outgoingMtu" location="qbluetoothl2capsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="outgoingMtu() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaPrinterInterface" href="qtopiaprinterinterface.html" location="qprinterinterface.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtopiaPrinterInterface" fullname="QtopiaPrinterInterface::~QtopiaPrinterInterface" href="qtopiaprinterinterface.html#dtor.QtopiaPrinterInterface" location="qprinterinterface.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtopiaPrinterInterface()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="print" fullname="QtopiaPrinterInterface::print" href="qtopiaprinterinterface.html#print" location="qprinterinterface.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="print(QMap&lt;QString, QVariant&gt; options)">
                <parameter left="QMap&lt;QString, QVariant&gt;" right="" name="options" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="printFile" fullname="QtopiaPrinterInterface::printFile" href="qtopiaprinterinterface.html#printFile" location="qprinterinterface.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="printFile(const QString &amp; fileName, const QString &amp; mimeType)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="mimeType" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="printHtml" fullname="QtopiaPrinterInterface::printHtml" href="qtopiaprinterinterface.html#printHtml" location="qprinterinterface.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="printHtml(const QString &amp; html)">
                <parameter left="const QString &amp;" right="" name="html" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="abort" fullname="QtopiaPrinterInterface::abort" href="qtopiaprinterinterface.html#abort" location="qprinterinterface.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="abort()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QtopiaPrinterInterface::name" href="qtopiaprinterinterface.html#name" location="qprinterinterface.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QString" signature="name()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAvailable" fullname="QtopiaPrinterInterface::isAvailable" href="qtopiaprinterinterface.html#isAvailable" location="qprinterinterface.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="isAvailable()"></function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="m_opType" fullname="QtopiaPrinterInterface::m_opType" href="qtopiaprinterinterface.html#m_opType-var" location="qprinterinterface.h" type="int" static="false"></variable>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaPrinterPlugin" href="qtopiaprinterplugin.html" location="qprinterinterface.h" bases="QObject,QtopiaPrinterInterface" module="">
            <contents name="creating-a-new-plug-in" title="Creating a New Plug-in" level="1"></contents>
            <contents name="loading-the-plug-in" title="Loading the Plug-in" level="1"></contents>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaPrinterPlugin" fullname="QtopiaPrinterPlugin::QtopiaPrinterPlugin" href="qtopiaprinterplugin.html#QtopiaPrinterPlugin" location="qprinterinterface.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtopiaPrinterPlugin(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtopiaPrinterPlugin" fullname="QtopiaPrinterPlugin::~QtopiaPrinterPlugin" href="qtopiaprinterplugin.html#dtor.QtopiaPrinterPlugin" location="qprinterinterface.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtopiaPrinterPlugin()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="CalendarService" href="calendarservice.html" location="datebook.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="newAppointment" fullname="CalendarService::newAppointment" href="calendarservice.html#newAppointment" location="datebook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="newAppointment()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="newAppointment" fullname="CalendarService::newAppointment" href="calendarservice.html#newAppointment-2" location="datebook.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="newAppointment(const QDateTime &amp; start, const QDateTime &amp; end, const QString &amp; description, const QString &amp; notes)">
                <parameter left="const QDateTime &amp;" right="" name="start" default=""></parameter>
                <parameter left="const QDateTime &amp;" right="" name="end" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="description" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="notes" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addAppointment" fullname="CalendarService::addAppointment" href="calendarservice.html#addAppointment" location="datebook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="addAppointment(const QAppointment &amp; appointment)">
                <parameter left="const QAppointment &amp;" right="" name="appointment" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateAppointment" fullname="CalendarService::updateAppointment" href="calendarservice.html#updateAppointment" location="datebook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="updateAppointment(const QAppointment &amp; appointment)">
                <parameter left="const QAppointment &amp;" right="" name="appointment" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeAppointment" fullname="CalendarService::removeAppointment" href="calendarservice.html#removeAppointment" location="datebook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="removeAppointment(const QAppointment &amp; appointment)">
                <parameter left="const QAppointment &amp;" right="" name="appointment" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="raiseToday" fullname="CalendarService::raiseToday" href="calendarservice.html#raiseToday" location="datebook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="raiseToday()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="nextView" fullname="CalendarService::nextView" href="calendarservice.html#nextView" location="datebook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="nextView()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="showAppointment" fullname="CalendarService::showAppointment" href="calendarservice.html#showAppointment" location="datebook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="showAppointment(const QUniqueId &amp; uid)">
                <parameter left="const QUniqueId &amp;" right="" name="uid" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="showAppointment" fullname="CalendarService::showAppointment" href="calendarservice.html#showAppointment-2" location="datebook.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="showAppointment(const QUniqueId &amp; uid, const QDate &amp; date)">
                <parameter left="const QUniqueId &amp;" right="" name="uid" default=""></parameter>
                <parameter left="const QDate &amp;" right="" name="date" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activateLink" fullname="CalendarService::activateLink" href="calendarservice.html#activateLink" location="datebook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="activateLink(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestLinks" fullname="CalendarService::requestLinks" href="calendarservice.html#requestLinks" location="datebook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="requestLinks(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="alarm" fullname="CalendarService::alarm" href="calendarservice.html#alarm" location="datebook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="alarm(const QDateTime &amp; time, int delay)">
                <parameter left="const QDateTime &amp;" right="" name="time" default=""></parameter>
                <parameter left="int" right="" name="delay" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="CellModemManager" href="cellmodemmanager.html" location="cellmodemmanager.h" bases="QAbstractCallPolicyManager" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~CellModemManager" fullname="CellModemManager::~CellModemManager" href="cellmodemmanager.html#dtor.CellModemManager" location="cellmodemmanager.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~CellModemManager()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disableProfilesControlModem" fullname="CellModemManager::disableProfilesControlModem" href="cellmodemmanager.html#disableProfilesControlModem" location="cellmodemmanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="disableProfilesControlModem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="profilesControlModem" fullname="CellModemManager::profilesControlModem" href="cellmodemmanager.html#profilesControlModem" location="cellmodemmanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="profilesControlModem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="profilesBlocked" fullname="CellModemManager::profilesBlocked" href="cellmodemmanager.html#profilesBlocked" location="cellmodemmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="profilesBlocked()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="CellModemManager::State" href="cellmodemmanager.html#State-enum" location="cellmodemmanager.h">
                <value name="NoCellModem" value="0"></value>
                <value name="Initializing" value="1"></value>
                <value name="Initializing2" value="2"></value>
                <value name="Ready" value="3"></value>
                <value name="WaitingSIMPin" value="4"></value>
                <value name="VerifyingSIMPin" value="5"></value>
                <value name="WaitingSIMPuk" value="6"></value>
                <value name="VerifyingSIMPuk" value="7"></value>
                <value name="SIMDead" value="8"></value>
                <value name="SIMMissing" value="9"></value>
                <value name="AerialOff" value="10"></value>
                <value name="FailureReset" value="11"></value>
                <value name="UnrecoverableFailure" value="12"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="CellModemManager::state" href="cellmodemmanager.html#state" location="cellmodemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="State" signature="state() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="networkOperator" fullname="CellModemManager::networkOperator" href="cellmodemmanager.html#networkOperator" location="cellmodemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="networkOperator() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="networkOperatorCountry" fullname="CellModemManager::networkOperatorCountry" href="cellmodemmanager.html#networkOperatorCountry" location="cellmodemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="networkOperatorCountry() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="registrationState" fullname="CellModemManager::registrationState" href="cellmodemmanager.html#registrationState" location="cellmodemmanager.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QTelephony::RegistrationState" signature="registrationState() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callForwardingEnabled" fullname="CellModemManager::callForwardingEnabled" href="cellmodemmanager.html#callForwardingEnabled" location="cellmodemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="callForwardingEnabled() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="simToolkitAvailable" fullname="CellModemManager::simToolkitAvailable" href="cellmodemmanager.html#simToolkitAvailable" location="cellmodemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="simToolkitAvailable() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cellModemAvailable" fullname="CellModemManager::cellModemAvailable" href="cellmodemmanager.html#cellModemAvailable" location="cellmodemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="cellModemAvailable() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="simToolkitIdleModeText" fullname="CellModemManager::simToolkitIdleModeText" href="cellmodemmanager.html#simToolkitIdleModeText" location="cellmodemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="simToolkitIdleModeText() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="simToolkitIdleModeIcon" fullname="CellModemManager::simToolkitIdleModeIcon" href="cellmodemmanager.html#simToolkitIdleModeIcon" location="cellmodemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QIcon" signature="simToolkitIdleModeIcon() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="simToolkitIdleModeIconSelfExplanatory" fullname="CellModemManager::simToolkitIdleModeIconSelfExplanatory" href="cellmodemmanager.html#simToolkitIdleModeIconSelfExplanatory" location="cellmodemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="simToolkitIdleModeIconSelfExplanatory() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="simToolkitMenuTitle" fullname="CellModemManager::simToolkitMenuTitle" href="cellmodemmanager.html#simToolkitMenuTitle" location="cellmodemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="simToolkitMenuTitle() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="planeModeEnabled" fullname="CellModemManager::planeModeEnabled" href="cellmodemmanager.html#planeModeEnabled" location="cellmodemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="planeModeEnabled() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="planeModeSupported" fullname="CellModemManager::planeModeSupported" href="cellmodemmanager.html#planeModeSupported" location="cellmodemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="planeModeSupported() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="networkRegistered" fullname="CellModemManager::networkRegistered" href="cellmodemmanager.html#networkRegistered" location="cellmodemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="networkRegistered() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateToString" fullname="CellModemManager::stateToString" href="cellmodemmanager.html#stateToString" location="cellmodemmanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="stateToString(State state)">
                <parameter left="State" right="" name="state" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="emergencyNumbers" fullname="CellModemManager::emergencyNumbers" href="cellmodemmanager.html#emergencyNumbers" location="cellmodemmanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStringList" signature="emergencyNumbers()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCellLocation" fullname="CellModemManager::setCellLocation" href="cellmodemmanager.html#setCellLocation" location="cellmodemmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCellLocation(const QString &amp; location)">
                <parameter left="const QString &amp;" right="" name="location" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlaneModeEnabled" fullname="CellModemManager::setPlaneModeEnabled" href="cellmodemmanager.html#setPlaneModeEnabled" location="cellmodemmanager.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setPlaneModeEnabled(bool enabled)">
                <parameter left="bool" right="" name="enabled" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSimPin" fullname="CellModemManager::setSimPin" href="cellmodemmanager.html#setSimPin" location="cellmodemmanager.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setSimPin(const QString &amp; pin)">
                <parameter left="const QString &amp;" right="" name="pin" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSimPuk" fullname="CellModemManager::setSimPuk" href="cellmodemmanager.html#setSimPuk" location="cellmodemmanager.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setSimPuk(const QString &amp; puk, const QString &amp; pin)">
                <parameter left="const QString &amp;" right="" name="puk" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="pin" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="blockProfiles" fullname="CellModemManager::blockProfiles" href="cellmodemmanager.html#blockProfiles" location="cellmodemmanager.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="blockProfiles(bool block)">
                <parameter left="bool" right="" name="block" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="planeModeEnabledChanged" fullname="CellModemManager::planeModeEnabledChanged" href="cellmodemmanager.html#planeModeEnabledChanged" location="cellmodemmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="planeModeEnabledChanged(bool enabled)">
                <parameter left="bool" right="" name="enabled" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="registrationStateChanged" fullname="CellModemManager::registrationStateChanged" href="cellmodemmanager.html#registrationStateChanged" location="cellmodemmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="registrationStateChanged(QTelephony::RegistrationState state)">
                <parameter left="QTelephony::RegistrationState" right="" name="state" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="networkOperatorChanged" fullname="CellModemManager::networkOperatorChanged" href="cellmodemmanager.html#networkOperatorChanged" location="cellmodemmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="networkOperatorChanged(const QString &amp; networkOperator)">
                <parameter left="const QString &amp;" right="" name="networkOperator" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="CellModemManager::stateChanged" href="cellmodemmanager.html#stateChanged" location="cellmodemmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(CellModemManager::State newState, CellModemManager::State oldState)">
                <parameter left="CellModemManager::State" right="" name="newState" default=""></parameter>
                <parameter left="CellModemManager::State" right="" name="oldState" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callForwardingEnabledChanged" fullname="CellModemManager::callForwardingEnabledChanged" href="cellmodemmanager.html#callForwardingEnabledChanged" location="cellmodemmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="callForwardingEnabledChanged(bool enabled)">
                <parameter left="bool" right="" name="enabled" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="simToolkitAvailableChanged" fullname="CellModemManager::simToolkitAvailableChanged" href="cellmodemmanager.html#simToolkitAvailableChanged" location="cellmodemmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="simToolkitAvailableChanged(bool available)">
                <parameter left="bool" right="" name="available" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QContentSortCriteria" href="qcontentsortcriteria.html" location="qcontentsortcriteria.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Attribute" fullname="QContentSortCriteria::Attribute" href="qcontentsortcriteria.html#Attribute-enum" location="qcontentsortcriteria.h">
                <value name="Name" value="0"></value>
                <value name="MimeType" value="1"></value>
                <value name="Property" value="2"></value>
                <value name="FileName" value="3"></value>
                <value name="LastUpdated" value="4"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentSortCriteria" fullname="QContentSortCriteria::QContentSortCriteria" href="qcontentsortcriteria.html#QContentSortCriteria" location="qcontentsortcriteria.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContentSortCriteria()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentSortCriteria" fullname="QContentSortCriteria::QContentSortCriteria" href="qcontentsortcriteria.html#QContentSortCriteria-2" location="qcontentsortcriteria.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContentSortCriteria(Attribute attribute, Qt::SortOrder order)">
                <parameter left="Attribute" right="" name="attribute" default=""></parameter>
                <parameter left="Qt::SortOrder" right="" name="order" default="Qt::AscendingOrder"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentSortCriteria" fullname="QContentSortCriteria::QContentSortCriteria" href="qcontentsortcriteria.html#QContentSortCriteria-3" location="qcontentsortcriteria.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QContentSortCriteria(Attribute attribute, const QString &amp; scope, Qt::SortOrder order)">
                <parameter left="Attribute" right="" name="attribute" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="scope" default=""></parameter>
                <parameter left="Qt::SortOrder" right="" name="order" default="Qt::AscendingOrder"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentSortCriteria" fullname="QContentSortCriteria::QContentSortCriteria" href="qcontentsortcriteria.html#QContentSortCriteria-4" location="qcontentsortcriteria.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QContentSortCriteria(QContent::Property property, Qt::SortOrder order)">
                <parameter left="QContent::Property" right="" name="property" default=""></parameter>
                <parameter left="Qt::SortOrder" right="" name="order" default="Qt::AscendingOrder"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentSortCriteria" fullname="QContentSortCriteria::QContentSortCriteria" href="qcontentsortcriteria.html#QContentSortCriteria-5" location="qcontentsortcriteria.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="5" type="" signature="QContentSortCriteria(const QContentSortCriteria &amp; other)">
                <parameter left="const QContentSortCriteria &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContentSortCriteria" fullname="QContentSortCriteria::~QContentSortCriteria" href="qcontentsortcriteria.html#dtor.QContentSortCriteria" location="qcontentsortcriteria.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContentSortCriteria()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QContentSortCriteria::operator=" href="qcontentsortcriteria.html#operator=" location="qcontentsortcriteria.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QContentSortCriteria &amp;" signature="operator=(const QContentSortCriteria &amp; other)">
                <parameter left="const QContentSortCriteria &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QContentSortCriteria::operator==" href="qcontentsortcriteria.html#operator==" location="qcontentsortcriteria.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QContentSortCriteria &amp; other) const">
                <parameter left="const QContentSortCriteria &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QContentSortCriteria::operator!=" href="qcontentsortcriteria.html#operator!=" location="qcontentsortcriteria.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QContentSortCriteria &amp; other) const">
                <parameter left="const QContentSortCriteria &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addSort" fullname="QContentSortCriteria::addSort" href="qcontentsortcriteria.html#addSort" location="qcontentsortcriteria.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addSort(Attribute attribute, Qt::SortOrder order)">
                <parameter left="Attribute" right="" name="attribute" default=""></parameter>
                <parameter left="Qt::SortOrder" right="" name="order" default="Qt::AscendingOrder"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addSort" fullname="QContentSortCriteria::addSort" href="qcontentsortcriteria.html#addSort-2" location="qcontentsortcriteria.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="addSort(Attribute attribute, const QString &amp; scope, Qt::SortOrder order)">
                <parameter left="Attribute" right="" name="attribute" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="scope" default=""></parameter>
                <parameter left="Qt::SortOrder" right="" name="order" default="Qt::AscendingOrder"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addSort" fullname="QContentSortCriteria::addSort" href="qcontentsortcriteria.html#addSort-3" location="qcontentsortcriteria.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="void" signature="addSort(QContent::Property property, Qt::SortOrder order)">
                <parameter left="QContent::Property" right="" name="property" default=""></parameter>
                <parameter left="Qt::SortOrder" right="" name="order" default="Qt::AscendingOrder"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QContentSortCriteria::clear" href="qcontentsortcriteria.html#clear" location="qcontentsortcriteria.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sortCount" fullname="QContentSortCriteria::sortCount" href="qcontentsortcriteria.html#sortCount" location="qcontentsortcriteria.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="sortCount() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attribute" fullname="QContentSortCriteria::attribute" href="qcontentsortcriteria.html#attribute" location="qcontentsortcriteria.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Attribute" signature="attribute(int index) const">
                <parameter left="int" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="scope" fullname="QContentSortCriteria::scope" href="qcontentsortcriteria.html#scope" location="qcontentsortcriteria.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="scope(int index) const">
                <parameter left="int" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="order" fullname="QContentSortCriteria::order" href="qcontentsortcriteria.html#order" location="qcontentsortcriteria.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Qt::SortOrder" signature="order(int index) const">
                <parameter left="int" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="compare" fullname="QContentSortCriteria::compare" href="qcontentsortcriteria.html#compare" location="qcontentsortcriteria.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="compare(const QContent &amp; left, const QContent &amp; right) const">
                <parameter left="const QContent &amp;" right="" name="left" default=""></parameter>
                <parameter left="const QContent &amp;" right="" name="right" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lessThan" fullname="QContentSortCriteria::lessThan" href="qcontentsortcriteria.html#lessThan" location="qcontentsortcriteria.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="lessThan(const QContent &amp; left, const QContent &amp; right) const">
                <parameter left="const QContent &amp;" right="" name="left" default=""></parameter>
                <parameter left="const QContent &amp;" right="" name="right" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="greaterThan" fullname="QContentSortCriteria::greaterThan" href="qcontentsortcriteria.html#greaterThan" location="qcontentsortcriteria.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="greaterThan(const QContent &amp; left, const QContent &amp; right) const">
                <parameter left="const QContent &amp;" right="" name="left" default=""></parameter>
                <parameter left="const QContent &amp;" right="" name="right" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaIpcSendEnvelope" href="qtopiaipcsendenvelope.html" location="qtopiaipcadaptor.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaIpcSendEnvelope" fullname="QtopiaIpcSendEnvelope::QtopiaIpcSendEnvelope" href="qtopiaipcsendenvelope.html#QtopiaIpcSendEnvelope" location="qtopiaipcadaptor.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtopiaIpcSendEnvelope()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaIpcSendEnvelope" fullname="QtopiaIpcSendEnvelope::QtopiaIpcSendEnvelope" href="qtopiaipcsendenvelope.html#QtopiaIpcSendEnvelope-3" location="qtopiaipcadaptor.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QtopiaIpcSendEnvelope(const QtopiaIpcSendEnvelope &amp; value)">
                <parameter left="const QtopiaIpcSendEnvelope &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtopiaIpcSendEnvelope" fullname="QtopiaIpcSendEnvelope::~QtopiaIpcSendEnvelope" href="qtopiaipcsendenvelope.html#dtor.QtopiaIpcSendEnvelope" location="qtopiaipcadaptor.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtopiaIpcSendEnvelope()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QtopiaIpcSendEnvelope::operator=" href="qtopiaipcsendenvelope.html#operator=" location="qtopiaipcadaptor.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QtopiaIpcSendEnvelope &amp;" signature="operator=(const QtopiaIpcSendEnvelope &amp; value)">
                <parameter left="const QtopiaIpcSendEnvelope &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;&lt;" fullname="QtopiaIpcSendEnvelope::operator&lt;&lt;" href="qtopiaipcsendenvelope.html#operator&lt;&lt;" location="qtopiaipcadaptor.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QtopiaIpcSendEnvelope &amp;" signature="operator&lt;&lt;(const T &amp; value)">
                <parameter left="const T &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;&lt;" fullname="QtopiaIpcSendEnvelope::operator&lt;&lt;" href="qtopiaipcsendenvelope.html#operator&lt;&lt;-2" location="qtopiaipcadaptor.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="QtopiaIpcSendEnvelope &amp;" signature="operator&lt;&lt;(const char * value)">
                <parameter left="const char *" right="" name="value" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaIpcAdaptor" href="qtopiaipcadaptor.html" location="qtopiaipcadaptor.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaIpcAdaptor" fullname="QtopiaIpcAdaptor::QtopiaIpcAdaptor" href="qtopiaipcadaptor.html#QtopiaIpcAdaptor" location="qtopiaipcadaptor.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtopiaIpcAdaptor(const QString &amp; channel, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="channel" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtopiaIpcAdaptor" fullname="QtopiaIpcAdaptor::~QtopiaIpcAdaptor" href="qtopiaipcadaptor.html#dtor.QtopiaIpcAdaptor" location="qtopiaipcadaptor.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtopiaIpcAdaptor()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ChannelSelector" fullname="QtopiaIpcAdaptor::ChannelSelector" href="qtopiaipcadaptor.html#ChannelSelector-enum" location="qtopiaipcadaptor.h">
                <value name="AutoDetect" value="0"></value>
                <value name="SenderIsChannel" value="1"></value>
                <value name="ReceiverIsChannel" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="connect" fullname="QtopiaIpcAdaptor::connect" href="qtopiaipcadaptor.html#connect" location="qtopiaipcadaptor.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="connect(QObject * sender, const QByteArray &amp; signal, QObject * receiver, const QByteArray &amp; member, QtopiaIpcAdaptor::ChannelSelector selector)">
                <parameter left="QObject *" right="" name="sender" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="signal" default=""></parameter>
                <parameter left="QObject *" right="" name="receiver" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="member" default=""></parameter>
                <parameter left="QtopiaIpcAdaptor::ChannelSelector" right="" name="selector" default="AutoDetect"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="send" fullname="QtopiaIpcAdaptor::send" href="qtopiaipcadaptor.html#send" location="qtopiaipcadaptor.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QtopiaIpcSendEnvelope" signature="send(const QByteArray &amp; member)">
                <parameter left="const QByteArray &amp;" right="" name="member" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="send" fullname="QtopiaIpcAdaptor::send" href="qtopiaipcadaptor.html#send-2" location="qtopiaipcadaptor.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="send(const QByteArray &amp; member, const QVariant &amp; arg1)">
                <parameter left="const QByteArray &amp;" right="" name="member" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="arg1" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="send" fullname="QtopiaIpcAdaptor::send" href="qtopiaipcadaptor.html#send-3" location="qtopiaipcadaptor.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="void" signature="send(const QByteArray &amp; member, const QVariant &amp; arg1, const QVariant &amp; arg2)">
                <parameter left="const QByteArray &amp;" right="" name="member" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="arg1" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="arg2" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="send" fullname="QtopiaIpcAdaptor::send" href="qtopiaipcadaptor.html#send-4" location="qtopiaipcadaptor.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="4" type="void" signature="send(const QByteArray &amp; member, const QVariant &amp; arg1, const QVariant &amp; arg2, const QVariant &amp; arg3)">
                <parameter left="const QByteArray &amp;" right="" name="member" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="arg1" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="arg2" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="arg3" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="send" fullname="QtopiaIpcAdaptor::send" href="qtopiaipcadaptor.html#send-5" location="qtopiaipcadaptor.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="5" type="void" signature="send(const QByteArray &amp; member, const QList&lt;QVariant&gt; &amp; args)">
                <parameter left="const QByteArray &amp;" right="" name="member" default=""></parameter>
                <parameter left="const QList&lt;QVariant&gt; &amp;" right="" name="args" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isConnected" fullname="QtopiaIpcAdaptor::isConnected" href="qtopiaipcadaptor.html#isConnected" location="qtopiaipcadaptor.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="isConnected(const QByteArray &amp; signal)">
                <parameter left="const QByteArray &amp;" right="" name="signal" default=""></parameter>
            </function>
            <enum access="protected" threadsafety="unspecified" status="commendable" name="PublishType" fullname="QtopiaIpcAdaptor::PublishType" href="qtopiaipcadaptor.html#PublishType-enum" location="qtopiaipcadaptor.h">
                <value name="Signals" value="0"></value>
                <value name="Slots" value="1"></value>
                <value name="SignalsAndSlots" value="2"></value>
            </enum>
            <function access="protected" threadsafety="unspecified" status="commendable" name="publish" fullname="QtopiaIpcAdaptor::publish" href="qtopiaipcadaptor.html#publish" location="qtopiaipcadaptor.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="publish(const QByteArray &amp; member)">
                <parameter left="const QByteArray &amp;" right="" name="member" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="publishAll" fullname="QtopiaIpcAdaptor::publishAll" href="qtopiaipcadaptor.html#publishAll" location="qtopiaipcadaptor.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="publishAll(QtopiaIpcAdaptor::PublishType type)">
                <parameter left="QtopiaIpcAdaptor::PublishType" right="" name="type" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="memberToMessage" fullname="QtopiaIpcAdaptor::memberToMessage" href="qtopiaipcadaptor.html#memberToMessage" location="qtopiaipcadaptor.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QString" signature="memberToMessage(const QByteArray &amp; member)">
                <parameter left="const QByteArray &amp;" right="" name="member" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="sendChannels" fullname="QtopiaIpcAdaptor::sendChannels" href="qtopiaipcadaptor.html#sendChannels" location="qtopiaipcadaptor.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QStringList" signature="sendChannels(const QString &amp; channel)">
                <parameter left="const QString &amp;" right="" name="channel" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="receiveChannel" fullname="QtopiaIpcAdaptor::receiveChannel" href="qtopiaipcadaptor.html#receiveChannel" location="qtopiaipcadaptor.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QString" signature="receiveChannel(const QString &amp; channel)">
                <parameter left="const QString &amp;" right="" name="channel" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMailFolder" href="qmailfolder.html" location="qmailfolder.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailFolder" fullname="QMailFolder::QMailFolder" href="qmailfolder.html#QMailFolder" location="qmailfolder.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMailFolder(const QMailId &amp; id)">
                <parameter left="const QMailId &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailFolder" fullname="QMailFolder::QMailFolder" href="qmailfolder.html#QMailFolder-2" location="qmailfolder.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMailFolder(const QString &amp; name, const QMailId &amp; parentFolderId)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QMailId &amp;" right="" name="parentFolderId" default="QMailId()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailFolder" fullname="QMailFolder::QMailFolder" href="qmailfolder.html#QMailFolder-3" location="qmailfolder.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMailFolder(const QMailFolder &amp; other)">
                <parameter left="const QMailFolder &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMailFolder" fullname="QMailFolder::~QMailFolder" href="qmailfolder.html#dtor.QMailFolder" location="qmailfolder.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMailFolder()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QMailFolder::id" href="qmailfolder.html#id" location="qmailfolder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailId" signature="id() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QMailFolder::name" href="qmailfolder.html#name" location="qmailfolder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setName" fullname="QMailFolder::setName" href="qmailfolder.html#setName" location="qmailfolder.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setName(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parentId" fullname="QMailFolder::parentId" href="qmailfolder.html#parentId" location="qmailfolder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailId" signature="parentId() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setParentId" fullname="QMailFolder::setParentId" href="qmailfolder.html#setParentId" location="qmailfolder.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setParentId(const QMailId &amp; id)">
                <parameter left="const QMailId &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isRoot" fullname="QMailFolder::isRoot" href="qmailfolder.html#isRoot" location="qmailfolder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isRoot() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QMailFolder::operator=" href="qmailfolder.html#operator=" location="qmailfolder.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMailFolder &amp;" signature="operator=(const QMailFolder &amp; other)">
                <parameter left="const QMailFolder &amp;" right="" name="other" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QAppointment" href="qappointment.html" location="qappointment.h" bases="QPimRecord" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="RepeatRule" fullname="QAppointment::RepeatRule" href="qappointment.html#RepeatRule-enum" location="qappointment.h">
                <value name="NoRepeat" value="0"></value>
                <value name="Daily" value="1"></value>
                <value name="Weekly" value="2"></value>
                <value name="MonthlyDate" value="3"></value>
                <value name="MonthlyDay" value="4"></value>
                <value name="Yearly" value="5"></value>
                <value name="MonthlyEndDay" value="6"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="AlarmFlag" fullname="QAppointment::AlarmFlag" href="qappointment.html#AlarmFlag-enum" location="qappointment.h" typedef="QAppointment::AlarmFlags">
                <value name="NoAlarm" value="0x00"></value>
                <value name="Visible" value="0x01"></value>
                <value name="Audible" value="0x02 | Visible"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="WeekFlag" fullname="QAppointment::WeekFlag" href="qappointment.html#WeekFlag-enum" location="qappointment.h" typedef="QAppointment::WeekFlags">
                <value name="OccurMonday" value="0x01"></value>
                <value name="OccurTuesday" value="0x02"></value>
                <value name="OccurWednesday" value="0x04"></value>
                <value name="OccurThursday" value="0x08"></value>
                <value name="OccurFriday" value="0x10"></value>
                <value name="OccurSaturday" value="0x20"></value>
                <value name="OccurSunday" value="0x40"></value>
            </enum>
            <class access="public" threadsafety="unspecified" status="main" name="Exception" fullname="QAppointment::Exception" href="qappointment-exception.html" location="qappointment.h" bases="" module="">
                <variable access="public" threadsafety="unspecified" status="commendable" name="date" fullname="QAppointment::Exception::date" href="qappointment-exception.html#date-var" location="qappointment.h" type="QDate" static="false"></variable>
                <variable access="public" threadsafety="unspecified" status="commendable" name="alternative" fullname="QAppointment::Exception::alternative" href="qappointment-exception.html#alternative-var" location="qappointment.h" type="QUniqueId" static="false"></variable>
            </class>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="AlarmFlags" fullname="QAppointment::AlarmFlags" href="qappointment.html#AlarmFlags-typedef" location="qappointment.h" enum="QAppointment::AlarmFlag"></typedef>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="WeekFlags" fullname="QAppointment::WeekFlags" href="qappointment.html#WeekFlags-typedef" location="qappointment.h" enum="QAppointment::WeekFlag"></typedef>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromDateDay" fullname="QAppointment::fromDateDay" href="qappointment.html#fromDateDay" location="qappointment.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="WeekFlag" signature="fromDateDay(int day)">
                <parameter left="int" right="" name="day" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toDateDay" fullname="QAppointment::toDateDay" href="qappointment.html#toDateDay" location="qappointment.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="toDateDay(WeekFlag day)">
                <parameter left="WeekFlag" right="" name="day" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAppointment" fullname="QAppointment::QAppointment" href="qappointment.html#QAppointment" location="qappointment.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAppointment()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAppointment" fullname="QAppointment::QAppointment" href="qappointment.html#QAppointment-2" location="qappointment.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QAppointment(const QAppointment &amp; appointment)">
                <parameter left="const QAppointment &amp;" right="" name="appointment" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAppointment" fullname="QAppointment::QAppointment" href="qappointment.html#QAppointment-3" location="qappointment.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QAppointment(const QDateTime &amp; start, const QDateTime &amp; end)">
                <parameter left="const QDateTime &amp;" right="" name="start" default=""></parameter>
                <parameter left="const QDateTime &amp;" right="" name="end" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAppointment" fullname="QAppointment::~QAppointment" href="qappointment.html#dtor.QAppointment" location="qappointment.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAppointment()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QAppointment::operator=" href="qappointment.html#operator=" location="qappointment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QAppointment &amp;" signature="operator=(const QAppointment &amp; other)">
                <parameter left="const QAppointment &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QAppointment::operator==" href="qappointment.html#operator==" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QAppointment &amp; other) const">
                <parameter left="const QAppointment &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QAppointment::operator!=" href="qappointment.html#operator!=" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QAppointment &amp; other) const">
                <parameter left="const QAppointment &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="description" fullname="QAppointment::description" href="qappointment.html#description" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="description() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="location" fullname="QAppointment::location" href="qappointment.html#location" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="location() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QAppointment::start" href="qappointment.html#start" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="start() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="end" fullname="QAppointment::end" href="qappointment.html#end" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="end() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="notes" fullname="QAppointment::notes" href="qappointment.html#notes" location="qappointment.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="notes() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="timeZone" fullname="QAppointment::timeZone" href="qappointment.html#timeZone" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QTimeZone" signature="timeZone() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="alarmDelay" fullname="QAppointment::alarmDelay" href="qappointment.html#alarmDelay" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="alarmDelay() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="alarm" fullname="QAppointment::alarm" href="qappointment.html#alarm" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="AlarmFlags" signature="alarm() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="repeatRule" fullname="QAppointment::repeatRule" href="qappointment.html#repeatRule" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="RepeatRule" signature="repeatRule() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frequency" fullname="QAppointment::frequency" href="qappointment.html#frequency" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="frequency() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="repeatUntil" fullname="QAppointment::repeatUntil" href="qappointment.html#repeatUntil" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDate" signature="repeatUntil() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="repeatUntilInCurrentTZ" fullname="QAppointment::repeatUntilInCurrentTZ" href="qappointment.html#repeatUntilInCurrentTZ" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDate" signature="repeatUntilInCurrentTZ() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="repeatForever" fullname="QAppointment::repeatForever" href="qappointment.html#repeatForever" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="repeatForever() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="showOnNearest" fullname="QAppointment::showOnNearest" href="qappointment.html#showOnNearest" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="showOnNearest() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="weekFlags" fullname="QAppointment::weekFlags" href="qappointment.html#weekFlags" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="WeekFlags" signature="weekFlags() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAllDay" fullname="QAppointment::isAllDay" href="qappointment.html#isAllDay" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isAllDay() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDescription" fullname="QAppointment::setDescription" href="qappointment.html#setDescription" location="qappointment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDescription(const QString &amp; text)">
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLocation" fullname="QAppointment::setLocation" href="qappointment.html#setLocation" location="qappointment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLocation(const QString &amp; text)">
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStart" fullname="QAppointment::setStart" href="qappointment.html#setStart" location="qappointment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setStart(const QDateTime &amp; time)">
                <parameter left="const QDateTime &amp;" right="" name="time" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEnd" fullname="QAppointment::setEnd" href="qappointment.html#setEnd" location="qappointment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setEnd(const QDateTime &amp; time)">
                <parameter left="const QDateTime &amp;" right="" name="time" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNotes" fullname="QAppointment::setNotes" href="qappointment.html#setNotes" location="qappointment.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setNotes(const QString &amp; text)">
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTimeZone" fullname="QAppointment::setTimeZone" href="qappointment.html#setTimeZone" location="qappointment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTimeZone(const QTimeZone &amp; zone)">
                <parameter left="const QTimeZone &amp;" right="" name="zone" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setWeekFlags" fullname="QAppointment::setWeekFlags" href="qappointment.html#setWeekFlags" location="qappointment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setWeekFlags(QFlags&lt;QAppointment::WeekFlag&gt; days)">
                <parameter left="QFlags&lt;QAppointment::WeekFlag&gt;" right="" name="days" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAllDay" fullname="QAppointment::setAllDay" href="qappointment.html#setAllDay" location="qappointment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAllDay(bool enable)">
                <parameter left="bool" right="" name="enable" default="true"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAlarm" fullname="QAppointment::setAlarm" href="qappointment.html#setAlarm" location="qappointment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAlarm(int minutes, QFlags&lt;QAppointment::AlarmFlag&gt; action)">
                <parameter left="int" right="" name="minutes" default=""></parameter>
                <parameter left="QFlags&lt;QAppointment::AlarmFlag&gt;" right="" name="action" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearAlarm" fullname="QAppointment::clearAlarm" href="qappointment.html#clearAlarm" location="qappointment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearAlarm()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRepeatRule" fullname="QAppointment::setRepeatRule" href="qappointment.html#setRepeatRule" location="qappointment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRepeatRule(RepeatRule t)">
                <parameter left="RepeatRule" right="" name="t" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFrequency" fullname="QAppointment::setFrequency" href="qappointment.html#setFrequency" location="qappointment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFrequency(int frequency)">
                <parameter left="int" right="" name="frequency" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRepeatUntil" fullname="QAppointment::setRepeatUntil" href="qappointment.html#setRepeatUntil" location="qappointment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRepeatUntil(const QDate &amp; date)">
                <parameter left="const QDate &amp;" right="" name="date" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setShowOnNearest" fullname="QAppointment::setShowOnNearest" href="qappointment.html#setShowOnNearest" location="qappointment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setShowOnNearest(bool nearest)">
                <parameter left="bool" right="" name="nearest" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QAppointment::isValid" href="qappointment.html#isValid" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRepeatForever" fullname="QAppointment::setRepeatForever" href="qappointment.html#setRepeatForever" location="qappointment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRepeatForever()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRepeatOnWeekDay" fullname="QAppointment::setRepeatOnWeekDay" href="qappointment.html#setRepeatOnWeekDay" location="qappointment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRepeatOnWeekDay(int day, bool enable)">
                <parameter left="int" right="" name="day" default=""></parameter>
                <parameter left="bool" right="" name="enable" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="repeatOnWeekDay" fullname="QAppointment::repeatOnWeekDay" href="qappointment.html#repeatOnWeekDay" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="repeatOnWeekDay(int day) const">
                <parameter left="int" right="" name="day" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="weekOffset" fullname="QAppointment::weekOffset" href="qappointment.html#weekOffset" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="weekOffset() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasRepeat" fullname="QAppointment::hasRepeat" href="qappointment.html#hasRepeat" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasRepeat() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasAlarm" fullname="QAppointment::hasAlarm" href="qappointment.html#hasAlarm" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasAlarm() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="startInCurrentTZ" fullname="QAppointment::startInCurrentTZ" href="qappointment.html#startInCurrentTZ" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="startInCurrentTZ() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="endInCurrentTZ" fullname="QAppointment::endInCurrentTZ" href="qappointment.html#endInCurrentTZ" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="endInCurrentTZ() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExceptionParent" fullname="QAppointment::setExceptionParent" href="qappointment.html#setExceptionParent" location="qappointment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setExceptionParent(const QUniqueId &amp; identifier)">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAsException" fullname="QAppointment::setAsException" href="qappointment.html#setAsException" location="qappointment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAsException(const QUniqueId &amp; identifier, const QDate &amp; date)">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
                <parameter left="const QDate &amp;" right="" name="date" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exceptionParent" fullname="QAppointment::exceptionParent" href="qappointment.html#exceptionParent" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUniqueId" signature="exceptionParent() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exceptionDate" fullname="QAppointment::exceptionDate" href="qappointment.html#exceptionDate" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDate" signature="exceptionDate() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasExceptions" fullname="QAppointment::hasExceptions" href="qappointment.html#hasExceptions" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasExceptions() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exceptions" fullname="QAppointment::exceptions" href="qappointment.html#exceptions" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;Exception&gt;" signature="exceptions() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExceptions" fullname="QAppointment::setExceptions" href="qappointment.html#setExceptions" location="qappointment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setExceptions(const QList&lt;Exception&gt; &amp; list)">
                <parameter left="const QList&lt;Exception&gt; &amp;" right="" name="list" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearExceptions" fullname="QAppointment::clearExceptions" href="qappointment.html#clearExceptions" location="qappointment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearExceptions()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isException" fullname="QAppointment::isException" href="qappointment.html#isException" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isException() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="nextOccurrence" fullname="QAppointment::nextOccurrence" href="qappointment.html#nextOccurrence" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QOccurrence" signature="nextOccurrence(const QDate &amp; from) const">
                <parameter left="const QDate &amp;" right="" name="from" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="firstOccurrence" fullname="QAppointment::firstOccurrence" href="qappointment.html#firstOccurrence" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QOccurrence" signature="firstOccurrence() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="writeVCalendar" fullname="QAppointment::writeVCalendar" href="qappointment.html#writeVCalendar" location="qappointment.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="writeVCalendar(QIODevice * device, const QList&lt;QAppointment&gt; &amp; appointments)">
                <parameter left="QIODevice *" right="" name="device" default=""></parameter>
                <parameter left="const QList&lt;QAppointment&gt; &amp;" right="" name="appointments" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="writeVCalendar" fullname="QAppointment::writeVCalendar" href="qappointment.html#writeVCalendar-2" location="qappointment.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="bool" signature="writeVCalendar(QIODevice * device, const QAppointment &amp; appointment)">
                <parameter left="QIODevice *" right="" name="device" default=""></parameter>
                <parameter left="const QAppointment &amp;" right="" name="appointment" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readVCalendar" fullname="QAppointment::readVCalendar" href="qappointment.html#readVCalendar" location="qappointment.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QAppointment&gt;" signature="readVCalendar(QIODevice * device)">
                <parameter left="QIODevice *" right="" name="device" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="writeVCalendar" fullname="QAppointment::writeVCalendar" href="qappointment.html#writeVCalendar-3" location="qappointment.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="3" type="void" signature="writeVCalendar(const QString &amp; filename, const QList&lt;QAppointment&gt; &amp; appointments)">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
                <parameter left="const QList&lt;QAppointment&gt; &amp;" right="" name="appointments" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="writeVCalendar" fullname="QAppointment::writeVCalendar" href="qappointment.html#writeVCalendar-4" location="qappointment.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="4" type="void" signature="writeVCalendar(const QString &amp; filename, const QAppointment &amp; appointment)">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
                <parameter left="const QAppointment &amp;" right="" name="appointment" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="writeVCalendar" fullname="QAppointment::writeVCalendar" href="qappointment.html#writeVCalendar-5" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="5" type="void" signature="writeVCalendar(const QString &amp; filename) const">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="writeVCalendar" fullname="QAppointment::writeVCalendar" href="qappointment.html#writeVCalendar-6" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="6" type="void" signature="writeVCalendar(QFile &amp; file) const">
                <parameter left="QFile &amp;" right="" name="file" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="writeVCalendar" fullname="QAppointment::writeVCalendar" href="qappointment.html#writeVCalendar-7" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="7" type="void" signature="writeVCalendar(QDataStream * stream) const">
                <parameter left="QDataStream *" right="" name="stream" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="readVCalendar" fullname="QAppointment::readVCalendar" href="qappointment.html#readVCalendar-2" location="qappointment.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QList&lt;QAppointment&gt;" signature="readVCalendar(const QString &amp; filename)">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="readVCalendarData" fullname="QAppointment::readVCalendarData" href="qappointment.html#readVCalendarData" location="qappointment.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QAppointment&gt;" signature="readVCalendarData(const char * data, unsigned long len)">
                <parameter left="const char *" right="" name="data" default=""></parameter>
                <parameter left="unsigned long" right="" name="len" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="readVCalendar" fullname="QAppointment::readVCalendar" href="qappointment.html#readVCalendar-3" location="qappointment.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="3" type="QList&lt;QAppointment&gt;" signature="readVCalendar(const QByteArray &amp; vcal)">
                <parameter left="const QByteArray &amp;" right="" name="vcal" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="uidRef" fullname="QAppointment::uidRef" href="qappointment.html#uidRef" location="qappointment.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QUniqueId &amp;" signature="uidRef()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="uidRef" fullname="QAppointment::uidRef" href="qappointment.html#uidRef-2" location="qappointment.h" virtual="impure" meta="plain" const="true" static="false" overload="true" overload-number="2" type="const QUniqueId &amp;" signature="uidRef() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="categoriesRef" fullname="QAppointment::categoriesRef" href="qappointment.html#categoriesRef" location="qappointment.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QList&lt;QString&gt; &amp;" signature="categoriesRef()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="categoriesRef" fullname="QAppointment::categoriesRef" href="qappointment.html#categoriesRef-2" location="qappointment.h" virtual="impure" meta="plain" const="true" static="false" overload="true" overload-number="2" type="const QList&lt;QString&gt; &amp;" signature="categoriesRef() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="customFieldsRef" fullname="QAppointment::customFieldsRef" href="qappointment.html#customFieldsRef" location="qappointment.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QMap&lt;QString, QString&gt; &amp;" signature="customFieldsRef()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="customFieldsRef" fullname="QAppointment::customFieldsRef" href="qappointment.html#customFieldsRef-2" location="qappointment.h" virtual="impure" meta="plain" const="true" static="false" overload="true" overload-number="2" type="const QMap&lt;QString, QString&gt; &amp;" signature="customFieldsRef() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QOccurrence" href="qoccurrence.html" location="qappointment.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOccurrence" fullname="QOccurrence::QOccurrence" href="qoccurrence.html#QOccurrence" location="qappointment.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOccurrence()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOccurrence" fullname="QOccurrence::QOccurrence" href="qoccurrence.html#QOccurrence-2" location="qappointment.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QOccurrence(const QOccurrence &amp; occurrence)">
                <parameter left="const QOccurrence &amp;" right="" name="occurrence" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOccurrence" fullname="QOccurrence::QOccurrence" href="qoccurrence.html#QOccurrence-3" location="qappointment.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QOccurrence(const QDate &amp; date, const QAppointment &amp; appointment)">
                <parameter left="const QDate &amp;" right="" name="date" default=""></parameter>
                <parameter left="const QAppointment &amp;" right="" name="appointment" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QOccurrence" fullname="QOccurrence::~QOccurrence" href="qoccurrence.html#dtor.QOccurrence" location="qappointment.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QOccurrence()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QOccurrence::operator=" href="qoccurrence.html#operator=" location="qappointment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QOccurrence &amp;" signature="operator=(const QOccurrence &amp; other)">
                <parameter left="const QOccurrence &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QOccurrence::operator==" href="qoccurrence.html#operator==" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QOccurrence &amp; other) const">
                <parameter left="const QOccurrence &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QOccurrence::isValid" href="qoccurrence.html#isValid" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="nextOccurrence" fullname="QOccurrence::nextOccurrence" href="qoccurrence.html#nextOccurrence" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QOccurrence" signature="nextOccurrence() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="conflicts" fullname="QOccurrence::conflicts" href="qoccurrence.html#conflicts" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="conflicts(const QOccurrence &amp; other) const">
                <parameter left="const QOccurrence &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="conflicts" fullname="QOccurrence::conflicts" href="qoccurrence.html#conflicts-2" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="bool" signature="conflicts(const QDateTime &amp; from, const QDateTime &amp; to) const">
                <parameter left="const QDateTime &amp;" right="" name="from" default=""></parameter>
                <parameter left="const QDateTime &amp;" right="" name="to" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="description" fullname="QOccurrence::description" href="qoccurrence.html#description" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="description() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="location" fullname="QOccurrence::location" href="qoccurrence.html#location" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="location() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="notes" fullname="QOccurrence::notes" href="qoccurrence.html#notes" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="notes() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="timeZone" fullname="QOccurrence::timeZone" href="qoccurrence.html#timeZone" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QTimeZone" signature="timeZone() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="alarmDelay" fullname="QOccurrence::alarmDelay" href="qoccurrence.html#alarmDelay" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="alarmDelay() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="alarm" fullname="QOccurrence::alarm" href="qoccurrence.html#alarm" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAppointment::AlarmFlags" signature="alarm() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="alarmInCurrentTZ" fullname="QOccurrence::alarmInCurrentTZ" href="qoccurrence.html#alarmInCurrentTZ" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="alarmInCurrentTZ() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="endDate" fullname="QOccurrence::endDate" href="qoccurrence.html#endDate" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDate" signature="endDate() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QOccurrence::start" href="qoccurrence.html#start" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="start() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="end" fullname="QOccurrence::end" href="qoccurrence.html#end" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="end() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="startInCurrentTZ" fullname="QOccurrence::startInCurrentTZ" href="qoccurrence.html#startInCurrentTZ" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="startInCurrentTZ() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="endInCurrentTZ" fullname="QOccurrence::endInCurrentTZ" href="qoccurrence.html#endInCurrentTZ" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="endInCurrentTZ() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="appointment" fullname="QOccurrence::appointment" href="qoccurrence.html#appointment" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAppointment" signature="appointment() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="uid" fullname="QOccurrence::uid" href="qoccurrence.html#uid" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUniqueId" signature="uid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="categories" fullname="QOccurrence::categories" href="qoccurrence.html#categories" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QString&gt;" signature="categories() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="date" fullname="QOccurrence::date" href="qoccurrence.html#date" location="qappointment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDate" signature="date() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QHardwareManager" href="qhardwaremanager.html" location="qhardwaremanager.h" bases="QAbstractIpcInterfaceGroupManager" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QHardwareManager" fullname="QHardwareManager::QHardwareManager" href="qhardwaremanager.html#QHardwareManager" location="qhardwaremanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QHardwareManager(const QString &amp; interface, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="interface" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QHardwareManager" fullname="QHardwareManager::~QHardwareManager" href="qhardwaremanager.html#dtor.QHardwareManager" location="qhardwaremanager.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QHardwareManager()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="interface" fullname="QHardwareManager::interface" href="qhardwaremanager.html#interface" location="qhardwaremanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="interface() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="providers" fullname="QHardwareManager::providers" href="qhardwaremanager.html#providers" location="qhardwaremanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="providers() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="providers" fullname="QHardwareManager::providers" href="qhardwaremanager.html#providers-2" location="qhardwaremanager.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QStringList" signature="providers()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="providerAdded" fullname="QHardwareManager::providerAdded" href="qhardwaremanager.html#providerAdded" location="qhardwaremanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="providerAdded(const QString &amp; id)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="providerRemoved" fullname="QHardwareManager::providerRemoved" href="qhardwaremanager.html#providerRemoved" location="qhardwaremanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="providerRemoved(const QString &amp; id)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="InputDeviceSettings" href="inputdevicesettings.html" location="inputdevicesettings.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="InputDeviceSettings" fullname="InputDeviceSettings::InputDeviceSettings" href="inputdevicesettings.html#InputDeviceSettings" location="inputdevicesettings.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="InputDeviceSettings(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="LowMemoryTask" href="lowmemorytask.html" location="lowmemorytask.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~LowMemoryTask" fullname="LowMemoryTask::~LowMemoryTask" href="lowmemorytask.html#dtor.LowMemoryTask" location="lowmemorytask.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~LowMemoryTask()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="showWarning" fullname="LowMemoryTask::showWarning" href="lowmemorytask.html#showWarning" location="lowmemorytask.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="showWarning(const QString &amp; title, const QString &amp; body)">
                <parameter left="const QString &amp;" right="" name="title" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="body" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QRetryAtChat" href="qretryatchat.html" location="qretryatchat.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QRetryAtChat" fullname="QRetryAtChat::QRetryAtChat" href="qretryatchat.html#QRetryAtChat" location="qretryatchat.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QRetryAtChat(QAtChat * atchat, const QString &amp; command, int numRetries, int timeout, bool deleteAfterEmit, QObject * parent)">
                <parameter left="QAtChat *" right="" name="atchat" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="command" default=""></parameter>
                <parameter left="int" right="" name="numRetries" default=""></parameter>
                <parameter left="int" right="" name="timeout" default="1000"></parameter>
                <parameter left="bool" right="" name="deleteAfterEmit" default="true"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QRetryAtChat" fullname="QRetryAtChat::~QRetryAtChat" href="qretryatchat.html#dtor.QRetryAtChat" location="qretryatchat.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QRetryAtChat()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="done" fullname="QRetryAtChat::done" href="qretryatchat.html#done" location="qretryatchat.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="done(bool ok, const QAtResult &amp; result)">
                <parameter left="bool" right="" name="ok" default=""></parameter>
                <parameter left="const QAtResult &amp;" right="" name="result" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QVPNClient" href="qvpnclient.html" location="qvpnclient.h" bases="QObject" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="QVPNClient::Type" href="qvpnclient.html#Type-enum" location="qvpnclient.h">
                <value name="OpenVPN" value="0"></value>
                <value name="IPSec" value="20"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QVPNClient::State" href="qvpnclient.html#State-enum" location="qvpnclient.h">
                <value name="Disconnected" value="0"></value>
                <value name="Pending" value="1"></value>
                <value name="Connected" value="20"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVPNClient" fullname="QVPNClient::~QVPNClient" href="qvpnclient.html#dtor.QVPNClient" location="qvpnclient.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVPNClient()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QVPNClient::type" href="qvpnclient.html#type" location="qvpnclient.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="Type" signature="type() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connect" fullname="QVPNClient::connect" href="qvpnclient.html#connect" location="qvpnclient.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="connect()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disconnect" fullname="QVPNClient::disconnect" href="qvpnclient.html#disconnect" location="qvpnclient.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="disconnect()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="configure" fullname="QVPNClient::configure" href="qvpnclient.html#configure" location="qvpnclient.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QDialog *" signature="configure(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QVPNClient::state" href="qvpnclient.html#state" location="qvpnclient.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="State" signature="state() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cleanup" fullname="QVPNClient::cleanup" href="qvpnclient.html#cleanup" location="qvpnclient.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="cleanup()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QVPNClient::name" href="qvpnclient.html#name" location="qvpnclient.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QVPNClient::errorString" href="qvpnclient.html#errorString" location="qvpnclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QVPNClient::id" href="qvpnclient.html#id" location="qvpnclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="id() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectionStateChanged" fullname="QVPNClient::connectionStateChanged" href="qvpnclient.html#connectionStateChanged" location="qvpnclient.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="connectionStateChanged(bool error)">
                <parameter left="bool" right="" name="error" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QVPNClient" fullname="QVPNClient::QVPNClient" href="qvpnclient.html#QVPNClient" location="qvpnclient.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVPNClient(bool serverMode, QObject * parent)">
                <parameter left="bool" right="" name="serverMode" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QVPNClient" fullname="QVPNClient::QVPNClient" href="qvpnclient.html#QVPNClient-2" location="qvpnclient.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QVPNClient(bool serverMode, uint vpnID, QObject * parent)">
                <parameter left="bool" right="" name="serverMode" default=""></parameter>
                <parameter left="uint" right="" name="vpnID" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d" fullname="QVPNClient::d" href="qvpnclient.html#d-var" location="qvpnclient.h" type="QVPNClientPrivate *" static="false"></variable>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="BSciDrmAgentService" href="bscidrmagentservice.html" location="bscidrmagentservice.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="handleProtectedRightsObject" fullname="BSciDrmAgentService::handleProtectedRightsObject" href="bscidrmagentservice.html#handleProtectedRightsObject" location="bscidrmagentservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="handleProtectedRightsObject(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="handleXmlRightsObject" fullname="BSciDrmAgentService::handleXmlRightsObject" href="bscidrmagentservice.html#handleXmlRightsObject" location="bscidrmagentservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="handleXmlRightsObject(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="handleWbXmlRightsObject" fullname="BSciDrmAgentService::handleWbXmlRightsObject" href="bscidrmagentservice.html#handleWbXmlRightsObject" location="bscidrmagentservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="handleWbXmlRightsObject(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="handleRoapTrigger" fullname="BSciDrmAgentService::handleRoapTrigger" href="bscidrmagentservice.html#handleRoapTrigger" location="bscidrmagentservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="handleRoapTrigger(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="handleRoapPdu" fullname="BSciDrmAgentService::handleRoapPdu" href="bscidrmagentservice.html#handleRoapPdu" location="bscidrmagentservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="handleRoapPdu(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="convertMessage" fullname="BSciDrmAgentService::convertMessage" href="bscidrmagentservice.html#convertMessage" location="bscidrmagentservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="convertMessage(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="BtHandsfreeServiceTask" href="bthandsfreeservicetask.html" location="bthandsfreetask.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="BtHandsfreeServiceTask" fullname="BtHandsfreeServiceTask::BtHandsfreeServiceTask" href="bthandsfreeservicetask.html#BtHandsfreeServiceTask" location="bthandsfreetask.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="BtHandsfreeServiceTask(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~BtHandsfreeServiceTask" fullname="BtHandsfreeServiceTask::~BtHandsfreeServiceTask" href="bthandsfreeservicetask.html#dtor.BtHandsfreeServiceTask" location="bthandsfreetask.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~BtHandsfreeServiceTask()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="CallNetworksService" href="callnetworksservice.html" location="callnetworksservice.h" bases="QtopiaAbstractService" module=""></class>
        <class access="public" threadsafety="unspecified" status="main" name="QMediaStateLabel" href="qmediastatelabel.html" location="qmediawidgets.h" bases="QWidget" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaStateLabel" fullname="QMediaStateLabel::QMediaStateLabel" href="qmediastatelabel.html#QMediaStateLabel" location="qmediawidgets.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaStateLabel(QtopiaMedia::State state, QWidget * parent)">
                <parameter left="QtopiaMedia::State" right="" name="state" default="QtopiaMedia::Stopped"></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaStateLabel" fullname="QMediaStateLabel::~QMediaStateLabel" href="qmediastatelabel.html#dtor.QMediaStateLabel" location="qmediawidgets.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaStateLabel()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QMediaStateLabel::state" href="qmediastatelabel.html#state" location="qmediawidgets.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtopiaMedia::State" signature="state() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setState" fullname="QMediaStateLabel::setState" href="qmediastatelabel.html#setState" location="qmediawidgets.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setState(QtopiaMedia::State state)">
                <parameter left="QtopiaMedia::State" right="" name="state" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QMediaProgressLabel" href="qmediaprogresslabel.html" location="qmediawidgets.h" bases="QWidget" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="QMediaProgressLabel::Type" href="qmediaprogresslabel.html#Type-enum" location="qmediawidgets.h">
                <value name="ElapsedTime" value="0"></value>
                <value name="ElapsedTotalTime" value="1"></value>
                <value name="RemainingTime" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaProgressLabel" fullname="QMediaProgressLabel::QMediaProgressLabel" href="qmediaprogresslabel.html#QMediaProgressLabel" location="qmediawidgets.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaProgressLabel(Type type, QWidget * parent)">
                <parameter left="Type" right="" name="type" default="ElapsedTime"></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaProgressLabel" fullname="QMediaProgressLabel::~QMediaProgressLabel" href="qmediaprogresslabel.html#dtor.QMediaProgressLabel" location="qmediawidgets.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaProgressLabel()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="progressType" fullname="QMediaProgressLabel::progressType" href="qmediaprogresslabel.html#progressType" location="qmediawidgets.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="Type" signature="progressType() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setProgressType" fullname="QMediaProgressLabel::setProgressType" href="qmediaprogresslabel.html#setProgressType" location="qmediawidgets.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setProgressType(Type type)">
                <parameter left="Type" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="content" fullname="QMediaProgressLabel::content" href="qmediaprogresslabel.html#content" location="qmediawidgets.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMediaContent *" signature="content() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMediaContent" fullname="QMediaProgressLabel::setMediaContent" href="qmediaprogresslabel.html#setMediaContent" location="qmediawidgets.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setMediaContent(QMediaContent * content)">
                <parameter left="QMediaContent *" right="" name="content" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setElapsed" fullname="QMediaProgressLabel::setElapsed" href="qmediaprogresslabel.html#setElapsed" location="qmediawidgets.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setElapsed(quint32 ms)">
                <parameter left="quint32" right="" name="ms" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTotal" fullname="QMediaProgressLabel::setTotal" href="qmediaprogresslabel.html#setTotal" location="qmediawidgets.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setTotal(quint32 ms)">
                <parameter left="quint32" right="" name="ms" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QMediaProgressWidget" href="qmediaprogresswidget.html" location="qmediawidgets.h" bases="QWidget" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaProgressWidget" fullname="QMediaProgressWidget::QMediaProgressWidget" href="qmediaprogresswidget.html#QMediaProgressWidget" location="qmediawidgets.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaProgressWidget(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaProgressWidget" fullname="QMediaProgressWidget::~QMediaProgressWidget" href="qmediaprogresswidget.html#dtor.QMediaProgressWidget" location="qmediawidgets.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaProgressWidget()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="content" fullname="QMediaProgressWidget::content" href="qmediaprogresswidget.html#content" location="qmediawidgets.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMediaContent *" signature="content() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMediaContent" fullname="QMediaProgressWidget::setMediaContent" href="qmediaprogresswidget.html#setMediaContent" location="qmediawidgets.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setMediaContent(QMediaContent * content)">
                <parameter left="QMediaContent *" right="" name="content" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QMediaVolumeLabel" href="qmediavolumelabel.html" location="qmediawidgets.h" bases="QWidget" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="QMediaVolumeLabel::Type" href="qmediavolumelabel.html#Type-enum" location="qmediawidgets.h">
                <value name="MinimumVolume" value="0"></value>
                <value name="MaximumVolume" value="1"></value>
                <value name="MuteVolume" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaVolumeLabel" fullname="QMediaVolumeLabel::QMediaVolumeLabel" href="qmediavolumelabel.html#QMediaVolumeLabel" location="qmediawidgets.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaVolumeLabel(Type type, QWidget * parent)">
                <parameter left="Type" right="" name="type" default="MinimumVolume"></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaVolumeLabel" fullname="QMediaVolumeLabel::~QMediaVolumeLabel" href="qmediavolumelabel.html#dtor.QMediaVolumeLabel" location="qmediawidgets.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaVolumeLabel()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volumeType" fullname="QMediaVolumeLabel::volumeType" href="qmediavolumelabel.html#volumeType" location="qmediawidgets.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="Type" signature="volumeType() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVolumeType" fullname="QMediaVolumeLabel::setVolumeType" href="qmediavolumelabel.html#setVolumeType" location="qmediawidgets.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setVolumeType(Type type)">
                <parameter left="Type" right="" name="type" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QMediaVolumeWidget" href="qmediavolumewidget.html" location="qmediawidgets.h" bases="QWidget" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaVolumeWidget" fullname="QMediaVolumeWidget::QMediaVolumeWidget" href="qmediavolumewidget.html#QMediaVolumeWidget" location="qmediawidgets.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaVolumeWidget(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaVolumeWidget" fullname="QMediaVolumeWidget::~QMediaVolumeWidget" href="qmediavolumewidget.html#dtor.QMediaVolumeWidget" location="qmediawidgets.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaVolumeWidget()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="content" fullname="QMediaVolumeWidget::content" href="qmediavolumewidget.html#content" location="qmediawidgets.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMediaContent *" signature="content() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMediaContent" fullname="QMediaVolumeWidget::setMediaContent" href="qmediavolumewidget.html#setMediaContent" location="qmediawidgets.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setMediaContent(QMediaContent * content)">
                <parameter left="QMediaContent *" right="" name="content" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QMediaSeekWidget" href="qmediaseekwidget.html" location="qmediawidgets.h" bases="QWidget" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaSeekWidget" fullname="QMediaSeekWidget::QMediaSeekWidget" href="qmediaseekwidget.html#QMediaSeekWidget" location="qmediawidgets.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaSeekWidget(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaSeekWidget" fullname="QMediaSeekWidget::~QMediaSeekWidget" href="qmediaseekwidget.html#dtor.QMediaSeekWidget" location="qmediawidgets.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaSeekWidget()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="content" fullname="QMediaSeekWidget::content" href="qmediaseekwidget.html#content" location="qmediawidgets.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMediaContent *" signature="content() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lengthChanged" fullname="QMediaSeekWidget::lengthChanged" href="qmediaseekwidget.html#lengthChanged" location="qmediawidgets.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="lengthChanged(quint32 ms)">
                <parameter left="quint32" right="" name="ms" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="positionChanged" fullname="QMediaSeekWidget::positionChanged" href="qmediaseekwidget.html#positionChanged" location="qmediawidgets.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="positionChanged(quint32 ms)">
                <parameter left="quint32" right="" name="ms" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMediaContent" fullname="QMediaSeekWidget::setMediaContent" href="qmediaseekwidget.html#setMediaContent" location="qmediawidgets.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setMediaContent(QMediaContent * content)">
                <parameter left="QMediaContent *" right="" name="content" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="GPRSMonitor" href="gprsmonitor.html" location="gprsmonitor.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="GPRSMonitor" fullname="GPRSMonitor::GPRSMonitor" href="gprsmonitor.html#GPRSMonitor" location="gprsmonitor.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="GPRSMonitor(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QDocumentSelector" href="qdocumentselector.html" location="qdocumentselector.h" bases="QWidget" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Option" fullname="QDocumentSelector::Option" href="qdocumentselector.html#Option-enum" location="qdocumentselector.h" typedef="QDocumentSelector::Options">
                <value name="None" value="0"></value>
                <value name="NewDocument" value="1"></value>
                <value name="TypeSelector" value="2"></value>
                <value name="NestTypes" value="4"></value>
                <value name="ContextMenu" value="8"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SortMode" fullname="QDocumentSelector::SortMode" href="qdocumentselector.html#SortMode-enum" location="qdocumentselector.h">
                <value name="Alphabetical" value="0"></value>
                <value name="ReverseAlphabetical" value="1"></value>
                <value name="Chronological" value="2"></value>
                <value name="ReverseChronological" value="3"></value>
                <value name="SortCriteria" value="4"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Selection" fullname="QDocumentSelector::Selection" href="qdocumentselector.html#Selection-enum" location="qdocumentselector.h">
                <value name="NewSelected" value="0"></value>
                <value name="DocumentSelected" value="1"></value>
                <value name="Cancelled" value="2"></value>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="Options" fullname="QDocumentSelector::Options" href="qdocumentselector.html#Options-typedef" location="qdocumentselector.h" enum="QDocumentSelector::Option"></typedef>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDocumentSelector" fullname="QDocumentSelector::QDocumentSelector" href="qdocumentselector.html#QDocumentSelector" location="qdocumentselector.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDocumentSelector(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDocumentSelector" fullname="QDocumentSelector::~QDocumentSelector" href="qdocumentselector.html#dtor.QDocumentSelector" location="qdocumentselector.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDocumentSelector()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QDocumentSelector::filter" href="qdocumentselector.html#filter" location="qdocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentFilter" signature="filter() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilter" fullname="QDocumentSelector::setFilter" href="qdocumentselector.html#setFilter" location="qdocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilter(const QContentFilter &amp; filter)">
                <parameter left="const QContentFilter &amp;" right="" name="filter" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultCategories" fullname="QDocumentSelector::setDefaultCategories" href="qdocumentselector.html#setDefaultCategories" location="qdocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefaultCategories(const QStringList &amp; categories)">
                <parameter left="const QStringList &amp;" right="" name="categories" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultCategories" fullname="QDocumentSelector::defaultCategories" href="qdocumentselector.html#defaultCategories" location="qdocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="defaultCategories() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSelectPermission" fullname="QDocumentSelector::setSelectPermission" href="qdocumentselector.html#setSelectPermission" location="qdocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSelectPermission(QDrmRights::Permission permission)">
                <parameter left="QDrmRights::Permission" right="" name="permission" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectPermission" fullname="QDocumentSelector::selectPermission" href="qdocumentselector.html#selectPermission" location="qdocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDrmRights::Permission" signature="selectPermission() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMandatoryPermissions" fullname="QDocumentSelector::setMandatoryPermissions" href="qdocumentselector.html#setMandatoryPermissions" location="qdocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMandatoryPermissions(QFlags&lt;QDrmRights::Permission&gt; permissions)">
                <parameter left="QFlags&lt;QDrmRights::Permission&gt;" right="" name="permissions" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mandatoryPermissions" fullname="QDocumentSelector::mandatoryPermissions" href="qdocumentselector.html#mandatoryPermissions" location="qdocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDrmRights::Permissions" signature="mandatoryPermissions() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSortMode" fullname="QDocumentSelector::setSortMode" href="qdocumentselector.html#setSortMode" location="qdocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSortMode(SortMode mode)">
                <parameter left="SortMode" right="" name="mode" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sortMode" fullname="QDocumentSelector::sortMode" href="qdocumentselector.html#sortMode" location="qdocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="SortMode" signature="sortMode() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSortCriteria" fullname="QDocumentSelector::setSortCriteria" href="qdocumentselector.html#setSortCriteria" location="qdocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSortCriteria(const QContentSortCriteria &amp; sort)">
                <parameter left="const QContentSortCriteria &amp;" right="" name="sort" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sortCriteria" fullname="QDocumentSelector::sortCriteria" href="qdocumentselector.html#sortCriteria" location="qdocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentSortCriteria" signature="sortCriteria() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="options" fullname="QDocumentSelector::options" href="qdocumentselector.html#options" location="qdocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Options" signature="options() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOptions" fullname="QDocumentSelector::setOptions" href="qdocumentselector.html#setOptions" location="qdocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setOptions(QFlags&lt;QDocumentSelector::Option&gt; options)">
                <parameter left="QFlags&lt;QDocumentSelector::Option&gt;" right="" name="options" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="enableOptions" fullname="QDocumentSelector::enableOptions" href="qdocumentselector.html#enableOptions" location="qdocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="enableOptions(QFlags&lt;QDocumentSelector::Option&gt; options)">
                <parameter left="QFlags&lt;QDocumentSelector::Option&gt;" right="" name="options" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disableOptions" fullname="QDocumentSelector::disableOptions" href="qdocumentselector.html#disableOptions" location="qdocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="disableOptions(QFlags&lt;QDocumentSelector::Option&gt; options)">
                <parameter left="QFlags&lt;QDocumentSelector::Option&gt;" right="" name="options" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentDocument" fullname="QDocumentSelector::currentDocument" href="qdocumentselector.html#currentDocument" location="qdocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContent" signature="currentDocument() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="newCurrent" fullname="QDocumentSelector::newCurrent" href="qdocumentselector.html#newCurrent" location="qdocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="newCurrent() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="documents" fullname="QDocumentSelector::documents" href="qdocumentselector.html#documents" location="qdocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QContentSet &amp;" signature="documents() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="select" fullname="QDocumentSelector::select" href="qdocumentselector.html#select" location="qdocumentselector.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="Selection" signature="select(QWidget * parent, QContent * content, QDrmRights::Permission permission, const QString &amp; title, const QContentFilter &amp; filter, QFlags&lt;QDocumentSelector::Option&gt; options, SortMode sortMode)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
                <parameter left="QContent *" right="" name="content" default=""></parameter>
                <parameter left="QDrmRights::Permission" right="" name="permission" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="title" default=""></parameter>
                <parameter left="const QContentFilter &amp;" right="" name="filter" default=""></parameter>
                <parameter left="QFlags&lt;QDocumentSelector::Option&gt;" right="" name="options" default="ContextMenu"></parameter>
                <parameter left="SortMode" right="" name="sortMode" default="Alphabetical"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="select" fullname="QDocumentSelector::select" href="qdocumentselector.html#select-2" location="qdocumentselector.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="Selection" signature="select(QWidget * parent, QContent * content, const QString &amp; title, const QContentFilter &amp; filter, QFlags&lt;QDocumentSelector::Option&gt; options, SortMode sortMode)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
                <parameter left="QContent *" right="" name="content" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="title" default=""></parameter>
                <parameter left="const QContentFilter &amp;" right="" name="filter" default=""></parameter>
                <parameter left="QFlags&lt;QDocumentSelector::Option&gt;" right="" name="options" default="ContextMenu"></parameter>
                <parameter left="SortMode" right="" name="sortMode" default="Alphabetical"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="documentSelected" fullname="QDocumentSelector::documentSelected" href="qdocumentselector.html#documentSelected" location="qdocumentselector.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="documentSelected(const QContent &amp; content)">
                <parameter left="const QContent &amp;" right="" name="content" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentChanged" fullname="QDocumentSelector::currentChanged" href="qdocumentselector.html#currentChanged" location="qdocumentselector.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="currentChanged()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="newSelected" fullname="QDocumentSelector::newSelected" href="qdocumentselector.html#newSelected" location="qdocumentselector.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="newSelected()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="documentsChanged" fullname="QDocumentSelector::documentsChanged" href="qdocumentselector.html#documentsChanged" location="qdocumentselector.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="documentsChanged()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QDocumentSelectorDialog" href="qdocumentselectordialog.html" location="qdocumentselector.h" bases="QDialog" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QDocumentSelectorDialog" fullname="QDocumentSelectorDialog::QDocumentSelectorDialog" href="qdocumentselectordialog.html#QDocumentSelectorDialog" location="qdocumentselector.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDocumentSelectorDialog(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDocumentSelectorDialog" fullname="QDocumentSelectorDialog::~QDocumentSelectorDialog" href="qdocumentselectordialog.html#dtor.QDocumentSelectorDialog" location="qdocumentselector.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDocumentSelectorDialog()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QDocumentSelectorDialog::filter" href="qdocumentselectordialog.html#filter" location="qdocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentFilter" signature="filter() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilter" fullname="QDocumentSelectorDialog::setFilter" href="qdocumentselectordialog.html#setFilter" location="qdocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilter(const QContentFilter &amp; filter)">
                <parameter left="const QContentFilter &amp;" right="" name="filter" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultCategories" fullname="QDocumentSelectorDialog::setDefaultCategories" href="qdocumentselectordialog.html#setDefaultCategories" location="qdocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefaultCategories(const QStringList &amp; categories)">
                <parameter left="const QStringList &amp;" right="" name="categories" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultCategories" fullname="QDocumentSelectorDialog::defaultCategories" href="qdocumentselectordialog.html#defaultCategories" location="qdocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="defaultCategories() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSelectPermission" fullname="QDocumentSelectorDialog::setSelectPermission" href="qdocumentselectordialog.html#setSelectPermission" location="qdocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSelectPermission(QDrmRights::Permission permission)">
                <parameter left="QDrmRights::Permission" right="" name="permission" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectPermission" fullname="QDocumentSelectorDialog::selectPermission" href="qdocumentselectordialog.html#selectPermission" location="qdocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDrmRights::Permission" signature="selectPermission() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMandatoryPermissions" fullname="QDocumentSelectorDialog::setMandatoryPermissions" href="qdocumentselectordialog.html#setMandatoryPermissions" location="qdocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMandatoryPermissions(QFlags&lt;QDrmRights::Permission&gt; permissions)">
                <parameter left="QFlags&lt;QDrmRights::Permission&gt;" right="" name="permissions" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mandatoryPermissions" fullname="QDocumentSelectorDialog::mandatoryPermissions" href="qdocumentselectordialog.html#mandatoryPermissions" location="qdocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDrmRights::Permissions" signature="mandatoryPermissions() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSortMode" fullname="QDocumentSelectorDialog::setSortMode" href="qdocumentselectordialog.html#setSortMode" location="qdocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSortMode(QDocumentSelector::SortMode mode)">
                <parameter left="QDocumentSelector::SortMode" right="" name="mode" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sortMode" fullname="QDocumentSelectorDialog::sortMode" href="qdocumentselectordialog.html#sortMode" location="qdocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDocumentSelector::SortMode" signature="sortMode() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSortCriteria" fullname="QDocumentSelectorDialog::setSortCriteria" href="qdocumentselectordialog.html#setSortCriteria" location="qdocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSortCriteria(const QContentSortCriteria &amp; sort)">
                <parameter left="const QContentSortCriteria &amp;" right="" name="sort" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sortCriteria" fullname="QDocumentSelectorDialog::sortCriteria" href="qdocumentselectordialog.html#sortCriteria" location="qdocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentSortCriteria" signature="sortCriteria() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="options" fullname="QDocumentSelectorDialog::options" href="qdocumentselectordialog.html#options" location="qdocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDocumentSelector::Options" signature="options() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOptions" fullname="QDocumentSelectorDialog::setOptions" href="qdocumentselectordialog.html#setOptions" location="qdocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setOptions(QFlags&lt;QDocumentSelector::Option&gt; options)">
                <parameter left="QFlags&lt;QDocumentSelector::Option&gt;" right="" name="options" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="enableOptions" fullname="QDocumentSelectorDialog::enableOptions" href="qdocumentselectordialog.html#enableOptions" location="qdocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="enableOptions(QFlags&lt;QDocumentSelector::Option&gt; options)">
                <parameter left="QFlags&lt;QDocumentSelector::Option&gt;" right="" name="options" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disableOptions" fullname="QDocumentSelectorDialog::disableOptions" href="qdocumentselectordialog.html#disableOptions" location="qdocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="disableOptions(QFlags&lt;QDocumentSelector::Option&gt; options)">
                <parameter left="QFlags&lt;QDocumentSelector::Option&gt;" right="" name="options" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedDocument" fullname="QDocumentSelectorDialog::selectedDocument" href="qdocumentselectordialog.html#selectedDocument" location="qdocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContent" signature="selectedDocument() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="newSelected" fullname="QDocumentSelectorDialog::newSelected" href="qdocumentselectordialog.html#newSelected" location="qdocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="newSelected() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="documents" fullname="QDocumentSelectorDialog::documents" href="qdocumentselectordialog.html#documents" location="qdocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QContentSet &amp;" signature="documents() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QCallListItem" href="qcalllistitem.html" location="qcalllist.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="CallType" fullname="QCallListItem::CallType" href="qcalllistitem.html#CallType-enum" location="qcalllist.h">
                <value name="Dialed" value="0"></value>
                <value name="Received" value="1"></value>
                <value name="Missed" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QCallListItem" fullname="QCallListItem::QCallListItem" href="qcalllistitem.html#QCallListItem" location="qcalllist.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCallListItem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QCallListItem" fullname="QCallListItem::QCallListItem" href="qcalllistitem.html#QCallListItem-2" location="qcalllist.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QCallListItem(CallType type, const QString &amp; number, const QDateTime &amp; start, const QDateTime &amp; end, const QUniqueId &amp; contact, const QString &amp; serviceType, const QString &amp; timeZoneId, bool simRecord)">
                <parameter left="CallType" right="" name="type" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
                <parameter left="const QDateTime &amp;" right="" name="start" default=""></parameter>
                <parameter left="const QDateTime &amp;" right="" name="end" default=""></parameter>
                <parameter left="const QUniqueId &amp;" right="" name="contact" default="QUniqueId()"></parameter>
                <parameter left="const QString &amp;" right="" name="serviceType" default="QString()"></parameter>
                <parameter left="const QString &amp;" right="" name="timeZoneId" default="QString()"></parameter>
                <parameter left="bool" right="" name="simRecord" default="false"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QCallListItem" fullname="QCallListItem::QCallListItem" href="qcalllistitem.html#QCallListItem-3" location="qcalllist.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QCallListItem(CallType type, const QString &amp; number, bool simRecord)">
                <parameter left="CallType" right="" name="type" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
                <parameter left="bool" right="" name="simRecord" default="true"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QCallListItem" fullname="QCallListItem::QCallListItem" href="qcalllistitem.html#QCallListItem-4" location="qcalllist.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QCallListItem(const QCallListItem &amp; other)">
                <parameter left="const QCallListItem &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCallListItem" fullname="QCallListItem::~QCallListItem" href="qcalllistitem.html#dtor.QCallListItem" location="qcalllist.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCallListItem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QCallListItem::operator==" href="qcalllistitem.html#operator==" location="qcalllist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QCallListItem &amp; other) const">
                <parameter left="const QCallListItem &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QCallListItem::operator!=" href="qcalllistitem.html#operator!=" location="qcalllist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QCallListItem &amp; other) const">
                <parameter left="const QCallListItem &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QCallListItem::operator=" href="qcalllistitem.html#operator=" location="qcalllist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QCallListItem &amp;" signature="operator=(const QCallListItem &amp; other)">
                <parameter left="const QCallListItem &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serialize" fullname="QCallListItem::serialize" href="qcalllistitem.html#serialize" location="qcalllist.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="serialize(Stream &amp; stream) const">
                <parameter left="Stream &amp;" right="" name="stream" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deserialize" fullname="QCallListItem::deserialize" href="qcalllistitem.html#deserialize" location="qcalllist.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="deserialize(Stream &amp; stream)">
                <parameter left="Stream &amp;" right="" name="stream" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QCallListItem::type" href="qcalllistitem.html#type" location="qcalllist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="CallType" signature="type() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="number" fullname="QCallListItem::number" href="qcalllistitem.html#number" location="qcalllist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="number() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QCallListItem::start" href="qcalllistitem.html#start" location="qcalllist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="start() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="end" fullname="QCallListItem::end" href="qcalllistitem.html#end" location="qcalllist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="end() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="originalTimeZoneStart" fullname="QCallListItem::originalTimeZoneStart" href="qcalllistitem.html#originalTimeZoneStart" location="qcalllist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="originalTimeZoneStart() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="originalTimeZoneEnd" fullname="QCallListItem::originalTimeZoneEnd" href="qcalllistitem.html#originalTimeZoneEnd" location="qcalllist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="originalTimeZoneEnd() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contact" fullname="QCallListItem::contact" href="qcalllistitem.html#contact" location="qcalllist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUniqueId" signature="contact() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serviceType" fullname="QCallListItem::serviceType" href="qcalllistitem.html#serviceType" location="qcalllist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="serviceType() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="timeZoneId" fullname="QCallListItem::timeZoneId" href="qcalllistitem.html#timeZoneId" location="qcalllist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="timeZoneId() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSIMRecord" fullname="QCallListItem::isSIMRecord" href="qcalllistitem.html#isSIMRecord" location="qcalllist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSIMRecord() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QCallListItem::isNull" href="qcalllistitem.html#isNull" location="qcalllist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QCallList" href="qcalllist.html" location="qcalllist.h" bases="QObject" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="DuplicateBehaviour" fullname="QCallList::DuplicateBehaviour" href="qcalllist.html#DuplicateBehaviour-enum" location="qcalllist.h">
                <value name="AllowDuplicates" value="0"></value>
                <value name="OverwriteDuplicates" value="1"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ListType" fullname="QCallList::ListType" href="qcalllist.html#ListType-enum" location="qcalllist.h">
                <value name="All" value="0"></value>
                <value name="Dialed" value="1"></value>
                <value name="Received" value="2"></value>
                <value name="Missed" value="3"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QCallList" fullname="QCallList::QCallList" href="qcalllist.html#QCallList" location="qcalllist.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCallList(int maxItemCount)">
                <parameter left="int" right="" name="maxItemCount" default="-1"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCallList" fullname="QCallList::~QCallList" href="qcalllist.html#dtor.QCallList" location="qcalllist.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCallList()"></function>
            <class access="public" threadsafety="unspecified" status="main" name="SearchOptions" fullname="QCallList::SearchOptions" href="qcalllist-searchoptions.html" location="qcalllist.h" bases="" module="">
                <variable access="public" threadsafety="unspecified" status="commendable" name="number" fullname="QCallList::SearchOptions::number" href="qcalllist-searchoptions.html#number-var" location="qcalllist.h" type="QString" static="false"></variable>
                <variable access="public" threadsafety="unspecified" status="commendable" name="contactId" fullname="QCallList::SearchOptions::contactId" href="qcalllist-searchoptions.html#contactId-var" location="qcalllist.h" type="QUniqueId" static="false"></variable>
            </class>
            <function access="public" threadsafety="unspecified" status="commendable" name="allCalls" fullname="QCallList::allCalls" href="qcalllist.html#allCalls" location="qcalllist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QCallListItem&gt;" signature="allCalls() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchCalls" fullname="QCallList::searchCalls" href="qcalllist.html#searchCalls" location="qcalllist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QCallListItem&gt;" signature="searchCalls(SearchOptions &amp; options) const">
                <parameter left="SearchOptions &amp;" right="" name="options" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="record" fullname="QCallList::record" href="qcalllist.html#record" location="qcalllist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="record(QCallListItem item, DuplicateBehaviour duplicates)">
                <parameter left="QCallListItem" right="" name="item" default=""></parameter>
                <parameter left="DuplicateBehaviour" right="" name="duplicates" default="AllowDuplicates"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="count" fullname="QCallList::count" href="qcalllist.html#count" location="qcalllist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="count() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="at" fullname="QCallList::at" href="qcalllist.html#at" location="qcalllist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QCallListItem" signature="at(uint posn) const">
                <parameter left="uint" right="" name="posn" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMaxItems" fullname="QCallList::setMaxItems" href="qcalllist.html#setMaxItems" location="qcalllist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMaxItems(const int &amp; l)">
                <parameter left="const int &amp;" right="" name="l" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="maxItems" fullname="QCallList::maxItems" href="qcalllist.html#maxItems" location="qcalllist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="maxItems() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QCallList::clear" href="qcalllist.html#clear" location="qcalllist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeAt" fullname="QCallList::removeAt" href="qcalllist.html#removeAt" location="qcalllist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeAt(uint posn)">
                <parameter left="uint" right="" name="posn" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeAll" fullname="QCallList::removeAll" href="qcalllist.html#removeAll" location="qcalllist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeAll(const QString &amp; number)">
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeAll" fullname="QCallList::removeAll" href="qcalllist.html#removeAll-2" location="qcalllist.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="removeAll(QCallListItem::CallType type)">
                <parameter left="QCallListItem::CallType" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updated" fullname="QCallList::updated" href="qcalllist.html#updated" location="qcalllist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="updated()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QMultiPortMultiplexer" href="qmultiportmultiplexer.html" location="qmultiportmultiplexer.h" bases="QSerialIODeviceMultiplexer" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMultiPortMultiplexer" fullname="QMultiPortMultiplexer::QMultiPortMultiplexer" href="qmultiportmultiplexer.html#QMultiPortMultiplexer" location="qmultiportmultiplexer.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMultiPortMultiplexer(QSerialIODevice * device, QObject * parent)">
                <parameter left="QSerialIODevice *" right="" name="device" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMultiPortMultiplexer" fullname="QMultiPortMultiplexer::~QMultiPortMultiplexer" href="qmultiportmultiplexer.html#dtor.QMultiPortMultiplexer" location="qmultiportmultiplexer.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMultiPortMultiplexer()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addChannel" fullname="QMultiPortMultiplexer::addChannel" href="qmultiportmultiplexer.html#addChannel" location="qmultiportmultiplexer.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="addChannel(const QString &amp; name, QSerialIODevice * device)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="QSerialIODevice *" right="" name="device" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPinOptions" href="qpinoptions.html" location="qpinmanager.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QPinOptions" fullname="QPinOptions::QPinOptions" href="qpinoptions.html#QPinOptions" location="qpinmanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPinOptions()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QPinOptions" fullname="QPinOptions::QPinOptions" href="qpinoptions.html#QPinOptions-2" location="qpinmanager.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QPinOptions(const QPinOptions &amp; other)">
                <parameter left="const QPinOptions &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPinOptions" fullname="QPinOptions::~QPinOptions" href="qpinoptions.html#dtor.QPinOptions" location="qpinmanager.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPinOptions()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Format" fullname="QPinOptions::Format" href="qpinoptions.html#Format-enum" location="qpinmanager.h">
                <value name="Number" value="0"></value>
                <value name="PhoneNumber" value="1"></value>
                <value name="Words" value="2"></value>
                <value name="Text" value="3"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QPinOptions::operator=" href="qpinoptions.html#operator=" location="qpinmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QPinOptions &amp;" signature="operator=(const QPinOptions &amp; other)">
                <parameter left="const QPinOptions &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="prompt" fullname="QPinOptions::prompt" href="qpinoptions.html#prompt" location="qpinmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="prompt() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPrompt" fullname="QPinOptions::setPrompt" href="qpinoptions.html#setPrompt" location="qpinmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPrompt(const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="format" fullname="QPinOptions::format" href="qpinoptions.html#format" location="qpinmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPinOptions::Format" signature="format() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFormat" fullname="QPinOptions::setFormat" href="qpinoptions.html#setFormat" location="qpinmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFormat(QPinOptions::Format value)">
                <parameter left="QPinOptions::Format" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="minLength" fullname="QPinOptions::minLength" href="qpinoptions.html#minLength" location="qpinmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="minLength() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMinLength" fullname="QPinOptions::setMinLength" href="qpinoptions.html#setMinLength" location="qpinmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMinLength(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="maxLength" fullname="QPinOptions::maxLength" href="qpinoptions.html#maxLength" location="qpinmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="maxLength() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMaxLength" fullname="QPinOptions::setMaxLength" href="qpinoptions.html#setMaxLength" location="qpinmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMaxLength(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="canCancel" fullname="QPinOptions::canCancel" href="qpinoptions.html#canCancel" location="qpinmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="canCancel() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCanCancel" fullname="QPinOptions::setCanCancel" href="qpinoptions.html#setCanCancel" location="qpinmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCanCancel(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPinManager" href="qpinmanager.html" location="qpinmanager.h" bases="QCommInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QPinManager" fullname="QPinManager::QPinManager" href="qpinmanager.html#QPinManager" location="qpinmanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPinManager(const QString &amp; service, QObject * parent, QCommInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="service" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QCommInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPinManager" fullname="QPinManager::~QPinManager" href="qpinmanager.html#dtor.QPinManager" location="qpinmanager.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPinManager()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Status" fullname="QPinManager::Status" href="qpinmanager.html#Status-enum" location="qpinmanager.h">
                <value name="NeedPin" value="0"></value>
                <value name="NeedPuk" value="1"></value>
                <value name="Valid" value="2"></value>
                <value name="Locked" value="3"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="querySimPinStatus" fullname="QPinManager::querySimPinStatus" href="qpinmanager.html#querySimPinStatus" location="qpinmanager.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="querySimPinStatus()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="enterPin" fullname="QPinManager::enterPin" href="qpinmanager.html#enterPin" location="qpinmanager.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="enterPin(const QString &amp; type, const QString &amp; pin)">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="pin" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="enterPuk" fullname="QPinManager::enterPuk" href="qpinmanager.html#enterPuk" location="qpinmanager.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="enterPuk(const QString &amp; type, const QString &amp; puk, const QString &amp; newPin)">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="puk" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="newPin" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancelPin" fullname="QPinManager::cancelPin" href="qpinmanager.html#cancelPin" location="qpinmanager.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="cancelPin(const QString &amp; type)">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="changePin" fullname="QPinManager::changePin" href="qpinmanager.html#changePin" location="qpinmanager.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="changePin(const QString &amp; type, const QString &amp; oldPin, const QString &amp; newPin)">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="oldPin" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="newPin" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestLockStatus" fullname="QPinManager::requestLockStatus" href="qpinmanager.html#requestLockStatus" location="qpinmanager.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="requestLockStatus(const QString &amp; type)">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLockStatus" fullname="QPinManager::setLockStatus" href="qpinmanager.html#setLockStatus" location="qpinmanager.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setLockStatus(const QString &amp; type, const QString &amp; password, bool enabled)">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="password" default=""></parameter>
                <parameter left="bool" right="" name="enabled" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pinStatus" fullname="QPinManager::pinStatus" href="qpinmanager.html#pinStatus" location="qpinmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="pinStatus(const QString &amp; type, QPinManager::Status status, const QPinOptions &amp; options)">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
                <parameter left="QPinManager::Status" right="" name="status" default=""></parameter>
                <parameter left="const QPinOptions &amp;" right="" name="options" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="changePinResult" fullname="QPinManager::changePinResult" href="qpinmanager.html#changePinResult" location="qpinmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="changePinResult(const QString &amp; type, bool valid)">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
                <parameter left="bool" right="" name="valid" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lockStatus" fullname="QPinManager::lockStatus" href="qpinmanager.html#lockStatus" location="qpinmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="lockStatus(const QString &amp; type, bool enabled)">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
                <parameter left="bool" right="" name="enabled" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLockStatusResult" fullname="QPinManager::setLockStatusResult" href="qpinmanager.html#setLockStatusResult" location="qpinmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="setLockStatusResult(const QString &amp; type, bool valid)">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
                <parameter left="bool" right="" name="valid" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QNetworkConnection" href="qnetworkconnection.html" location="qnetworkconnection.h" bases="QObject" module="">
            <class access="public" threadsafety="unspecified" status="main" name="Identity" fullname="QNetworkConnection::Identity" href="qnetworkconnection-identity.html" location="qnetworkconnection.h" bases="" module="">
                <function access="public" threadsafety="unspecified" status="commendable" name="Identity" fullname="QNetworkConnection::Identity::Identity" href="qnetworkconnection-identity.html#Identity" location="qnetworkconnection.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="Identity()"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="Identity" fullname="QNetworkConnection::Identity::Identity" href="qnetworkconnection-identity.html#Identity-3" location="qnetworkconnection.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="Identity(const Identity &amp; other)">
                    <parameter left="const Identity &amp;" right="" name="other" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="~Identity" fullname="QNetworkConnection::Identity::~Identity" href="qnetworkconnection-identity.html#dtor.Identity" location="qnetworkconnection.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~Identity()"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QNetworkConnection::Identity::operator=" href="qnetworkconnection-identity.html#operator=" location="qnetworkconnection.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="Identity &amp;" signature="operator=(const Identity &amp; other)">
                    <parameter left="const Identity &amp;" right="" name="other" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QNetworkConnection::Identity::operator==" href="qnetworkconnection-identity.html#operator==" location="qnetworkconnection.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const Identity &amp; other) const">
                    <parameter left="const Identity &amp;" right="" name="other" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QNetworkConnection::Identity::operator!=" href="qnetworkconnection-identity.html#operator!=" location="qnetworkconnection.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const Identity &amp; other) const">
                    <parameter left="const Identity &amp;" right="" name="other" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="deviceHandle" fullname="QNetworkConnection::Identity::deviceHandle" href="qnetworkconnection-identity.html#deviceHandle" location="qnetworkconnection.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="deviceHandle() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QNetworkConnection::Identity::name" href="qnetworkconnection-identity.html#name" location="qnetworkconnection.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QNetworkConnection::Identity::type" href="qnetworkconnection-identity.html#type" location="qnetworkconnection.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtopiaNetwork::Type" signature="type() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QNetworkConnection::Identity::isValid" href="qnetworkconnection-identity.html#isValid" location="qnetworkconnection.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            </class>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="Identities" fullname="QNetworkConnection::Identities" href="qnetworkconnection.html#Identities-typedef" location="qnetworkconnection.h"></typedef>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkConnection" fullname="QNetworkConnection::QNetworkConnection" href="qnetworkconnection.html#QNetworkConnection" location="qnetworkconnection.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNetworkConnection(const Identity &amp; ident, QObject * parent)">
                <parameter left="const Identity &amp;" right="" name="ident" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNetworkConnection" fullname="QNetworkConnection::~QNetworkConnection" href="qnetworkconnection.html#dtor.QNetworkConnection" location="qnetworkconnection.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNetworkConnection()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="identity" fullname="QNetworkConnection::identity" href="qnetworkconnection.html#identity" location="qnetworkconnection.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Identity" signature="identity() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isConnected" fullname="QNetworkConnection::isConnected" href="qnetworkconnection.html#isConnected" location="qnetworkconnection.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isConnected() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QNetworkConnection::isValid" href="qnetworkconnection.html#isValid" location="qnetworkconnection.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectivityChanged" fullname="QNetworkConnection::connectivityChanged" href="qnetworkconnection.html#connectivityChanged" location="qnetworkconnection.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="connectivityChanged(bool isConnected)">
                <parameter left="bool" right="" name="isConnected" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QNetworkConnectionManager" href="qnetworkconnectionmanager.html" location="qnetworkconnection.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkConnectionManager" fullname="QNetworkConnectionManager::QNetworkConnectionManager" href="qnetworkconnectionmanager.html#QNetworkConnectionManager" location="qnetworkconnection.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNetworkConnectionManager(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNetworkConnectionManager" fullname="QNetworkConnectionManager::~QNetworkConnectionManager" href="qnetworkconnectionmanager.html#dtor.QNetworkConnectionManager" location="qnetworkconnection.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNetworkConnectionManager()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connections" fullname="QNetworkConnectionManager::connections" href="qnetworkconnectionmanager.html#connections" location="qnetworkconnection.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QNetworkConnection::Identities" signature="connections()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectionAdded" fullname="QNetworkConnectionManager::connectionAdded" href="qnetworkconnectionmanager.html#connectionAdded" location="qnetworkconnection.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="connectionAdded()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectionRemoved" fullname="QNetworkConnectionManager::connectionRemoved" href="qnetworkconnectionmanager.html#connectionRemoved" location="qnetworkconnection.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="connectionRemoved()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QSoftMenuBarProvider" href="qsoftmenubarprovider.html" location="qsoftmenubarprovider.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSoftMenuBarProvider" fullname="QSoftMenuBarProvider::QSoftMenuBarProvider" href="qsoftmenubarprovider.html#QSoftMenuBarProvider" location="qsoftmenubarprovider.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSoftMenuBarProvider(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSoftMenuBarProvider" fullname="QSoftMenuBarProvider::~QSoftMenuBarProvider" href="qsoftmenubarprovider.html#dtor.QSoftMenuBarProvider" location="qsoftmenubarprovider.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSoftMenuBarProvider()"></function>
            <class access="public" threadsafety="unspecified" status="commendable" name="MenuButton" fullname="QSoftMenuBarProvider::MenuButton" href="qsoftmenubarprovider-menubutton.html" location="qsoftmenubarprovider.h" bases="" module="">
                <function access="public" threadsafety="unspecified" status="commendable" name="MenuButton" fullname="QSoftMenuBarProvider::MenuButton::MenuButton" href="qsoftmenubarprovider-menubutton.html#MenuButton" location="qsoftmenubarprovider.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="MenuButton()"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="MenuButton" fullname="QSoftMenuBarProvider::MenuButton::MenuButton" href="qsoftmenubarprovider-menubutton.html#MenuButton-2" location="qsoftmenubarprovider.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="MenuButton(const MenuButton &amp; other)">
                    <parameter left="const MenuButton &amp;" right="" name="other" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QSoftMenuBarProvider::MenuButton::operator=" href="qsoftmenubarprovider-menubutton.html#operator=" location="qsoftmenubarprovider.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="MenuButton &amp;" signature="operator=(const MenuButton &amp; other)">
                    <parameter left="const MenuButton &amp;" right="" name="other" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="~MenuButton" fullname="QSoftMenuBarProvider::MenuButton::~MenuButton" href="qsoftmenubarprovider-menubutton.html#dtor.MenuButton" location="qsoftmenubarprovider.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~MenuButton()"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="index" fullname="QSoftMenuBarProvider::MenuButton::index" href="qsoftmenubarprovider-menubutton.html#index" location="qsoftmenubarprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="index() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="key" fullname="QSoftMenuBarProvider::MenuButton::key" href="qsoftmenubarprovider-menubutton.html#key" location="qsoftmenubarprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="key() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="text" fullname="QSoftMenuBarProvider::MenuButton::text" href="qsoftmenubarprovider-menubutton.html#text" location="qsoftmenubarprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="text() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="pixmap" fullname="QSoftMenuBarProvider::MenuButton::pixmap" href="qsoftmenubarprovider-menubutton.html#pixmap" location="qsoftmenubarprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPixmap" signature="pixmap() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="pixmapName" fullname="QSoftMenuBarProvider::MenuButton::pixmapName" href="qsoftmenubarprovider-menubutton.html#pixmapName" location="qsoftmenubarprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="pixmapName() const"></function>
            </class>
            <function access="public" threadsafety="unspecified" status="commendable" name="keyCount" fullname="QSoftMenuBarProvider::keyCount" href="qsoftmenubarprovider.html#keyCount" location="qsoftmenubarprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="keyCount() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="key" fullname="QSoftMenuBarProvider::key" href="qsoftmenubarprovider.html#key" location="qsoftmenubarprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="MenuButton" signature="key(int index) const">
                <parameter left="int" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="keys" fullname="QSoftMenuBarProvider::keys" href="qsoftmenubarprovider.html#keys" location="qsoftmenubarprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;MenuButton&gt;" signature="keys() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="keyChanged" fullname="QSoftMenuBarProvider::keyChanged" href="qsoftmenubarprovider.html#keyChanged" location="qsoftmenubarprovider.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="keyChanged(const QSoftMenuBarProvider::MenuButton &amp; button)">
                <parameter left="const QSoftMenuBarProvider::MenuButton &amp;" right="" name="button" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="keyChanged" fullname="QSoftMenuBarProvider::keyChanged" href="qsoftmenubarprovider.html#keyChanged-2" location="qsoftmenubarprovider.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="keyChanged(int key)">
                <parameter left="int" right="" name="key" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothAudioGateway" href="qbluetoothaudiogateway.html" location="qbluetoothaudiogateway.h" bases="QCommInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothAudioGateway" fullname="QBluetoothAudioGateway::QBluetoothAudioGateway" href="qbluetoothaudiogateway.html#QBluetoothAudioGateway" location="qbluetoothaudiogateway.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothAudioGateway(const QString &amp; service, QObject * parent, QAbstractIpcInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="service" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QAbstractIpcInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothAudioGateway" fullname="QBluetoothAudioGateway::~QBluetoothAudioGateway" href="qbluetoothaudiogateway.html#dtor.QBluetoothAudioGateway" location="qbluetoothaudiogateway.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothAudioGateway()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="speakerVolume" fullname="QBluetoothAudioGateway::speakerVolume" href="qbluetoothaudiogateway.html#speakerVolume" location="qbluetoothaudiogateway.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="speakerVolume() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="microphoneVolume" fullname="QBluetoothAudioGateway::microphoneVolume" href="qbluetoothaudiogateway.html#microphoneVolume" location="qbluetoothaudiogateway.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="microphoneVolume() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isConnected" fullname="QBluetoothAudioGateway::isConnected" href="qbluetoothaudiogateway.html#isConnected" location="qbluetoothaudiogateway.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isConnected() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remotePeer" fullname="QBluetoothAudioGateway::remotePeer" href="qbluetoothaudiogateway.html#remotePeer" location="qbluetoothaudiogateway.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothAddress" signature="remotePeer() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="audioEnabled" fullname="QBluetoothAudioGateway::audioEnabled" href="qbluetoothaudiogateway.html#audioEnabled" location="qbluetoothaudiogateway.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="audioEnabled() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connect" fullname="QBluetoothAudioGateway::connect" href="qbluetoothaudiogateway.html#connect" location="qbluetoothaudiogateway.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="connect(const QBluetoothAddress &amp; addr, int rfcomm_channel)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
                <parameter left="int" right="" name="rfcomm_channel" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disconnect" fullname="QBluetoothAudioGateway::disconnect" href="qbluetoothaudiogateway.html#disconnect" location="qbluetoothaudiogateway.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="disconnect()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSpeakerVolume" fullname="QBluetoothAudioGateway::setSpeakerVolume" href="qbluetoothaudiogateway.html#setSpeakerVolume" location="qbluetoothaudiogateway.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setSpeakerVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMicrophoneVolume" fullname="QBluetoothAudioGateway::setMicrophoneVolume" href="qbluetoothaudiogateway.html#setMicrophoneVolume" location="qbluetoothaudiogateway.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setMicrophoneVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="releaseAudio" fullname="QBluetoothAudioGateway::releaseAudio" href="qbluetoothaudiogateway.html#releaseAudio" location="qbluetoothaudiogateway.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="releaseAudio()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectAudio" fullname="QBluetoothAudioGateway::connectAudio" href="qbluetoothaudiogateway.html#connectAudio" location="qbluetoothaudiogateway.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="connectAudio()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectResult" fullname="QBluetoothAudioGateway::connectResult" href="qbluetoothaudiogateway.html#connectResult" location="qbluetoothaudiogateway.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="connectResult(bool success, const QString &amp; msg)">
                <parameter left="bool" right="" name="success" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="msg" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="newConnection" fullname="QBluetoothAudioGateway::newConnection" href="qbluetoothaudiogateway.html#newConnection" location="qbluetoothaudiogateway.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="newConnection(const QBluetoothAddress &amp; addr)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="headsetDisconnected" fullname="QBluetoothAudioGateway::headsetDisconnected" href="qbluetoothaudiogateway.html#headsetDisconnected" location="qbluetoothaudiogateway.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="headsetDisconnected()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="speakerVolumeChanged" fullname="QBluetoothAudioGateway::speakerVolumeChanged" href="qbluetoothaudiogateway.html#speakerVolumeChanged" location="qbluetoothaudiogateway.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="speakerVolumeChanged()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="microphoneVolumeChanged" fullname="QBluetoothAudioGateway::microphoneVolumeChanged" href="qbluetoothaudiogateway.html#microphoneVolumeChanged" location="qbluetoothaudiogateway.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="microphoneVolumeChanged()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="audioStateChanged" fullname="QBluetoothAudioGateway::audioStateChanged" href="qbluetoothaudiogateway.html#audioStateChanged" location="qbluetoothaudiogateway.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="audioStateChanged()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QAbstractIpcInterfaceGroup" href="qabstractipcinterfacegroup.html" location="qabstractipcinterfacegroup.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAbstractIpcInterfaceGroup" fullname="QAbstractIpcInterfaceGroup::QAbstractIpcInterfaceGroup" href="qabstractipcinterfacegroup.html#QAbstractIpcInterfaceGroup" location="qabstractipcinterfacegroup.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAbstractIpcInterfaceGroup(const QString &amp; groupName, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="groupName" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAbstractIpcInterfaceGroup" fullname="QAbstractIpcInterfaceGroup::~QAbstractIpcInterfaceGroup" href="qabstractipcinterfacegroup.html#dtor.QAbstractIpcInterfaceGroup" location="qabstractipcinterfacegroup.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAbstractIpcInterfaceGroup()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="groupName" fullname="QAbstractIpcInterfaceGroup::groupName" href="qabstractipcinterfacegroup.html#groupName" location="qabstractipcinterfacegroup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="groupName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="initialize" fullname="QAbstractIpcInterfaceGroup::initialize" href="qabstractipcinterfacegroup.html#initialize" location="qabstractipcinterfacegroup.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="initialize()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supports" fullname="QAbstractIpcInterfaceGroup::supports" href="qabstractipcinterfacegroup.html#supports" location="qabstractipcinterfacegroup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="supports() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="interface" fullname="QAbstractIpcInterfaceGroup::interface" href="qabstractipcinterfacegroup.html#interface" location="qabstractipcinterfacegroup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="T *" signature="interface() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="addInterface" fullname="QAbstractIpcInterfaceGroup::addInterface" href="qabstractipcinterfacegroup.html#addInterface" location="qabstractipcinterfacegroup.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="addInterface(QAbstractIpcInterface * interface)">
                <parameter left="QAbstractIpcInterface *" right="" name="interface" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="suppressInterface" fullname="QAbstractIpcInterfaceGroup::suppressInterface" href="qabstractipcinterfacegroup.html#suppressInterface" location="qabstractipcinterfacegroup.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="suppressInterface()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="PrintService" href="printservice.html" location="printserver.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~PrintService" fullname="PrintService::~PrintService" href="printservice.html#dtor.PrintService" location="printserver.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~PrintService()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="print" fullname="PrintService::print" href="printservice.html#print" location="printserver.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="print(QString fileName)">
                <parameter left="QString" right="" name="fileName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="print" fullname="PrintService::print" href="printservice.html#print-2" location="printserver.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="print(QString fileName, QString mimeType)">
                <parameter left="QString" right="" name="fileName" default=""></parameter>
                <parameter left="QString" right="" name="mimeType" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="printHtml" fullname="PrintService::printHtml" href="printservice.html#printHtml" location="printserver.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="printHtml(QString html)">
                <parameter left="QString" right="" name="html" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemSimGenericAccess" href="qmodemsimgenericaccess.html" location="qmodemsimgenericaccess.h" bases="QSimGenericAccess" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemSimGenericAccess" fullname="QModemSimGenericAccess::QModemSimGenericAccess" href="qmodemsimgenericaccess.html#QModemSimGenericAccess" location="qmodemsimgenericaccess.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemSimGenericAccess(QModemService * service)">
                <parameter left="QModemService *" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemSimGenericAccess" fullname="QModemSimGenericAccess::~QModemSimGenericAccess" href="qmodemsimgenericaccess.html#dtor.QModemSimGenericAccess" location="qmodemsimgenericaccess.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemSimGenericAccess()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSerialSocket" href="qserialsocket.html" location="qserialsocket.h" bases="QSerialIODevice" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSerialSocket" fullname="QSerialSocket::QSerialSocket" href="qserialsocket.html#QSerialSocket" location="qserialsocket.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSerialSocket(const QString &amp; host, quint16 port, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="host" default=""></parameter>
                <parameter left="quint16" right="" name="port" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSerialSocket" fullname="QSerialSocket::~QSerialSocket" href="qserialsocket.html#dtor.QSerialSocket" location="qserialsocket.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSerialSocket()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="open" fullname="QSerialSocket::open" href="qserialsocket.html#open" location="qserialsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="open(OpenMode mode)">
                <parameter left="OpenMode" right="" name="mode" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="close" fullname="QSerialSocket::close" href="qserialsocket.html#close" location="qserialsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="close()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="closed" fullname="QSerialSocket::closed" href="qserialsocket.html#closed" location="qserialsocket.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="closed()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSerialSocketServer" href="qserialsocketserver.html" location="qserialsocket.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSerialSocketServer" fullname="QSerialSocketServer::QSerialSocketServer" href="qserialsocketserver.html#QSerialSocketServer" location="qserialsocket.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSerialSocketServer(quint16 port, bool localHostOnly, QObject * parent)">
                <parameter left="quint16" right="" name="port" default=""></parameter>
                <parameter left="bool" right="" name="localHostOnly" default="true"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSerialSocketServer" fullname="QSerialSocketServer::~QSerialSocketServer" href="qserialsocketserver.html#dtor.QSerialSocketServer" location="qserialsocket.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSerialSocketServer()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isListening" fullname="QSerialSocketServer::isListening" href="qserialsocketserver.html#isListening" location="qserialsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isListening() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="port" fullname="QSerialSocketServer::port" href="qserialsocketserver.html#port" location="qserialsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint16" signature="port() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="incoming" fullname="QSerialSocketServer::incoming" href="qserialsocketserver.html#incoming" location="qserialsocket.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="incoming(QSerialSocket * socket)">
                <parameter left="QSerialSocket *" right="" name="socket" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSMSMessagePart" href="qsmsmessagepart.html" location="qsmsmessage.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSMSMessagePart" fullname="QSMSMessagePart::QSMSMessagePart" href="qsmsmessagepart.html#QSMSMessagePart" location="qsmsmessage.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSMSMessagePart()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSMSMessagePart" fullname="QSMSMessagePart::QSMSMessagePart" href="qsmsmessagepart.html#QSMSMessagePart-2" location="qsmsmessage.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QSMSMessagePart(const QString &amp; text)">
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSMSMessagePart" fullname="QSMSMessagePart::QSMSMessagePart" href="qsmsmessagepart.html#QSMSMessagePart-3" location="qsmsmessage.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QSMSMessagePart(const QString &amp; mimeType, const QByteArray &amp; data)">
                <parameter left="const QString &amp;" right="" name="mimeType" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSMSMessagePart" fullname="QSMSMessagePart::QSMSMessagePart" href="qsmsmessagepart.html#QSMSMessagePart-4" location="qsmsmessage.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QSMSMessagePart(const QString &amp; mimeType, const QByteArray &amp; data, uint position)">
                <parameter left="const QString &amp;" right="" name="mimeType" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
                <parameter left="uint" right="" name="position" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSMSMessagePart" fullname="QSMSMessagePart::QSMSMessagePart" href="qsmsmessagepart.html#QSMSMessagePart-5" location="qsmsmessage.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="5" type="" signature="QSMSMessagePart(const QSMSMessagePart &amp; part)">
                <parameter left="const QSMSMessagePart &amp;" right="" name="part" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSMSMessagePart" fullname="QSMSMessagePart::~QSMSMessagePart" href="qsmsmessagepart.html#dtor.QSMSMessagePart" location="qsmsmessage.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSMSMessagePart()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QSMSMessagePart::operator=" href="qsmsmessagepart.html#operator=" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QSMSMessagePart &amp;" signature="operator=(const QSMSMessagePart &amp; part)">
                <parameter left="const QSMSMessagePart &amp;" right="" name="part" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isText" fullname="QSMSMessagePart::isText" href="qsmsmessagepart.html#isText" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isText() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="text" fullname="QSMSMessagePart::text" href="qsmsmessagepart.html#text" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="text() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mimeType" fullname="QSMSMessagePart::mimeType" href="qsmsmessagepart.html#mimeType" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="mimeType() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="data" fullname="QSMSMessagePart::data" href="qsmsmessagepart.html#data" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QByteArray &amp;" signature="data() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="position" fullname="QSMSMessagePart::position" href="qsmsmessagepart.html#position" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="position() const"></function>
        </class>
        <enum access="public" threadsafety="unspecified" status="commendable" name="QSMSDataCodingScheme" href="#QSMSDataCodingScheme-enum" location="qsmsmessage.h">
            <value name="QSMS_Compressed" value="0x0020"></value>
            <value name="QSMS_MessageClass" value="0x0010"></value>
            <value name="QSMS_DefaultAlphabet" value="0x0000"></value>
            <value name="QSMS_8BitAlphabet" value="0x0004"></value>
            <value name="QSMS_UCS2Alphabet" value="0x0008"></value>
            <value name="QSMS_ReservedAlphabet" value="0x000C"></value>
        </enum>
        <class access="public" threadsafety="unspecified" status="main" name="QSMSMessage" href="qsmsmessage.html" location="qsmsmessage.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSMSMessage" fullname="QSMSMessage::QSMSMessage" href="qsmsmessage.html#QSMSMessage" location="qsmsmessage.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSMSMessage()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSMSMessage" fullname="QSMSMessage::QSMSMessage" href="qsmsmessage.html#QSMSMessage-2" location="qsmsmessage.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QSMSMessage(const QSMSMessage &amp; msg)">
                <parameter left="const QSMSMessage &amp;" right="" name="msg" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSMSMessage" fullname="QSMSMessage::~QSMSMessage" href="qsmsmessage.html#dtor.QSMSMessage" location="qsmsmessage.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSMSMessage()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QSMSMessage::operator=" href="qsmsmessage.html#operator=" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QSMSMessage &amp;" signature="operator=(const QSMSMessage &amp; msg)">
                <parameter left="const QSMSMessage &amp;" right="" name="msg" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setText" fullname="QSMSMessage::setText" href="qsmsmessage.html#setText" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setText(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="text" fullname="QSMSMessage::text" href="qsmsmessage.html#text" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="text() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTextCodec" fullname="QSMSMessage::setTextCodec" href="qsmsmessage.html#setTextCodec" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTextCodec(QTextCodec * codec)">
                <parameter left="QTextCodec *" right="" name="codec" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="textCodec" fullname="QSMSMessage::textCodec" href="qsmsmessage.html#textCodec" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QTextCodec *" signature="textCodec() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setForceGsm" fullname="QSMSMessage::setForceGsm" href="qsmsmessage.html#setForceGsm" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setForceGsm(bool force)">
                <parameter left="bool" right="" name="force" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="forceGsm" fullname="QSMSMessage::forceGsm" href="qsmsmessage.html#forceGsm" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="forceGsm() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBestScheme" fullname="QSMSMessage::setBestScheme" href="qsmsmessage.html#setBestScheme" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBestScheme(QSMSDataCodingScheme scheme)">
                <parameter left="QSMSDataCodingScheme" right="" name="scheme" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bestScheme" fullname="QSMSMessage::bestScheme" href="qsmsmessage.html#bestScheme" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSMSDataCodingScheme" signature="bestScheme() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRecipient" fullname="QSMSMessage::setRecipient" href="qsmsmessage.html#setRecipient" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRecipient(const QString &amp; txt)">
                <parameter left="const QString &amp;" right="" name="txt" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="recipient" fullname="QSMSMessage::recipient" href="qsmsmessage.html#recipient" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="recipient() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSender" fullname="QSMSMessage::setSender" href="qsmsmessage.html#setSender" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSender(const QString &amp; txt)">
                <parameter left="const QString &amp;" right="" name="txt" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sender" fullname="QSMSMessage::sender" href="qsmsmessage.html#sender" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="sender() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setServiceCenter" fullname="QSMSMessage::setServiceCenter" href="qsmsmessage.html#setServiceCenter" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setServiceCenter(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serviceCenter" fullname="QSMSMessage::serviceCenter" href="qsmsmessage.html#serviceCenter" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="serviceCenter() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setReplyRequest" fullname="QSMSMessage::setReplyRequest" href="qsmsmessage.html#setReplyRequest" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setReplyRequest(bool on)">
                <parameter left="bool" right="" name="on" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="replyRequest" fullname="QSMSMessage::replyRequest" href="qsmsmessage.html#replyRequest" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="replyRequest() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStatusReportRequested" fullname="QSMSMessage::setStatusReportRequested" href="qsmsmessage.html#setStatusReportRequested" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setStatusReportRequested(bool on)">
                <parameter left="bool" right="" name="on" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="statusReportRequested" fullname="QSMSMessage::statusReportRequested" href="qsmsmessage.html#statusReportRequested" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="statusReportRequested() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setValidityPeriod" fullname="QSMSMessage::setValidityPeriod" href="qsmsmessage.html#setValidityPeriod" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setValidityPeriod(uint minutes)">
                <parameter left="uint" right="" name="minutes" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="validityPeriod" fullname="QSMSMessage::validityPeriod" href="qsmsmessage.html#validityPeriod" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="validityPeriod() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setGsmValidityPeriod" fullname="QSMSMessage::setGsmValidityPeriod" href="qsmsmessage.html#setGsmValidityPeriod" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setGsmValidityPeriod(uint value)">
                <parameter left="uint" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="gsmValidityPeriod" fullname="QSMSMessage::gsmValidityPeriod" href="qsmsmessage.html#gsmValidityPeriod" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="gsmValidityPeriod() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTimestamp" fullname="QSMSMessage::setTimestamp" href="qsmsmessage.html#setTimestamp" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTimestamp(const QDateTime &amp; timestamp)">
                <parameter left="const QDateTime &amp;" right="" name="timestamp" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="timestamp" fullname="QSMSMessage::timestamp" href="qsmsmessage.html#timestamp" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="timestamp() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHeaders" fullname="QSMSMessage::setHeaders" href="qsmsmessage.html#setHeaders" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHeaders(const QByteArray &amp; value)">
                <parameter left="const QByteArray &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="headers" fullname="QSMSMessage::headers" href="qsmsmessage.html#headers" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QByteArray &amp;" signature="headers() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearParts" fullname="QSMSMessage::clearParts" href="qsmsmessage.html#clearParts" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearParts()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addPart" fullname="QSMSMessage::addPart" href="qsmsmessage.html#addPart" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addPart(const QSMSMessagePart &amp; part)">
                <parameter left="const QSMSMessagePart &amp;" right="" name="part" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addParts" fullname="QSMSMessage::addParts" href="qsmsmessage.html#addParts" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addParts(const QList&lt;QSMSMessagePart&gt; &amp; parts)">
                <parameter left="const QList&lt;QSMSMessagePart&gt; &amp;" right="" name="parts" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parts" fullname="QSMSMessage::parts" href="qsmsmessage.html#parts" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QSMSMessagePart&gt;" signature="parts() const"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="MessageType" fullname="QSMSMessage::MessageType" href="qsmsmessage.html#MessageType-enum" location="qsmsmessage.h">
                <value name="Normal" value="0"></value>
                <value name="CellBroadCast" value="1"></value>
                <value name="StatusReport" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="messageType" fullname="QSMSMessage::messageType" href="qsmsmessage.html#messageType" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="MessageType" signature="messageType() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="computeSize" fullname="QSMSMessage::computeSize" href="qsmsmessage.html#computeSize" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="computeSize(uint &amp; numMessages, uint &amp; spaceLeftInLast) const">
                <parameter left="uint &amp;" right="" name="numMessages" default=""></parameter>
                <parameter left="uint &amp;" right="" name="spaceLeftInLast" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="destinationPort" fullname="QSMSMessage::destinationPort" href="qsmsmessage.html#destinationPort" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="destinationPort() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDestinationPort" fullname="QSMSMessage::setDestinationPort" href="qsmsmessage.html#setDestinationPort" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDestinationPort(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sourcePort" fullname="QSMSMessage::sourcePort" href="qsmsmessage.html#sourcePort" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="sourcePort() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSourcePort" fullname="QSMSMessage::setSourcePort" href="qsmsmessage.html#setSourcePort" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSourcePort(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="applicationData" fullname="QSMSMessage::applicationData" href="qsmsmessage.html#applicationData" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="applicationData() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setApplicationData" fullname="QSMSMessage::setApplicationData" href="qsmsmessage.html#setApplicationData" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setApplicationData(const QByteArray &amp; value)">
                <parameter left="const QByteArray &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDataCodingScheme" fullname="QSMSMessage::setDataCodingScheme" href="qsmsmessage.html#setDataCodingScheme" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDataCodingScheme(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dataCodingScheme" fullname="QSMSMessage::dataCodingScheme" href="qsmsmessage.html#dataCodingScheme" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="dataCodingScheme() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMessageClass" fullname="QSMSMessage::setMessageClass" href="qsmsmessage.html#setMessageClass" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMessageClass(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="messageClass" fullname="QSMSMessage::messageClass" href="qsmsmessage.html#messageClass" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="messageClass() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setProtocol" fullname="QSMSMessage::setProtocol" href="qsmsmessage.html#setProtocol" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setProtocol(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="protocol" fullname="QSMSMessage::protocol" href="qsmsmessage.html#protocol" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="protocol() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="shouldSplit" fullname="QSMSMessage::shouldSplit" href="qsmsmessage.html#shouldSplit" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="shouldSplit() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="split" fullname="QSMSMessage::split" href="qsmsmessage.html#split" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QSMSMessage&gt;" signature="split() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toPdu" fullname="QSMSMessage::toPdu" href="qsmsmessage.html#toPdu" location="qsmsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="toPdu() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromPdu" fullname="QSMSMessage::fromPdu" href="qsmsmessage.html#fromPdu" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QSMSMessage" signature="fromPdu(const QByteArray &amp; pdu)">
                <parameter left="const QByteArray &amp;" right="" name="pdu" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pduAddressLength" fullname="QSMSMessage::pduAddressLength" href="qsmsmessage.html#pduAddressLength" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="pduAddressLength(const QByteArray &amp; pdu)">
                <parameter left="const QByteArray &amp;" right="" name="pdu" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setMessageType" fullname="QSMSMessage::setMessageType" href="qsmsmessage.html#setMessageType" location="qsmsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMessageType(MessageType m)">
                <parameter left="MessageType" right="" name="m" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemService" href="qmodemservice.html" location="qmodemservice.h" bases="QTelephonyService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemService" fullname="QModemService::QModemService" href="qmodemservice.html#QModemService" location="qmodemservice.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemService(const QString &amp; service, const QString &amp; device, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="device" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemService" fullname="QModemService::QModemService" href="qmodemservice.html#QModemService-2" location="qmodemservice.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QModemService(const QString &amp; service, QSerialIODeviceMultiplexer * mux, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
                <parameter left="QSerialIODeviceMultiplexer *" right="" name="mux" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemService" fullname="QModemService::~QModemService" href="qmodemservice.html#dtor.QModemService" location="qmodemservice.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemService()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="multiplexer" fullname="QModemService::multiplexer" href="qmodemservice.html#multiplexer" location="qmodemservice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSerialIODeviceMultiplexer *" signature="multiplexer() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="primaryAtChat" fullname="QModemService::primaryAtChat" href="qmodemservice.html#primaryAtChat" location="qmodemservice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAtChat *" signature="primaryAtChat() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="secondaryAtChat" fullname="QModemService::secondaryAtChat" href="qmodemservice.html#secondaryAtChat" location="qmodemservice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAtChat *" signature="secondaryAtChat() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="chat" fullname="QModemService::chat" href="qmodemservice.html#chat" location="qmodemservice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="chat(const QString &amp; command)">
                <parameter left="const QString &amp;" right="" name="command" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="chat" fullname="QModemService::chat" href="qmodemservice.html#chat-2" location="qmodemservice.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="chat(const QString &amp; command, QObject * target, const char * slot, QAtResult::UserData * data)">
                <parameter left="const QString &amp;" right="" name="command" default=""></parameter>
                <parameter left="QObject *" right="" name="target" default=""></parameter>
                <parameter left="const char *" right="" name="slot" default=""></parameter>
                <parameter left="QAtResult::UserData *" right="" name="data" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="retryChat" fullname="QModemService::retryChat" href="qmodemservice.html#retryChat" location="qmodemservice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="retryChat(const QString &amp; command)">
                <parameter left="const QString &amp;" right="" name="command" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="createVendorSpecific" fullname="QModemService::createVendorSpecific" href="qmodemservice.html#createVendorSpecific" location="qmodemservice.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QModemService *" signature="createVendorSpecific(const QString &amp; service, const QString &amp; device, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="service" default="&quot;modem&quot;"></parameter>
                <parameter left="const QString &amp;" right="" name="device" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="post" fullname="QModemService::post" href="qmodemservice.html#post" location="qmodemservice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="post(const QString &amp; item)">
                <parameter left="const QString &amp;" right="" name="item" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectToPost" fullname="QModemService::connectToPost" href="qmodemservice.html#connectToPost" location="qmodemservice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="connectToPost(const QString &amp; item, QObject * target, const char * slot)">
                <parameter left="const QString &amp;" right="" name="item" default=""></parameter>
                <parameter left="QObject *" right="" name="target" default=""></parameter>
                <parameter left="const char *" right="" name="slot" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="indicators" fullname="QModemService::indicators" href="qmodemservice.html#indicators" location="qmodemservice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QModemIndicators *" signature="indicators() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="needSms" fullname="QModemService::needSms" href="qmodemservice.html#needSms" location="qmodemservice.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="needSms()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="suspend" fullname="QModemService::suspend" href="qmodemservice.html#suspend" location="qmodemservice.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="suspend()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="wake" fullname="QModemService::wake" href="qmodemservice.html#wake" location="qmodemservice.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="wake()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="suspendDone" fullname="QModemService::suspendDone" href="qmodemservice.html#suspendDone" location="qmodemservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="suspendDone()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="wakeDone" fullname="QModemService::wakeDone" href="qmodemservice.html#wakeDone" location="qmodemservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="wakeDone()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="posted" fullname="QModemService::posted" href="qmodemservice.html#posted" location="qmodemservice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="posted(const QString &amp; item)">
                <parameter left="const QString &amp;" right="" name="item" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resetModem" fullname="QModemService::resetModem" href="qmodemservice.html#resetModem" location="qmodemservice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="resetModem()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPhoneCall" href="qphonecall.html" location="qphonecall.h" bases="" module="">
            <target name="qphonecall-overview"></target>
            <contents name="outgoing-calls" title="Outgoing calls" level="1"></contents>
            <contents name="incoming-calls" title="Incoming calls" level="2"></contents>
            <contents name="phone-call-providers" title="Phone call providers" level="2"></contents>
            <function access="public" threadsafety="unspecified" status="commendable" name="QPhoneCall" fullname="QPhoneCall::QPhoneCall" href="qphonecall.html#QPhoneCall" location="qphonecall.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPhoneCall()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QPhoneCall" fullname="QPhoneCall::QPhoneCall" href="qphonecall.html#QPhoneCall-3" location="qphonecall.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QPhoneCall(const QPhoneCall &amp; call)">
                <parameter left="const QPhoneCall &amp;" right="" name="call" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPhoneCall" fullname="QPhoneCall::~QPhoneCall" href="qphonecall.html#dtor.QPhoneCall" location="qphonecall.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPhoneCall()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QPhoneCall::State" href="qphonecall.html#State-enum" location="qphonecall.h">
                <value name="Idle" value="0"></value>
                <value name="Incoming" value="1"></value>
                <value name="Dialing" value="2"></value>
                <value name="Alerting" value="3"></value>
                <value name="Connected" value="4"></value>
                <value name="Hold" value="5"></value>
                <value name="HangupLocal" value="6"></value>
                <value name="HangupRemote" value="7"></value>
                <value name="Missed" value="8"></value>
                <value name="NetworkFailure" value="9"></value>
                <value name="OtherFailure" value="10"></value>
                <value name="ServiceHangup" value="11"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Scope" fullname="QPhoneCall::Scope" href="qphonecall.html#Scope-enum" location="qphonecall.h">
                <value name="CallOnly" value="0"></value>
                <value name="Group" value="1"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Request" fullname="QPhoneCall::Request" href="qphonecall.html#Request-enum" location="qphonecall.h">
                <value name="HoldFailed" value="0"></value>
                <value name="JoinFailed" value="1"></value>
                <value name="TransferFailed" value="2"></value>
                <value name="ActivateFailed" value="3"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Notification" fullname="QPhoneCall::Notification" href="qphonecall.html#Notification-enum" location="qphonecall.h">
                <value name="CallingName" value="0"></value>
                <value name="DataStateUpdate" value="1"></value>
                <value name="RemoteHold" value="2"></value>
                <value name="ConnectedLineId" value="3"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="DataState" fullname="QPhoneCall::DataState" href="qphonecall.html#DataState-enum" location="qphonecall.h">
                <value name="PPPdStarted" value="0x0001"></value>
                <value name="PPPdStopped" value="0x0002"></value>
                <value name="PPPdFailed" value="0x0004"></value>
                <value name="DataActive" value="0x0008"></value>
                <value name="DataInactive" value="0x0010"></value>
                <value name="Connecting" value="0x0020"></value>
                <value name="ConnectFailed" value="0x0040"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="parseDataState" fullname="QPhoneCall::parseDataState" href="qphonecall.html#parseDataState" location="qphonecall.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QPhoneCall::DataState" signature="parseDataState(const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QPhoneCall::operator=" href="qphonecall.html#operator=" location="qphonecall.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QPhoneCall &amp;" signature="operator=(const QPhoneCall &amp; call)">
                <parameter left="const QPhoneCall &amp;" right="" name="call" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="identifier" fullname="QPhoneCall::identifier" href="qphonecall.html#identifier" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="identifier() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="modemIdentifier" fullname="QPhoneCall::modemIdentifier" href="qphonecall.html#modemIdentifier" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="modemIdentifier() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fullNumber" fullname="QPhoneCall::fullNumber" href="qphonecall.html#fullNumber" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="fullNumber() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="number" fullname="QPhoneCall::number" href="qphonecall.html#number" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="number() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contact" fullname="QPhoneCall::contact" href="qphonecall.html#contact" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUniqueId" signature="contact() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QPhoneCall::state" href="qphonecall.html#state" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="State" signature="state() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callType" fullname="QPhoneCall::callType" href="qphonecall.html#callType" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="callType() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="startTime" fullname="QPhoneCall::startTime" href="qphonecall.html#startTime" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="startTime() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectTime" fullname="QPhoneCall::connectTime" href="qphonecall.html#connectTime" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="connectTime() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="endTime" fullname="QPhoneCall::endTime" href="qphonecall.html#endTime" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="endTime() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasBeenConnected" fullname="QPhoneCall::hasBeenConnected" href="qphonecall.html#hasBeenConnected" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasBeenConnected() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="idle" fullname="QPhoneCall::idle" href="qphonecall.html#idle" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="idle() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="incoming" fullname="QPhoneCall::incoming" href="qphonecall.html#incoming" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="incoming() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dialing" fullname="QPhoneCall::dialing" href="qphonecall.html#dialing" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="dialing() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="established" fullname="QPhoneCall::established" href="qphonecall.html#established" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="established() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connected" fullname="QPhoneCall::connected" href="qphonecall.html#connected" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="connected() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="onHold" fullname="QPhoneCall::onHold" href="qphonecall.html#onHold" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="onHold() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dropped" fullname="QPhoneCall::dropped" href="qphonecall.html#dropped" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="dropped() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="missed" fullname="QPhoneCall::missed" href="qphonecall.html#missed" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="missed() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dialed" fullname="QPhoneCall::dialed" href="qphonecall.html#dialed" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="dialed() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pendingTones" fullname="QPhoneCall::pendingTones" href="qphonecall.html#pendingTones" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="pendingTones() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dial" fullname="QPhoneCall::dial" href="qphonecall.html#dial" location="qphonecall.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="dial(const QString &amp; number, bool sendcallerid, const QUniqueId &amp; contact)">
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
                <parameter left="bool" right="" name="sendcallerid" default=""></parameter>
                <parameter left="const QUniqueId &amp;" right="" name="contact" default="QUniqueId()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dial" fullname="QPhoneCall::dial" href="qphonecall.html#dial-2" location="qphonecall.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="dial(const QDialOptions &amp; options)">
                <parameter left="const QDialOptions &amp;" right="" name="options" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="accept" fullname="QPhoneCall::accept" href="qphonecall.html#accept" location="qphonecall.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="accept()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hangup" fullname="QPhoneCall::hangup" href="qphonecall.html#hangup" location="qphonecall.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="hangup(QPhoneCall::Scope scope)">
                <parameter left="QPhoneCall::Scope" right="" name="scope" default="Group"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hold" fullname="QPhoneCall::hold" href="qphonecall.html#hold" location="qphonecall.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="hold()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activate" fullname="QPhoneCall::activate" href="qphonecall.html#activate" location="qphonecall.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="activate(QPhoneCall::Scope scope)">
                <parameter left="QPhoneCall::Scope" right="" name="scope" default="Group"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="join" fullname="QPhoneCall::join" href="qphonecall.html#join" location="qphonecall.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="join(bool detachSubscriber)">
                <parameter left="bool" right="" name="detachSubscriber" default="false"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="tone" fullname="QPhoneCall::tone" href="qphonecall.html#tone" location="qphonecall.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="tone(const QString &amp; tones)">
                <parameter left="const QString &amp;" right="" name="tones" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="transfer" fullname="QPhoneCall::transfer" href="qphonecall.html#transfer" location="qphonecall.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="transfer(const QString &amp; number)">
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestFloor" fullname="QPhoneCall::requestFloor" href="qphonecall.html#requestFloor" location="qphonecall.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="requestFloor(int secs)">
                <parameter left="int" right="" name="secs" default="-1"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="releaseFloor" fullname="QPhoneCall::releaseFloor" href="qphonecall.html#releaseFloor" location="qphonecall.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="releaseFloor()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="haveFloor" fullname="QPhoneCall::haveFloor" href="qphonecall.html#haveFloor" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="haveFloor() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="floorAvailable" fullname="QPhoneCall::floorAvailable" href="qphonecall.html#floorAvailable" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="floorAvailable() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="canAccept" fullname="QPhoneCall::canAccept" href="qphonecall.html#canAccept" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="canAccept() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="canHold" fullname="QPhoneCall::canHold" href="qphonecall.html#canHold" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="canHold() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="canActivate" fullname="QPhoneCall::canActivate" href="qphonecall.html#canActivate" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="canActivate(QPhoneCall::Scope scope) const">
                <parameter left="QPhoneCall::Scope" right="" name="scope" default="Group"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="canJoin" fullname="QPhoneCall::canJoin" href="qphonecall.html#canJoin" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="canJoin(bool detachSubscriber) const">
                <parameter left="bool" right="" name="detachSubscriber" default="false"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="canTone" fullname="QPhoneCall::canTone" href="qphonecall.html#canTone" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="canTone() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="canTransfer" fullname="QPhoneCall::canTransfer" href="qphonecall.html#canTransfer" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="canTransfer() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectPendingTonesChanged" fullname="QPhoneCall::connectPendingTonesChanged" href="qphonecall.html#connectPendingTonesChanged" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="connectPendingTonesChanged(QObject * object, const char * slot) const">
                <parameter left="QObject *" right="" name="object" default=""></parameter>
                <parameter left="const char *" right="" name="slot" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectStateChanged" fullname="QPhoneCall::connectStateChanged" href="qphonecall.html#connectStateChanged" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="connectStateChanged(QObject * object, const char * slot) const">
                <parameter left="QObject *" right="" name="object" default=""></parameter>
                <parameter left="const char *" right="" name="slot" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disconnectStateChanged" fullname="QPhoneCall::disconnectStateChanged" href="qphonecall.html#disconnectStateChanged" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="disconnectStateChanged(QObject * object, const char * slot) const">
                <parameter left="QObject *" right="" name="object" default=""></parameter>
                <parameter left="const char *" right="" name="slot" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectRequestFailed" fullname="QPhoneCall::connectRequestFailed" href="qphonecall.html#connectRequestFailed" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="connectRequestFailed(QObject * object, const char * slot) const">
                <parameter left="QObject *" right="" name="object" default=""></parameter>
                <parameter left="const char *" right="" name="slot" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disconnectRequestFailed" fullname="QPhoneCall::disconnectRequestFailed" href="qphonecall.html#disconnectRequestFailed" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="disconnectRequestFailed(QObject * object, const char * slot) const">
                <parameter left="QObject *" right="" name="object" default=""></parameter>
                <parameter left="const char *" right="" name="slot" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectNotification" fullname="QPhoneCall::connectNotification" href="qphonecall.html#connectNotification" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="connectNotification(QObject * object, const char * slot) const">
                <parameter left="QObject *" right="" name="object" default=""></parameter>
                <parameter left="const char *" right="" name="slot" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disconnectNotification" fullname="QPhoneCall::disconnectNotification" href="qphonecall.html#disconnectNotification" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="disconnectNotification(QObject * object, const char * slot) const">
                <parameter left="QObject *" right="" name="object" default=""></parameter>
                <parameter left="const char *" right="" name="slot" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectFloorChanged" fullname="QPhoneCall::connectFloorChanged" href="qphonecall.html#connectFloorChanged" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="connectFloorChanged(QObject * object, const char * slot) const">
                <parameter left="QObject *" right="" name="object" default=""></parameter>
                <parameter left="const char *" right="" name="slot" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disconnectFloorChanged" fullname="QPhoneCall::disconnectFloorChanged" href="qphonecall.html#disconnectFloorChanged" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="disconnectFloorChanged(QObject * object, const char * slot) const">
                <parameter left="QObject *" right="" name="object" default=""></parameter>
                <parameter left="const char *" right="" name="slot" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="device" fullname="QPhoneCall::device" href="qphonecall.html#device" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QIODevice *" signature="device() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QPhoneCall::isNull" href="qphonecall.html#isNull" location="qphonecall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothAbstractSocket" href="qbluetoothabstractsocket.html" location="qbluetoothabstractsocket.h" bases="QIODevice" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="SocketState" fullname="QBluetoothAbstractSocket::SocketState" href="qbluetoothabstractsocket.html#SocketState-enum" location="qbluetoothabstractsocket.h">
                <value name="UnconnectedState" value="0"></value>
                <value name="ConnectingState" value="1"></value>
                <value name="ConnectedState" value="2"></value>
                <value name="BoundState" value="3"></value>
                <value name="ClosingState" value="4"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SocketError" fullname="QBluetoothAbstractSocket::SocketError" href="qbluetoothabstractsocket.html#SocketError-enum" location="qbluetoothabstractsocket.h">
                <value name="NoError" value="0"></value>
                <value name="AccessError" value="1"></value>
                <value name="ResourceError" value="2"></value>
                <value name="BindError" value="3"></value>
                <value name="ConnectionRefused" value="4"></value>
                <value name="HostDownError" value="5"></value>
                <value name="NetworkError" value="6"></value>
                <value name="TimeoutError" value="7"></value>
                <value name="RemoteHostClosedError" value="8"></value>
                <value name="BusyError" value="9"></value>
                <value name="HostUnreachableError" value="10"></value>
                <value name="UnsupportedOperationError" value="11"></value>
                <value name="AddressInUseError" value="12"></value>
                <value name="AddressNotAvailableError" value="13"></value>
                <value name="UnknownError" value="14"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothAbstractSocket" fullname="QBluetoothAbstractSocket::~QBluetoothAbstractSocket" href="qbluetoothabstractsocket.html#dtor.QBluetoothAbstractSocket" location="qbluetoothabstractsocket.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothAbstractSocket()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="abort" fullname="QBluetoothAbstractSocket::abort" href="qbluetoothabstractsocket.html#abort" location="qbluetoothabstractsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="abort()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disconnect" fullname="QBluetoothAbstractSocket::disconnect" href="qbluetoothabstractsocket.html#disconnect" location="qbluetoothabstractsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="disconnect()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="socketDescriptor" fullname="QBluetoothAbstractSocket::socketDescriptor" href="qbluetoothabstractsocket.html#socketDescriptor" location="qbluetoothabstractsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="socketDescriptor() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSocketDescriptor" fullname="QBluetoothAbstractSocket::setSocketDescriptor" href="qbluetoothabstractsocket.html#setSocketDescriptor" location="qbluetoothabstractsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setSocketDescriptor(int socketDescriptor, QBluetoothAbstractSocket::SocketState state, QIODevice::OpenMode openMode)">
                <parameter left="int" right="" name="socketDescriptor" default=""></parameter>
                <parameter left="QBluetoothAbstractSocket::SocketState" right="" name="state" default=""></parameter>
                <parameter left="QIODevice::OpenMode" right="" name="openMode" default="QIODevice::ReadWrite"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QBluetoothAbstractSocket::error" href="qbluetoothabstractsocket.html#error" location="qbluetoothabstractsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="SocketError" signature="error() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QBluetoothAbstractSocket::state" href="qbluetoothabstractsocket.html#state" location="qbluetoothabstractsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="SocketState" signature="state() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readBufferSize" fullname="QBluetoothAbstractSocket::readBufferSize" href="qbluetoothabstractsocket.html#readBufferSize" location="qbluetoothabstractsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="readBufferSize() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setReadBufferSize" fullname="QBluetoothAbstractSocket::setReadBufferSize" href="qbluetoothabstractsocket.html#setReadBufferSize" location="qbluetoothabstractsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setReadBufferSize(qint64 size)">
                <parameter left="qint64" right="" name="size" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForConnected" fullname="QBluetoothAbstractSocket::waitForConnected" href="qbluetoothabstractsocket.html#waitForConnected" location="qbluetoothabstractsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForConnected(int msecs)">
                <parameter left="int" right="" name="msecs" default="30000"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForDisconnected" fullname="QBluetoothAbstractSocket::waitForDisconnected" href="qbluetoothabstractsocket.html#waitForDisconnected" location="qbluetoothabstractsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForDisconnected(int msecs)">
                <parameter left="int" right="" name="msecs" default="30000"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="close" fullname="QBluetoothAbstractSocket::close" href="qbluetoothabstractsocket.html#close" location="qbluetoothabstractsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="close()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="flush" fullname="QBluetoothAbstractSocket::flush" href="qbluetoothabstractsocket.html#flush" location="qbluetoothabstractsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="flush()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bytesAvailable" fullname="QBluetoothAbstractSocket::bytesAvailable" href="qbluetoothabstractsocket.html#bytesAvailable" location="qbluetoothabstractsocket.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="qint64" signature="bytesAvailable() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bytesToWrite" fullname="QBluetoothAbstractSocket::bytesToWrite" href="qbluetoothabstractsocket.html#bytesToWrite" location="qbluetoothabstractsocket.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="qint64" signature="bytesToWrite() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="canReadLine" fullname="QBluetoothAbstractSocket::canReadLine" href="qbluetoothabstractsocket.html#canReadLine" location="qbluetoothabstractsocket.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="canReadLine() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connected" fullname="QBluetoothAbstractSocket::connected" href="qbluetoothabstractsocket.html#connected" location="qbluetoothabstractsocket.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="connected()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QBluetoothAbstractSocket::stateChanged" href="qbluetoothabstractsocket.html#stateChanged" location="qbluetoothabstractsocket.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QBluetoothAbstractSocket::SocketState socketState)">
                <parameter left="QBluetoothAbstractSocket::SocketState" right="" name="socketState" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QBluetoothAbstractSocket::error" href="qbluetoothabstractsocket.html#error-2" location="qbluetoothabstractsocket.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="error(QBluetoothAbstractSocket::SocketError socketError)">
                <parameter left="QBluetoothAbstractSocket::SocketError" right="" name="socketError" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disconnected" fullname="QBluetoothAbstractSocket::disconnected" href="qbluetoothabstractsocket.html#disconnected" location="qbluetoothabstractsocket.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="disconnected()"></function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="m_data" fullname="QBluetoothAbstractSocket::m_data" href="qbluetoothabstractsocket.html#m_data-var" location="qbluetoothabstractsocket.h" type="QBluetoothAbstractSocketPrivate *" static="false"></variable>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaNetwork" href="qtopianetwork.html" location="qtopianetwork.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="TypeFlag" fullname="QtopiaNetwork::TypeFlag" href="qtopianetwork.html#TypeFlag-enum" location="qtopianetwork.h" typedef="QtopiaNetwork::Type">
                <value name="LAN" value="0x00000001"></value>
                <value name="WirelessLAN" value="0x00000002"></value>
                <value name="Dialup" value="0x00000004"></value>
                <value name="GPRS" value="0x00000008"></value>
                <value name="PhoneModem" value="0x00000010"></value>
                <value name="NamedModem" value="0x00000020"></value>
                <value name="PCMCIA" value="0x00000040"></value>
                <value name="Bluetooth" value="0x00001000"></value>
                <value name="BluetoothDUN" value="0X00002000"></value>
                <value name="BluetoothPAN" value="0x00004000"></value>
                <value name="Custom" value="0x20000000"></value>
                <value name="Hidden" value="0x10000000"></value>
                <value name="Any" value="0x00000000"></value>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="QtopiaNetwork::Type" href="qtopianetwork.html#Type-typedef" location="qtopianetwork.h" enum="QtopiaNetwork::TypeFlag"></typedef>
            <function access="public" threadsafety="unspecified" status="commendable" name="online" fullname="QtopiaNetwork::online" href="qtopianetwork.html#online" location="qtopianetwork.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="online()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="startInterface" fullname="QtopiaNetwork::startInterface" href="qtopianetwork.html#startInterface" location="qtopianetwork.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="startInterface(const QString &amp; handle, const QVariant &amp; options)">
                <parameter left="const QString &amp;" right="" name="handle" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="options" default="QVariant()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stopInterface" fullname="QtopiaNetwork::stopInterface" href="qtopianetwork.html#stopInterface" location="qtopianetwork.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="stopInterface(const QString &amp; handle, bool deleteIface)">
                <parameter left="const QString &amp;" right="" name="handle" default=""></parameter>
                <parameter left="bool" right="" name="deleteIface" default="false"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultGateway" fullname="QtopiaNetwork::setDefaultGateway" href="qtopianetwork.html#setDefaultGateway" location="qtopianetwork.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setDefaultGateway(const QString &amp; handle)">
                <parameter left="const QString &amp;" right="" name="handle" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unsetDefaultGateway" fullname="QtopiaNetwork::unsetDefaultGateway" href="qtopianetwork.html#unsetDefaultGateway" location="qtopianetwork.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="unsetDefaultGateway(const QString &amp; handle)">
                <parameter left="const QString &amp;" right="" name="handle" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="shutdown" fullname="QtopiaNetwork::shutdown" href="qtopianetwork.html#shutdown" location="qtopianetwork.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="shutdown()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="settingsDir" fullname="QtopiaNetwork::settingsDir" href="qtopianetwork.html#settingsDir" location="qtopianetwork.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="settingsDir()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableNetworkConfigs" fullname="QtopiaNetwork::availableNetworkConfigs" href="qtopianetwork.html#availableNetworkConfigs" location="qtopianetwork.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStringList" signature="availableNetworkConfigs(QFlags&lt;QtopiaNetwork::TypeFlag&gt; type, const QString &amp; path)">
                <parameter left="QFlags&lt;QtopiaNetwork::TypeFlag&gt;" right="" name="type" default="QtopiaNetwork::Any"></parameter>
                <parameter left="const QString &amp;" right="" name="path" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="loadPlugin" fullname="QtopiaNetwork::loadPlugin" href="qtopianetwork.html#loadPlugin" location="qtopianetwork.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QPointer&lt;QtopiaNetworkInterface&gt;" signature="loadPlugin(const QString &amp; handle)">
                <parameter left="const QString &amp;" right="" name="handle" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAudioStateManager" href="qaudiostatemanager.html" location="qaudiostatemanager.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioStateManager" fullname="QAudioStateManager::QAudioStateManager" href="qaudiostatemanager.html#QAudioStateManager" location="qaudiostatemanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAudioStateManager(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAudioStateManager" fullname="QAudioStateManager::~QAudioStateManager" href="qaudiostatemanager.html#dtor.QAudioStateManager" location="qaudiostatemanager.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAudioStateManager()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setState" fullname="QAudioStateManager::setState" href="qaudiostatemanager.html#setState" location="qaudiostatemanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setState(const QAudioStateInfo &amp; state, QAudio::AudioCapability capability)">
                <parameter left="const QAudioStateInfo &amp;" right="" name="state" default=""></parameter>
                <parameter left="QAudio::AudioCapability" right="" name="capability" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setProfile" fullname="QAudioStateManager::setProfile" href="qaudiostatemanager.html#setProfile" location="qaudiostatemanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setProfile(const QByteArray &amp; profile)">
                <parameter left="const QByteArray &amp;" right="" name="profile" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDomain" fullname="QAudioStateManager::setDomain" href="qaudiostatemanager.html#setDomain" location="qaudiostatemanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setDomain(const QByteArray &amp; domain, QAudio::AudioCapability capability)">
                <parameter left="const QByteArray &amp;" right="" name="domain" default=""></parameter>
                <parameter left="QAudio::AudioCapability" right="" name="capability" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="ApplicationShutdownTask" href="applicationshutdowntask.html" location="applicationshutdowntask.h" bases="SystemShutdownHandler" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ApplicationShutdownTask" fullname="ApplicationShutdownTask::ApplicationShutdownTask" href="applicationshutdowntask.html#ApplicationShutdownTask" location="applicationshutdowntask.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ApplicationShutdownTask()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPimSourceModel" href="qpimsourcemodel.html" location="qpimsourcemodel.h" bases="QAbstractListModel" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QPimSourceModel" fullname="QPimSourceModel::QPimSourceModel" href="qpimsourcemodel.html#QPimSourceModel" location="qpimsourcemodel.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPimSourceModel(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPimSourceModel" fullname="QPimSourceModel::~QPimSourceModel" href="qpimsourcemodel.html#dtor.QPimSourceModel" location="qpimsourcemodel.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPimSourceModel()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContexts" fullname="QPimSourceModel::setContexts" href="qpimsourcemodel.html#setContexts" location="qpimsourcemodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setContexts(const QList&lt;QPimContext *&gt; &amp; contexts)">
                <parameter left="const QList&lt;QPimContext *&gt; &amp;" right="" name="contexts" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContexts" fullname="QPimSourceModel::setContexts" href="qpimsourcemodel.html#setContexts-2" location="qpimsourcemodel.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setContexts(const QList&lt;QContactContext *&gt; &amp; contexts)">
                <parameter left="const QList&lt;QContactContext *&gt; &amp;" right="" name="contexts" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContexts" fullname="QPimSourceModel::setContexts" href="qpimsourcemodel.html#setContexts-3" location="qpimsourcemodel.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="void" signature="setContexts(const QList&lt;QAppointmentContext *&gt; &amp; contexts)">
                <parameter left="const QList&lt;QAppointmentContext *&gt; &amp;" right="" name="contexts" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContexts" fullname="QPimSourceModel::setContexts" href="qpimsourcemodel.html#setContexts-4" location="qpimsourcemodel.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="4" type="void" signature="setContexts(const QList&lt;QTaskContext *&gt; &amp; contexts)">
                <parameter left="const QList&lt;QTaskContext *&gt; &amp;" right="" name="contexts" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCheckedSources" fullname="QPimSourceModel::setCheckedSources" href="qpimsourcemodel.html#setCheckedSources" location="qpimsourcemodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCheckedSources(const QSet&lt;QPimSource&gt; &amp; set)">
                <parameter left="const QSet&lt;QPimSource&gt; &amp;" right="" name="set" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="checkedSources" fullname="QPimSourceModel::checkedSources" href="qpimsourcemodel.html#checkedSources" location="qpimsourcemodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSet&lt;QPimSource&gt;" signature="checkedSources() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="source" fullname="QPimSourceModel::source" href="qpimsourcemodel.html#source" location="qpimsourcemodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPimSource" signature="source(const QModelIndex &amp; index) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="context" fullname="QPimSourceModel::context" href="qpimsourcemodel.html#context" location="qpimsourcemodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPimContext *" signature="context(const QModelIndex &amp; index) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="index" fullname="QPimSourceModel::index" href="qpimsourcemodel.html#index" location="qpimsourcemodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QModelIndex" signature="index(const QPimSource &amp; source) const">
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rowCount" fullname="QPimSourceModel::rowCount" href="qpimsourcemodel.html#rowCount" location="qpimsourcemodel.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="int" signature="rowCount(const QModelIndex &amp; parent) const">
                <parameter left="const QModelIndex &amp;" right="" name="parent" default="QModelIndex()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="data" fullname="QPimSourceModel::data" href="qpimsourcemodel.html#data" location="qpimsourcemodel.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="data(const QModelIndex &amp; index, int role) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
                <parameter left="int" right="" name="role" default="Qt::DisplayRole"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setData" fullname="QPimSourceModel::setData" href="qpimsourcemodel.html#setData" location="qpimsourcemodel.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="setData(const QModelIndex &amp; index, const QVariant &amp; value, int role)">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
                <parameter left="int" right="" name="role" default="Qt::EditRole"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="flags" fullname="QPimSourceModel::flags" href="qpimsourcemodel.html#flags" location="qpimsourcemodel.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="Qt::ItemFlags" signature="flags(const QModelIndex &amp; index) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addSource" fullname="QPimSourceModel::addSource" href="qpimsourcemodel.html#addSource" location="qpimsourcemodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addSource(const QPimSource &amp; source)">
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeSource" fullname="QPimSourceModel::removeSource" href="qpimsourcemodel.html#removeSource" location="qpimsourcemodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeSource(const QPimSource &amp; source)">
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateSource" fullname="QPimSourceModel::updateSource" href="qpimsourcemodel.html#updateSource" location="qpimsourcemodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="updateSource(const QModelIndex &amp; index, const QPimSource &amp; source)">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QTaskModel" href="qtaskmodel.html" location="qtaskmodel.h" bases="QPimModel" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Field" fullname="QTaskModel::Field" href="qtaskmodel.html#Field-enum" location="qtaskmodel.h">
                <value name="Invalid" value="-1"></value>
                <value name="Description" value="0"></value>
                <value name="Priority" value="1"></value>
                <value name="Completed" value="2"></value>
                <value name="PercentCompleted" value="3"></value>
                <value name="Status" value="4"></value>
                <value name="DueDate" value="5"></value>
                <value name="StartedDate" value="6"></value>
                <value name="CompletedDate" value="7"></value>
                <value name="Notes" value="8"></value>
                <value name="Identifier" value="9"></value>
                <value name="Categories" value="10"></value>
                <value name="Alarm" value="11"></value>
                <value name="RepeatRule" value="12"></value>
                <value name="RepeatEndDate" value="13"></value>
                <value name="RepeatFrequency" value="14"></value>
                <value name="RepeatWeekFlags" value="15"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QTaskModel" fullname="QTaskModel::QTaskModel" href="qtaskmodel.html#QTaskModel" location="qtaskmodel.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QTaskModel(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QTaskModel" fullname="QTaskModel::~QTaskModel" href="qtaskmodel.html#dtor.QTaskModel" location="qtaskmodel.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QTaskModel()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fieldLabel" fullname="QTaskModel::fieldLabel" href="qtaskmodel.html#fieldLabel" location="qtaskmodel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="fieldLabel(Field field)">
                <parameter left="Field" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fieldIcon" fullname="QTaskModel::fieldIcon" href="qtaskmodel.html#fieldIcon" location="qtaskmodel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QIcon" signature="fieldIcon(Field field)">
                <parameter left="Field" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fieldIdentifier" fullname="QTaskModel::fieldIdentifier" href="qtaskmodel.html#fieldIdentifier" location="qtaskmodel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="fieldIdentifier(Field field)">
                <parameter left="Field" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="identifierField" fullname="QTaskModel::identifierField" href="qtaskmodel.html#identifierField" location="qtaskmodel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="Field" signature="identifierField(const QString &amp; identifier)">
                <parameter left="const QString &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sort" fullname="QTaskModel::sort" href="qtaskmodel.html#sort" location="qtaskmodel.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="sort(int column, Qt::SortOrder order)">
                <parameter left="int" right="" name="column" default=""></parameter>
                <parameter left="Qt::SortOrder" right="" name="order" default="Qt::AscendingOrder"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="data" fullname="QTaskModel::data" href="qtaskmodel.html#data" location="qtaskmodel.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="data(const QModelIndex &amp; index, int role) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
                <parameter left="int" right="" name="role" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setData" fullname="QTaskModel::setData" href="qtaskmodel.html#setData" location="qtaskmodel.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="setData(const QModelIndex &amp; index, const QVariant &amp; value, int role)">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
                <parameter left="int" right="" name="role" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="task" fullname="QTaskModel::task" href="qtaskmodel.html#task" location="qtaskmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QTask" signature="task(const QModelIndex &amp; index) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="task" fullname="QTaskModel::task" href="qtaskmodel.html#task-2" location="qtaskmodel.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QTask" signature="task(const QUniqueId &amp; identifier) const">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="task" fullname="QTaskModel::task" href="qtaskmodel.html#task-3" location="qtaskmodel.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="3" type="QTask" signature="task(int row) const">
                <parameter left="int" right="" name="row" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="taskField" fullname="QTaskModel::taskField" href="qtaskmodel.html#taskField" location="qtaskmodel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QVariant" signature="taskField(const QTask &amp; task, QTaskModel::Field field)">
                <parameter left="const QTask &amp;" right="" name="task" default=""></parameter>
                <parameter left="QTaskModel::Field" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTaskField" fullname="QTaskModel::setTaskField" href="qtaskmodel.html#setTaskField" location="qtaskmodel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="setTaskField(QTask &amp; task, QTaskModel::Field field, const QVariant &amp; value)">
                <parameter left="QTask &amp;" right="" name="task" default=""></parameter>
                <parameter left="QTaskModel::Field" right="" name="field" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateTask" fullname="QTaskModel::updateTask" href="qtaskmodel.html#updateTask" location="qtaskmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="updateTask(const QTask &amp; task)">
                <parameter left="const QTask &amp;" right="" name="task" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeTask" fullname="QTaskModel::removeTask" href="qtaskmodel.html#removeTask" location="qtaskmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeTask(const QTask &amp; task)">
                <parameter left="const QTask &amp;" right="" name="task" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeTask" fullname="QTaskModel::removeTask" href="qtaskmodel.html#removeTask-2" location="qtaskmodel.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="removeTask(const QUniqueId &amp; identifier)">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addTask" fullname="QTaskModel::addTask" href="qtaskmodel.html#addTask" location="qtaskmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QUniqueId" signature="addTask(const QTask &amp; task, const QPimSource &amp; source)">
                <parameter left="const QTask &amp;" right="" name="task" default=""></parameter>
                <parameter left="const QPimSource &amp;" right="" name="source" default="QPimSource()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeList" fullname="QTaskModel::removeList" href="qtaskmodel.html#removeList" location="qtaskmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeList(const QList&lt;QUniqueId&gt; &amp; identifiers)">
                <parameter left="const QList&lt;QUniqueId&gt; &amp;" right="" name="identifiers" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addRecord" fullname="QTaskModel::addRecord" href="qtaskmodel.html#addRecord" location="qtaskmodel.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QUniqueId" signature="addRecord(const QByteArray &amp; bytes, const QPimSource &amp; source, const QString &amp; format)">
                <parameter left="const QByteArray &amp;" right="" name="bytes" default=""></parameter>
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="format" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateRecord" fullname="QTaskModel::updateRecord" href="qtaskmodel.html#updateRecord" location="qtaskmodel.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="updateRecord(const QUniqueId &amp; id, const QByteArray &amp; bytes, const QString &amp; format)">
                <parameter left="const QUniqueId &amp;" right="" name="id" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="bytes" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="format" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="record" fullname="QTaskModel::record" href="qtaskmodel.html#record" location="qtaskmodel.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="record(const QUniqueId &amp; identifier, const QString &amp; format) const">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="format" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeRecord" fullname="QTaskModel::removeRecord" href="qtaskmodel.html#removeRecord" location="qtaskmodel.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeRecord(const QUniqueId &amp; identifier)">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilterCompleted" fullname="QTaskModel::setFilterCompleted" href="qtaskmodel.html#setFilterCompleted" location="qtaskmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilterCompleted(bool completedOnly)">
                <parameter left="bool" right="" name="completedOnly" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filterCompleted" fullname="QTaskModel::filterCompleted" href="qtaskmodel.html#filterCompleted" location="qtaskmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="filterCompleted() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateRecurringTasks" fullname="QTaskModel::updateRecurringTasks" href="qtaskmodel.html#updateRecurringTasks" location="qtaskmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="updateRecurringTasks()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="match" fullname="QTaskModel::match" href="qtaskmodel.html#match" location="qtaskmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QModelIndexList" signature="match(const QModelIndex &amp; start, int role, const QVariant &amp; value, int hits, Qt::MatchFlags flags) const">
                <parameter left="const QModelIndex &amp;" right="" name="start" default=""></parameter>
                <parameter left="int" right="" name="role" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
                <parameter left="int" right="" name="hits" default="1"></parameter>
                <parameter left="Qt::MatchFlags" right="" name="flags" default="Qt::MatchFlags( Qt::MatchStartsWith | Qt::MatchWrap )"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QBluetoothSerialPortService" href="qbluetoothserialportservice.html" location="bluetoothserialportservice.h" bases="QBluetoothAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothSerialPortService" fullname="QBluetoothSerialPortService::QBluetoothSerialPortService" href="qbluetoothserialportservice.html#QBluetoothSerialPortService" location="bluetoothserialportservice.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothSerialPortService(const QString &amp; serviceID, const QString &amp; serviceName, const QBluetoothSdpRecord &amp; record, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="serviceID" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="serviceName" default=""></parameter>
                <parameter left="const QBluetoothSdpRecord &amp;" right="" name="record" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothSerialPortService" fullname="QBluetoothSerialPortService::~QBluetoothSerialPortService" href="qbluetoothserialportservice.html#dtor.QBluetoothSerialPortService" location="bluetoothserialportservice.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothSerialPortService()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAbstractServerInterface" href="qabstractserverinterface.html" location="qabstractserverinterface.h" bases="QWidget" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAbstractServerInterface" fullname="QAbstractServerInterface::QAbstractServerInterface" href="qabstractserverinterface.html#QAbstractServerInterface" location="qabstractserverinterface.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAbstractServerInterface(QWidget * parent, Qt::WFlags flags)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
                <parameter left="Qt::WFlags" right="" name="flags" default="0"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSerialPort" href="qserialport.html" location="qserialport.h" bases="QSerialIODevice" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSerialPort" fullname="QSerialPort::QSerialPort" href="qserialport.html#QSerialPort" location="qserialport.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSerialPort(const QString &amp; device, int rate, bool trackStatus)">
                <parameter left="const QString &amp;" right="" name="device" default=""></parameter>
                <parameter left="int" right="" name="rate" default="38400"></parameter>
                <parameter left="bool" right="" name="trackStatus" default="false"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSerialPort" fullname="QSerialPort::~QSerialPort" href="qserialport.html#dtor.QSerialPort" location="qserialport.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSerialPort()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fd" fullname="QSerialPort::fd" href="qserialport.html#fd" location="qserialport.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="fd() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="open" fullname="QSerialPort::open" href="qserialport.html#open" location="qserialport.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="open(OpenMode mode)">
                <parameter left="OpenMode" right="" name="mode" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="close" fullname="QSerialPort::close" href="qserialport.html#close" location="qserialport.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="close()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="flush" fullname="QSerialPort::flush" href="qserialport.html#flush" location="qserialport.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="flush()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="flowControl" fullname="QSerialPort::flowControl" href="qserialport.html#flowControl" location="qserialport.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="flowControl() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFlowControl" fullname="QSerialPort::setFlowControl" href="qserialport.html#setFlowControl" location="qserialport.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFlowControl(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="keepOpen" fullname="QSerialPort::keepOpen" href="qserialport.html#keepOpen" location="qserialport.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="keepOpen() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setKeepOpen" fullname="QSerialPort::setKeepOpen" href="qserialport.html#setKeepOpen" location="qserialport.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setKeepOpen(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="create" fullname="QSerialPort::create" href="qserialport.html#create" location="qserialport.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QSerialPort *" signature="create(const QString &amp; name, int defaultRate, bool flowControl)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="int" right="" name="defaultRate" default="115200"></parameter>
                <parameter left="bool" right="" name="flowControl" default="false"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemAdviceOfCharge" href="qmodemadviceofcharge.html" location="qmodemadviceofcharge.h" bases="QAdviceOfCharge" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemAdviceOfCharge" fullname="QModemAdviceOfCharge::QModemAdviceOfCharge" href="qmodemadviceofcharge.html#QModemAdviceOfCharge" location="qmodemadviceofcharge.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemAdviceOfCharge(QModemService * service)">
                <parameter left="QModemService *" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemAdviceOfCharge" fullname="QModemAdviceOfCharge::~QModemAdviceOfCharge" href="qmodemadviceofcharge.html#dtor.QModemAdviceOfCharge" location="qmodemadviceofcharge.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemAdviceOfCharge()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="ClockService" href="clockservice.html" location="clockmain.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="showClock" fullname="ClockService::showClock" href="clockservice.html#showClock" location="clockmain.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="showClock()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="AlarmService" href="alarmservice.html" location="clockmain.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="editAlarm" fullname="AlarmService::editAlarm" href="alarmservice.html#editAlarm" location="clockmain.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="editAlarm()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDailyEnabled" fullname="AlarmService::setDailyEnabled" href="alarmservice.html#setDailyEnabled" location="clockmain.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setDailyEnabled(int flag)">
                <parameter left="int" right="" name="flag" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothAbstractServer" href="qbluetoothabstractserver.html" location="qbluetoothabstractserver.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothAbstractServer" fullname="QBluetoothAbstractServer::~QBluetoothAbstractServer" href="qbluetoothabstractserver.html#dtor.QBluetoothAbstractServer" location="qbluetoothabstractserver.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothAbstractServer()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="close" fullname="QBluetoothAbstractServer::close" href="qbluetoothabstractserver.html#close" location="qbluetoothabstractserver.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="close()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isListening" fullname="QBluetoothAbstractServer::isListening" href="qbluetoothabstractserver.html#isListening" location="qbluetoothabstractserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isListening() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serverError" fullname="QBluetoothAbstractServer::serverError" href="qbluetoothabstractserver.html#serverError" location="qbluetoothabstractserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothAbstractSocket::SocketError" signature="serverError() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QBluetoothAbstractServer::errorString" href="qbluetoothabstractserver.html#errorString" location="qbluetoothabstractserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="maxPendingConnections" fullname="QBluetoothAbstractServer::maxPendingConnections" href="qbluetoothabstractserver.html#maxPendingConnections" location="qbluetoothabstractserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="maxPendingConnections() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMaxPendingConnections" fullname="QBluetoothAbstractServer::setMaxPendingConnections" href="qbluetoothabstractserver.html#setMaxPendingConnections" location="qbluetoothabstractserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMaxPendingConnections(int numConnections)">
                <parameter left="int" right="" name="numConnections" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForNewConnection" fullname="QBluetoothAbstractServer::waitForNewConnection" href="qbluetoothabstractserver.html#waitForNewConnection" location="qbluetoothabstractserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForNewConnection(int msecs, bool * timedOut)">
                <parameter left="int" right="" name="msecs" default="0"></parameter>
                <parameter left="bool *" right="" name="timedOut" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasPendingConnections" fullname="QBluetoothAbstractServer::hasPendingConnections" href="qbluetoothabstractserver.html#hasPendingConnections" location="qbluetoothabstractserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasPendingConnections() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="nextPendingConnection" fullname="QBluetoothAbstractServer::nextPendingConnection" href="qbluetoothabstractserver.html#nextPendingConnection" location="qbluetoothabstractserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QBluetoothAbstractSocket *" signature="nextPendingConnection()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="socketDescriptor" fullname="QBluetoothAbstractServer::socketDescriptor" href="qbluetoothabstractserver.html#socketDescriptor" location="qbluetoothabstractserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="socketDescriptor() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="newConnection" fullname="QBluetoothAbstractServer::newConnection" href="qbluetoothabstractserver.html#newConnection" location="qbluetoothabstractserver.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="newConnection()"></function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="m_data" fullname="QBluetoothAbstractServer::m_data" href="qbluetoothabstractserver.html#m_data-var" location="qbluetoothabstractserver.h" type="QBluetoothAbstractServerPrivate *" static="false"></variable>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAbstractCommDeviceManager" href="qabstractcommdevicemanager.html" location="qabstractdevicemanager.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAbstractCommDeviceManager" fullname="QAbstractCommDeviceManager::QAbstractCommDeviceManager" href="qabstractcommdevicemanager.html#QAbstractCommDeviceManager" location="qabstractdevicemanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAbstractCommDeviceManager(const QByteArray &amp; path, const QByteArray &amp; devId, QObject * parent)">
                <parameter left="const QByteArray &amp;" right="" name="path" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="devId" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAbstractCommDeviceManager" fullname="QAbstractCommDeviceManager::~QAbstractCommDeviceManager" href="qabstractcommdevicemanager.html#dtor.QAbstractCommDeviceManager" location="qabstractdevicemanager.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAbstractCommDeviceManager()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QAbstractCommDeviceManager::start" href="qabstractcommdevicemanager.html#start" location="qabstractdevicemanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="start()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isStarted" fullname="QAbstractCommDeviceManager::isStarted" href="qabstractcommdevicemanager.html#isStarted" location="qabstractdevicemanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isStarted() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QAbstractCommDeviceManager::stop" href="qabstractcommdevicemanager.html#stop" location="qabstractdevicemanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="stop()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serverPath" fullname="QAbstractCommDeviceManager::serverPath" href="qabstractcommdevicemanager.html#serverPath" location="qabstractdevicemanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QByteArray &amp;" signature="serverPath() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceId" fullname="QAbstractCommDeviceManager::deviceId" href="qabstractcommdevicemanager.html#deviceId" location="qabstractdevicemanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QByteArray &amp;" signature="deviceId() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sessionsActive" fullname="QAbstractCommDeviceManager::sessionsActive" href="qabstractcommdevicemanager.html#sessionsActive" location="qabstractdevicemanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="sessionsActive() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="bringUp" fullname="QAbstractCommDeviceManager::bringUp" href="qabstractcommdevicemanager.html#bringUp" location="qabstractdevicemanager.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="bringUp()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="bringDown" fullname="QAbstractCommDeviceManager::bringDown" href="qabstractcommdevicemanager.html#bringDown" location="qabstractdevicemanager.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="bringDown()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="isUp" fullname="QAbstractCommDeviceManager::isUp" href="qabstractcommdevicemanager.html#isUp" location="qabstractdevicemanager.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isUp() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="shouldStartSession" fullname="QAbstractCommDeviceManager::shouldStartSession" href="qabstractcommdevicemanager.html#shouldStartSession" location="qabstractdevicemanager.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="shouldStartSession(QUnixSocket * socket) const">
                <parameter left="QUnixSocket *" right="" name="socket" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="shouldBringDown" fullname="QAbstractCommDeviceManager::shouldBringDown" href="qabstractcommdevicemanager.html#shouldBringDown" location="qabstractdevicemanager.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="shouldBringDown(QUnixSocket * socket) const">
                <parameter left="QUnixSocket *" right="" name="socket" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="upStatus" fullname="QAbstractCommDeviceManager::upStatus" href="qabstractcommdevicemanager.html#upStatus" location="qabstractdevicemanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="upStatus(bool error, const QString &amp; msg)">
                <parameter left="bool" right="" name="error" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="msg" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="downStatus" fullname="QAbstractCommDeviceManager::downStatus" href="qabstractcommdevicemanager.html#downStatus" location="qabstractdevicemanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="downStatus(bool error, const QString &amp; msg)">
                <parameter left="bool" right="" name="error" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="msg" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QIMPenChar" href="qimpenchar.html" location="char.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QIMPenChar" fullname="QIMPenChar::QIMPenChar" href="qimpenchar.html#QIMPenChar" location="char.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QIMPenChar()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QIMPenChar" fullname="QIMPenChar::QIMPenChar" href="qimpenchar.html#QIMPenChar-2" location="char.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QIMPenChar(const QIMPenChar &amp; character)">
                <parameter left="const QIMPenChar &amp;" right="" name="character" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QIMPenChar" fullname="QIMPenChar::~QIMPenChar" href="qimpenchar.html#dtor.QIMPenChar" location="char.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QIMPenChar()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="key" fullname="QIMPenChar::key" href="qimpenchar.html#key" location="char.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="key() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="repCharacter" fullname="QIMPenChar::repCharacter" href="qimpenchar.html#repCharacter" location="char.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QChar" signature="repCharacter() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setKey" fullname="QIMPenChar::setKey" href="qimpenchar.html#setKey" location="char.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setKey(uint code)">
                <parameter left="uint" right="" name="code" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRepCharacter" fullname="QIMPenChar::setRepCharacter" href="qimpenchar.html#setRepCharacter" location="char.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRepCharacter(QChar code)">
                <parameter left="QChar" right="" name="code" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QIMPenChar::name" href="qimpenchar.html#name" location="char.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QIMPenChar::isEmpty" href="qimpenchar.html#isEmpty" location="char.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="strokeCount" fullname="QIMPenChar::strokeCount" href="qimpenchar.html#strokeCount" location="char.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="strokeCount() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="strokeLength" fullname="QIMPenChar::strokeLength" href="qimpenchar.html#strokeLength" location="char.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="strokeLength(int n) const">
                <parameter left="int" right="" name="n" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QIMPenChar::clear" href="qimpenchar.html#clear" location="char.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="match" fullname="QIMPenChar::match" href="qimpenchar.html#match" location="char.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="match(QIMPenChar * pen)">
                <parameter left="QIMPenChar *" right="" name="pen" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="penStrokes" fullname="QIMPenChar::penStrokes" href="qimpenchar.html#penStrokes" location="char.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QIMPenStrokeList &amp;" signature="penStrokes() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="startingPoint" fullname="QIMPenChar::startingPoint" href="qimpenchar.html#startingPoint" location="char.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPoint" signature="startingPoint() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="boundingRect" fullname="QIMPenChar::boundingRect" href="qimpenchar.html#boundingRect" location="char.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QRect" signature="boundingRect()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFlag" fullname="QIMPenChar::setFlag" href="qimpenchar.html#setFlag" location="char.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFlag(int f)">
                <parameter left="int" right="" name="f" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearFlag" fullname="QIMPenChar::clearFlag" href="qimpenchar.html#clearFlag" location="char.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearFlag(int f)">
                <parameter left="int" right="" name="f" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="testFlag" fullname="QIMPenChar::testFlag" href="qimpenchar.html#testFlag" location="char.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="testFlag(int f)">
                <parameter left="int" right="" name="f" default=""></parameter>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Flags" fullname="QIMPenChar::Flags" href="qimpenchar.html#Flags-enum" location="char.h">
                <value name="System" value="0x01"></value>
                <value name="Deleted" value="0x02"></value>
                <value name="CombineRight" value="0x04"></value>
                <value name="Data" value="0x08"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Mode" fullname="QIMPenChar::Mode" href="qimpenchar.html#Mode-enum" location="char.h">
                <value name="ModeBase" value="0x4000"></value>
                <value name="Caps" value="0x4001"></value>
                <value name="Shortcut" value="0x4002"></value>
                <value name="CapsLock" value="0x4003"></value>
                <value name="Punctuation" value="0x4004"></value>
                <value name="Symbol" value="0x4005"></value>
                <value name="NextWord" value="0x4007"></value>
                <value name="WordPopup" value="0x4008"></value>
                <value name="SymbolPopup" value="0x4009"></value>
                <value name="ModePopup" value="0x400A"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QIMPenChar::operator=" href="qimpenchar.html#operator=" location="char.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QIMPenChar &amp;" signature="operator=(const QIMPenChar &amp; character)">
                <parameter left="const QIMPenChar &amp;" right="" name="character" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addStroke" fullname="QIMPenChar::addStroke" href="qimpenchar.html#addStroke" location="char.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addStroke(QIMPenStroke * stroke)">
                <parameter left="QIMPenStroke *" right="" name="stroke" default=""></parameter>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="mUnicode" fullname="QIMPenChar::mUnicode" href="qimpenchar.html#mUnicode-var" location="char.h" type="QChar" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="mKey" fullname="QIMPenChar::mKey" href="qimpenchar.html#mKey-var" location="char.h" type="uint" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="flags" fullname="QIMPenChar::flags" href="qimpenchar.html#flags-var" location="char.h" type="quint8" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="strokes" fullname="QIMPenChar::strokes" href="qimpenchar.html#strokes-var" location="char.h" type="QIMPenStrokeList" static="false"></variable>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QIMPenCharSet" href="qimpencharset.html" location="char.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QIMPenCharSet" fullname="QIMPenCharSet::QIMPenCharSet" href="qimpencharset.html#QIMPenCharSet" location="char.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QIMPenCharSet()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QIMPenCharSet" fullname="QIMPenCharSet::QIMPenCharSet" href="qimpencharset.html#QIMPenCharSet-2" location="char.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QIMPenCharSet(const QString &amp; fn)">
                <parameter left="const QString &amp;" right="" name="fn" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QIMPenCharSet" fullname="QIMPenCharSet::~QIMPenCharSet" href="qimpencharset.html#dtor.QIMPenCharSet" location="char.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QIMPenCharSet()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QIMPenCharSet::isEmpty" href="qimpencharset.html#isEmpty" location="char.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="count" fullname="QIMPenCharSet::count" href="qimpencharset.html#count" location="char.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="count() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QIMPenCharSet::clear" href="qimpencharset.html#clear" location="char.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDescription" fullname="QIMPenCharSet::setDescription" href="qimpencharset.html#setDescription" location="char.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDescription(const QString &amp; description)">
                <parameter left="const QString &amp;" right="" name="description" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="description" fullname="QIMPenCharSet::description" href="qimpencharset.html#description" location="char.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="description() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTitle" fullname="QIMPenCharSet::setTitle" href="qimpencharset.html#setTitle" location="char.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTitle(const QString &amp; title)">
                <parameter left="const QString &amp;" right="" name="title" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="title" fullname="QIMPenCharSet::title" href="qimpencharset.html#title" location="char.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="title() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="match" fullname="QIMPenCharSet::match" href="qimpencharset.html#match" location="char.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QIMPenCharMatchList" signature="match(QIMPenChar * ch)">
                <parameter left="QIMPenChar *" right="" name="ch" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addChar" fullname="QIMPenCharSet::addChar" href="qimpencharset.html#addChar" location="char.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addChar(QIMPenChar * ch)">
                <parameter left="QIMPenChar *" right="" name="ch" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeChar" fullname="QIMPenCharSet::removeChar" href="qimpencharset.html#removeChar" location="char.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeChar(QIMPenChar * ch)">
                <parameter left="QIMPenChar *" right="" name="ch" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="at" fullname="QIMPenCharSet::at" href="qimpencharset.html#at" location="char.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QIMPenChar *" signature="at(int i)">
                <parameter left="int" right="" name="i" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumStrokes" fullname="QIMPenCharSet::maximumStrokes" href="qimpencharset.html#maximumStrokes" location="char.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="unsigned" signature="maximumStrokes() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="up" fullname="QIMPenCharSet::up" href="qimpencharset.html#up" location="char.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="up(QIMPenChar * ch)">
                <parameter left="QIMPenChar *" right="" name="ch" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="down" fullname="QIMPenCharSet::down" href="qimpencharset.html#down" location="char.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="down(QIMPenChar * ch)">
                <parameter left="QIMPenChar *" right="" name="ch" default=""></parameter>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="QIMPenCharSet::Type" href="qimpencharset.html#Type-enum" location="char.h">
                <value name="Unknown" value="0x00"></value>
                <value name="Lower" value="0x01"></value>
                <value name="Upper" value="0x02"></value>
                <value name="Combining" value="0x04"></value>
                <value name="Numeric" value="0x08"></value>
                <value name="Punctuation" value="0x10"></value>
                <value name="Symbol" value="0x20"></value>
                <value name="Shortcut" value="0x40"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="setType" fullname="QIMPenCharSet::setType" href="qimpencharset.html#setType" location="char.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setType(Type type)">
                <parameter left="Type" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QIMPenCharSet::type" href="qimpencharset.html#type" location="char.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Type" signature="type() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filename" fullname="QIMPenCharSet::filename" href="qimpencharset.html#filename" location="char.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QString &amp;" signature="filename() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilename" fullname="QIMPenCharSet::setFilename" href="qimpencharset.html#setFilename" location="char.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilename(const QString &amp; fn)">
                <parameter left="const QString &amp;" right="" name="fn" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="load" fullname="QIMPenCharSet::load" href="qimpencharset.html#load" location="char.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="load(const QString &amp; fn)">
                <parameter left="const QString &amp;" right="" name="fn" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="save" fullname="QIMPenCharSet::save" href="qimpencharset.html#save" location="char.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="save() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="characters" fullname="QIMPenCharSet::characters" href="qimpencharset.html#characters" location="char.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QIMPenCharList &amp;" signature="characters() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QIrIasDatabase" href="qiriasdatabase.html" location="qiriasdatabase.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttribute" fullname="QIrIasDatabase::setAttribute" href="qiriasdatabase.html#setAttribute" location="qiriasdatabase.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="setAttribute(const QString &amp; className, const QString &amp; attribName, const QVariant &amp; attr)">
                <parameter left="const QString &amp;" right="" name="className" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="attribName" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="attr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attribute" fullname="QIrIasDatabase::attribute" href="qiriasdatabase.html#attribute" location="qiriasdatabase.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QVariant" signature="attribute(const QString &amp; className, const QString &amp; attribName)">
                <parameter left="const QString &amp;" right="" name="className" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="attribName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeAttribute" fullname="QIrIasDatabase::removeAttribute" href="qiriasdatabase.html#removeAttribute" location="qiriasdatabase.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="removeAttribute(const QString &amp; className, const QString &amp; attribName)">
                <parameter left="const QString &amp;" right="" name="className" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="attribName" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QWorldmap" href="qworldmap.html" location="qworldmap.h" bases="QAbstractScrollArea" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QWorldmap" fullname="QWorldmap::QWorldmap" href="qworldmap.html#QWorldmap" location="qworldmap.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QWorldmap(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QWorldmap" fullname="QWorldmap::~QWorldmap" href="qworldmap.html#dtor.QWorldmap" location="qworldmap.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QWorldmap()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="heightForWidth" fullname="QWorldmap::heightForWidth" href="qworldmap.html#heightForWidth" location="qworldmap.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="int" signature="heightForWidth(int w) const">
                <parameter left="int" right="" name="w" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isZoom" fullname="QWorldmap::isZoom" href="qworldmap.html#isZoom" location="qworldmap.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isZoom() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isDaylight" fullname="QWorldmap::isDaylight" href="qworldmap.html#isDaylight" location="qworldmap.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isDaylight() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isReadOnly" fullname="QWorldmap::isReadOnly" href="qworldmap.html#isReadOnly" location="qworldmap.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isReadOnly() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="zone" fullname="QWorldmap::zone" href="qworldmap.html#zone" location="qworldmap.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QTimeZone" signature="zone() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectNewZone" fullname="QWorldmap::selectNewZone" href="qworldmap.html#selectNewZone" location="qworldmap.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="selectNewZone()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toggleZoom" fullname="QWorldmap::toggleZoom" href="qworldmap.html#toggleZoom" location="qworldmap.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="toggleZoom()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="select" fullname="QWorldmap::select" href="qworldmap.html#select" location="qworldmap.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="select()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDaylight" fullname="QWorldmap::setDaylight" href="qworldmap.html#setDaylight" location="qworldmap.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setDaylight(const bool show)">
                <parameter left="const bool" right="" name="show" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setZone" fullname="QWorldmap::setZone" href="qworldmap.html#setZone" location="qworldmap.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setZone(const QTimeZone &amp; zone)">
                <parameter left="const QTimeZone &amp;" right="" name="zone" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setZone" fullname="QWorldmap::setZone" href="qworldmap.html#setZone-2" location="qworldmap.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="setZone(const QPoint &amp; pos)">
                <parameter left="const QPoint &amp;" right="" name="pos" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setReadOnly" fullname="QWorldmap::setReadOnly" href="qworldmap.html#setReadOnly" location="qworldmap.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setReadOnly(const bool readOnly)">
                <parameter left="const bool" right="" name="readOnly" default="true"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContinuousSelect" fullname="QWorldmap::setContinuousSelect" href="qworldmap.html#setContinuousSelect" location="qworldmap.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setContinuousSelect(const bool selectMode)">
                <parameter left="const bool" right="" name="selectMode" default="false"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selecting" fullname="QWorldmap::selecting" href="qworldmap.html#selecting" location="qworldmap.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="selecting()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="newZone" fullname="QWorldmap::newZone" href="qworldmap.html#newZone" location="qworldmap.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="newZone(const QTimeZone &amp; zone)">
                <parameter left="const QTimeZone &amp;" right="" name="zone" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectZoneCanceled" fullname="QWorldmap::selectZoneCanceled" href="qworldmap.html#selectZoneCanceled" location="qworldmap.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="selectZoneCanceled()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="buttonSelected" fullname="QWorldmap::buttonSelected" href="qworldmap.html#buttonSelected" location="qworldmap.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="buttonSelected()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtopiaServerApplication" href="qtopiaserverapplication.html" location="qtopiaserverapplication.h" bases="QtopiaApplication" module="">
            <contents name="qtopia-server-tasks" title="Qtopia Server Tasks" level="1"></contents>
            <contents name="reserved-task-group-names" title="Reserved task Group Names" level="2"></contents>
            <contents name="supported-task-types" title="Supported Task Types" level="2"></contents>
            <contents name="marking-tasks-to-be-started-on-demand" title="Marking Tasks to be Started on Demand" level="2"></contents>
            <contents name="tasks-startup-order" title="Tasks Startup Order" level="2"></contents>
            <contents name="qtopia-server-widgets" title="Qtopia Server Widgets" level="1"></contents>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ShutdownType" fullname="QtopiaServerApplication::ShutdownType" href="qtopiaserverapplication.html#ShutdownType-enum" location="qtopiaserverapplication.h">
                <value name="NoShutdown" value="0"></value>
                <value name="ShutdownSystem" value="1"></value>
                <value name="RebootSystem" value="2"></value>
                <value name="RestartDesktop" value="3"></value>
                <value name="TerminateDesktop" value="4"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="instance" fullname="QtopiaServerApplication::instance" href="qtopiaserverapplication.html#instance" location="qtopiaserverapplication.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QtopiaServerApplication *" signature="instance()"></function>
            <class access="public" threadsafety="unspecified" status="commendable" name="QWSEventFilter" fullname="QtopiaServerApplication::QWSEventFilter" href="qtopiaserverapplication-qwseventfilter.html" location="qtopiaserverapplication.h" bases="" module="">
                <function access="public" threadsafety="unspecified" status="commendable" name="qwsEventFilter" fullname="QtopiaServerApplication::QWSEventFilter::qwsEventFilter" href="qtopiaserverapplication-qwseventfilter.html#qwsEventFilter" location="qtopiaserverapplication.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="qwsEventFilter(QWSEvent * event)">
                    <parameter left="QWSEvent *" right="" name="event" default=""></parameter>
                </function>
            </class>
            <function access="public" threadsafety="unspecified" status="commendable" name="installQWSEventFilter" fullname="QtopiaServerApplication::installQWSEventFilter" href="qtopiaserverapplication.html#installQWSEventFilter" location="qtopiaserverapplication.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="installQWSEventFilter(QWSEventFilter * filter)">
                <parameter left="QWSEventFilter *" right="" name="filter" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeQWSEventFilter" fullname="QtopiaServerApplication::removeQWSEventFilter" href="qtopiaserverapplication.html#removeQWSEventFilter" location="qtopiaserverapplication.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeQWSEventFilter(QWSEventFilter * filter)">
                <parameter left="QWSEventFilter *" right="" name="filter" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="startup" fullname="QtopiaServerApplication::startup" href="qtopiaserverapplication.html#startup" location="qtopiaserverapplication.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="startup(int &amp; argc, char ** argv, const QList&lt;QByteArray&gt; &amp; startupGroups)">
                <parameter left="int &amp;" right="" name="argc" default=""></parameter>
                <parameter left="char **" right="" name="argv" default=""></parameter>
                <parameter left="const QList&lt;QByteArray&gt; &amp;" right="" name="startupGroups" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="taskConfigFile" fullname="QtopiaServerApplication::taskConfigFile" href="qtopiaserverapplication.html#taskConfigFile" location="qtopiaserverapplication.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="taskConfigFile()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="qtopiaTask" fullname="QtopiaServerApplication::qtopiaTask" href="qtopiaserverapplication.html#qtopiaTask" location="qtopiaserverapplication.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QObject *" signature="qtopiaTask(const QByteArray &amp; taskName, bool onlyRunning)">
                <parameter left="const QByteArray &amp;" right="" name="taskName" default=""></parameter>
                <parameter left="bool" right="" name="onlyRunning" default="false"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addAggregateObject" fullname="QtopiaServerApplication::addAggregateObject" href="qtopiaserverapplication.html#addAggregateObject" location="qtopiaserverapplication.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="addAggregateObject(QObject * me, QObject * them)">
                <parameter left="QObject *" right="" name="me" default=""></parameter>
                <parameter left="QObject *" right="" name="them" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="taskValueSpaceObject" fullname="QtopiaServerApplication::taskValueSpaceObject" href="qtopiaserverapplication.html#taskValueSpaceObject" location="qtopiaserverapplication.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QByteArray" signature="taskValueSpaceObject(const QByteArray &amp; taskName)">
                <parameter left="const QByteArray &amp;" right="" name="taskName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="taskValueSpaceSetAttribute" fullname="QtopiaServerApplication::taskValueSpaceSetAttribute" href="qtopiaserverapplication.html#taskValueSpaceSetAttribute" location="qtopiaserverapplication.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="taskValueSpaceSetAttribute(const QByteArray &amp; taskName, const QByteArray &amp; attribute, const QVariant &amp; value)">
                <parameter left="const QByteArray &amp;" right="" name="taskName" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="attribute" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="argc" fullname="QtopiaServerApplication::argc" href="qtopiaserverapplication.html#argc" location="qtopiaserverapplication.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="int &amp;" signature="argc()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="argv" fullname="QtopiaServerApplication::argv" href="qtopiaserverapplication.html#argv" location="qtopiaserverapplication.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="char **" signature="argv()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="shutdownType" fullname="QtopiaServerApplication::shutdownType" href="qtopiaserverapplication.html#shutdownType" location="qtopiaserverapplication.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="ShutdownType" signature="shutdownType()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="shutdownRequested" fullname="QtopiaServerApplication::shutdownRequested" href="qtopiaserverapplication.html#shutdownRequested" location="qtopiaserverapplication.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="shutdownRequested()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="shutdown" fullname="QtopiaServerApplication::shutdown" href="qtopiaserverapplication.html#shutdown" location="qtopiaserverapplication.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="shutdown(QtopiaServerApplication::ShutdownType type)">
                <parameter left="QtopiaServerApplication::ShutdownType" right="" name="type" default=""></parameter>
            </function>
        </class>
        <function access="public" threadsafety="unspecified" status="commendable" name="qtopiaTasks" href="qtopiaserverapplication.html#qtopiaTasks" location="qtopiaserverapplication.h" virtual="non" meta="plain" const="false" static="false" overload="false" relates="QtopiaServerApplication" type="QList&lt;T *&gt;" signature="qtopiaTasks(bool onlyActive)">
            <parameter left="bool" right="" name="onlyActive" default="false"></parameter>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="qtopiaTask" href="qtopiaserverapplication.html#qtopiaTask" location="qtopiaserverapplication.h" virtual="non" meta="plain" const="false" static="false" overload="false" relates="QtopiaServerApplication" type="T *" signature="qtopiaTask(bool onlyActive)">
            <parameter left="bool" right="" name="onlyActive" default="false"></parameter>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="qtopiaWidget" href="qtopiaserverapplication.html#qtopiaWidget" location="qtopiaserverapplication.h" virtual="non" meta="plain" const="false" static="false" overload="false" relates="QtopiaServerApplication" type="T *" signature="qtopiaWidget(QWidget * parent, Qt::WFlags flags)">
            <parameter left="QWidget *" right="" name="parent" default=""></parameter>
            <parameter left="Qt::WFlags" right="" name="flags" default=""></parameter>
        </function>
        <class access="public" threadsafety="unspecified" status="commendable" name="SystemShutdownHandler" href="systemshutdownhandler.html" location="qtopiaserverapplication.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="systemRestart" fullname="SystemShutdownHandler::systemRestart" href="systemshutdownhandler.html#systemRestart" location="qtopiaserverapplication.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="systemRestart()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="systemShutdown" fullname="SystemShutdownHandler::systemShutdown" href="systemshutdownhandler.html#systemShutdown" location="qtopiaserverapplication.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="systemShutdown()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="proceed" fullname="SystemShutdownHandler::proceed" href="systemshutdownhandler.html#proceed" location="qtopiaserverapplication.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="proceed()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="MemoryMonitor" href="memorymonitor.html" location="memorymonitor.h" bases="QObject" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="MemState" fullname="MemoryMonitor::MemState" href="memorymonitor.html#MemState-enum" location="memorymonitor.h">
                <value name="MemUnknown" value="0"></value>
                <value name="MemCritical" value="1"></value>
                <value name="MemVeryLow" value="2"></value>
                <value name="MemLow" value="3"></value>
                <value name="MemNormal" value="4"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="memoryState" fullname="MemoryMonitor::memoryState" href="memorymonitor.html#memoryState" location="memorymonitor.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="MemState" signature="memoryState() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="timeInState" fullname="MemoryMonitor::timeInState" href="memorymonitor.html#timeInState" location="memorymonitor.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="unsigned int" signature="timeInState() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="memoryStateChanged" fullname="MemoryMonitor::memoryStateChanged" href="memorymonitor.html#memoryStateChanged" location="memorymonitor.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="memoryStateChanged(MemoryMonitor::MemState newState)">
                <parameter left="MemoryMonitor::MemState" right="" name="newState" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothAbstractService" href="qbluetoothabstractservice.html" location="qbluetoothabstractservice.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothAbstractService" fullname="QBluetoothAbstractService::QBluetoothAbstractService" href="qbluetoothabstractservice.html#QBluetoothAbstractService" location="qbluetoothabstractservice.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothAbstractService(const QString &amp; name, const QString &amp; displayName, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="displayName" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothAbstractService" fullname="QBluetoothAbstractService::~QBluetoothAbstractService" href="qbluetoothabstractservice.html#dtor.QBluetoothAbstractService" location="qbluetoothabstractservice.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothAbstractService()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QBluetoothAbstractService::start" href="qbluetoothabstractservice.html#start" location="qbluetoothabstractservice.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="start()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QBluetoothAbstractService::stop" href="qbluetoothabstractservice.html#stop" location="qbluetoothabstractservice.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="stop()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSecurityOptions" fullname="QBluetoothAbstractService::setSecurityOptions" href="qbluetoothabstractservice.html#setSecurityOptions" location="qbluetoothabstractservice.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setSecurityOptions(QFlags&lt;QBluetooth::SecurityOption&gt; options)">
                <parameter left="QFlags&lt;QBluetooth::SecurityOption&gt;" right="" name="options" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QBluetoothAbstractService::name" href="qbluetoothabstractservice.html#name" location="qbluetoothabstractservice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="displayName" fullname="QBluetoothAbstractService::displayName" href="qbluetoothabstractservice.html#displayName" location="qbluetoothabstractservice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="displayName() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="registerRecord" fullname="QBluetoothAbstractService::registerRecord" href="qbluetoothabstractservice.html#registerRecord" location="qbluetoothabstractservice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="quint32" signature="registerRecord(const QBluetoothSdpRecord &amp; record)">
                <parameter left="const QBluetoothSdpRecord &amp;" right="" name="record" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="registerRecord" fullname="QBluetoothAbstractService::registerRecord" href="qbluetoothabstractservice.html#registerRecord-2" location="qbluetoothabstractservice.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="quint32" signature="registerRecord(const QString &amp; filename)">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="unregisterRecord" fullname="QBluetoothAbstractService::unregisterRecord" href="qbluetoothabstractservice.html#unregisterRecord" location="qbluetoothabstractservice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="unregisterRecord(quint32 handle)">
                <parameter left="quint32" right="" name="handle" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="started" fullname="QBluetoothAbstractService::started" href="qbluetoothabstractservice.html#started" location="qbluetoothabstractservice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="started(bool error, const QString &amp; description)">
                <parameter left="bool" right="" name="error" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="description" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stopped" fullname="QBluetoothAbstractService::stopped" href="qbluetoothabstractservice.html#stopped" location="qbluetoothabstractservice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stopped()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QAudioSourceSelectorDialog" href="qaudiosourceselectordialog.html" location="qaudiosourceselector.h" bases="QDialog" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioSourceSelectorDialog" fullname="QAudioSourceSelectorDialog::QAudioSourceSelectorDialog" href="qaudiosourceselectordialog.html#QAudioSourceSelectorDialog" location="qaudiosourceselector.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAudioSourceSelectorDialog(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAudioSourceSelectorDialog" fullname="QAudioSourceSelectorDialog::~QAudioSourceSelectorDialog" href="qaudiosourceselectordialog.html#dtor.QAudioSourceSelectorDialog" location="qaudiosourceselector.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAudioSourceSelectorDialog()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultAudio" fullname="QAudioSourceSelectorDialog::setDefaultAudio" href="qaudiosourceselectordialog.html#setDefaultAudio" location="qaudiosourceselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefaultAudio(const QString &amp; type, const QString &amp; subFormat, int frequency, int channels)">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="subFormat" default=""></parameter>
                <parameter left="int" right="" name="frequency" default=""></parameter>
                <parameter left="int" right="" name="channels" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContent" fullname="QAudioSourceSelectorDialog::setContent" href="qaudiosourceselectordialog.html#setContent" location="qaudiosourceselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setContent(const QContent &amp; audio)">
                <parameter left="const QContent &amp;" right="" name="audio" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="content" fullname="QAudioSourceSelectorDialog::content" href="qaudiosourceselectordialog.html#content" location="qaudiosourceselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContent" signature="content() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSerialIODeviceMultiplexer" href="qserialiodevicemultiplexer.html" location="qserialiodevicemultiplexer.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSerialIODeviceMultiplexer" fullname="QSerialIODeviceMultiplexer::QSerialIODeviceMultiplexer" href="qserialiodevicemultiplexer.html#QSerialIODeviceMultiplexer" location="qserialiodevicemultiplexer.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSerialIODeviceMultiplexer(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSerialIODeviceMultiplexer" fullname="QSerialIODeviceMultiplexer::~QSerialIODeviceMultiplexer" href="qserialiodevicemultiplexer.html#dtor.QSerialIODeviceMultiplexer" location="qserialiodevicemultiplexer.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSerialIODeviceMultiplexer()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="channel" fullname="QSerialIODeviceMultiplexer::channel" href="qserialiodevicemultiplexer.html#channel" location="qserialiodevicemultiplexer.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QSerialIODevice *" signature="channel(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="chat" fullname="QSerialIODeviceMultiplexer::chat" href="qserialiodevicemultiplexer.html#chat" location="qserialiodevicemultiplexer.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="chat(QSerialIODevice * device, const QString &amp; cmd)">
                <parameter left="QSerialIODevice *" right="" name="device" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="cmd" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="chatWithResponse" fullname="QSerialIODeviceMultiplexer::chatWithResponse" href="qserialiodevicemultiplexer.html#chatWithResponse" location="qserialiodevicemultiplexer.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="chatWithResponse(QSerialIODevice * device, const QString &amp; cmd)">
                <parameter left="QSerialIODevice *" right="" name="device" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="cmd" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="create" fullname="QSerialIODeviceMultiplexer::create" href="qserialiodevicemultiplexer.html#create" location="qserialiodevicemultiplexer.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QSerialIODeviceMultiplexer *" signature="create(QSerialIODevice * device)">
                <parameter left="QSerialIODevice *" right="" name="device" default="0"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QNullSerialIODeviceMultiplexer" href="qnullserialiodevicemultiplexer.html" location="qserialiodevicemultiplexer.h" bases="QSerialIODeviceMultiplexer" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QNullSerialIODeviceMultiplexer" fullname="QNullSerialIODeviceMultiplexer::QNullSerialIODeviceMultiplexer" href="qnullserialiodevicemultiplexer.html#QNullSerialIODeviceMultiplexer" location="qserialiodevicemultiplexer.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNullSerialIODeviceMultiplexer(QSerialIODevice * device, QObject * parent)">
                <parameter left="QSerialIODevice *" right="" name="device" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNullSerialIODeviceMultiplexer" fullname="QNullSerialIODeviceMultiplexer::~QNullSerialIODeviceMultiplexer" href="qnullserialiodevicemultiplexer.html#dtor.QNullSerialIODeviceMultiplexer" location="qserialiodevicemultiplexer.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNullSerialIODeviceMultiplexer()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="ProfilesService" href="profilesservice.html" location="ringprofile.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="activatePlaneMode" fullname="ProfilesService::activatePlaneMode" href="profilesservice.html#activatePlaneMode" location="ringprofile.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="activatePlaneMode()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="showProfiles" fullname="ProfilesService::showProfiles" href="profilesservice.html#showProfiles" location="ringprofile.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="showProfiles()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setProfile" fullname="ProfilesService::setProfile" href="profilesservice.html#setProfile" location="ringprofile.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setProfile(int id)">
                <parameter left="int" right="" name="id" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QServiceChecker" href="qservicechecker.html" location="qservicechecker.h" bases="QCommInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QServiceChecker" fullname="QServiceChecker::QServiceChecker" href="qservicechecker.html#QServiceChecker" location="qservicechecker.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QServiceChecker(const QString &amp; service, QObject * parent, QCommInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="service" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QCommInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QServiceChecker" fullname="QServiceChecker::~QServiceChecker" href="qservicechecker.html#dtor.QServiceChecker" location="qservicechecker.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QServiceChecker()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QServiceChecker::isValid" href="qservicechecker.html#isValid" location="qservicechecker.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="isValid()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setValid" fullname="QServiceChecker::setValid" href="qservicechecker.html#setValid" location="qservicechecker.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setValid(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QServiceCheckerServer" href="qservicecheckerserver.html" location="qservicechecker.h" bases="QServiceChecker" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QServiceCheckerServer" fullname="QServiceCheckerServer::QServiceCheckerServer" href="qservicecheckerserver.html#QServiceCheckerServer" location="qservicechecker.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QServiceCheckerServer(const QString &amp; service, bool valid, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
                <parameter left="bool" right="" name="valid" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QServiceCheckerServer" fullname="QServiceCheckerServer::~QServiceCheckerServer" href="qservicecheckerserver.html#dtor.QServiceCheckerServer" location="qservicechecker.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QServiceCheckerServer()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QObexServerSession" href="qobexserversession.html" location="qobexserversession.h" bases="QObject" module="">
            <contents name="receiving-client-requests" title="Receiving client requests" level="1"></contents>
            <contents name="handling-and-requests" title="Handling  and  requests" level="1"></contents>
            <contents name="handling-errors-and-requests" title="Handling errors and  requests" level="1"></contents>
            <contents name="handling-socket-disconnections" title="Handling socket disconnections" level="1"></contents>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QObexServerSession::Error" href="qobexserversession.html#Error-enum" location="qobexserversession.h">
                <value name="ConnectionError" value="1"></value>
                <value name="InvalidRequest" value="2"></value>
                <value name="Aborted" value="3"></value>
                <value name="AuthenticationFailed" value="4"></value>
                <value name="UnknownError" value="100"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QObexServerSession" fullname="QObexServerSession::QObexServerSession" href="qobexserversession.html#QObexServerSession" location="qobexserversession.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QObexServerSession(QIODevice * device, QObject * parent)">
                <parameter left="QIODevice *" right="" name="device" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QObexServerSession" fullname="QObexServerSession::~QObexServerSession" href="qobexserversession.html#dtor.QObexServerSession" location="qobexserversession.h" virtual="pure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QObexServerSession()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sessionDevice" fullname="QObexServerSession::sessionDevice" href="qobexserversession.html#sessionDevice" location="qobexserversession.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QIODevice *" signature="sessionDevice()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="close" fullname="QObexServerSession::close" href="qobexserversession.html#close" location="qobexserversession.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="close()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="finalResponseSent" fullname="QObexServerSession::finalResponseSent" href="qobexserversession.html#finalResponseSent" location="qobexserversession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="finalResponseSent(QObex::Request request)">
                <parameter left="QObex::Request" right="" name="request" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="authenticationRequired" fullname="QObexServerSession::authenticationRequired" href="qobexserversession.html#authenticationRequired" location="qobexserversession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="authenticationRequired(QObexAuthenticationChallenge * challenge)">
                <parameter left="QObexAuthenticationChallenge *" right="" name="challenge" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="authenticationResponse" fullname="QObexServerSession::authenticationResponse" href="qobexserversession.html#authenticationResponse" location="qobexserversession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="authenticationResponse(const QObexAuthenticationResponse &amp; response, bool * accept)">
                <parameter left="const QObexAuthenticationResponse &amp;" right="" name="response" default=""></parameter>
                <parameter left="bool *" right="" name="accept" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setNextResponseHeader" fullname="QObexServerSession::setNextResponseHeader" href="qobexserversession.html#setNextResponseHeader" location="qobexserversession.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setNextResponseHeader(const QObexHeader &amp; header)">
                <parameter left="const QObexHeader &amp;" right="" name="header" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="error" fullname="QObexServerSession::error" href="qobexserversession.html#error" location="qobexserversession.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="error(QObexServerSession::Error error, const QString &amp; errorString)">
                <parameter left="QObexServerSession::Error" right="" name="error" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="errorString" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="dataAvailable" fullname="QObexServerSession::dataAvailable" href="qobexserversession.html#dataAvailable" location="qobexserversession.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QObex::ResponseCode" signature="dataAvailable(const char * data, qint64 size)">
                <parameter left="const char *" right="" name="data" default=""></parameter>
                <parameter left="qint64" right="" name="size" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="provideData" fullname="QObexServerSession::provideData" href="qobexserversession.html#provideData" location="qobexserversession.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QObex::ResponseCode" signature="provideData(const char ** data, qint64 * size)">
                <parameter left="const char **" right="" name="data" default=""></parameter>
                <parameter left="qint64 *" right="" name="size" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="connect" fullname="QObexServerSession::connect" href="qobexserversession.html#connect" location="qobexserversession.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="QObex::ResponseCode" signature="connect(const QObexHeader &amp; header)">
                <parameter left="const QObexHeader &amp;" right="" name="header" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="disconnect" fullname="QObexServerSession::disconnect" href="qobexserversession.html#disconnect" location="qobexserversession.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="QObex::ResponseCode" signature="disconnect(const QObexHeader &amp; header)">
                <parameter left="const QObexHeader &amp;" right="" name="header" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="put" fullname="QObexServerSession::put" href="qobexserversession.html#put" location="qobexserversession.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="QObex::ResponseCode" signature="put(const QObexHeader &amp; header)">
                <parameter left="const QObexHeader &amp;" right="" name="header" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="putDelete" fullname="QObexServerSession::putDelete" href="qobexserversession.html#putDelete" location="qobexserversession.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="QObex::ResponseCode" signature="putDelete(const QObexHeader &amp; header)">
                <parameter left="const QObexHeader &amp;" right="" name="header" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="get" fullname="QObexServerSession::get" href="qobexserversession.html#get" location="qobexserversession.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="QObex::ResponseCode" signature="get(const QObexHeader &amp; header)">
                <parameter left="const QObexHeader &amp;" right="" name="header" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setPath" fullname="QObexServerSession::setPath" href="qobexserversession.html#setPath" location="qobexserversession.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="QObex::ResponseCode" signature="setPath(const QObexHeader &amp; header, QFlags&lt;QObex::SetPathFlag&gt; flags)">
                <parameter left="const QObexHeader &amp;" right="" name="header" default=""></parameter>
                <parameter left="QFlags&lt;QObex::SetPathFlag&gt;" right="" name="flags" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QBluetoothHandsfreeAudioGatewayServer" href="qbluetoothhandsfreeaudiogatewayserver.html" location="qbluetoothhfagserver_p.h" bases="QBluetoothAudioGateway" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothHandsfreeAudioGatewayServer" fullname="QBluetoothHandsfreeAudioGatewayServer::QBluetoothHandsfreeAudioGatewayServer" href="qbluetoothhandsfreeaudiogatewayserver.html#QBluetoothHandsfreeAudioGatewayServer" location="qbluetoothhfagserver_p.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothHandsfreeAudioGatewayServer(QBluetoothHandsfreeCommInterface * parent, const QString &amp; audioDev, const QString &amp; service)">
                <parameter left="QBluetoothHandsfreeCommInterface *" right="" name="parent" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="audioDev" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothHandsfreeAudioGatewayServer" fullname="QBluetoothHandsfreeAudioGatewayServer::~QBluetoothHandsfreeAudioGatewayServer" href="qbluetoothhandsfreeaudiogatewayserver.html#dtor.QBluetoothHandsfreeAudioGatewayServer" location="qbluetoothhfagserver_p.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothHandsfreeAudioGatewayServer()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QIconSelector" href="qiconselector.html" location="qiconselector.h" bases="QToolButton" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QIconSelector" fullname="QIconSelector::QIconSelector" href="qiconselector.html#QIconSelector" location="qiconselector.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QIconSelector(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QIconSelector" fullname="QIconSelector::QIconSelector" href="qiconselector.html#QIconSelector-2" location="qiconselector.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QIconSelector(const QIcon &amp; icn, QWidget * parent)">
                <parameter left="const QIcon &amp;" right="" name="icn" default=""></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QIconSelector" fullname="QIconSelector::~QIconSelector" href="qiconselector.html#dtor.QIconSelector" location="qiconselector.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QIconSelector()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="count" fullname="QIconSelector::count" href="qiconselector.html#count" location="qiconselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="count() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertItem" fullname="QIconSelector::insertItem" href="qiconselector.html#insertItem" location="qiconselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insertItem(const QIcon &amp; icn, const QString &amp; text)">
                <parameter left="const QIcon &amp;" right="" name="icn" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="text" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeIndex" fullname="QIconSelector::removeIndex" href="qiconselector.html#removeIndex" location="qiconselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeIndex(int index)">
                <parameter left="int" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QIconSelector::clear" href="qiconselector.html#clear" location="qiconselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentIndex" fullname="QIconSelector::currentIndex" href="qiconselector.html#currentIndex" location="qiconselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="currentIndex() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="icon" fullname="QIconSelector::icon" href="qiconselector.html#icon" location="qiconselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QIcon" signature="icon() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIcon" fullname="QIconSelector::setIcon" href="qiconselector.html#setIcon" location="qiconselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIcon(const QIcon &amp; icn)">
                <parameter left="const QIcon &amp;" right="" name="icn" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="text" fullname="QIconSelector::text" href="qiconselector.html#text" location="qiconselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="text() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activated" fullname="QIconSelector::activated" href="qiconselector.html#activated" location="qiconselector.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="activated(int index)">
                <parameter left="int" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCurrentIndex" fullname="QIconSelector::setCurrentIndex" href="qiconselector.html#setCurrentIndex" location="qiconselector.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setCurrentIndex(int index)">
                <parameter left="int" right="" name="index" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="popup" fullname="QIconSelector::popup" href="qiconselector.html#popup" location="qiconselector.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="popup()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="popdown" fullname="QIconSelector::popdown" href="qiconselector.html#popdown" location="qiconselector.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="popdown()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="itemSelected" fullname="QIconSelector::itemSelected" href="qiconselector.html#itemSelected" location="qiconselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="itemSelected(int index)">
                <parameter left="int" right="" name="index" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QRecordBasedSimFile" href="qrecordbasedsimfile.html" location="qrecordbasedsimfile.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QRecordBasedSimFile" fullname="QRecordBasedSimFile::QRecordBasedSimFile" href="qrecordbasedsimfile.html#QRecordBasedSimFile" location="qrecordbasedsimfile.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QRecordBasedSimFile(const QString &amp; fileid, const QString &amp; service, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="fileid" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="service" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QRecordBasedSimFile" fullname="QRecordBasedSimFile::~QRecordBasedSimFile" href="qrecordbasedsimfile.html#dtor.QRecordBasedSimFile" location="qrecordbasedsimfile.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QRecordBasedSimFile()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestFileInfo" fullname="QRecordBasedSimFile::requestFileInfo" href="qrecordbasedsimfile.html#requestFileInfo" location="qrecordbasedsimfile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="requestFileInfo()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="read" fullname="QRecordBasedSimFile::read" href="qrecordbasedsimfile.html#read" location="qrecordbasedsimfile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="read(int recno, int recordSize)">
                <parameter left="int" right="" name="recno" default=""></parameter>
                <parameter left="int" right="" name="recordSize" default="-1"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="write" fullname="QRecordBasedSimFile::write" href="qrecordbasedsimfile.html#write" location="qrecordbasedsimfile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="write(int recno, const char * data, int len)">
                <parameter left="int" right="" name="recno" default=""></parameter>
                <parameter left="const char *" right="" name="data" default=""></parameter>
                <parameter left="int" right="" name="len" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="write" fullname="QRecordBasedSimFile::write" href="qrecordbasedsimfile.html#write-2" location="qrecordbasedsimfile.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="write(int recno, const QByteArray &amp; data)">
                <parameter left="int" right="" name="recno" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QRecordBasedSimFile::error" href="qrecordbasedsimfile.html#error" location="qrecordbasedsimfile.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="error(QTelephony::SimFileError err)">
                <parameter left="QTelephony::SimFileError" right="" name="err" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fileInfo" fullname="QRecordBasedSimFile::fileInfo" href="qrecordbasedsimfile.html#fileInfo" location="qrecordbasedsimfile.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="fileInfo(int numRecords, int recordSize)">
                <parameter left="int" right="" name="numRecords" default=""></parameter>
                <parameter left="int" right="" name="recordSize" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readDone" fullname="QRecordBasedSimFile::readDone" href="qrecordbasedsimfile.html#readDone" location="qrecordbasedsimfile.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="readDone(const QByteArray &amp; data, int recno)">
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
                <parameter left="int" right="" name="recno" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="writeDone" fullname="QRecordBasedSimFile::writeDone" href="qrecordbasedsimfile.html#writeDone" location="qrecordbasedsimfile.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="writeDone(int recno)">
                <parameter left="int" right="" name="recno" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="PhonePowerManager" href="phonepowermanager.html" location="phonepowermanager.h" bases="QtopiaPowerManager" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="PhonePowerManager" fullname="PhonePowerManager::PhonePowerManager" href="phonepowermanager.html#PhonePowerManager" location="phonepowermanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="PhonePowerManager()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~PhonePowerManager" fullname="PhonePowerManager::~PhonePowerManager" href="phonepowermanager.html#dtor.PhonePowerManager" location="phonepowermanager.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~PhonePowerManager()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="save" fullname="PhonePowerManager::save" href="phonepowermanager.html#save" location="phonepowermanager.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="save(int level)">
                <parameter left="int" right="" name="level" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIntervals" fullname="PhonePowerManager::setIntervals" href="phonepowermanager.html#setIntervals" location="phonepowermanager.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setIntervals(int * ivals, int size)">
                <parameter left="int *" right="" name="ivals" default=""></parameter>
                <parameter left="int" right="" name="size" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtopiaNetworkServer" href="qtopianetworkserver.html" location="networkserver.h" bases="QtopiaIpcAdaptor" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaNetworkServer" fullname="QtopiaNetworkServer::QtopiaNetworkServer" href="qtopianetworkserver.html#QtopiaNetworkServer" location="networkserver.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtopiaNetworkServer()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtopiaNetworkServer" fullname="QtopiaNetworkServer::~QtopiaNetworkServer" href="qtopianetworkserver.html#dtor.QtopiaNetworkServer" location="networkserver.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtopiaNetworkServer()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="DefaultSignal" href="defaultsignal.html" location="defaultsignal.h" bases="QSignalSourceProvider" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="DefaultSignal" fullname="DefaultSignal::DefaultSignal" href="defaultsignal.html#DefaultSignal" location="defaultsignal.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="DefaultSignal(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAbstractCallPolicyManager" href="qabstractcallpolicymanager.html" location="qabstractcallpolicymanager.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAbstractCallPolicyManager" fullname="QAbstractCallPolicyManager::QAbstractCallPolicyManager" href="qabstractcallpolicymanager.html#QAbstractCallPolicyManager" location="qabstractcallpolicymanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAbstractCallPolicyManager(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="CallHandling" fullname="QAbstractCallPolicyManager::CallHandling" href="qabstractcallpolicymanager.html#CallHandling-enum" location="qabstractcallpolicymanager.h">
                <value name="CannotHandle" value="0"></value>
                <value name="CanHandle" value="1"></value>
                <value name="MustHandle" value="2"></value>
                <value name="NeverHandle" value="3"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="callType" fullname="QAbstractCallPolicyManager::callType" href="qabstractcallpolicymanager.html#callType" location="qabstractcallpolicymanager.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="callType() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="trCallType" fullname="QAbstractCallPolicyManager::trCallType" href="qabstractcallpolicymanager.html#trCallType" location="qabstractcallpolicymanager.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="trCallType() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callTypeIcon" fullname="QAbstractCallPolicyManager::callTypeIcon" href="qabstractcallpolicymanager.html#callTypeIcon" location="qabstractcallpolicymanager.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="callTypeIcon() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="registrationState" fullname="QAbstractCallPolicyManager::registrationState" href="qabstractcallpolicymanager.html#registrationState" location="qabstractcallpolicymanager.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QTelephony::RegistrationState" signature="registrationState() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="handling" fullname="QAbstractCallPolicyManager::handling" href="qabstractcallpolicymanager.html#handling" location="qabstractcallpolicymanager.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QAbstractCallPolicyManager::CallHandling" signature="handling(const QString &amp; number)">
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAvailable" fullname="QAbstractCallPolicyManager::isAvailable" href="qabstractcallpolicymanager.html#isAvailable" location="qabstractcallpolicymanager.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="isAvailable(const QString &amp; number)">
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="registrationMessage" fullname="QAbstractCallPolicyManager::registrationMessage" href="qabstractcallpolicymanager.html#registrationMessage" location="qabstractcallpolicymanager.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="registrationMessage() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="registrationIcon" fullname="QAbstractCallPolicyManager::registrationIcon" href="qabstractcallpolicymanager.html#registrationIcon" location="qabstractcallpolicymanager.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="registrationIcon() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="registrationChanged" fullname="QAbstractCallPolicyManager::registrationChanged" href="qabstractcallpolicymanager.html#registrationChanged" location="qabstractcallpolicymanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="registrationChanged(QTelephony::RegistrationState state)">
                <parameter left="QTelephony::RegistrationState" right="" name="state" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaIpcEnvelope" href="qtopiaipcenvelope.html" location="qtopiaipcenvelope.h" bases="QDataStream" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaIpcEnvelope" fullname="QtopiaIpcEnvelope::QtopiaIpcEnvelope" href="qtopiaipcenvelope.html#QtopiaIpcEnvelope" location="qtopiaipcenvelope.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtopiaIpcEnvelope(const QString &amp; channel, const QString &amp; message)">
                <parameter left="const QString &amp;" right="" name="channel" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="message" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtopiaIpcEnvelope" fullname="QtopiaIpcEnvelope::~QtopiaIpcEnvelope" href="qtopiaipcenvelope.html#dtor.QtopiaIpcEnvelope" location="qtopiaipcenvelope.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtopiaIpcEnvelope()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="SettingsService" href="settingsservice.html" location="settingsservice.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="setStatus" fullname="SettingsService::setStatus" href="settingsservice.html#setStatus" location="settingsservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setStatus(const QString &amp; details)">
                <parameter left="const QString &amp;" right="" name="details" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activateSettings" fullname="SettingsService::activateSettings" href="settingsservice.html#activateSettings" location="settingsservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="activateSettings(const QString &amp; details)">
                <parameter left="const QString &amp;" right="" name="details" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activateDefault" fullname="SettingsService::activateDefault" href="settingsservice.html#activateDefault" location="settingsservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="activateDefault()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pullSettingStatus" fullname="SettingsService::pullSettingStatus" href="settingsservice.html#pullSettingStatus" location="settingsservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="pullSettingStatus()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="WaitIndicator" href="waitindicator.html" location="waitindicator.h" bases="QWidget" module=""></class>
        <class access="public" threadsafety="unspecified" status="main" name="QSMSSender" href="qsmssender.html" location="qsmssender.h" bases="QCommInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSMSSender" fullname="QSMSSender::QSMSSender" href="qsmssender.html#QSMSSender" location="qsmssender.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSMSSender(const QString &amp; service, QObject * parent, QCommInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="service" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QCommInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSMSSender" fullname="QSMSSender::~QSMSSender" href="qsmssender.html#dtor.QSMSSender" location="qsmssender.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSMSSender()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="send" fullname="QSMSSender::send" href="qsmssender.html#send" location="qsmssender.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="send(const QSMSMessage &amp; msg)">
                <parameter left="const QSMSMessage &amp;" right="" name="msg" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="send" fullname="QSMSSender::send" href="qsmssender.html#send-2" location="qsmssender.h" virtual="impure" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="send(const QString &amp; id, const QSMSMessage &amp; msg)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
                <parameter left="const QSMSMessage &amp;" right="" name="msg" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="finished" fullname="QSMSSender::finished" href="qsmssender.html#finished" location="qsmssender.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="finished(const QString &amp; id, QTelephony::Result result)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
                <parameter left="QTelephony::Result" right="" name="result" default=""></parameter>
            </function>
        </class>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator&gt;&gt;" href="qdl.html#operator&gt;&gt;-58" location="qdl.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="58" relates="QDL" type="QDataStream &amp;" signature="operator&gt;&gt;(QDataStream &amp; stream, QList&lt;QDLClient *&gt; &amp; clientList)">
            <parameter left="QDataStream &amp;" right="" name="stream" default=""></parameter>
            <parameter left="QList&lt;QDLClient *&gt; &amp;" right="" name="clientList" default=""></parameter>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;&lt;" href="qdl.html#operator&lt;&lt;-61" location="qdl.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="61" relates="QDL" type="QDataStream &amp;" signature="operator&lt;&lt;(QDataStream &amp; stream, const QList&lt;QDLClient *&gt; &amp; clientList)">
            <parameter left="QDataStream &amp;" right="" name="stream" default=""></parameter>
            <parameter left="const QList&lt;QDLClient *&gt; &amp;" right="" name="clientList" default=""></parameter>
        </function>
        <class access="public" threadsafety="unspecified" status="main" name="QDL" href="qdl.html" location="qdl.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="clients" fullname="QDL::clients" href="qdl.html#clients" location="qdl.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QDLClient *&gt;" signature="clients(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveLinks" fullname="QDL::saveLinks" href="qdl.html#saveLinks" location="qdl.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="saveLinks(QString &amp; str, QList&lt;QDLClient *&gt; clientList)">
                <parameter left="QString &amp;" right="" name="str" default=""></parameter>
                <parameter left="QList&lt;QDLClient *&gt;" right="" name="clientList" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="loadLinks" fullname="QDL::loadLinks" href="qdl.html#loadLinks" location="qdl.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="loadLinks(const QString &amp; str, QList&lt;QDLClient *&gt; clientList)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
                <parameter left="QList&lt;QDLClient *&gt;" right="" name="clientList" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="releaseLinks" fullname="QDL::releaseLinks" href="qdl.html#releaseLinks" location="qdl.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="releaseLinks(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activateLink" fullname="QDL::activateLink" href="qdl.html#activateLink" location="qdl.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="activateLink(const QString &amp; href, const QList&lt;QDLClient *&gt; &amp; clientList)">
                <parameter left="const QString &amp;" right="" name="href" default=""></parameter>
                <parameter left="const QList&lt;QDLClient *&gt; &amp;" right="" name="clientList" default=""></parameter>
            </function>
            <variable access="public" threadsafety="unspecified" status="commendable" name="ANCHOR_HREF_PREFIX" fullname="QDL::ANCHOR_HREF_PREFIX" href="qdl.html#ANCHOR_HREF_PREFIX-var" location="qdl.h" type="const QString" static="true"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="CLIENT_DATA_KEY" fullname="QDL::CLIENT_DATA_KEY" href="qdl.html#CLIENT_DATA_KEY-var" location="qdl.h" type="const QString" static="true"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="SOURCE_DATA_KEY" fullname="QDL::SOURCE_DATA_KEY" href="qdl.html#SOURCE_DATA_KEY-var" location="qdl.h" type="const QString" static="true"></variable>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSystemReadWriteLock" href="qsystemreadwritelock.html" location="qsystemlock.h" bases="" module="">
            <contents name="algorithm" title="Algorithm" level="1"></contents>
            <contents name="algorithm" title="Algorithm" level="2"></contents>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSystemReadWriteLock" fullname="QSystemReadWriteLock::QSystemReadWriteLock" href="qsystemreadwritelock.html#QSystemReadWriteLock" location="qsystemlock.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSystemReadWriteLock(unsigned int id, bool owner)">
                <parameter left="unsigned int" right="" name="id" default=""></parameter>
                <parameter left="bool" right="" name="owner" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSystemReadWriteLock" fullname="QSystemReadWriteLock::~QSystemReadWriteLock" href="qsystemreadwritelock.html#dtor.QSystemReadWriteLock" location="qsystemlock.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSystemReadWriteLock()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QSystemReadWriteLock::isNull" href="qsystemreadwritelock.html#isNull" location="qsystemlock.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QSystemReadWriteLock::id" href="qsystemreadwritelock.html#id" location="qsystemlock.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="unsigned int" signature="id() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lockForRead" fullname="QSystemReadWriteLock::lockForRead" href="qsystemreadwritelock.html#lockForRead" location="qsystemlock.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="lockForRead(int milliSec)">
                <parameter left="int" right="" name="milliSec" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lockForWrite" fullname="QSystemReadWriteLock::lockForWrite" href="qsystemreadwritelock.html#lockForWrite" location="qsystemlock.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="lockForWrite(int milliSec)">
                <parameter left="int" right="" name="milliSec" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unlock" fullname="QSystemReadWriteLock::unlock" href="qsystemreadwritelock.html#unlock" location="qsystemlock.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="unlock()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSystemMutex" href="qsystemmutex.html" location="qsystemlock.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSystemMutex" fullname="QSystemMutex::QSystemMutex" href="qsystemmutex.html#QSystemMutex" location="qsystemlock.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSystemMutex(unsigned int id, bool owner)">
                <parameter left="unsigned int" right="" name="id" default=""></parameter>
                <parameter left="bool" right="" name="owner" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSystemMutex" fullname="QSystemMutex::~QSystemMutex" href="qsystemmutex.html#dtor.QSystemMutex" location="qsystemlock.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSystemMutex()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QSystemMutex::isNull" href="qsystemmutex.html#isNull" location="qsystemlock.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QSystemMutex::id" href="qsystemmutex.html#id" location="qsystemlock.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="unsigned int" signature="id() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lock" fullname="QSystemMutex::lock" href="qsystemmutex.html#lock" location="qsystemlock.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="lock(int milliSec)">
                <parameter left="int" right="" name="milliSec" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unlock" fullname="QSystemMutex::unlock" href="qsystemmutex.html#unlock" location="qsystemlock.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="unlock()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QDeviceButton" href="qdevicebutton.html" location="qdevicebutton.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QDeviceButton" fullname="QDeviceButton::QDeviceButton" href="qdevicebutton.html#QDeviceButton" location="qdevicebutton.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDeviceButton()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDeviceButton" fullname="QDeviceButton::~QDeviceButton" href="qdevicebutton.html#dtor.QDeviceButton" location="qdevicebutton.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDeviceButton()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="keycode" fullname="QDeviceButton::keycode" href="qdevicebutton.html#keycode" location="qdevicebutton.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="keycode() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="context" fullname="QDeviceButton::context" href="qdevicebutton.html#context" location="qdevicebutton.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="context() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="userText" fullname="QDeviceButton::userText" href="qdevicebutton.html#userText" location="qdevicebutton.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="userText() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pixmap" fullname="QDeviceButton::pixmap" href="qdevicebutton.html#pixmap" location="qdevicebutton.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPixmap" signature="pixmap() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pressedAction" fullname="QDeviceButton::pressedAction" href="qdevicebutton.html#pressedAction" location="qdevicebutton.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtopiaServiceRequest" signature="pressedAction() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="heldAction" fullname="QDeviceButton::heldAction" href="qdevicebutton.html#heldAction" location="qdevicebutton.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtopiaServiceRequest" signature="heldAction() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="releasedAction" fullname="QDeviceButton::releasedAction" href="qdevicebutton.html#releasedAction" location="qdevicebutton.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtopiaServiceRequest" signature="releasedAction() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pressedActionMappable" fullname="QDeviceButton::pressedActionMappable" href="qdevicebutton.html#pressedActionMappable" location="qdevicebutton.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="pressedActionMappable() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="heldActionMappable" fullname="QDeviceButton::heldActionMappable" href="qdevicebutton.html#heldActionMappable" location="qdevicebutton.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="heldActionMappable() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="releasedActionMappable" fullname="QDeviceButton::releasedActionMappable" href="qdevicebutton.html#releasedActionMappable" location="qdevicebutton.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="releasedActionMappable() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setKeycode" fullname="QDeviceButton::setKeycode" href="qdevicebutton.html#setKeycode" location="qdevicebutton.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setKeycode(int keycode)">
                <parameter left="int" right="" name="keycode" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContext" fullname="QDeviceButton::setContext" href="qdevicebutton.html#setContext" location="qdevicebutton.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setContext(const QString &amp; context)">
                <parameter left="const QString &amp;" right="" name="context" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUserText" fullname="QDeviceButton::setUserText" href="qdevicebutton.html#setUserText" location="qdevicebutton.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setUserText(const QString &amp; text)">
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPixmap" fullname="QDeviceButton::setPixmap" href="qdevicebutton.html#setPixmap" location="qdevicebutton.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPixmap(const QString &amp; pmn)">
                <parameter left="const QString &amp;" right="" name="pmn" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPressedAction" fullname="QDeviceButton::setPressedAction" href="qdevicebutton.html#setPressedAction" location="qdevicebutton.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPressedAction(const QtopiaServiceRequest &amp; action)">
                <parameter left="const QtopiaServiceRequest &amp;" right="" name="action" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHeldAction" fullname="QDeviceButton::setHeldAction" href="qdevicebutton.html#setHeldAction" location="qdevicebutton.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHeldAction(const QtopiaServiceRequest &amp; action)">
                <parameter left="const QtopiaServiceRequest &amp;" right="" name="action" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setReleasedAction" fullname="QDeviceButton::setReleasedAction" href="qdevicebutton.html#setReleasedAction" location="qdevicebutton.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setReleasedAction(const QtopiaServiceRequest &amp; action)">
                <parameter left="const QtopiaServiceRequest &amp;" right="" name="action" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPressedActionMappable" fullname="QDeviceButton::setPressedActionMappable" href="qdevicebutton.html#setPressedActionMappable" location="qdevicebutton.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPressedActionMappable(bool mappable)">
                <parameter left="bool" right="" name="mappable" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHeldActionMappable" fullname="QDeviceButton::setHeldActionMappable" href="qdevicebutton.html#setHeldActionMappable" location="qdevicebutton.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHeldActionMappable(bool mappable)">
                <parameter left="bool" right="" name="mappable" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setReleasedActionMappable" fullname="QDeviceButton::setReleasedActionMappable" href="qdevicebutton.html#setReleasedActionMappable" location="qdevicebutton.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setReleasedActionMappable(bool mappable)">
                <parameter left="bool" right="" name="mappable" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QDeviceButton::operator==" href="qdevicebutton.html#operator==" location="qdevicebutton.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QDeviceButton &amp; e) const">
                <parameter left="const QDeviceButton &amp;" right="" name="e" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QBluetoothHeadsetService" href="qbluetoothheadsetservice.html" location="qbluetoothhsservice_p.h" bases="QBluetoothAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothHeadsetService" fullname="QBluetoothHeadsetService::QBluetoothHeadsetService" href="qbluetoothheadsetservice.html#QBluetoothHeadsetService" location="qbluetoothhsservice_p.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothHeadsetService(const QString &amp; service, const QString &amp; displayName, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="displayName" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothHeadsetService" fullname="QBluetoothHeadsetService::~QBluetoothHeadsetService" href="qbluetoothheadsetservice.html#dtor.QBluetoothHeadsetService" location="qbluetoothhsservice_p.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothHeadsetService()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connect" fullname="QBluetoothHeadsetService::connect" href="qbluetoothheadsetservice.html#connect" location="qbluetoothhsservice_p.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="connect(const QBluetoothAddress &amp; addr, int rfcomm_channel)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
                <parameter left="int" right="" name="rfcomm_channel" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disconnect" fullname="QBluetoothHeadsetService::disconnect" href="qbluetoothheadsetservice.html#disconnect" location="qbluetoothhsservice_p.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="disconnect()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSpeakerVolume" fullname="QBluetoothHeadsetService::setSpeakerVolume" href="qbluetoothheadsetservice.html#setSpeakerVolume" location="qbluetoothhsservice_p.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSpeakerVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMicrophoneVolume" fullname="QBluetoothHeadsetService::setMicrophoneVolume" href="qbluetoothheadsetservice.html#setMicrophoneVolume" location="qbluetoothhsservice_p.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMicrophoneVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="releaseAudio" fullname="QBluetoothHeadsetService::releaseAudio" href="qbluetoothheadsetservice.html#releaseAudio" location="qbluetoothhsservice_p.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="releaseAudio()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectAudio" fullname="QBluetoothHeadsetService::connectAudio" href="qbluetoothheadsetservice.html#connectAudio" location="qbluetoothhsservice_p.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="connectAudio()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QBluetoothHeadsetCommInterface" href="qbluetoothheadsetcomminterface.html" location="qbluetoothhsservice_p.h" bases="QAbstractIpcInterfaceGroup" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothHeadsetCommInterface" fullname="QBluetoothHeadsetCommInterface::QBluetoothHeadsetCommInterface" href="qbluetoothheadsetcomminterface.html#QBluetoothHeadsetCommInterface" location="qbluetoothhsservice_p.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothHeadsetCommInterface(const QByteArray &amp; audioDev, QBluetoothHeadsetService * parent)">
                <parameter left="const QByteArray &amp;" right="" name="audioDev" default=""></parameter>
                <parameter left="QBluetoothHeadsetService *" right="" name="parent" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothHeadsetCommInterface" fullname="QBluetoothHeadsetCommInterface::~QBluetoothHeadsetCommInterface" href="qbluetoothheadsetcomminterface.html#dtor.QBluetoothHeadsetCommInterface" location="qbluetoothhsservice_p.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothHeadsetCommInterface()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="SxeProgramInfo" href="sxeprograminfo.html" location="qtopiasxe.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="SxeProgramInfo" fullname="SxeProgramInfo::SxeProgramInfo" href="sxeprograminfo.html#SxeProgramInfo" location="qtopiasxe.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="SxeProgramInfo()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~SxeProgramInfo" fullname="SxeProgramInfo::~SxeProgramInfo" href="sxeprograminfo.html#dtor.SxeProgramInfo" location="qtopiasxe.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~SxeProgramInfo()"></function>
            <variable access="public" threadsafety="unspecified" status="commendable" name="fileName" fullname="SxeProgramInfo::fileName" href="sxeprograminfo.html#fileName-var" location="qtopiasxe.h" type="QString" static="false"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="relPath" fullname="SxeProgramInfo::relPath" href="sxeprograminfo.html#relPath-var" location="qtopiasxe.h" type="QString" static="false"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="runRoot" fullname="SxeProgramInfo::runRoot" href="sxeprograminfo.html#runRoot-var" location="qtopiasxe.h" type="QString" static="false"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="installRoot" fullname="SxeProgramInfo::installRoot" href="sxeprograminfo.html#installRoot-var" location="qtopiasxe.h" type="QString" static="false"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="domain" fullname="SxeProgramInfo::domain" href="sxeprograminfo.html#domain-var" location="qtopiasxe.h" type="QString" static="false"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="id" fullname="SxeProgramInfo::id" href="sxeprograminfo.html#id-var" location="qtopiasxe.h" type="unsigned char" static="false"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="key" fullname="SxeProgramInfo::key" href="sxeprograminfo.html#key-var" location="qtopiasxe.h" type="char[QSXE_KEY_LEN]" static="false"></variable>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="SxeProgramInfo::isValid" href="sxeprograminfo.html#isValid" location="qtopiasxe.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="absolutePath" fullname="SxeProgramInfo::absolutePath" href="sxeprograminfo.html#absolutePath" location="qtopiasxe.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="absolutePath() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="locateBinary" fullname="SxeProgramInfo::locateBinary" href="sxeprograminfo.html#locateBinary" location="qtopiasxe.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="locateBinary()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="suid" fullname="SxeProgramInfo::suid" href="sxeprograminfo.html#suid" location="qtopiasxe.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="suid()"></function>
        </class>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;&lt;" href="sxeprograminfo.html#operator&lt;&lt;-62" location="qtopiasxe.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="62" relates="SxeProgramInfo" type="QDebug" signature="operator&lt;&lt;(QDebug debug, const SxeProgramInfo &amp; progInfo)">
            <parameter left="QDebug" right="" name="debug" default=""></parameter>
            <parameter left="const SxeProgramInfo &amp;" right="" name="progInfo" default=""></parameter>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="checkAndSetProcessKey" href="sxeprograminfo.html#checkAndSetProcessKey" location="qtopiasxe.h" virtual="non" meta="plain" const="false" static="false" overload="false" relates="SxeProgramInfo" type="void" signature="checkAndSetProcessKey(const char * key, const char * app)">
            <parameter left="const char *" right="" name="key" default=""></parameter>
            <parameter left="const char *" right="" name="app" default=""></parameter>
        </function>
        <class access="public" threadsafety="unspecified" status="commendable" name="OomManager" href="oommanager.html" location="oommanager.h" bases="QObject" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Importance" fullname="OomManager::Importance" href="oommanager.html#Importance-enum" location="oommanager.h">
                <value name="Expendable" value="0"></value>
                <value name="Important" value="1"></value>
                <value name="Critical" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="OomManager" fullname="OomManager::OomManager" href="oommanager.html#OomManager" location="oommanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="OomManager()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~OomManager" fullname="OomManager::~OomManager" href="oommanager.html#dtor.OomManager" location="oommanager.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~OomManager()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insert" fullname="OomManager::insert" href="oommanager.html#insert" location="oommanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insert(const QString &amp; app, int pid)">
                <parameter left="const QString &amp;" right="" name="app" default=""></parameter>
                <parameter left="int" right="" name="pid" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remove" fullname="OomManager::remove" href="oommanager.html#remove" location="oommanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="remove(const QString &amp; app)">
                <parameter left="const QString &amp;" right="" name="app" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="expendableProcs" fullname="OomManager::expendableProcs" href="oommanager.html#expendableProcs" location="oommanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QMap&lt;QString, int&gt; &amp;" signature="expendableProcs() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="importantProcs" fullname="OomManager::importantProcs" href="oommanager.html#importantProcs" location="oommanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QMap&lt;QString, int&gt; &amp;" signature="importantProcs() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasExpendableProcs" fullname="OomManager::hasExpendableProcs" href="oommanager.html#hasExpendableProcs" location="oommanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasExpendableProcs() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasImportantProcs" fullname="OomManager::hasImportantProcs" href="oommanager.html#hasImportantProcs" location="oommanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasImportantProcs() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isExpendable" fullname="OomManager::isExpendable" href="oommanager.html#isExpendable" location="oommanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isExpendable(const QString &amp; app) const">
                <parameter left="const QString &amp;" right="" name="app" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isImportant" fullname="OomManager::isImportant" href="oommanager.html#isImportant" location="oommanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isImportant(const QString &amp; app) const">
                <parameter left="const QString &amp;" right="" name="app" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="procWithBiggestScore" fullname="OomManager::procWithBiggestScore" href="oommanager.html#procWithBiggestScore" location="oommanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="procWithBiggestScore(Importance t) const">
                <parameter left="Importance" right="" name="t" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAudioState" href="qaudiostate.html" location="qaudiostate.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioState" fullname="QAudioState::QAudioState" href="qaudiostate.html#QAudioState" location="qaudiostate.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAudioState(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAudioState" fullname="QAudioState::~QAudioState" href="qaudiostate.html#dtor.QAudioState" location="qaudiostate.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAudioState()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="info" fullname="QAudioState::info" href="qaudiostate.html#info" location="qaudiostate.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QAudioStateInfo" signature="info() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="capabilities" fullname="QAudioState::capabilities" href="qaudiostate.html#capabilities" location="qaudiostate.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QAudio::AudioCapabilities" signature="capabilities() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAvailable" fullname="QAudioState::isAvailable" href="qaudiostate.html#isAvailable" location="qaudiostate.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isAvailable() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="enter" fullname="QAudioState::enter" href="qaudiostate.html#enter" location="qaudiostate.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="enter(QAudio::AudioCapability capability)">
                <parameter left="QAudio::AudioCapability" right="" name="capability" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="leave" fullname="QAudioState::leave" href="qaudiostate.html#leave" location="qaudiostate.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="leave()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availabilityChanged" fullname="QAudioState::availabilityChanged" href="qaudiostate.html#availabilityChanged" location="qaudiostate.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="availabilityChanged(bool available)">
                <parameter left="bool" right="" name="available" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="doNotUseHint" fullname="QAudioState::doNotUseHint" href="qaudiostate.html#doNotUseHint" location="qaudiostate.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="doNotUseHint()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="useHint" fullname="QAudioState::useHint" href="qaudiostate.html#useHint" location="qaudiostate.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="useHint()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="ContactsService" href="contactsservice.html" location="addressbook.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="editPersonal" fullname="ContactsService::editPersonal" href="contactsservice.html#editPersonal" location="addressbook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="editPersonal()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="editPersonalAndClose" fullname="ContactsService::editPersonalAndClose" href="contactsservice.html#editPersonalAndClose" location="addressbook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="editPersonalAndClose()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addContact" fullname="ContactsService::addContact" href="contactsservice.html#addContact" location="addressbook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="addContact(const QContact &amp; contact)">
                <parameter left="const QContact &amp;" right="" name="contact" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeContact" fullname="ContactsService::removeContact" href="contactsservice.html#removeContact" location="addressbook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="removeContact(const QContact &amp; contact)">
                <parameter left="const QContact &amp;" right="" name="contact" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateContact" fullname="ContactsService::updateContact" href="contactsservice.html#updateContact" location="addressbook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="updateContact(const QContact &amp; contact)">
                <parameter left="const QContact &amp;" right="" name="contact" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addAndEditContact" fullname="ContactsService::addAndEditContact" href="contactsservice.html#addAndEditContact" location="addressbook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="addAndEditContact(const QContact &amp; contact)">
                <parameter left="const QContact &amp;" right="" name="contact" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addPhoneNumberToContact" fullname="ContactsService::addPhoneNumberToContact" href="contactsservice.html#addPhoneNumberToContact" location="addressbook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="addPhoneNumberToContact(const QString &amp; phoneNumber)">
                <parameter left="const QString &amp;" right="" name="phoneNumber" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="createNewContact" fullname="ContactsService::createNewContact" href="contactsservice.html#createNewContact" location="addressbook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="createNewContact(const QString &amp; phoneNumber)">
                <parameter left="const QString &amp;" right="" name="phoneNumber" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="showContact" fullname="ContactsService::showContact" href="contactsservice.html#showContact" location="addressbook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="showContact(const QUniqueId &amp; uid)">
                <parameter left="const QUniqueId &amp;" right="" name="uid" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContactImage" fullname="ContactsService::setContactImage" href="contactsservice.html#setContactImage" location="addressbook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setContactImage(const QString &amp; filename)">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContactImage" fullname="ContactsService::setContactImage" href="contactsservice.html#setContactImage-2" location="addressbook.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="setContactImage(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activateLink" fullname="ContactsService::activateLink" href="contactsservice.html#activateLink" location="addressbook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="activateLink(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestLinks" fullname="ContactsService::requestLinks" href="contactsservice.html#requestLinks" location="addressbook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="requestLinks(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="ContactsPhoneService" href="contactsphoneservice.html" location="addressbook.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="smsBusinessCard" fullname="ContactsPhoneService::smsBusinessCard" href="contactsphoneservice.html#smsBusinessCard" location="addressbook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="smsBusinessCard()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pushVCard" fullname="ContactsPhoneService::pushVCard" href="contactsphoneservice.html#pushVCard" location="addressbook.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="pushVCard(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QWindowDecorationInterface" href="qwindowdecorationinterface.html" location="qwindowdecorationinterface.h" bases="" module="">
            <class access="public" threadsafety="unspecified" status="commendable" name="WindowData" fullname="QWindowDecorationInterface::WindowData" href="qwindowdecorationinterface-windowdata.html" location="qwindowdecorationinterface.h" bases="" module="">
                <variable access="public" threadsafety="unspecified" status="commendable" name="window" fullname="QWindowDecorationInterface::WindowData::window" href="qwindowdecorationinterface-windowdata.html#window-var" location="qwindowdecorationinterface.h" type="const QWidget *" static="false"></variable>
                <variable access="public" threadsafety="unspecified" status="commendable" name="rect" fullname="QWindowDecorationInterface::WindowData::rect" href="qwindowdecorationinterface-windowdata.html#rect-var" location="qwindowdecorationinterface.h" type="QRect" static="false"></variable>
                <variable access="public" threadsafety="unspecified" status="commendable" name="palette" fullname="QWindowDecorationInterface::WindowData::palette" href="qwindowdecorationinterface-windowdata.html#palette-var" location="qwindowdecorationinterface.h" type="QPalette" static="false"></variable>
                <variable access="public" threadsafety="unspecified" status="commendable" name="caption" fullname="QWindowDecorationInterface::WindowData::caption" href="qwindowdecorationinterface-windowdata.html#caption-var" location="qwindowdecorationinterface.h" type="QString" static="false"></variable>
                <enum access="public" threadsafety="unspecified" status="commendable" name="Flags" fullname="QWindowDecorationInterface::WindowData::Flags" href="qwindowdecorationinterface-windowdata.html#Flags-enum" location="qwindowdecorationinterface.h">
                    <value name="Maximized" value="0x01"></value>
                    <value name="Dialog" value="0x02"></value>
                    <value name="Active" value="0x04"></value>
                </enum>
                <variable access="public" threadsafety="unspecified" status="commendable" name="flags" fullname="QWindowDecorationInterface::WindowData::flags" href="qwindowdecorationinterface-windowdata.html#flags-var" location="qwindowdecorationinterface.h" type="quint32" static="false"></variable>
                <variable access="public" threadsafety="unspecified" status="commendable" name="reserved" fullname="QWindowDecorationInterface::WindowData::reserved" href="qwindowdecorationinterface-windowdata.html#reserved-var" location="qwindowdecorationinterface.h" type="quint32" static="false"></variable>
            </class>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Metric" fullname="QWindowDecorationInterface::Metric" href="qwindowdecorationinterface.html#Metric-enum" location="qwindowdecorationinterface.h">
                <value name="TitleHeight" value="0"></value>
                <value name="LeftBorder" value="1"></value>
                <value name="RightBorder" value="2"></value>
                <value name="TopBorder" value="3"></value>
                <value name="BottomBorder" value="4"></value>
                <value name="OKWidth" value="5"></value>
                <value name="CloseWidth" value="6"></value>
                <value name="HelpWidth" value="7"></value>
                <value name="MaximizeWidth" value="8"></value>
                <value name="CornerGrabSize" value="9"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="metric" fullname="QWindowDecorationInterface::metric" href="qwindowdecorationinterface.html#metric" location="qpedecoration_qws.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" type="int" signature="metric(Metric metric, const WindowData * wd) const">
                <parameter left="Metric" right="" name="metric" default=""></parameter>
                <parameter left="const WindowData *" right="" name="wd" default=""></parameter>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Area" fullname="QWindowDecorationInterface::Area" href="qwindowdecorationinterface.html#Area-enum" location="qwindowdecorationinterface.h">
                <value name="Border" value="0"></value>
                <value name="Title" value="1"></value>
                <value name="TitleText" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="drawArea" fullname="QWindowDecorationInterface::drawArea" href="qwindowdecorationinterface.html#drawArea" location="qpedecoration_qws.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" type="void" signature="drawArea(Area area, QPainter * p, const WindowData * wd) const">
                <parameter left="Area" right="" name="area" default=""></parameter>
                <parameter left="QPainter *" right="" name="p" default=""></parameter>
                <parameter left="const WindowData *" right="" name="wd" default=""></parameter>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Button" fullname="QWindowDecorationInterface::Button" href="qwindowdecorationinterface.html#Button-enum" location="qwindowdecorationinterface.h">
                <value name="OK" value="0"></value>
                <value name="Close" value="1"></value>
                <value name="Help" value="2"></value>
                <value name="Maximize" value="3"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="drawButton" fullname="QWindowDecorationInterface::drawButton" href="qwindowdecorationinterface.html#drawButton" location="qpedecoration_qws.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" type="void" signature="drawButton(Button button, QPainter * painter, const WindowData * wd, int x, int y, int w, int h, QDecoration::DecorationState state) const">
                <parameter left="Button" right="" name="button" default=""></parameter>
                <parameter left="QPainter *" right="" name="painter" default=""></parameter>
                <parameter left="const WindowData *" right="" name="wd" default=""></parameter>
                <parameter left="int" right="" name="x" default=""></parameter>
                <parameter left="int" right="" name="y" default=""></parameter>
                <parameter left="int" right="" name="w" default=""></parameter>
                <parameter left="int" right="" name="h" default=""></parameter>
                <parameter left="QDecoration::DecorationState" right="" name="state" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mask" fullname="QWindowDecorationInterface::mask" href="qwindowdecorationinterface.html#mask" location="qpedecoration_qws.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QRegion" signature="mask(const WindowData * wd) const">
                <parameter left="const WindowData *" right="" name="wd" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QWindowDecorationInterface::name" href="qwindowdecorationinterface.html#name" location="qwindowdecorationinterface.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="icon" fullname="QWindowDecorationInterface::icon" href="qwindowdecorationinterface.html#icon" location="qwindowdecorationinterface.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QPixmap" signature="icon() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QWindowDecorationPlugin" href="qwindowdecorationplugin.html" location="qwindowdecorationinterface.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QWindowDecorationPlugin" fullname="QWindowDecorationPlugin::QWindowDecorationPlugin" href="qwindowdecorationplugin.html#QWindowDecorationPlugin" location="qwindowdecorationinterface.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QWindowDecorationPlugin(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QWindowDecorationPlugin" fullname="QWindowDecorationPlugin::~QWindowDecorationPlugin" href="qwindowdecorationplugin.html#dtor.QWindowDecorationPlugin" location="qwindowdecorationinterface.cpp" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QWindowDecorationPlugin()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="keys" fullname="QWindowDecorationPlugin::keys" href="qwindowdecorationplugin.html#keys" location="qwindowdecorationinterface.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="keys() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decoration" fullname="QWindowDecorationPlugin::decoration" href="qwindowdecorationplugin.html#decoration" location="qwindowdecorationinterface.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QWindowDecorationInterface *" signature="decoration(const QString &amp; key)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtopiaVpnManager" href="qtopiavpnmanager.html" location="vpnmanager.h" bases="QtopiaIpcAdaptor" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaVpnManager" fullname="QtopiaVpnManager::QtopiaVpnManager" href="qtopiavpnmanager.html#QtopiaVpnManager" location="vpnmanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtopiaVpnManager(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtopiaVpnManager" fullname="QtopiaVpnManager::~QtopiaVpnManager" href="qtopiavpnmanager.html#dtor.QtopiaVpnManager" location="vpnmanager.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtopiaVpnManager()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QWspField" href="qwspfield.html" location="qwsppdu.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QWspField" fullname="QWspField::QWspField" href="qwspfield.html#QWspField" location="qwsppdu.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QWspField()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QWspField" fullname="QWspField::QWspField" href="qwspfield.html#QWspField-2" location="qwsppdu.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QWspField(const QWspField &amp; field)">
                <parameter left="const QWspField &amp;" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QWspField" fullname="QWspField::~QWspField" href="qwspfield.html#dtor.QWspField" location="qwsppdu.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QWspField()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QWspField::operator=" href="qwspfield.html#operator=" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QWspField &amp;" signature="operator=(const QWspField &amp; field)">
                <parameter left="const QWspField &amp;" right="" name="field" default=""></parameter>
            </function>
            <variable access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QWspField::name" href="qwspfield.html#name-var" location="qwsppdu.h" type="QString" static="false"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QWspField::value" href="qwspfield.html#value-var" location="qwsppdu.h" type="QString" static="false"></variable>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QWspDateTime" href="qwspdatetime.html" location="qwsppdu.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="parseDate" fullname="QWspDateTime::parseDate" href="qwspdatetime.html#parseDate" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QDateTime" signature="parseDate(QString in)">
                <parameter left="QString" right="" name="in" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dateString" fullname="QWspDateTime::dateString" href="qwspdatetime.html#dateString" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="dateString(QDateTime d)">
                <parameter left="QDateTime" right="" name="d" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromGmtTime_t" fullname="QWspDateTime::fromGmtTime_t" href="qwspdatetime.html#fromGmtTime_t" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QDateTime" signature="fromGmtTime_t(quint32 t)">
                <parameter left="quint32" right="" name="t" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toTime_t" fullname="QWspDateTime::toTime_t" href="qwspdatetime.html#toTime_t" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="quint32" signature="toTime_t(const QDateTime &amp; dt)">
                <parameter left="const QDateTime &amp;" right="" name="dt" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toGmtTime_t" fullname="QWspDateTime::toGmtTime_t" href="qwspdatetime.html#toGmtTime_t" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="quint32" signature="toGmtTime_t(const QDateTime &amp; dt)">
                <parameter left="const QDateTime &amp;" right="" name="dt" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QWspPart" href="qwsppart.html" location="qwsppdu.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QWspPart" fullname="QWspPart::QWspPart" href="qwsppart.html#QWspPart" location="qwsppdu.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QWspPart()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QWspPart" fullname="QWspPart::QWspPart" href="qwsppart.html#QWspPart-2" location="qwsppdu.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QWspPart(const QWspPart &amp; part)">
                <parameter left="const QWspPart &amp;" right="" name="part" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QWspPart" fullname="QWspPart::~QWspPart" href="qwsppart.html#dtor.QWspPart" location="qwsppdu.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QWspPart()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QWspPart::operator=" href="qwsppart.html#operator=" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QWspPart &amp;" signature="operator=(const QWspPart &amp; part)">
                <parameter left="const QWspPart &amp;" right="" name="part" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="headers" fullname="QWspPart::headers" href="qwsppart.html#headers" location="qwsppdu.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QList&lt;QWspField&gt; &amp;" signature="headers() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="header" fullname="QWspPart::header" href="qwsppart.html#header" location="qwsppdu.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QWspField *" signature="header(const QString &amp; name) const">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addHeader" fullname="QWspPart::addHeader" href="qwsppart.html#addHeader" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addHeader(const QWspField &amp; h)">
                <parameter left="const QWspField &amp;" right="" name="h" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addHeader" fullname="QWspPart::addHeader" href="qwsppart.html#addHeader-2" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="addHeader(const QString &amp; name, const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="data" fullname="QWspPart::data" href="qwsppart.html#data" location="qwsppdu.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QByteArray &amp;" signature="data() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setData" fullname="QWspPart::setData" href="qwsppart.html#setData" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setData(const char * d, int l)">
                <parameter left="const char *" right="" name="d" default=""></parameter>
                <parameter left="int" right="" name="l" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readData" fullname="QWspPart::readData" href="qwsppart.html#readData" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="readData(QIODevice * d, int l)">
                <parameter left="QIODevice *" right="" name="d" default=""></parameter>
                <parameter left="int" right="" name="l" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="writeData" fullname="QWspPart::writeData" href="qwsppart.html#writeData" location="qwsppdu.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="writeData(QIODevice * d) const">
                <parameter left="QIODevice *" right="" name="d" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QWspMultipart" href="qwspmultipart.html" location="qwsppdu.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QWspMultipart" fullname="QWspMultipart::QWspMultipart" href="qwspmultipart.html#QWspMultipart" location="qwsppdu.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QWspMultipart()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QWspMultipart" fullname="QWspMultipart::QWspMultipart" href="qwspmultipart.html#QWspMultipart-2" location="qwsppdu.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QWspMultipart(const QWspMultipart &amp; mpart)">
                <parameter left="const QWspMultipart &amp;" right="" name="mpart" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QWspMultipart" fullname="QWspMultipart::~QWspMultipart" href="qwspmultipart.html#dtor.QWspMultipart" location="qwsppdu.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QWspMultipart()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QWspMultipart::operator=" href="qwspmultipart.html#operator=" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QWspMultipart &amp;" signature="operator=(const QWspMultipart &amp; mpart)">
                <parameter left="const QWspMultipart &amp;" right="" name="mpart" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="count" fullname="QWspMultipart::count" href="qwspmultipart.html#count" location="qwsppdu.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="count() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addPart" fullname="QWspMultipart::addPart" href="qwspmultipart.html#addPart" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addPart(const QWspPart &amp; p)">
                <parameter left="const QWspPart &amp;" right="" name="p" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="part" fullname="QWspMultipart::part" href="qwspmultipart.html#part" location="qwsppdu.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QWspPart &amp;" signature="part(int idx) const">
                <parameter left="int" right="" name="idx" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QWspPush" href="qwsppush.html" location="qwsppdu.h" bases="QWspPart" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QWspPush" fullname="QWspPush::QWspPush" href="qwsppush.html#QWspPush" location="qwsppdu.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QWspPush()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QWspPush" fullname="QWspPush::QWspPush" href="qwsppush.html#QWspPush-2" location="qwsppdu.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QWspPush(const QWspPush &amp; push)">
                <parameter left="const QWspPush &amp;" right="" name="push" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QWspPush" fullname="QWspPush::~QWspPush" href="qwsppush.html#dtor.QWspPush" location="qwsppdu.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QWspPush()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QWspPush::operator=" href="qwsppush.html#operator=" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QWspPush &amp;" signature="operator=(const QWspPush &amp; push)">
                <parameter left="const QWspPush &amp;" right="" name="push" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="identifier" fullname="QWspPush::identifier" href="qwsppush.html#identifier" location="qwsppdu.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="identifier() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pduType" fullname="QWspPush::pduType" href="qwsppush.html#pduType" location="qwsppdu.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="pduType() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIdentifier" fullname="QWspPush::setIdentifier" href="qwsppush.html#setIdentifier" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIdentifier(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPduType" fullname="QWspPush::setPduType" href="qwsppush.html#setPduType" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPduType(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="quickContentType" fullname="QWspPush::quickContentType" href="qwsppush.html#quickContentType" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="quickContentType(const QByteArray &amp; data)">
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QWspPduDecoder" href="qwsppdudecoder.html" location="qwsppdu.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QWspPduDecoder" fullname="QWspPduDecoder::QWspPduDecoder" href="qwsppdudecoder.html#QWspPduDecoder" location="qwsppdu.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QWspPduDecoder(QIODevice * d)">
                <parameter left="QIODevice *" right="" name="d" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QWspPduDecoder" fullname="QWspPduDecoder::~QWspPduDecoder" href="qwsppdudecoder.html#dtor.QWspPduDecoder" location="qwsppdu.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QWspPduDecoder()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="peekOctet" fullname="QWspPduDecoder::peekOctet" href="qwsppdudecoder.html#peekOctet" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="quint8" signature="peekOctet()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodeOctet" fullname="QWspPduDecoder::decodeOctet" href="qwsppdudecoder.html#decodeOctet" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="quint8" signature="decodeOctet()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodeUInt8" fullname="QWspPduDecoder::decodeUInt8" href="qwsppdudecoder.html#decodeUInt8" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="quint8" signature="decodeUInt8()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodeUInt16" fullname="QWspPduDecoder::decodeUInt16" href="qwsppdudecoder.html#decodeUInt16" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="quint16" signature="decodeUInt16()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodeUInt32" fullname="QWspPduDecoder::decodeUInt32" href="qwsppdudecoder.html#decodeUInt32" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="quint32" signature="decodeUInt32()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodeUIntVar" fullname="QWspPduDecoder::decodeUIntVar" href="qwsppdudecoder.html#decodeUIntVar" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="quint32" signature="decodeUIntVar()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodeShortInteger" fullname="QWspPduDecoder::decodeShortInteger" href="qwsppdudecoder.html#decodeShortInteger" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="quint8" signature="decodeShortInteger()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodeLongInteger" fullname="QWspPduDecoder::decodeLongInteger" href="qwsppdudecoder.html#decodeLongInteger" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="quint32" signature="decodeLongInteger()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodeInteger" fullname="QWspPduDecoder::decodeInteger" href="qwsppdudecoder.html#decodeInteger" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="quint32" signature="decodeInteger()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodeLength" fullname="QWspPduDecoder::decodeLength" href="qwsppdudecoder.html#decodeLength" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="quint32" signature="decodeLength()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodeTextString" fullname="QWspPduDecoder::decodeTextString" href="qwsppdudecoder.html#decodeTextString" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="decodeTextString()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodeEncodedString" fullname="QWspPduDecoder::decodeEncodedString" href="qwsppdudecoder.html#decodeEncodedString" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="decodeEncodedString()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodeTokenText" fullname="QWspPduDecoder::decodeTokenText" href="qwsppdudecoder.html#decodeTokenText" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="decodeTokenText()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodeVersion" fullname="QWspPduDecoder::decodeVersion" href="qwsppdudecoder.html#decodeVersion" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="decodeVersion()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodeContentType" fullname="QWspPduDecoder::decodeContentType" href="qwsppdudecoder.html#decodeContentType" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="decodeContentType()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodeField" fullname="QWspPduDecoder::decodeField" href="qwsppdudecoder.html#decodeField" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QWspField" signature="decodeField()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodeParameter" fullname="QWspPduDecoder::decodeParameter" href="qwsppdudecoder.html#decodeParameter" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="decodeParameter()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodeMultipart" fullname="QWspPduDecoder::decodeMultipart" href="qwsppdudecoder.html#decodeMultipart" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QWspMultipart" signature="decodeMultipart()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodeContentTypeAndHeaders" fullname="QWspPduDecoder::decodeContentTypeAndHeaders" href="qwsppdudecoder.html#decodeContentTypeAndHeaders" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="decodeContentTypeAndHeaders(QWspPart &amp; part, quint32 hdrLen)">
                <parameter left="QWspPart &amp;" right="" name="part" default=""></parameter>
                <parameter left="quint32" right="" name="hdrLen" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodePart" fullname="QWspPduDecoder::decodePart" href="qwsppdudecoder.html#decodePart" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QWspPart" signature="decodePart()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodePush" fullname="QWspPduDecoder::decodePush" href="qwsppdudecoder.html#decodePush" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QWspPush" signature="decodePush()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHeaderCodec" fullname="QWspPduDecoder::setHeaderCodec" href="qwsppdudecoder.html#setHeaderCodec" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHeaderCodec(QWspHeaderCodec * c)">
                <parameter left="QWspHeaderCodec *" right="" name="c" default=""></parameter>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Status" fullname="QWspPduDecoder::Status" href="qwsppdudecoder.html#Status-enum" location="qwsppdu.h">
                <value name="OK" value="0"></value>
                <value name="Unhandled" value="1"></value>
                <value name="Eof" value="2"></value>
                <value name="Fatal" value="3"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="status" fullname="QWspPduDecoder::status" href="qwsppdudecoder.html#status" location="qwsppdu.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Status" signature="status() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStatus" fullname="QWspPduDecoder::setStatus" href="qwsppdudecoder.html#setStatus" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setStatus(Status s)">
                <parameter left="Status" right="" name="s" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="device" fullname="QWspPduDecoder::device" href="qwsppdudecoder.html#device" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QIODevice *" signature="device()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectCodePage" fullname="QWspPduDecoder::selectCodePage" href="qwsppdudecoder.html#selectCodePage" location="qwsppdu.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="selectCodePage(quint8 page)">
                <parameter left="quint8" right="" name="page" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QWspPduEncoder" href="qwsppduencoder.html" location="qwsppdu.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QWspPduEncoder" fullname="QWspPduEncoder::QWspPduEncoder" href="qwsppduencoder.html#QWspPduEncoder" location="qwsppdu.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QWspPduEncoder(QIODevice * d)">
                <parameter left="QIODevice *" right="" name="d" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QWspPduEncoder" fullname="QWspPduEncoder::~QWspPduEncoder" href="qwsppduencoder.html#dtor.QWspPduEncoder" location="qwsppdu.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QWspPduEncoder()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodeOctet" fullname="QWspPduEncoder::encodeOctet" href="qwsppduencoder.html#encodeOctet" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="encodeOctet(quint8 octet)">
                <parameter left="quint8" right="" name="octet" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodeUInt8" fullname="QWspPduEncoder::encodeUInt8" href="qwsppduencoder.html#encodeUInt8" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="encodeUInt8(quint8 octet)">
                <parameter left="quint8" right="" name="octet" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodeUInt16" fullname="QWspPduEncoder::encodeUInt16" href="qwsppduencoder.html#encodeUInt16" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="encodeUInt16(quint16 d)">
                <parameter left="quint16" right="" name="d" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodeUInt32" fullname="QWspPduEncoder::encodeUInt32" href="qwsppduencoder.html#encodeUInt32" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="encodeUInt32(quint32 d)">
                <parameter left="quint32" right="" name="d" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodeUIntVar" fullname="QWspPduEncoder::encodeUIntVar" href="qwsppduencoder.html#encodeUIntVar" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="encodeUIntVar(quint32 iv)">
                <parameter left="quint32" right="" name="iv" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodeShortInteger" fullname="QWspPduEncoder::encodeShortInteger" href="qwsppduencoder.html#encodeShortInteger" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="encodeShortInteger(quint8 d)">
                <parameter left="quint8" right="" name="d" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodeLongInteger" fullname="QWspPduEncoder::encodeLongInteger" href="qwsppduencoder.html#encodeLongInteger" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="encodeLongInteger(quint32 iv)">
                <parameter left="quint32" right="" name="iv" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodeInteger" fullname="QWspPduEncoder::encodeInteger" href="qwsppduencoder.html#encodeInteger" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="encodeInteger(quint32 d)">
                <parameter left="quint32" right="" name="d" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodeLength" fullname="QWspPduEncoder::encodeLength" href="qwsppduencoder.html#encodeLength" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="encodeLength(quint32 d)">
                <parameter left="quint32" right="" name="d" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodeTextString" fullname="QWspPduEncoder::encodeTextString" href="qwsppduencoder.html#encodeTextString" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="encodeTextString(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodeEncodedString" fullname="QWspPduEncoder::encodeEncodedString" href="qwsppduencoder.html#encodeEncodedString" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="encodeEncodedString(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodeVersion" fullname="QWspPduEncoder::encodeVersion" href="qwsppduencoder.html#encodeVersion" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="encodeVersion(const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodeTokenText" fullname="QWspPduEncoder::encodeTokenText" href="qwsppduencoder.html#encodeTokenText" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="encodeTokenText(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodeContentType" fullname="QWspPduEncoder::encodeContentType" href="qwsppduencoder.html#encodeContentType" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="encodeContentType(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodeField" fullname="QWspPduEncoder::encodeField" href="qwsppduencoder.html#encodeField" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="encodeField(const QWspField &amp; field)">
                <parameter left="const QWspField &amp;" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodeParameter" fullname="QWspPduEncoder::encodeParameter" href="qwsppduencoder.html#encodeParameter" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="encodeParameter(const QString &amp; p)">
                <parameter left="const QString &amp;" right="" name="p" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodeMultipart" fullname="QWspPduEncoder::encodeMultipart" href="qwsppduencoder.html#encodeMultipart" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="encodeMultipart(const QWspMultipart &amp; mp)">
                <parameter left="const QWspMultipart &amp;" right="" name="mp" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodePart" fullname="QWspPduEncoder::encodePart" href="qwsppduencoder.html#encodePart" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="encodePart(const QWspPart &amp; part)">
                <parameter left="const QWspPart &amp;" right="" name="part" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodePush" fullname="QWspPduEncoder::encodePush" href="qwsppduencoder.html#encodePush" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="encodePush(const QWspPush &amp; part)">
                <parameter left="const QWspPush &amp;" right="" name="part" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="longIntegerLength" fullname="QWspPduEncoder::longIntegerLength" href="qwsppduencoder.html#longIntegerLength" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="longIntegerLength(quint32 iv)">
                <parameter left="quint32" right="" name="iv" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="integerLength" fullname="QWspPduEncoder::integerLength" href="qwsppduencoder.html#integerLength" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="integerLength(quint32 d)">
                <parameter left="quint32" right="" name="d" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHeaderCodec" fullname="QWspPduEncoder::setHeaderCodec" href="qwsppduencoder.html#setHeaderCodec" location="qwsppdu.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHeaderCodec(QWspHeaderCodec * c)">
                <parameter left="QWspHeaderCodec *" right="" name="c" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemSMSReader" href="qmodemsmsreader.html" location="qmodemsmsreader.h" bases="QSMSReader" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemSMSReader" fullname="QModemSMSReader::QModemSMSReader" href="qmodemsmsreader.html#QModemSMSReader" location="qmodemsmsreader.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemSMSReader(QModemService * service)">
                <parameter left="QModemService *" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemSMSReader" fullname="QModemSMSReader::~QModemSMSReader" href="qmodemsmsreader.html#dtor.QModemSMSReader" location="qmodemsmsreader.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemSMSReader()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="messageStore" fullname="QModemSMSReader::messageStore" href="qmodemsmsreader.html#messageStore" location="qmodemsmsreader.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="messageStore() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="messageListCommand" fullname="QModemSMSReader::messageListCommand" href="qmodemsmsreader.html#messageListCommand" location="qmodemsmsreader.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="messageListCommand() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="simDownload" fullname="QModemSMSReader::simDownload" href="qmodemsmsreader.html#simDownload" location="qmodemsmsreader.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="simDownload(const QSMSMessage &amp; message)">
                <parameter left="const QSMSMessage &amp;" right="" name="message" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothRfcommSerialPort" href="qbluetoothrfcommserialport.html" location="qbluetoothrfcommserialport.h" bases="QObject" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Flag" fullname="QBluetoothRfcommSerialPort::Flag" href="qbluetoothrfcommserialport.html#Flag-enum" location="qbluetoothrfcommserialport.h" typedef="QBluetoothRfcommSerialPort::Flags">
                <value name="KeepAlive" value="0x01"></value>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="Flags" fullname="QBluetoothRfcommSerialPort::Flags" href="qbluetoothrfcommserialport.html#Flags-typedef" location="qbluetoothrfcommserialport.h" enum="QBluetoothRfcommSerialPort::Flag"></typedef>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QBluetoothRfcommSerialPort::Error" href="qbluetoothrfcommserialport.html#Error-enum" location="qbluetoothrfcommserialport.h">
                <value name="NoError" value="0"></value>
                <value name="SocketNotConnected" value="1"></value>
                <value name="ConnectionFailed" value="2"></value>
                <value name="ConnectionCancelled" value="3"></value>
                <value name="CreationError" value="4"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothRfcommSerialPort" fullname="QBluetoothRfcommSerialPort::QBluetoothRfcommSerialPort" href="qbluetoothrfcommserialport.html#QBluetoothRfcommSerialPort" location="qbluetoothrfcommserialport.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothRfcommSerialPort(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothRfcommSerialPort" fullname="QBluetoothRfcommSerialPort::QBluetoothRfcommSerialPort" href="qbluetoothrfcommserialport.html#QBluetoothRfcommSerialPort-2" location="qbluetoothrfcommserialport.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QBluetoothRfcommSerialPort(QBluetoothRfcommSocket * socket, QFlags&lt;QBluetoothRfcommSerialPort::Flag&gt; deviceFlags, QObject * parent)">
                <parameter left="QBluetoothRfcommSocket *" right="" name="socket" default=""></parameter>
                <parameter left="QFlags&lt;QBluetoothRfcommSerialPort::Flag&gt;" right="" name="deviceFlags" default="0"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothRfcommSerialPort" fullname="QBluetoothRfcommSerialPort::~QBluetoothRfcommSerialPort" href="qbluetoothrfcommserialport.html#dtor.QBluetoothRfcommSerialPort" location="qbluetoothrfcommserialport.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothRfcommSerialPort()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connect" fullname="QBluetoothRfcommSerialPort::connect" href="qbluetoothrfcommserialport.html#connect" location="qbluetoothrfcommserialport.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="connect(const QBluetoothAddress &amp; local, const QBluetoothAddress &amp; remote, int channel)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="local" default=""></parameter>
                <parameter left="const QBluetoothAddress &amp;" right="" name="remote" default=""></parameter>
                <parameter left="int" right="" name="channel" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disconnect" fullname="QBluetoothRfcommSerialPort::disconnect" href="qbluetoothrfcommserialport.html#disconnect" location="qbluetoothrfcommserialport.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="disconnect()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="device" fullname="QBluetoothRfcommSerialPort::device" href="qbluetoothrfcommserialport.html#device" location="qbluetoothrfcommserialport.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="device() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QBluetoothRfcommSerialPort::id" href="qbluetoothrfcommserialport.html#id" location="qbluetoothrfcommserialport.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="id() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="flags" fullname="QBluetoothRfcommSerialPort::flags" href="qbluetoothrfcommserialport.html#flags" location="qbluetoothrfcommserialport.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothRfcommSerialPort::Flags" signature="flags() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QBluetoothRfcommSerialPort::error" href="qbluetoothrfcommserialport.html#error" location="qbluetoothrfcommserialport.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothRfcommSerialPort::Error" signature="error() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QBluetoothRfcommSerialPort::errorString" href="qbluetoothrfcommserialport.html#errorString" location="qbluetoothrfcommserialport.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remoteAddress" fullname="QBluetoothRfcommSerialPort::remoteAddress" href="qbluetoothrfcommserialport.html#remoteAddress" location="qbluetoothrfcommserialport.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothAddress" signature="remoteAddress() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remoteChannel" fullname="QBluetoothRfcommSerialPort::remoteChannel" href="qbluetoothrfcommserialport.html#remoteChannel" location="qbluetoothrfcommserialport.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="remoteChannel() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localAddress" fullname="QBluetoothRfcommSerialPort::localAddress" href="qbluetoothrfcommserialport.html#localAddress" location="qbluetoothrfcommserialport.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothAddress" signature="localAddress() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="listDevices" fullname="QBluetoothRfcommSerialPort::listDevices" href="qbluetoothrfcommserialport.html#listDevices" location="qbluetoothrfcommserialport.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;int&gt;" signature="listDevices()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="listDevices" fullname="QBluetoothRfcommSerialPort::listDevices" href="qbluetoothrfcommserialport.html#listDevices-2" location="qbluetoothrfcommserialport.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QList&lt;int&gt;" signature="listDevices(const QBluetoothLocalDevice &amp; local)">
                <parameter left="const QBluetoothLocalDevice &amp;" right="" name="local" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="releaseDevice" fullname="QBluetoothRfcommSerialPort::releaseDevice" href="qbluetoothrfcommserialport.html#releaseDevice" location="qbluetoothrfcommserialport.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="releaseDevice(int id)">
                <parameter left="int" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connected" fullname="QBluetoothRfcommSerialPort::connected" href="qbluetoothrfcommserialport.html#connected" location="qbluetoothrfcommserialport.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="connected(const QString &amp; device)">
                <parameter left="const QString &amp;" right="" name="device" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QBluetoothRfcommSerialPort::error" href="qbluetoothrfcommserialport.html#error-2" location="qbluetoothrfcommserialport.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="error(QBluetoothRfcommSerialPort::Error err)">
                <parameter left="QBluetoothRfcommSerialPort::Error" right="" name="err" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disconnected" fullname="QBluetoothRfcommSerialPort::disconnected" href="qbluetoothrfcommserialport.html#disconnected" location="qbluetoothrfcommserialport.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="disconnected()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaDocumentServer" href="qtopiadocumentserver.html" location="qtopiadocumentserver.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaDocumentServer" fullname="QtopiaDocumentServer::QtopiaDocumentServer" href="qtopiadocumentserver.html#QtopiaDocumentServer" location="qtopiadocumentserver.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtopiaDocumentServer(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtopiaDocumentServer" fullname="QtopiaDocumentServer::~QtopiaDocumentServer" href="qtopiadocumentserver.html#dtor.QtopiaDocumentServer" location="qtopiadocumentserver.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtopiaDocumentServer()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="shutdown" fullname="QtopiaDocumentServer::shutdown" href="qtopiadocumentserver.html#shutdown" location="qtopiadocumentserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="shutdown()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="shutdownComplete" fullname="QtopiaDocumentServer::shutdownComplete" href="qtopiadocumentserver.html#shutdownComplete" location="qtopiadocumentserver.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="shutdownComplete()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaTimer" href="qtopiatimer.html" location="qtopiatimer.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaTimer" fullname="QtopiaTimer::QtopiaTimer" href="qtopiatimer.html#QtopiaTimer" location="qtopiatimer.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtopiaTimer(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtopiaTimer" fullname="QtopiaTimer::~QtopiaTimer" href="qtopiatimer.html#dtor.QtopiaTimer" location="qtopiatimer.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtopiaTimer()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="QtopiaTimer::Type" href="qtopiatimer.html#Type-enum" location="qtopiatimer.h">
                <value name="Normal" value="0x0000"></value>
                <value name="PauseWhenInactive" value="0x0001"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QtopiaTimer::type" href="qtopiatimer.html#type" location="qtopiatimer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Type" signature="type() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="interval" fullname="QtopiaTimer::interval" href="qtopiatimer.html#interval" location="qtopiatimer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="interval() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isActive" fullname="QtopiaTimer::isActive" href="qtopiatimer.html#isActive" location="qtopiatimer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isActive() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setInterval" fullname="QtopiaTimer::setInterval" href="qtopiatimer.html#setInterval" location="qtopiatimer.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setInterval(int msec, QtopiaTimer::Type type)">
                <parameter left="int" right="" name="msec" default=""></parameter>
                <parameter left="QtopiaTimer::Type" right="" name="type" default="Normal"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSingleShot" fullname="QtopiaTimer::isSingleShot" href="qtopiatimer.html#isSingleShot" location="qtopiatimer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSingleShot() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSingleShot" fullname="QtopiaTimer::setSingleShot" href="qtopiatimer.html#setSingleShot" location="qtopiatimer.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSingleShot(bool singleShot)">
                <parameter left="bool" right="" name="singleShot" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QtopiaTimer::start" href="qtopiatimer.html#start" location="qtopiatimer.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="start()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QtopiaTimer::stop" href="qtopiatimer.html#stop" location="qtopiatimer.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="stop()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QtopiaTimer::start" href="qtopiatimer.html#start-2" location="qtopiatimer.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="start(int msec, QtopiaTimer::Type type)">
                <parameter left="int" right="" name="msec" default=""></parameter>
                <parameter left="QtopiaTimer::Type" right="" name="type" default="Normal"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="timeout" fullname="QtopiaTimer::timeout" href="qtopiatimer.html#timeout" location="qtopiatimer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="timeout()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtopiaPowerManagerService" href="qtopiapowermanagerservice.html" location="qtopiapowermanagerservice.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="setIntervals" fullname="QtopiaPowerManagerService::setIntervals" href="qtopiapowermanagerservice.html#setIntervals" location="qtopiapowermanagerservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setIntervals(int dim, int lightOff, int suspend)">
                <parameter left="int" right="" name="dim" default=""></parameter>
                <parameter left="int" right="" name="lightOff" default=""></parameter>
                <parameter left="int" right="" name="suspend" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultIntervals" fullname="QtopiaPowerManagerService::setDefaultIntervals" href="qtopiapowermanagerservice.html#setDefaultIntervals" location="qtopiapowermanagerservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setDefaultIntervals()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBacklight" fullname="QtopiaPowerManagerService::setBacklight" href="qtopiapowermanagerservice.html#setBacklight" location="qtopiapowermanagerservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setBacklight(int brightness)">
                <parameter left="int" right="" name="brightness" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setConstraint" fullname="QtopiaPowerManagerService::setConstraint" href="qtopiapowermanagerservice.html#setConstraint" location="qtopiapowermanagerservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setConstraint(int constraint, QString app)">
                <parameter left="int" right="" name="constraint" default=""></parameter>
                <parameter left="QString" right="" name="app" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setActive" fullname="QtopiaPowerManagerService::setActive" href="qtopiapowermanagerservice.html#setActive" location="qtopiapowermanagerservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setActive(bool on)">
                <parameter left="bool" right="" name="on" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaSessionRequest" href="qmediasessionrequest.html" location="qmediasessionrequest.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaSessionRequest" fullname="QMediaSessionRequest::QMediaSessionRequest" href="qmediasessionrequest.html#QMediaSessionRequest" location="qmediasessionrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaSessionRequest()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaSessionRequest" fullname="QMediaSessionRequest::QMediaSessionRequest" href="qmediasessionrequest.html#QMediaSessionRequest-2" location="qmediasessionrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMediaSessionRequest(QString const &amp; domain, QString const &amp; type)">
                <parameter left="QString const &amp;" right="" name="domain" default=""></parameter>
                <parameter left="QString const &amp;" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaSessionRequest" fullname="QMediaSessionRequest::QMediaSessionRequest" href="qmediasessionrequest.html#QMediaSessionRequest-3" location="qmediasessionrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMediaSessionRequest(QMediaSessionRequest const &amp; copy)">
                <parameter left="QMediaSessionRequest const &amp;" right="" name="copy" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaSessionRequest" fullname="QMediaSessionRequest::~QMediaSessionRequest" href="qmediasessionrequest.html#dtor.QMediaSessionRequest" location="qmediasessionrequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaSessionRequest()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QMediaSessionRequest::id" href="qmediasessionrequest.html#id" location="qmediasessionrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUuid const &amp;" signature="id() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="domain" fullname="QMediaSessionRequest::domain" href="qmediasessionrequest.html#domain" location="qmediasessionrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString const &amp;" signature="domain() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QMediaSessionRequest::type" href="qmediasessionrequest.html#type" location="qmediasessionrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString const &amp;" signature="type() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QMediaSessionRequest::operator=" href="qmediasessionrequest.html#operator=" location="qmediasessionrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMediaSessionRequest &amp;" signature="operator=(QMediaSessionRequest const &amp; rhs)">
                <parameter left="QMediaSessionRequest const &amp;" right="" name="rhs" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;&lt;" fullname="QMediaSessionRequest::operator&lt;&lt;" href="qmediasessionrequest.html#operator&lt;&lt;" location="qmediasessionrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMediaSessionRequest &amp;" signature="operator&lt;&lt;(DataType const &amp; data)">
                <parameter left="DataType const &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&gt;&gt;" fullname="QMediaSessionRequest::operator&gt;&gt;" href="qmediasessionrequest.html#operator&gt;&gt;" location="qmediasessionrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMediaSessionRequest &amp;" signature="operator&gt;&gt;(DataType &amp; data)">
                <parameter left="DataType &amp;" right="" name="data" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothRfcommServer" href="qbluetoothrfcommserver.html" location="qbluetoothrfcommserver.h" bases="QBluetoothAbstractServer" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothRfcommServer" fullname="QBluetoothRfcommServer::QBluetoothRfcommServer" href="qbluetoothrfcommserver.html#QBluetoothRfcommServer" location="qbluetoothrfcommserver.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothRfcommServer(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothRfcommServer" fullname="QBluetoothRfcommServer::~QBluetoothRfcommServer" href="qbluetoothrfcommserver.html#dtor.QBluetoothRfcommServer" location="qbluetoothrfcommserver.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothRfcommServer()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="listen" fullname="QBluetoothRfcommServer::listen" href="qbluetoothrfcommserver.html#listen" location="qbluetoothrfcommserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="listen(const QBluetoothAddress &amp; local, int channel)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="local" default=""></parameter>
                <parameter left="int" right="" name="channel" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serverChannel" fullname="QBluetoothRfcommServer::serverChannel" href="qbluetoothrfcommserver.html#serverChannel" location="qbluetoothrfcommserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="serverChannel() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serverAddress" fullname="QBluetoothRfcommServer::serverAddress" href="qbluetoothrfcommserver.html#serverAddress" location="qbluetoothrfcommserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothAddress" signature="serverAddress() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEncrypted" fullname="QBluetoothRfcommServer::isEncrypted" href="qbluetoothrfcommserver.html#isEncrypted" location="qbluetoothrfcommserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEncrypted() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAuthenticated" fullname="QBluetoothRfcommServer::isAuthenticated" href="qbluetoothrfcommserver.html#isAuthenticated" location="qbluetoothrfcommserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isAuthenticated() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="securityOptions" fullname="QBluetoothRfcommServer::securityOptions" href="qbluetoothrfcommserver.html#securityOptions" location="qbluetoothrfcommserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetooth::SecurityOptions" signature="securityOptions() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSecurityOptions" fullname="QBluetoothRfcommServer::setSecurityOptions" href="qbluetoothrfcommserver.html#setSecurityOptions" location="qbluetoothrfcommserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setSecurityOptions(QFlags&lt;QBluetooth::SecurityOption&gt; options)">
                <parameter left="QFlags&lt;QBluetooth::SecurityOption&gt;" right="" name="options" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="SecurityMonitorTask" href="securitymonitortask.html" location="securitymonitor.h" bases="SystemShutdownHandler" module=""></class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QCopRouter" href="qcoprouter.html" location="qcoprouter.h" bases="ApplicationIpcRouter" module=""></class>
        <class access="public" threadsafety="unspecified" status="main" name="QTimeString" href="qtimestring.html" location="qtimestring.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Length" fullname="QTimeString::Length" href="qtimestring.html#Length-enum" location="qtimestring.h">
                <value name="Short" value="0"></value>
                <value name="Medium" value="1"></value>
                <value name="Long" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="nameOfWeekDay" fullname="QTimeString::nameOfWeekDay" href="qtimestring.html#nameOfWeekDay" location="qtimestring.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="nameOfWeekDay(int day, Length len)">
                <parameter left="int" right="" name="day" default=""></parameter>
                <parameter left="Length" right="" name="len" default="Medium"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="nameOfMonth" fullname="QTimeString::nameOfMonth" href="qtimestring.html#nameOfMonth" location="qtimestring.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="nameOfMonth(int month, Length len)">
                <parameter left="int" right="" name="month" default=""></parameter>
                <parameter left="Length" right="" name="len" default="Medium"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="numberDateString" fullname="QTimeString::numberDateString" href="qtimestring.html#numberDateString" location="qtimestring.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="numberDateString(const QDate &amp; date, Length len)">
                <parameter left="const QDate &amp;" right="" name="date" default=""></parameter>
                <parameter left="Length" right="" name="len" default="Medium"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentFormat" fullname="QTimeString::currentFormat" href="qtimestring.html#currentFormat" location="qtimestring.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="currentFormat()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="formatOptions" fullname="QTimeString::formatOptions" href="qtimestring.html#formatOptions" location="qtimestring.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStringList" signature="formatOptions()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localH" fullname="QTimeString::localH" href="qtimestring.html#localH" location="qtimestring.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="localH(int hour)">
                <parameter left="int" right="" name="hour" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localHM" fullname="QTimeString::localHM" href="qtimestring.html#localHM" location="qtimestring.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="localHM(const QTime &amp; t, Length len)">
                <parameter left="const QTime &amp;" right="" name="t" default=""></parameter>
                <parameter left="Length" right="" name="len" default="Medium"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localHMS" fullname="QTimeString::localHMS" href="qtimestring.html#localHMS" location="qtimestring.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="localHMS(const QTime &amp; t, Length len)">
                <parameter left="const QTime &amp;" right="" name="t" default=""></parameter>
                <parameter left="Length" right="" name="len" default="Medium"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localHMDayOfWeek" fullname="QTimeString::localHMDayOfWeek" href="qtimestring.html#localHMDayOfWeek" location="qtimestring.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="localHMDayOfWeek(const QDateTime &amp; t, Length len)">
                <parameter left="const QDateTime &amp;" right="" name="t" default=""></parameter>
                <parameter left="Length" right="" name="len" default="Medium"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localHMSDayOfWeek" fullname="QTimeString::localHMSDayOfWeek" href="qtimestring.html#localHMSDayOfWeek" location="qtimestring.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="localHMSDayOfWeek(const QDateTime &amp; t, Length len)">
                <parameter left="const QDateTime &amp;" right="" name="t" default=""></parameter>
                <parameter left="Length" right="" name="len" default="Medium"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localMD" fullname="QTimeString::localMD" href="qtimestring.html#localMD" location="qtimestring.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="localMD(const QDate &amp; dt, Length len)">
                <parameter left="const QDate &amp;" right="" name="dt" default=""></parameter>
                <parameter left="Length" right="" name="len" default="Medium"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localYMD" fullname="QTimeString::localYMD" href="qtimestring.html#localYMD" location="qtimestring.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="localYMD(const QDate &amp; dt, Length len)">
                <parameter left="const QDate &amp;" right="" name="dt" default=""></parameter>
                <parameter left="Length" right="" name="len" default="Medium"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localYMDHMS" fullname="QTimeString::localYMDHMS" href="qtimestring.html#localYMDHMS" location="qtimestring.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="localYMDHMS(const QDateTime &amp; dt, Length len)">
                <parameter left="const QDateTime &amp;" right="" name="dt" default=""></parameter>
                <parameter left="Length" right="" name="len" default="Medium"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localDayOfWeek" fullname="QTimeString::localDayOfWeek" href="qtimestring.html#localDayOfWeek" location="qtimestring.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="localDayOfWeek(const QDate &amp; date, Length len)">
                <parameter left="const QDate &amp;" right="" name="date" default=""></parameter>
                <parameter left="Length" right="" name="len" default="Medium"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentAMPM" fullname="QTimeString::currentAMPM" href="qtimestring.html#currentAMPM" location="qtimestring.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="currentAMPM()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QKeypadLightAccessory" href="qkeypadlightaccessory.html" location="qkeypadlightaccessory.h" bases="QHardwareInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QKeypadLightAccessory" fullname="QKeypadLightAccessory::QKeypadLightAccessory" href="qkeypadlightaccessory.html#QKeypadLightAccessory" location="qkeypadlightaccessory.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QKeypadLightAccessory(const QString &amp; id, QObject * parent, QAbstractIpcInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="id" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QAbstractIpcInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QKeypadLightAccessory" fullname="QKeypadLightAccessory::~QKeypadLightAccessory" href="qkeypadlightaccessory.html#dtor.QKeypadLightAccessory" location="qkeypadlightaccessory.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QKeypadLightAccessory()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="on" fullname="QKeypadLightAccessory::on" href="qkeypadlightaccessory.html#on" location="qkeypadlightaccessory.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="on() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOn" fullname="QKeypadLightAccessory::setOn" href="qkeypadlightaccessory.html#setOn" location="qkeypadlightaccessory.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setOn(const bool value)">
                <parameter left="const bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="onModified" fullname="QKeypadLightAccessory::onModified" href="qkeypadlightaccessory.html#onModified" location="qkeypadlightaccessory.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="onModified()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QKeypadLightAccessoryProvider" href="qkeypadlightaccessoryprovider.html" location="qkeypadlightaccessory.h" bases="QKeypadLightAccessory" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QKeypadLightAccessoryProvider" fullname="QKeypadLightAccessoryProvider::QKeypadLightAccessoryProvider" href="qkeypadlightaccessoryprovider.html#QKeypadLightAccessoryProvider" location="qkeypadlightaccessory.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QKeypadLightAccessoryProvider(const QString &amp; id, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QKeypadLightAccessoryProvider" fullname="QKeypadLightAccessoryProvider::~QKeypadLightAccessoryProvider" href="qkeypadlightaccessoryprovider.html#dtor.QKeypadLightAccessoryProvider" location="qkeypadlightaccessory.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QKeypadLightAccessoryProvider()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOn" fullname="QKeypadLightAccessoryProvider::setOn" href="qkeypadlightaccessoryprovider.html#setOn" location="qkeypadlightaccessory.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setOn(const bool value)">
                <parameter left="const bool" right="" name="value" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="AlertService" href="alertservice.html" location="alertservicetask.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="soundAlert" fullname="AlertService::soundAlert" href="alertservice.html#soundAlert" location="alertservicetask.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="soundAlert()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="AlertServiceTask" href="alertservicetask.html" location="alertservicetask.h" bases="AlertService" module=""></class>
        <class access="public" threadsafety="unspecified" status="main" name="QPhoneCallImpl" href="qphonecallimpl.html" location="qphonecallprovider.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QPhoneCallImpl" fullname="QPhoneCallImpl::QPhoneCallImpl" href="qphonecallimpl.html#QPhoneCallImpl" location="qphonecallprovider.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPhoneCallImpl(QPhoneCallProvider * provider, const QString &amp; identifier, const QString &amp; callType)">
                <parameter left="QPhoneCallProvider *" right="" name="provider" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="identifier" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="callType" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPhoneCallImpl" fullname="QPhoneCallImpl::~QPhoneCallImpl" href="qphonecallimpl.html#dtor.QPhoneCallImpl" location="qphonecallprovider.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPhoneCallImpl()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Action" fullname="QPhoneCallImpl::Action" href="qphonecallimpl.html#Action-enum" location="qphonecallprovider.h" typedef="QPhoneCallImpl::Actions">
                <value name="None" value="0"></value>
                <value name="Accept" value="0x0001"></value>
                <value name="Hold" value="0x0002"></value>
                <value name="ActivateCall" value="0x0004"></value>
                <value name="ActivateGroup" value="0x0008"></value>
                <value name="Join" value="0x0010"></value>
                <value name="JoinAndDetach" value="0x0020"></value>
                <value name="Tone" value="0x0040"></value>
                <value name="Transfer" value="0x0080"></value>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="Actions" fullname="QPhoneCallImpl::Actions" href="qphonecallimpl.html#Actions-typedef" location="qphonecallprovider.h" enum="QPhoneCallImpl::Action"></typedef>
            <function access="public" threadsafety="unspecified" status="commendable" name="provider" fullname="QPhoneCallImpl::provider" href="qphonecallimpl.html#provider" location="qphonecallprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPhoneCallProvider &amp;" signature="provider() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="identifier" fullname="QPhoneCallImpl::identifier" href="qphonecallimpl.html#identifier" location="qphonecallprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="identifier() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callType" fullname="QPhoneCallImpl::callType" href="qphonecallimpl.html#callType" location="qphonecallprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="callType() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QPhoneCallImpl::state" href="qphonecallimpl.html#state" location="qphonecallprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPhoneCall::State" signature="state() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="number" fullname="QPhoneCallImpl::number" href="qphonecallimpl.html#number" location="qphonecallprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="number() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="actions" fullname="QPhoneCallImpl::actions" href="qphonecallimpl.html#actions" location="qphonecallprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPhoneCallImpl::Actions" signature="actions() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dial" fullname="QPhoneCallImpl::dial" href="qphonecallimpl.html#dial" location="qphonecallprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="dial(const QDialOptions &amp; options)">
                <parameter left="const QDialOptions &amp;" right="" name="options" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hangup" fullname="QPhoneCallImpl::hangup" href="qphonecallimpl.html#hangup" location="qphonecallprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="hangup(QPhoneCall::Scope scope)">
                <parameter left="QPhoneCall::Scope" right="" name="scope" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="accept" fullname="QPhoneCallImpl::accept" href="qphonecallimpl.html#accept" location="qphonecallprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="accept()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hold" fullname="QPhoneCallImpl::hold" href="qphonecallimpl.html#hold" location="qphonecallprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="hold()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activate" fullname="QPhoneCallImpl::activate" href="qphonecallimpl.html#activate" location="qphonecallprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="activate(QPhoneCall::Scope scope)">
                <parameter left="QPhoneCall::Scope" right="" name="scope" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="join" fullname="QPhoneCallImpl::join" href="qphonecallimpl.html#join" location="qphonecallprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="join(bool detachSubscriber)">
                <parameter left="bool" right="" name="detachSubscriber" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="tone" fullname="QPhoneCallImpl::tone" href="qphonecallimpl.html#tone" location="qphonecallprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="tone(const QString &amp; tones)">
                <parameter left="const QString &amp;" right="" name="tones" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="transfer" fullname="QPhoneCallImpl::transfer" href="qphonecallimpl.html#transfer" location="qphonecallprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="transfer(const QString &amp; number)">
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestFloor" fullname="QPhoneCallImpl::requestFloor" href="qphonecallimpl.html#requestFloor" location="qphonecallprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="requestFloor(int secs)">
                <parameter left="int" right="" name="secs" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="releaseFloor" fullname="QPhoneCallImpl::releaseFloor" href="qphonecallimpl.html#releaseFloor" location="qphonecallprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="releaseFloor()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setState" fullname="QPhoneCallImpl::setState" href="qphonecallimpl.html#setState" location="qphonecallprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setState(QPhoneCall::State state)">
                <parameter left="QPhoneCall::State" right="" name="state" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNumber" fullname="QPhoneCallImpl::setNumber" href="qphonecallimpl.html#setNumber" location="qphonecallprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setNumber(const QString &amp; number)">
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setActions" fullname="QPhoneCallImpl::setActions" href="qphonecallimpl.html#setActions" location="qphonecallprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setActions(QFlags&lt;QPhoneCallImpl::Action&gt; actions)">
                <parameter left="QFlags&lt;QPhoneCallImpl::Action&gt;" right="" name="actions" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dataPort" fullname="QPhoneCallImpl::dataPort" href="qphonecallimpl.html#dataPort" location="qphonecallprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="dataPort() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDataPort" fullname="QPhoneCallImpl::setDataPort" href="qphonecallimpl.html#setDataPort" location="qphonecallprovider.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDataPort(int port)">
                <parameter left="int" right="" name="port" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="emitNotification" fullname="QPhoneCallImpl::emitNotification" href="qphonecallimpl.html#emitNotification" location="qphonecallprovider.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="emitNotification(QPhoneCall::Notification type, const QString &amp; value)">
                <parameter left="QPhoneCall::Notification" right="" name="type" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QPhoneCallImpl::stateChanged" href="qphonecallimpl.html#stateChanged" location="qphonecallprovider.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestFailed" fullname="QPhoneCallImpl::requestFailed" href="qphonecallimpl.html#requestFailed" location="qphonecallprovider.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="requestFailed(QPhoneCall::Request request)">
                <parameter left="QPhoneCall::Request" right="" name="request" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="notification" fullname="QPhoneCallImpl::notification" href="qphonecallimpl.html#notification" location="qphonecallprovider.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="notification(QPhoneCall::Notification type, const QString &amp; value)">
                <parameter left="QPhoneCall::Notification" right="" name="type" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="floorChanged" fullname="QPhoneCallImpl::floorChanged" href="qphonecallimpl.html#floorChanged" location="qphonecallprovider.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="floorChanged(bool haveFloor, bool floorAvailable)">
                <parameter left="bool" right="" name="haveFloor" default=""></parameter>
                <parameter left="bool" right="" name="floorAvailable" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPhoneCallProvider" href="qphonecallprovider.html" location="qphonecallprovider.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QPhoneCallProvider" fullname="QPhoneCallProvider::QPhoneCallProvider" href="qphonecallprovider.html#QPhoneCallProvider" location="qphonecallprovider.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPhoneCallProvider(const QString &amp; service, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPhoneCallProvider" fullname="QPhoneCallProvider::~QPhoneCallProvider" href="qphonecallprovider.html#dtor.QPhoneCallProvider" location="qphonecallprovider.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPhoneCallProvider()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="service" fullname="QPhoneCallProvider::service" href="qphonecallprovider.html#service" location="qphonecallprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="service() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="calls" fullname="QPhoneCallProvider::calls" href="qphonecallprovider.html#calls" location="qphonecallprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QPhoneCallImpl *&gt;" signature="calls() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="findCall" fullname="QPhoneCallProvider::findCall" href="qphonecallprovider.html#findCall" location="qphonecallprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPhoneCallImpl *" signature="findCall(const QString &amp; identifier) const">
                <parameter left="const QString &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="beginStateTransaction" fullname="QPhoneCallProvider::beginStateTransaction" href="qphonecallprovider.html#beginStateTransaction" location="qphonecallprovider.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="beginStateTransaction()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="endStateTransaction" fullname="QPhoneCallProvider::endStateTransaction" href="qphonecallprovider.html#endStateTransaction" location="qphonecallprovider.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="endStateTransaction()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callStatesChanged" fullname="QPhoneCallProvider::callStatesChanged" href="qphonecallprovider.html#callStatesChanged" location="qphonecallprovider.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="callStatesChanged()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="create" fullname="QPhoneCallProvider::create" href="qphonecallprovider.html#create" location="qphonecallprovider.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QPhoneCallImpl *" signature="create(const QString &amp; identifier, const QString &amp; callType)">
                <parameter left="const QString &amp;" right="" name="identifier" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="callType" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setCallTypes" fullname="QPhoneCallProvider::setCallTypes" href="qphonecallprovider.html#setCallTypes" location="qphonecallprovider.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCallTypes(const QStringList &amp; types)">
                <parameter left="const QStringList &amp;" right="" name="types" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="registerCall" fullname="QPhoneCallProvider::registerCall" href="qphonecallprovider.html#registerCall" location="qphonecallprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="registerCall(QPhoneCallImpl * call)">
                <parameter left="QPhoneCallImpl *" right="" name="call" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="deregisterCall" fullname="QPhoneCallProvider::deregisterCall" href="qphonecallprovider.html#deregisterCall" location="qphonecallprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="deregisterCall(QPhoneCallImpl * call)">
                <parameter left="QPhoneCallImpl *" right="" name="call" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QCallForwarding" href="qcallforwarding.html" location="qcallforwarding.h" bases="QCommInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QCallForwarding" fullname="QCallForwarding::QCallForwarding" href="qcallforwarding.html#QCallForwarding" location="qcallforwarding.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCallForwarding(const QString &amp; service, QObject * parent, QCommInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="service" default="QString::null"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QCommInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCallForwarding" fullname="QCallForwarding::~QCallForwarding" href="qcallforwarding.html#dtor.QCallForwarding" location="qcallforwarding.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCallForwarding()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Reason" fullname="QCallForwarding::Reason" href="qcallforwarding.html#Reason-enum" location="qcallforwarding.h">
                <value name="Unconditional" value="0"></value>
                <value name="MobileBusy" value="1"></value>
                <value name="NoReply" value="2"></value>
                <value name="NotReachable" value="3"></value>
                <value name="All" value="4"></value>
                <value name="AllConditional" value="5"></value>
            </enum>
            <class access="public" threadsafety="unspecified" status="main" name="Status" fullname="QCallForwarding::Status" href="qcallforwarding-status.html" location="qcallforwarding.h" bases="" module="">
                <variable access="public" threadsafety="unspecified" status="commendable" name="cls" fullname="QCallForwarding::Status::cls" href="qcallforwarding-status.html#cls-var" location="qcallforwarding.h" type="QTelephony::CallClass" static="false"></variable>
                <variable access="public" threadsafety="unspecified" status="commendable" name="number" fullname="QCallForwarding::Status::number" href="qcallforwarding-status.html#number-var" location="qcallforwarding.h" type="QString" static="false"></variable>
                <variable access="public" threadsafety="unspecified" status="commendable" name="time" fullname="QCallForwarding::Status::time" href="qcallforwarding-status.html#time-var" location="qcallforwarding.h" type="int" static="false"></variable>
            </class>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestForwardingStatus" fullname="QCallForwarding::requestForwardingStatus" href="qcallforwarding.html#requestForwardingStatus" location="qcallforwarding.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="requestForwardingStatus(QCallForwarding::Reason reason)">
                <parameter left="QCallForwarding::Reason" right="" name="reason" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setForwarding" fullname="QCallForwarding::setForwarding" href="qcallforwarding.html#setForwarding" location="qcallforwarding.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setForwarding(QCallForwarding::Reason reason, const QCallForwarding::Status &amp; status, bool enable)">
                <parameter left="QCallForwarding::Reason" right="" name="reason" default=""></parameter>
                <parameter left="const QCallForwarding::Status &amp;" right="" name="status" default=""></parameter>
                <parameter left="bool" right="" name="enable" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="forwardingStatus" fullname="QCallForwarding::forwardingStatus" href="qcallforwarding.html#forwardingStatus" location="qcallforwarding.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="forwardingStatus(QCallForwarding::Reason reason, const QList&lt;QCallForwarding::Status&gt; &amp; status)">
                <parameter left="QCallForwarding::Reason" right="" name="reason" default=""></parameter>
                <parameter left="const QList&lt;QCallForwarding::Status&gt; &amp;" right="" name="status" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setForwardingResult" fullname="QCallForwarding::setForwardingResult" href="qcallforwarding.html#setForwardingResult" location="qcallforwarding.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="setForwardingResult(QCallForwarding::Reason reason, QTelephony::Result result)">
                <parameter left="QCallForwarding::Reason" right="" name="reason" default=""></parameter>
                <parameter left="QTelephony::Result" right="" name="result" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPackageRegistry" href="qpackageregistry.html" location="qpackageregistry.h" bases="QObject" module="">
            <contents name="program-management" title="Program Management" level="1"></contents>
            <contents name="binary-management" title="Binary Management" level="1"></contents>
            <contents name="sxe-package-database-files" title="SXE Package Database Files" level="1"></contents>
            <contents name="key-file-change-notes" title="Key File Change Notes" level="1"></contents>
            <enum access="public" threadsafety="unspecified" status="commendable" name="RegistryFile" fullname="QPackageRegistry::RegistryFile" href="qpackageregistry.html#RegistryFile-enum" location="qpackageregistry.h">
                <value name="Keyfile" value="0"></value>
                <value name="KeyfileSequence" value="1"></value>
                <value name="Manifest" value="2"></value>
                <value name="Installs" value="3"></value>
                <value name="Policy" value="4"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QPackageRegistry" fullname="QPackageRegistry::QPackageRegistry" href="qpackageregistry.html#QPackageRegistry" location="qpackageregistry.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPackageRegistry()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPackageRegistry" fullname="QPackageRegistry::~QPackageRegistry" href="qpackageregistry.html#dtor.QPackageRegistry" location="qpackageregistry.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPackageRegistry()"></function>
            <variable access="public" threadsafety="unspecified" status="commendable" name="packageDirectory" fullname="QPackageRegistry::packageDirectory" href="qpackageregistry.html#packageDirectory-var" location="qpackageregistry.h" type="const QString" static="true"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="installsFileName" fullname="QPackageRegistry::installsFileName" href="qpackageregistry.html#installsFileName-var" location="qpackageregistry.h" type="const QString" static="true"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="manifestFileName" fullname="QPackageRegistry::manifestFileName" href="qpackageregistry.html#manifestFileName-var" location="qpackageregistry.h" type="const QString" static="true"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="policyFileName" fullname="QPackageRegistry::policyFileName" href="qpackageregistry.html#policyFileName-var" location="qpackageregistry.h" type="const QString" static="true"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="profilesFileName" fullname="QPackageRegistry::profilesFileName" href="qpackageregistry.html#profilesFileName-var" location="qpackageregistry.h" type="const QString" static="true"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="binInstallPath" fullname="QPackageRegistry::binInstallPath" href="qpackageregistry.html#binInstallPath-var" location="qpackageregistry.h" type="const QString" static="true"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="qlLibInstallPath" fullname="QPackageRegistry::qlLibInstallPath" href="qpackageregistry.html#qlLibInstallPath-var" location="qpackageregistry.h" type="const QString" static="true"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="procLidsKeysPath" fullname="QPackageRegistry::procLidsKeysPath" href="qpackageregistry.html#procLidsKeysPath-var" location="qpackageregistry.h" type="const QString" static="true"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="maxProgId" fullname="QPackageRegistry::maxProgId" href="qpackageregistry.html#maxProgId-var" location="qpackageregistry.h" type="const int" static="true"></variable>
            <function access="public" threadsafety="unspecified" status="commendable" name="getInstance" fullname="QPackageRegistry::getInstance" href="qpackageregistry.html#getInstance" location="qpackageregistry.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QPackageRegistry *" signature="getInstance()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sxeConfPath" fullname="QPackageRegistry::sxeConfPath" href="qpackageregistry.html#sxeConfPath" location="qpackageregistry.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="sxeConfPath() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="initProgramInfo" fullname="QPackageRegistry::initProgramInfo" href="qpackageregistry.html#initProgramInfo" location="qpackageregistry.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="initProgramInfo(SxeProgramInfo &amp; pi)">
                <parameter left="SxeProgramInfo &amp;" right="" name="pi" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unregisterPackageBinaries" fullname="QPackageRegistry::unregisterPackageBinaries" href="qpackageregistry.html#unregisterPackageBinaries" location="qpackageregistry.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="unregisterPackageBinaries(const QString &amp; packagePath)">
                <parameter left="const QString &amp;" right="" name="packagePath" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bootstrap" fullname="QPackageRegistry::bootstrap" href="qpackageregistry.html#bootstrap" location="qpackageregistry.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="bootstrap(const QString &amp; installRoot)">
                <parameter left="const QString &amp;" right="" name="installRoot" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="isInstalledProgram" fullname="QPackageRegistry::isInstalledProgram" href="qpackageregistry.html#isInstalledProgram" location="qpackageregistry.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="isInstalledProgram(QTransportAuth::Data &amp; connectionData)">
                <parameter left="QTransportAuth::Data &amp;" right="" name="connectionData" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="getClientKey" fullname="QPackageRegistry::getClientKey" href="qpackageregistry.html#getClientKey" location="qpackageregistry.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="const unsigned char *" signature="getClientKey(unsigned char progId)">
                <parameter left="unsigned char" right="" name="progId" default=""></parameter>
            </function>
            <variable access="public" threadsafety="unspecified" status="commendable" name="clientKeys" fullname="QPackageRegistry::clientKeys" href="qpackageregistry.html#clientKeys-var" location="qpackageregistry.h" type="QCache&lt;unsigned char, unsigned char&gt;" static="false"></variable>
            <function access="public" threadsafety="unspecified" status="commendable" name="registerBinary" fullname="QPackageRegistry::registerBinary" href="qpackageregistry.html#registerBinary" location="qpackageregistry.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="registerBinary(SxeProgramInfo &amp; pi)">
                <parameter left="SxeProgramInfo &amp;" right="" name="pi" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lockManifest" fullname="QPackageRegistry::lockManifest" href="qpackageregistry.html#lockManifest" location="qpackageregistry.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="lockManifest(bool &amp; success)">
                <parameter left="bool &amp;" right="" name="success" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unlockManifest" fullname="QPackageRegistry::unlockManifest" href="qpackageregistry.html#unlockManifest" location="qpackageregistry.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="unlockManifest()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothReply" href="qbluetoothreply.html" location="qbluetoothlocaldevice.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothReply" fullname="QBluetoothReply::QBluetoothReply" href="qbluetoothreply.html#QBluetoothReply" location="qbluetoothlocaldevice.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothReply(const T &amp; value)">
                <parameter left="const T &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothReply" fullname="QBluetoothReply::QBluetoothReply" href="qbluetoothreply.html#QBluetoothReply-2" location="qbluetoothlocaldevice.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QBluetoothReply()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isError" fullname="QBluetoothReply::isError" href="qbluetoothreply.html#isError" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isError() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QBluetoothReply::value" href="qbluetoothreply.html#value" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const T &amp;" signature="value() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator const T &amp;" fullname="QBluetoothReply::operator const T &amp;" href="qbluetoothreply.html#operator const T &amp;" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="" signature="operator const T &amp;() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothLocalDevice" href="qbluetoothlocaldevice.html" location="qbluetoothlocaldevice.h" bases="QObject" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QBluetoothLocalDevice::State" href="qbluetoothlocaldevice.html#State-enum" location="qbluetoothlocaldevice.h">
                <value name="Off" value="0"></value>
                <value name="Connectable" value="1"></value>
                <value name="Discoverable" value="2"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QBluetoothLocalDevice::Error" href="qbluetoothlocaldevice.html#Error-enum" location="qbluetoothlocaldevice.h">
                <value name="NoError" value="0"></value>
                <value name="InvalidArguments" value="1"></value>
                <value name="NotAuthorized" value="2"></value>
                <value name="OutOfMemory" value="3"></value>
                <value name="NoSuchAdaptor" value="4"></value>
                <value name="UnknownAddress" value="5"></value>
                <value name="ConnectionAttemptFailed" value="6"></value>
                <value name="NotConnected" value="7"></value>
                <value name="AlreadyExists" value="8"></value>
                <value name="DoesNotExist" value="9"></value>
                <value name="InProgress" value="10"></value>
                <value name="AuthenticationFailed" value="11"></value>
                <value name="AuthenticationTimeout" value="12"></value>
                <value name="AuthenticationRejected" value="13"></value>
                <value name="AuthenticationCancelled" value="14"></value>
                <value name="UnknownError" value="15"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothLocalDevice" fullname="QBluetoothLocalDevice::QBluetoothLocalDevice" href="qbluetoothlocaldevice.html#QBluetoothLocalDevice" location="qbluetoothlocaldevice.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothLocalDevice(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothLocalDevice" fullname="QBluetoothLocalDevice::QBluetoothLocalDevice" href="qbluetoothlocaldevice.html#QBluetoothLocalDevice-2" location="qbluetoothlocaldevice.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QBluetoothLocalDevice(const QBluetoothAddress &amp; address, QObject * parent)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="address" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothLocalDevice" fullname="QBluetoothLocalDevice::QBluetoothLocalDevice" href="qbluetoothlocaldevice.html#QBluetoothLocalDevice-3" location="qbluetoothlocaldevice.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QBluetoothLocalDevice(const QString &amp; devName, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="devName" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothLocalDevice" fullname="QBluetoothLocalDevice::~QBluetoothLocalDevice" href="qbluetoothlocaldevice.html#dtor.QBluetoothLocalDevice" location="qbluetoothlocaldevice.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothLocalDevice()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QBluetoothLocalDevice::isValid" href="qbluetoothlocaldevice.html#isValid" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QBluetoothLocalDevice::error" href="qbluetoothlocaldevice.html#error" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothLocalDevice::Error" signature="error() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QBluetoothLocalDevice::errorString" href="qbluetoothlocaldevice.html#errorString" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceName" fullname="QBluetoothLocalDevice::deviceName" href="qbluetoothlocaldevice.html#deviceName" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="deviceName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="address" fullname="QBluetoothLocalDevice::address" href="qbluetoothlocaldevice.html#address" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothAddress" signature="address() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="manufacturer" fullname="QBluetoothLocalDevice::manufacturer" href="qbluetoothlocaldevice.html#manufacturer" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothReply&lt;QString&gt;" signature="manufacturer() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="version" fullname="QBluetoothLocalDevice::version" href="qbluetoothlocaldevice.html#version" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothReply&lt;QString&gt;" signature="version() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="revision" fullname="QBluetoothLocalDevice::revision" href="qbluetoothlocaldevice.html#revision" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothReply&lt;QString&gt;" signature="revision() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="company" fullname="QBluetoothLocalDevice::company" href="qbluetoothlocaldevice.html#company" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothReply&lt;QString&gt;" signature="company() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QBluetoothLocalDevice::name" href="qbluetoothlocaldevice.html#name" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothReply&lt;QString&gt;" signature="name() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setName" fullname="QBluetoothLocalDevice::setName" href="qbluetoothlocaldevice.html#setName" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setName(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDiscoverable" fullname="QBluetoothLocalDevice::setDiscoverable" href="qbluetoothlocaldevice.html#setDiscoverable" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setDiscoverable(uint timeout)">
                <parameter left="uint" right="" name="timeout" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="discoverableTimeout" fullname="QBluetoothLocalDevice::discoverableTimeout" href="qbluetoothlocaldevice.html#discoverableTimeout" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothReply&lt;uint&gt;" signature="discoverableTimeout() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="discoverable" fullname="QBluetoothLocalDevice::discoverable" href="qbluetoothlocaldevice.html#discoverable" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothReply&lt;bool&gt;" signature="discoverable() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setConnectable" fullname="QBluetoothLocalDevice::setConnectable" href="qbluetoothlocaldevice.html#setConnectable" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setConnectable()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectable" fullname="QBluetoothLocalDevice::connectable" href="qbluetoothlocaldevice.html#connectable" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothReply&lt;bool&gt;" signature="connectable() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="turnOff" fullname="QBluetoothLocalDevice::turnOff" href="qbluetoothlocaldevice.html#turnOff" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="turnOff()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isUp" fullname="QBluetoothLocalDevice::isUp" href="qbluetoothlocaldevice.html#isUp" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QBluetoothReply&lt;bool&gt;" signature="isUp()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isConnected" fullname="QBluetoothLocalDevice::isConnected" href="qbluetoothlocaldevice.html#isConnected" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothReply&lt;bool&gt;" signature="isConnected(const QBluetoothAddress &amp; addr) const">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connections" fullname="QBluetoothLocalDevice::connections" href="qbluetoothlocaldevice.html#connections" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothReply&lt;QList&lt;QBluetoothAddress&gt; &gt;" signature="connections() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lastSeen" fullname="QBluetoothLocalDevice::lastSeen" href="qbluetoothlocaldevice.html#lastSeen" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothReply&lt;QDateTime&gt;" signature="lastSeen(const QBluetoothAddress &amp; addr) const">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lastUsed" fullname="QBluetoothLocalDevice::lastUsed" href="qbluetoothlocaldevice.html#lastUsed" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothReply&lt;QDateTime&gt;" signature="lastUsed(const QBluetoothAddress &amp; addr) const">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateRemoteDevice" fullname="QBluetoothLocalDevice::updateRemoteDevice" href="qbluetoothlocaldevice.html#updateRemoteDevice" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="updateRemoteDevice(QBluetoothRemoteDevice &amp; device) const">
                <parameter left="QBluetoothRemoteDevice &amp;" right="" name="device" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestPairing" fullname="QBluetoothLocalDevice::requestPairing" href="qbluetoothlocaldevice.html#requestPairing" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="requestPairing(const QBluetoothAddress &amp; addr)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removePairing" fullname="QBluetoothLocalDevice::removePairing" href="qbluetoothlocaldevice.html#removePairing" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removePairing(const QBluetoothAddress &amp; addr)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pairedDevices" fullname="QBluetoothLocalDevice::pairedDevices" href="qbluetoothlocaldevice.html#pairedDevices" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothReply&lt;QList&lt;QBluetoothAddress&gt; &gt;" signature="pairedDevices() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isPaired" fullname="QBluetoothLocalDevice::isPaired" href="qbluetoothlocaldevice.html#isPaired" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothReply&lt;bool&gt;" signature="isPaired(const QBluetoothAddress &amp; addr) const">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancelPairing" fullname="QBluetoothLocalDevice::cancelPairing" href="qbluetoothlocaldevice.html#cancelPairing" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="cancelPairing(const QBluetoothAddress &amp; addr)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remoteAlias" fullname="QBluetoothLocalDevice::remoteAlias" href="qbluetoothlocaldevice.html#remoteAlias" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothReply&lt;QString&gt;" signature="remoteAlias(const QBluetoothAddress &amp; addr) const">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRemoteAlias" fullname="QBluetoothLocalDevice::setRemoteAlias" href="qbluetoothlocaldevice.html#setRemoteAlias" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setRemoteAlias(const QBluetoothAddress &amp; addr, const QString &amp; alias)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="alias" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeRemoteAlias" fullname="QBluetoothLocalDevice::removeRemoteAlias" href="qbluetoothlocaldevice.html#removeRemoteAlias" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeRemoteAlias(const QBluetoothAddress &amp; addr)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="knownDevices" fullname="QBluetoothLocalDevice::knownDevices" href="qbluetoothlocaldevice.html#knownDevices" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothReply&lt;QList&lt;QBluetoothAddress&gt; &gt;" signature="knownDevices() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="knownDevices" fullname="QBluetoothLocalDevice::knownDevices" href="qbluetoothlocaldevice.html#knownDevices-2" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QBluetoothReply&lt;QList&lt;QBluetoothAddress&gt; &gt;" signature="knownDevices(const QDateTime &amp; date) const">
                <parameter left="const QDateTime &amp;" right="" name="date" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPeriodicDiscoveryEnabled" fullname="QBluetoothLocalDevice::setPeriodicDiscoveryEnabled" href="qbluetoothlocaldevice.html#setPeriodicDiscoveryEnabled" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setPeriodicDiscoveryEnabled(bool enabled)">
                <parameter left="bool" right="" name="enabled" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isPeriodicDiscoveryEnabled" fullname="QBluetoothLocalDevice::isPeriodicDiscoveryEnabled" href="qbluetoothlocaldevice.html#isPeriodicDiscoveryEnabled" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothReply&lt;bool&gt;" signature="isPeriodicDiscoveryEnabled() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pinCodeLength" fullname="QBluetoothLocalDevice::pinCodeLength" href="qbluetoothlocaldevice.html#pinCodeLength" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothReply&lt;uchar&gt;" signature="pinCodeLength(const QBluetoothAddress &amp; addr) const">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disconnectRemoteDevice" fullname="QBluetoothLocalDevice::disconnectRemoteDevice" href="qbluetoothlocaldevice.html#disconnectRemoteDevice" location="qbluetoothlocaldevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="disconnectRemoteDevice(const QBluetoothAddress &amp; addr)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="discoverRemoteDevices" fullname="QBluetoothLocalDevice::discoverRemoteDevices" href="qbluetoothlocaldevice.html#discoverRemoteDevices" location="qbluetoothlocaldevice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="bool" signature="discoverRemoteDevices()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancelDiscovery" fullname="QBluetoothLocalDevice::cancelDiscovery" href="qbluetoothlocaldevice.html#cancelDiscovery" location="qbluetoothlocaldevice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="bool" signature="cancelDiscovery()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="nameChanged" fullname="QBluetoothLocalDevice::nameChanged" href="qbluetoothlocaldevice.html#nameChanged" location="qbluetoothlocaldevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="nameChanged(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QBluetoothLocalDevice::stateChanged" href="qbluetoothlocaldevice.html#stateChanged" location="qbluetoothlocaldevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QBluetoothLocalDevice::State state)">
                <parameter left="QBluetoothLocalDevice::State" right="" name="state" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QBluetoothLocalDevice::error" href="qbluetoothlocaldevice.html#error-2" location="qbluetoothlocaldevice.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="error(QBluetoothLocalDevice::Error error, const QString &amp; msg)">
                <parameter left="QBluetoothLocalDevice::Error" right="" name="error" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="msg" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remoteDeviceConnected" fullname="QBluetoothLocalDevice::remoteDeviceConnected" href="qbluetoothlocaldevice.html#remoteDeviceConnected" location="qbluetoothlocaldevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="remoteDeviceConnected(const QBluetoothAddress &amp; addr)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remoteDeviceDisconnected" fullname="QBluetoothLocalDevice::remoteDeviceDisconnected" href="qbluetoothlocaldevice.html#remoteDeviceDisconnected" location="qbluetoothlocaldevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="remoteDeviceDisconnected(const QBluetoothAddress &amp; addr)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="discoveryStarted" fullname="QBluetoothLocalDevice::discoveryStarted" href="qbluetoothlocaldevice.html#discoveryStarted" location="qbluetoothlocaldevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="discoveryStarted()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remoteDeviceFound" fullname="QBluetoothLocalDevice::remoteDeviceFound" href="qbluetoothlocaldevice.html#remoteDeviceFound" location="qbluetoothlocaldevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="remoteDeviceFound(const QBluetoothRemoteDevice &amp; device)">
                <parameter left="const QBluetoothRemoteDevice &amp;" right="" name="device" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remoteDeviceDisappeared" fullname="QBluetoothLocalDevice::remoteDeviceDisappeared" href="qbluetoothlocaldevice.html#remoteDeviceDisappeared" location="qbluetoothlocaldevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="remoteDeviceDisappeared(const QBluetoothAddress &amp; addr)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remoteDevicesFound" fullname="QBluetoothLocalDevice::remoteDevicesFound" href="qbluetoothlocaldevice.html#remoteDevicesFound" location="qbluetoothlocaldevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="remoteDevicesFound(const QList&lt;QBluetoothRemoteDevice&gt; &amp; list)">
                <parameter left="const QList&lt;QBluetoothRemoteDevice&gt; &amp;" right="" name="list" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="discoveryCancelled" fullname="QBluetoothLocalDevice::discoveryCancelled" href="qbluetoothlocaldevice.html#discoveryCancelled" location="qbluetoothlocaldevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="discoveryCancelled()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="discoveryCompleted" fullname="QBluetoothLocalDevice::discoveryCompleted" href="qbluetoothlocaldevice.html#discoveryCompleted" location="qbluetoothlocaldevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="discoveryCompleted()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pairingCreated" fullname="QBluetoothLocalDevice::pairingCreated" href="qbluetoothlocaldevice.html#pairingCreated" location="qbluetoothlocaldevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="pairingCreated(const QBluetoothAddress &amp; addr)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pairingRemoved" fullname="QBluetoothLocalDevice::pairingRemoved" href="qbluetoothlocaldevice.html#pairingRemoved" location="qbluetoothlocaldevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="pairingRemoved(const QBluetoothAddress &amp; addr)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pairingFailed" fullname="QBluetoothLocalDevice::pairingFailed" href="qbluetoothlocaldevice.html#pairingFailed" location="qbluetoothlocaldevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="pairingFailed(const QBluetoothAddress &amp; addr)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remoteAliasChanged" fullname="QBluetoothLocalDevice::remoteAliasChanged" href="qbluetoothlocaldevice.html#remoteAliasChanged" location="qbluetoothlocaldevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="remoteAliasChanged(const QBluetoothAddress &amp; addr, const QString &amp; alias)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="alias" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remoteAliasRemoved" fullname="QBluetoothLocalDevice::remoteAliasRemoved" href="qbluetoothlocaldevice.html#remoteAliasRemoved" location="qbluetoothlocaldevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="remoteAliasRemoved(const QBluetoothAddress &amp; addr)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remoteNameUpdated" fullname="QBluetoothLocalDevice::remoteNameUpdated" href="qbluetoothlocaldevice.html#remoteNameUpdated" location="qbluetoothlocaldevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="remoteNameUpdated(const QBluetoothAddress &amp; addr, const QString &amp; name)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remoteNameFailed" fullname="QBluetoothLocalDevice::remoteNameFailed" href="qbluetoothlocaldevice.html#remoteNameFailed" location="qbluetoothlocaldevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="remoteNameFailed(const QBluetoothAddress &amp; addr)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remoteClassUpdated" fullname="QBluetoothLocalDevice::remoteClassUpdated" href="qbluetoothlocaldevice.html#remoteClassUpdated" location="qbluetoothlocaldevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="remoteClassUpdated(const QBluetoothAddress &amp; addr, QBluetooth::DeviceMajor major, quint8 minor, QFlags&lt;QBluetooth::ServiceClass&gt; serviceClasses)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
                <parameter left="QBluetooth::DeviceMajor" right="" name="major" default=""></parameter>
                <parameter left="quint8" right="" name="minor" default=""></parameter>
                <parameter left="QFlags&lt;QBluetooth::ServiceClass&gt;" right="" name="serviceClasses" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="discoverableTimeoutChanged" fullname="QBluetoothLocalDevice::discoverableTimeoutChanged" href="qbluetoothlocaldevice.html#discoverableTimeoutChanged" location="qbluetoothlocaldevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="discoverableTimeoutChanged(uint timeout)">
                <parameter left="uint" right="" name="timeout" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remoteDeviceDisconnectRequested" fullname="QBluetoothLocalDevice::remoteDeviceDisconnectRequested" href="qbluetoothlocaldevice.html#remoteDeviceDisconnectRequested" location="qbluetoothlocaldevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="remoteDeviceDisconnectRequested(const QBluetoothAddress &amp; addr)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemRfFunctionality" href="qmodemrffunctionality.html" location="qmodemrffunctionality.h" bases="QPhoneRfFunctionality" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemRfFunctionality" fullname="QModemRfFunctionality::QModemRfFunctionality" href="qmodemrffunctionality.html#QModemRfFunctionality" location="qmodemrffunctionality.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemRfFunctionality(QModemService * service)">
                <parameter left="QModemService *" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemRfFunctionality" fullname="QModemRfFunctionality::~QModemRfFunctionality" href="qmodemrffunctionality.html#dtor.QModemRfFunctionality" location="qmodemrffunctionality.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemRfFunctionality()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QNetworkDevice" href="qnetworkdevice.html" location="qnetworkdevice.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkDevice" fullname="QNetworkDevice::QNetworkDevice" href="qnetworkdevice.html#QNetworkDevice" location="qnetworkdevice.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNetworkDevice(const QString &amp; handle, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="handle" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNetworkDevice" fullname="QNetworkDevice::~QNetworkDevice" href="qnetworkdevice.html#dtor.QNetworkDevice" location="qnetworkdevice.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNetworkDevice()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QNetworkDevice::state" href="qnetworkdevice.html#state" location="qnetworkdevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtopiaNetworkInterface::Status" signature="state() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QNetworkDevice::error" href="qnetworkdevice.html#error" location="qnetworkdevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtopiaNetworkInterface::Error" signature="error() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QNetworkDevice::errorString" href="qnetworkdevice.html#errorString" location="qnetworkdevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="address" fullname="QNetworkDevice::address" href="qnetworkdevice.html#address" location="qnetworkdevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkInterface" signature="address() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="interfaceName" fullname="QNetworkDevice::interfaceName" href="qnetworkdevice.html#interfaceName" location="qnetworkdevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="interfaceName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="handle" fullname="QNetworkDevice::handle" href="qnetworkdevice.html#handle" location="qnetworkdevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="handle() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QNetworkDevice::name" href="qnetworkdevice.html#name" location="qnetworkdevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QNetworkDevice::stateChanged" href="qnetworkdevice.html#stateChanged" location="qnetworkdevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QtopiaNetworkInterface::Status newState, bool error)">
                <parameter left="QtopiaNetworkInterface::Status" right="" name="newState" default=""></parameter>
                <parameter left="bool" right="" name="error" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="PhoneMessageBox" href="phonemessagebox.html" location="messagebox.h" bases="QAbstractMessageBox" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="PhoneMessageBox" fullname="PhoneMessageBox::PhoneMessageBox" href="phonemessagebox.html#PhoneMessageBox" location="messagebox.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="PhoneMessageBox(QWidget * parent, Qt::WFlags flags)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
                <parameter left="Qt::WFlags" right="" name="flags" default="0"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QTextEntryProxy" href="qtextentryproxy.html" location="qtextentryproxy.h" bases="QWidget" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QTextEntryProxy" fullname="QTextEntryProxy::QTextEntryProxy" href="qtextentryproxy.html#QTextEntryProxy" location="qtextentryproxy.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QTextEntryProxy(QWidget * parent, QWidget * target)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
                <parameter left="QWidget *" right="" name="target" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QTextEntryProxy" fullname="QTextEntryProxy::~QTextEntryProxy" href="qtextentryproxy.html#dtor.QTextEntryProxy" location="qtextentryproxy.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QTextEntryProxy()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="text" fullname="QTextEntryProxy::text" href="qtextentryproxy.html#text" location="qtextentryproxy.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="text() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QTextEntryProxy::clear" href="qtextentryproxy.html#clear" location="qtextentryproxy.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTarget" fullname="QTextEntryProxy::setTarget" href="qtextentryproxy.html#setTarget" location="qtextentryproxy.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTarget(QWidget * target)">
                <parameter left="QWidget *" right="" name="target" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="textChanged" fullname="QTextEntryProxy::textChanged" href="qtextentryproxy.html#textChanged" location="qtextentryproxy.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="textChanged(const QString &amp; text)">
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="ServerContactModel" href="servercontactmodel.html" location="servercontactmodel.h" bases="QContactModel" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ServerContactModel" fullname="ServerContactModel::ServerContactModel" href="servercontactmodel.html#ServerContactModel" location="servercontactmodel.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ServerContactModel()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ServerContactModel" fullname="ServerContactModel::~ServerContactModel" href="servercontactmodel.html#dtor.ServerContactModel" location="servercontactmodel.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~ServerContactModel()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readSettings" fullname="ServerContactModel::readSettings" href="servercontactmodel.html#readSettings" location="servercontactmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="readSettings()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="instance" fullname="ServerContactModel::instance" href="servercontactmodel.html#instance" location="servercontactmodel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="ServerContactModel *" signature="instance()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaSessionBuilder" href="qmediasessionbuilder.html" location="qmediasessionbuilder.h" bases="" module="">
            <typedef access="public" threadsafety="unspecified" status="commendable" name="Attributes" fullname="QMediaSessionBuilder::Attributes" href="qmediasessionbuilder.html#Attributes-typedef" location="qmediasessionbuilder.h"></typedef>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaSessionBuilder" fullname="QMediaSessionBuilder::~QMediaSessionBuilder" href="qmediasessionbuilder.html#dtor.QMediaSessionBuilder" location="qmediasessionbuilder.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaSessionBuilder()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QMediaSessionBuilder::type" href="qmediasessionbuilder.html#type" location="qmediasessionbuilder.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="type() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attributes" fullname="QMediaSessionBuilder::attributes" href="qmediasessionbuilder.html#attributes" location="qmediasessionbuilder.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="Attributes const &amp;" signature="attributes() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="createSession" fullname="QMediaSessionBuilder::createSession" href="qmediasessionbuilder.html#createSession" location="qmediasessionbuilder.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QMediaServerSession *" signature="createSession(QMediaSessionRequest sessionRequest)">
                <parameter left="QMediaSessionRequest" right="" name="sessionRequest" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="destroySession" fullname="QMediaSessionBuilder::destroySession" href="qmediasessionbuilder.html#destroySession" location="qmediasessionbuilder.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="destroySession(QMediaServerSession * serverSession)">
                <parameter left="QMediaServerSession *" right="" name="serverSession" default=""></parameter>
            </function>
        </class>
        <typedef access="public" threadsafety="unspecified" status="commendable" name="QMediaSessionBuilderList" href="#QMediaSessionBuilderList-typedef" location="qmediasessionbuilder.h"></typedef>
        <class access="public" threadsafety="unspecified" status="main" name="QCommDeviceController" href="qcommdevicecontroller.html" location="qcommdevicecontroller.h" bases="QObject" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="PowerState" fullname="QCommDeviceController::PowerState" href="qcommdevicecontroller.html#PowerState-enum" location="qcommdevicecontroller.h">
                <value name="On" value="0"></value>
                <value name="Off" value="1"></value>
                <value name="OnOneItem" value="2"></value>
                <value name="OnTimed" value="3"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QCommDeviceController" fullname="QCommDeviceController::QCommDeviceController" href="qcommdevicecontroller.html#QCommDeviceController" location="qcommdevicecontroller.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCommDeviceController(const QByteArray &amp; devId, QObject * parent)">
                <parameter left="const QByteArray &amp;" right="" name="devId" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCommDeviceController" fullname="QCommDeviceController::~QCommDeviceController" href="qcommdevicecontroller.html#dtor.QCommDeviceController" location="qcommdevicecontroller.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCommDeviceController()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceId" fullname="QCommDeviceController::deviceId" href="qcommdevicecontroller.html#deviceId" location="qcommdevicecontroller.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QByteArray &amp;" signature="deviceId() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bringUp" fullname="QCommDeviceController::bringUp" href="qcommdevicecontroller.html#bringUp" location="qcommdevicecontroller.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="bringUp()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bringUpTimed" fullname="QCommDeviceController::bringUpTimed" href="qcommdevicecontroller.html#bringUpTimed" location="qcommdevicecontroller.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="bringUpTimed(int secs)">
                <parameter left="int" right="" name="secs" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bringUpOneItem" fullname="QCommDeviceController::bringUpOneItem" href="qcommdevicecontroller.html#bringUpOneItem" location="qcommdevicecontroller.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="bringUpOneItem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bringDown" fullname="QCommDeviceController::bringDown" href="qcommdevicecontroller.html#bringDown" location="qcommdevicecontroller.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="bringDown()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sessionsActive" fullname="QCommDeviceController::sessionsActive" href="qcommdevicecontroller.html#sessionsActive" location="qcommdevicecontroller.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="sessionsActive() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isUp" fullname="QCommDeviceController::isUp" href="qcommdevicecontroller.html#isUp" location="qcommdevicecontroller.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isUp() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="powerState" fullname="QCommDeviceController::powerState" href="qcommdevicecontroller.html#powerState" location="qcommdevicecontroller.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="PowerState" signature="powerState() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="up" fullname="QCommDeviceController::up" href="qcommdevicecontroller.html#up" location="qcommdevicecontroller.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="up()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="down" fullname="QCommDeviceController::down" href="qcommdevicecontroller.html#down" location="qcommdevicecontroller.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="down()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="powerStateChanged" fullname="QCommDeviceController::powerStateChanged" href="qcommdevicecontroller.html#powerStateChanged" location="qcommdevicecontroller.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="powerStateChanged(QCommDeviceController::PowerState state)">
                <parameter left="QCommDeviceController::PowerState" right="" name="state" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QModemCallVolume" href="qmodemcallvolume.html" location="qmodemcallvolume.h" bases="QCallVolume" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemCallVolume" fullname="QModemCallVolume::QModemCallVolume" href="qmodemcallvolume.html#QModemCallVolume" location="qmodemcallvolume.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemCallVolume(QModemService * service)">
                <parameter left="QModemService *" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemCallVolume" fullname="QModemCallVolume::~QModemCallVolume" href="qmodemcallvolume.html#dtor.QModemCallVolume" location="qmodemcallvolume.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemCallVolume()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="hasDelayedInit" fullname="QModemCallVolume::hasDelayedInit" href="qmodemcallvolume.html#hasDelayedInit" location="qmodemcallvolume.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasDelayedInit() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="callVolumesReady" fullname="QModemCallVolume::callVolumesReady" href="qmodemcallvolume.html#callVolumesReady" location="qmodemcallvolume.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="callVolumesReady()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QDSServiceInfo" href="qdsserviceinfo.html" location="qdsserviceinfo.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QDSServiceInfo" fullname="QDSServiceInfo::QDSServiceInfo" href="qdsserviceinfo.html#QDSServiceInfo" location="qdsserviceinfo.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDSServiceInfo()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDSServiceInfo" fullname="QDSServiceInfo::QDSServiceInfo" href="qdsserviceinfo.html#QDSServiceInfo-2" location="qdsserviceinfo.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QDSServiceInfo(const QDSServiceInfo &amp; other)">
                <parameter left="const QDSServiceInfo &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDSServiceInfo" fullname="QDSServiceInfo::QDSServiceInfo" href="qdsserviceinfo.html#QDSServiceInfo-3" location="qdsserviceinfo.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QDSServiceInfo(const QString &amp; name, const QString &amp; service)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDSServiceInfo" fullname="QDSServiceInfo::~QDSServiceInfo" href="qdsserviceinfo.html#dtor.QDSServiceInfo" location="qdsserviceinfo.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDSServiceInfo()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QDSServiceInfo::operator=" href="qdsserviceinfo.html#operator=" location="qdsserviceinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="const QDSServiceInfo &amp;" signature="operator=(const QDSServiceInfo &amp; other)">
                <parameter left="const QDSServiceInfo &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QDSServiceInfo::operator==" href="qdsserviceinfo.html#operator==" location="qdsserviceinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QDSServiceInfo &amp; other) const">
                <parameter left="const QDSServiceInfo &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QDSServiceInfo::operator!=" href="qdsserviceinfo.html#operator!=" location="qdsserviceinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QDSServiceInfo &amp; other) const">
                <parameter left="const QDSServiceInfo &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QDSServiceInfo::isValid" href="qdsserviceinfo.html#isValid" location="qdsserviceinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAvailable" fullname="QDSServiceInfo::isAvailable" href="qdsserviceinfo.html#isAvailable" location="qdsserviceinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isAvailable() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serviceId" fullname="QDSServiceInfo::serviceId" href="qdsserviceinfo.html#serviceId" location="qdsserviceinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="serviceId() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serviceName" fullname="QDSServiceInfo::serviceName" href="qdsserviceinfo.html#serviceName" location="qdsserviceinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="serviceName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QDSServiceInfo::name" href="qdsserviceinfo.html#name" location="qdsserviceinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestDataTypes" fullname="QDSServiceInfo::requestDataTypes" href="qdsserviceinfo.html#requestDataTypes" location="qdsserviceinfo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="requestDataTypes() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportsRequestDataType" fullname="QDSServiceInfo::supportsRequestDataType" href="qdsserviceinfo.html#supportsRequestDataType" location="qdsserviceinfo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="supportsRequestDataType(const QMimeType &amp; type) const">
                <parameter left="const QMimeType &amp;" right="" name="type" default="QMimeType( QString() )"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="responseDataTypes" fullname="QDSServiceInfo::responseDataTypes" href="qdsserviceinfo.html#responseDataTypes" location="qdsserviceinfo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="responseDataTypes() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportsResponseDataType" fullname="QDSServiceInfo::supportsResponseDataType" href="qdsserviceinfo.html#supportsResponseDataType" location="qdsserviceinfo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="supportsResponseDataType(const QMimeType &amp; type) const">
                <parameter left="const QMimeType &amp;" right="" name="type" default="QMimeType( QString() )"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attributes" fullname="QDSServiceInfo::attributes" href="qdsserviceinfo.html#attributes" location="qdsserviceinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="attributes() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="description" fullname="QDSServiceInfo::description" href="qdsserviceinfo.html#description" location="qdsserviceinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="description() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="icon" fullname="QDSServiceInfo::icon" href="qdsserviceinfo.html#icon" location="qdsserviceinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="icon() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="PhoneHeader" href="phoneheader.html" location="phoneheader.h" bases="ThemedView" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="PhoneHeader" fullname="PhoneHeader::PhoneHeader" href="phoneheader.html#PhoneHeader" location="phoneheader.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="PhoneHeader(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QContactModel" href="qcontactmodel.html" location="qcontactmodel.h" bases="QPimModel" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactModel" fullname="QContactModel::QContactModel" href="qcontactmodel.html#QContactModel" location="qcontactmodel.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactModel(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactModel" fullname="QContactModel::~QContactModel" href="qcontactmodel.html#dtor.QContactModel" location="qcontactmodel.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactModel()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Field" fullname="QContactModel::Field" href="qcontactmodel.html#Field-enum" location="qcontactmodel.h">
                <value name="Invalid" value="-1"></value>
                <value name="Label" value="0"></value>
                <value name="NameTitle" value="1"></value>
                <value name="FirstName" value="2"></value>
                <value name="MiddleName" value="3"></value>
                <value name="LastName" value="4"></value>
                <value name="Suffix" value="5"></value>
                <value name="JobTitle" value="6"></value>
                <value name="Department" value="7"></value>
                <value name="Company" value="8"></value>
                <value name="BusinessPhone" value="9"></value>
                <value name="BusinessFax" value="10"></value>
                <value name="BusinessMobile" value="11"></value>
                <value name="DefaultEmail" value="12"></value>
                <value name="Emails" value="13"></value>
                <value name="DefaultPhone" value="14"></value>
                <value name="OtherPhone" value="15"></value>
                <value name="OtherFax" value="16"></value>
                <value name="OtherMobile" value="17"></value>
                <value name="OtherPager" value="18"></value>
                <value name="HomePhone" value="19"></value>
                <value name="HomeFax" value="20"></value>
                <value name="HomeMobile" value="21"></value>
                <value name="HomePager" value="22"></value>
                <value name="BusinessStreet" value="23"></value>
                <value name="BusinessCity" value="24"></value>
                <value name="BusinessState" value="25"></value>
                <value name="BusinessZip" value="26"></value>
                <value name="BusinessCountry" value="27"></value>
                <value name="BusinessPager" value="28"></value>
                <value name="BusinessWebPage" value="29"></value>
                <value name="Office" value="30"></value>
                <value name="Profession" value="31"></value>
                <value name="Assistant" value="32"></value>
                <value name="Manager" value="33"></value>
                <value name="HomeStreet" value="34"></value>
                <value name="HomeCity" value="35"></value>
                <value name="HomeState" value="36"></value>
                <value name="HomeZip" value="37"></value>
                <value name="HomeCountry" value="38"></value>
                <value name="HomeWebPage" value="39"></value>
                <value name="Spouse" value="40"></value>
                <value name="Gender" value="41"></value>
                <value name="Birthday" value="42"></value>
                <value name="Anniversary" value="43"></value>
                <value name="Nickname" value="44"></value>
                <value name="Children" value="45"></value>
                <value name="Portrait" value="46"></value>
                <value name="Notes" value="47"></value>
                <value name="LastNamePronunciation" value="48"></value>
                <value name="FirstNamePronunciation" value="49"></value>
                <value name="CompanyPronunciation" value="50"></value>
                <value name="Identifier" value="51"></value>
                <value name="Categories" value="52"></value>
                <value name="OtherVOIP" value="53"></value>
                <value name="HomeVOIP" value="54"></value>
                <value name="BusinessVOIP" value="55"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="QContactModelRole" fullname="QContactModel::QContactModelRole" href="qcontactmodel.html#QContactModelRole-enum" location="qcontactmodel.h">
                <value name="LabelRole" value="Qt::UserRole"></value>
                <value name="SubLabelRole" value="Qt::UserRole + 1"></value>
                <value name="PortraitRole" value="Qt::UserRole + 2"></value>
                <value name="StatusIconRole" value="Qt::UserRole + 3"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="phoneSource" fullname="QContactModel::phoneSource" href="qcontactmodel.html#phoneSource" location="qcontactmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPimSource" signature="phoneSource() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="simSource" fullname="QContactModel::simSource" href="qcontactmodel.html#simSource" location="qcontactmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPimSource" signature="simSource() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mirrorToSource" fullname="QContactModel::mirrorToSource" href="qcontactmodel.html#mirrorToSource" location="qcontactmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="mirrorToSource(const QPimSource &amp; destination, const QUniqueId &amp; identifier)">
                <parameter left="const QPimSource &amp;" right="" name="destination" default=""></parameter>
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mirrorAll" fullname="QContactModel::mirrorAll" href="qcontactmodel.html#mirrorAll" location="qcontactmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="mirrorAll(const QPimSource &amp; source, const QPimSource &amp; destination)">
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
                <parameter left="const QPimSource &amp;" right="" name="destination" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="phoneFields" fullname="QContactModel::phoneFields" href="qcontactmodel.html#phoneFields" location="qcontactmodel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;Field&gt;" signature="phoneFields()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="labelFields" fullname="QContactModel::labelFields" href="qcontactmodel.html#labelFields" location="qcontactmodel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;Field&gt;" signature="labelFields()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localeNameTitles" fullname="QContactModel::localeNameTitles" href="qcontactmodel.html#localeNameTitles" location="qcontactmodel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStringList" signature="localeNameTitles()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localeSuffixes" fullname="QContactModel::localeSuffixes" href="qcontactmodel.html#localeSuffixes" location="qcontactmodel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStringList" signature="localeSuffixes()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fieldLabel" fullname="QContactModel::fieldLabel" href="qcontactmodel.html#fieldLabel" location="qcontactmodel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="fieldLabel(Field field)">
                <parameter left="Field" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fieldIcon" fullname="QContactModel::fieldIcon" href="qcontactmodel.html#fieldIcon" location="qcontactmodel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QIcon" signature="fieldIcon(Field field)">
                <parameter left="Field" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fieldIdentifier" fullname="QContactModel::fieldIdentifier" href="qcontactmodel.html#fieldIdentifier" location="qcontactmodel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="fieldIdentifier(Field field)">
                <parameter left="Field" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="identifierField" fullname="QContactModel::identifierField" href="qcontactmodel.html#identifierField" location="qcontactmodel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="Field" signature="identifierField(const QString &amp; identifier)">
                <parameter left="const QString &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sort" fullname="QContactModel::sort" href="qcontactmodel.html#sort" location="qcontactmodel.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="sort(int column, Qt::SortOrder order)">
                <parameter left="int" right="" name="column" default=""></parameter>
                <parameter left="Qt::SortOrder" right="" name="order" default="Qt::AscendingOrder"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="data" fullname="QContactModel::data" href="qcontactmodel.html#data" location="qcontactmodel.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="data(const QModelIndex &amp; index, int role) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
                <parameter left="int" right="" name="role" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setData" fullname="QContactModel::setData" href="qcontactmodel.html#setData" location="qcontactmodel.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="setData(const QModelIndex &amp; index, const QVariant &amp; value, int role)">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
                <parameter left="int" right="" name="role" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contact" fullname="QContactModel::contact" href="qcontactmodel.html#contact" location="qcontactmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContact" signature="contact(const QModelIndex &amp; index) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contact" fullname="QContactModel::contact" href="qcontactmodel.html#contact-2" location="qcontactmodel.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QContact" signature="contact(int row) const">
                <parameter left="int" right="" name="row" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contact" fullname="QContactModel::contact" href="qcontactmodel.html#contact-3" location="qcontactmodel.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="3" type="QContact" signature="contact(const QUniqueId &amp; identifier) const">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contactField" fullname="QContactModel::contactField" href="qcontactmodel.html#contactField" location="qcontactmodel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QVariant" signature="contactField(const QContact &amp; contact, QContactModel::Field field)">
                <parameter left="const QContact &amp;" right="" name="contact" default=""></parameter>
                <parameter left="QContactModel::Field" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContactField" fullname="QContactModel::setContactField" href="qcontactmodel.html#setContactField" location="qcontactmodel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="setContactField(QContact &amp; contact, QContactModel::Field field, const QVariant &amp; value)">
                <parameter left="QContact &amp;" right="" name="contact" default=""></parameter>
                <parameter left="QContactModel::Field" right="" name="field" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateContact" fullname="QContactModel::updateContact" href="qcontactmodel.html#updateContact" location="qcontactmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="updateContact(const QContact &amp; contact)">
                <parameter left="const QContact &amp;" right="" name="contact" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeContact" fullname="QContactModel::removeContact" href="qcontactmodel.html#removeContact" location="qcontactmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeContact(const QContact &amp; contact)">
                <parameter left="const QContact &amp;" right="" name="contact" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeContact" fullname="QContactModel::removeContact" href="qcontactmodel.html#removeContact-2" location="qcontactmodel.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="removeContact(const QUniqueId &amp; identifier)">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addContact" fullname="QContactModel::addContact" href="qcontactmodel.html#addContact" location="qcontactmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QUniqueId" signature="addContact(const QContact &amp; contact, const QPimSource &amp; source)">
                <parameter left="const QContact &amp;" right="" name="contact" default=""></parameter>
                <parameter left="const QPimSource &amp;" right="" name="source" default="QPimSource()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeList" fullname="QContactModel::removeList" href="qcontactmodel.html#removeList" location="qcontactmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeList(const QList&lt;QUniqueId&gt; &amp; identifiers)">
                <parameter left="const QList&lt;QUniqueId&gt; &amp;" right="" name="identifiers" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addRecord" fullname="QContactModel::addRecord" href="qcontactmodel.html#addRecord" location="qcontactmodel.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QUniqueId" signature="addRecord(const QByteArray &amp; bytes, const QPimSource &amp; source, const QString &amp; format)">
                <parameter left="const QByteArray &amp;" right="" name="bytes" default=""></parameter>
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="format" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateRecord" fullname="QContactModel::updateRecord" href="qcontactmodel.html#updateRecord" location="qcontactmodel.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="updateRecord(const QUniqueId &amp; id, const QByteArray &amp; bytes, const QString &amp; format)">
                <parameter left="const QUniqueId &amp;" right="" name="id" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="bytes" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="format" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="record" fullname="QContactModel::record" href="qcontactmodel.html#record" location="qcontactmodel.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="record(const QUniqueId &amp; identifier, const QString &amp; format) const">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="format" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeRecord" fullname="QContactModel::removeRecord" href="qcontactmodel.html#removeRecord" location="qcontactmodel.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeRecord(const QUniqueId &amp; identifier)">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="personalID" fullname="QContactModel::personalID" href="qcontactmodel.html#personalID" location="qcontactmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUniqueId" signature="personalID() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="personalDetails" fullname="QContactModel::personalDetails" href="qcontactmodel.html#personalDetails" location="qcontactmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContact" signature="personalDetails() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasPersonalDetails" fullname="QContactModel::hasPersonalDetails" href="qcontactmodel.html#hasPersonalDetails" location="qcontactmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasPersonalDetails() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPersonalDetails" fullname="QContactModel::setPersonalDetails" href="qcontactmodel.html#setPersonalDetails" location="qcontactmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPersonalDetails(const QUniqueId &amp; identifier)">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearPersonalDetails" fullname="QContactModel::clearPersonalDetails" href="qcontactmodel.html#clearPersonalDetails" location="qcontactmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearPersonalDetails()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isPersonalDetails" fullname="QContactModel::isPersonalDetails" href="qcontactmodel.html#isPersonalDetails" location="qcontactmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isPersonalDetails(const QModelIndex &amp; row) const">
                <parameter left="const QModelIndex &amp;" right="" name="row" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isPersonalDetails" fullname="QContactModel::isPersonalDetails" href="qcontactmodel.html#isPersonalDetails-2" location="qcontactmodel.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="bool" signature="isPersonalDetails(int row) const">
                <parameter left="int" right="" name="row" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isPersonalDetails" fullname="QContactModel::isPersonalDetails" href="qcontactmodel.html#isPersonalDetails-3" location="qcontactmodel.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="3" type="bool" signature="isPersonalDetails(const QUniqueId &amp; identifier) const">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="FilterFlags" fullname="QContactModel::FilterFlags" href="qcontactmodel.html#FilterFlags-enum" location="qcontactmodel.h">
                <value name="ContainsPhoneNumber" value="0x00100"></value>
                <value name="ContainsEmail" value="0x0200"></value>
                <value name="ContainsMailing" value="0x0400"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilter" fullname="QContactModel::setFilter" href="qcontactmodel.html#setFilter" location="qcontactmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilter(const QString &amp; text, int flags)">
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
                <parameter left="int" right="" name="flags" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filterText" fullname="QContactModel::filterText" href="qcontactmodel.html#filterText" location="qcontactmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="filterText() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filterFlags" fullname="QContactModel::filterFlags" href="qcontactmodel.html#filterFlags" location="qcontactmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="filterFlags() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearFilter" fullname="QContactModel::clearFilter" href="qcontactmodel.html#clearFilter" location="qcontactmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearFilter()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="matchPhoneNumber" fullname="QContactModel::matchPhoneNumber" href="qcontactmodel.html#matchPhoneNumber" location="qcontactmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QContact" signature="matchPhoneNumber(const QString &amp; text)">
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="matchEmailAddress" fullname="QContactModel::matchEmailAddress" href="qcontactmodel.html#matchEmailAddress" location="qcontactmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QContact" signature="matchEmailAddress(const QString &amp; text)">
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="match" fullname="QContactModel::match" href="qcontactmodel.html#match" location="qcontactmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QModelIndexList" signature="match(const QModelIndex &amp; start, int role, const QVariant &amp; value, int hits, Qt::MatchFlags flags) const">
                <parameter left="const QModelIndex &amp;" right="" name="start" default=""></parameter>
                <parameter left="int" right="" name="role" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
                <parameter left="int" right="" name="hits" default="1"></parameter>
                <parameter left="Qt::MatchFlags" right="" name="flags" default="Qt::MatchFlags( Qt::MatchStartsWith | Qt::MatchWrap )"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="writeVCard" fullname="QContactModel::writeVCard" href="qcontactmodel.html#writeVCard" location="qcontactmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="writeVCard(const QString &amp; filename)">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSIMCardContact" fullname="QContactModel::isSIMCardContact" href="qcontactmodel.html#isSIMCardContact" location="qcontactmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSIMCardContact(const QModelIndex &amp; index) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSIMCardContact" fullname="QContactModel::isSIMCardContact" href="qcontactmodel.html#isSIMCardContact-2" location="qcontactmodel.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="bool" signature="isSIMCardContact(const QUniqueId &amp; identifier) const">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QGprsNetworkRegistration" href="qgprsnetworkregistration.html" location="qgprsnetworkregistration.h" bases="QCommInterface" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="registrationState" fullname="QGprsNetworkRegistration::registrationState" href="qgprsnetworkregistration.html#registrationState-prop" location="qgprsnetworkregistration.h" type="QTelephony::RegistrationState">
                <getter name="registrationState"></getter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="locationAreaCode" fullname="QGprsNetworkRegistration::locationAreaCode" href="qgprsnetworkregistration.html#locationAreaCode-prop" location="qgprsnetworkregistration.h" type="int">
                <getter name="locationAreaCode"></getter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="cellId" fullname="QGprsNetworkRegistration::cellId" href="qgprsnetworkregistration.html#cellId-prop" location="qgprsnetworkregistration.h" type="int">
                <getter name="cellId"></getter>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGprsNetworkRegistration" fullname="QGprsNetworkRegistration::QGprsNetworkRegistration" href="qgprsnetworkregistration.html#QGprsNetworkRegistration" location="qgprsnetworkregistration.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGprsNetworkRegistration(const QString &amp; service, QObject * parent, QCommInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="service" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QCommInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGprsNetworkRegistration" fullname="QGprsNetworkRegistration::~QGprsNetworkRegistration" href="qgprsnetworkregistration.html#dtor.QGprsNetworkRegistration" location="qgprsnetworkregistration.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGprsNetworkRegistration()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="registrationState" fullname="QGprsNetworkRegistration::registrationState" href="qgprsnetworkregistration.html#registrationState-prop" location="qgprsnetworkregistration.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="registrationState" type="QTelephony::RegistrationState" signature="registrationState() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="locationAreaCode" fullname="QGprsNetworkRegistration::locationAreaCode" href="qgprsnetworkregistration.html#locationAreaCode-prop" location="qgprsnetworkregistration.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="locationAreaCode" type="int" signature="locationAreaCode() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cellId" fullname="QGprsNetworkRegistration::cellId" href="qgprsnetworkregistration.html#cellId-prop" location="qgprsnetworkregistration.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="cellId" type="int" signature="cellId() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="registrationStateChanged" fullname="QGprsNetworkRegistration::registrationStateChanged" href="qgprsnetworkregistration.html#registrationStateChanged" location="qgprsnetworkregistration.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="registrationStateChanged()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="locationChanged" fullname="QGprsNetworkRegistration::locationChanged" href="qgprsnetworkregistration.html#locationChanged" location="qgprsnetworkregistration.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="locationChanged()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QGprsNetworkRegistrationServer" href="qgprsnetworkregistrationserver.html" location="qgprsnetworkregistration.h" bases="QGprsNetworkRegistration" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QGprsNetworkRegistrationServer" fullname="QGprsNetworkRegistrationServer::QGprsNetworkRegistrationServer" href="qgprsnetworkregistrationserver.html#QGprsNetworkRegistrationServer" location="qgprsnetworkregistration.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGprsNetworkRegistrationServer(const QString &amp; service, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGprsNetworkRegistrationServer" fullname="QGprsNetworkRegistrationServer::~QGprsNetworkRegistrationServer" href="qgprsnetworkregistrationserver.html#dtor.QGprsNetworkRegistrationServer" location="qgprsnetworkregistration.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGprsNetworkRegistrationServer()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="updateRegistrationState" fullname="QGprsNetworkRegistrationServer::updateRegistrationState" href="qgprsnetworkregistrationserver.html#updateRegistrationState" location="qgprsnetworkregistration.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="updateRegistrationState(QTelephony::RegistrationState state)">
                <parameter left="QTelephony::RegistrationState" right="" name="state" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="updateRegistrationState" fullname="QGprsNetworkRegistrationServer::updateRegistrationState" href="qgprsnetworkregistrationserver.html#updateRegistrationState-2" location="qgprsnetworkregistration.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="updateRegistrationState(QTelephony::RegistrationState state, int locationAreaCode, int cellId)">
                <parameter left="QTelephony::RegistrationState" right="" name="state" default=""></parameter>
                <parameter left="int" right="" name="locationAreaCode" default=""></parameter>
                <parameter left="int" right="" name="cellId" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QPixmapWheelData" href="qpixmapwheeldata.html" location="qpixmapwheel.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QPixmapWheelData" fullname="QPixmapWheelData::QPixmapWheelData" href="qpixmapwheeldata.html#QPixmapWheelData" location="qpixmapwheel.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPixmapWheelData()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QPixmapWheelData" fullname="QPixmapWheelData::QPixmapWheelData" href="qpixmapwheeldata.html#QPixmapWheelData-2" location="qpixmapwheel.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QPixmapWheelData(const QPixmapWheelData &amp; other)">
                <parameter left="const QPixmapWheelData &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QPixmapWheelData::operator=" href="qpixmapwheeldata.html#operator=" location="qpixmapwheel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QPixmapWheelData &amp;" signature="operator=(const QPixmapWheelData &amp; other)">
                <parameter left="const QPixmapWheelData &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="appendItem" fullname="QPixmapWheelData::appendItem" href="qpixmapwheeldata.html#appendItem" location="qpixmapwheel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="appendItem(const QString &amp; name, const QPixmap &amp; pix, const QString &amp; text)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QPixmap &amp;" right="" name="pix" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="count" fullname="QPixmapWheelData::count" href="qpixmapwheeldata.html#count" location="qpixmapwheel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="count() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QPixmapWheelData::name" href="qpixmapwheeldata.html#name" location="qpixmapwheel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name(int idx) const">
                <parameter left="int" right="" name="idx" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="text" fullname="QPixmapWheelData::text" href="qpixmapwheeldata.html#text" location="qpixmapwheel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="text(int idx) const">
                <parameter left="int" right="" name="idx" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pixmap" fullname="QPixmapWheelData::pixmap" href="qpixmapwheeldata.html#pixmap" location="qpixmapwheel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPixmap" signature="pixmap(int idx) const">
                <parameter left="int" right="" name="idx" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QPixmapWheel" href="qpixmapwheel.html" location="qpixmapwheel.h" bases="QWidget" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QPixmapWheel" fullname="QPixmapWheel::QPixmapWheel" href="qpixmapwheel.html#QPixmapWheel" location="qpixmapwheel.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPixmapWheel(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setWheel" fullname="QPixmapWheel::setWheel" href="qpixmapwheel.html#setWheel" location="qpixmapwheel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setWheel(const QPixmapWheelData &amp; wheel)">
                <parameter left="const QPixmapWheelData &amp;" right="" name="wheel" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="moveToWheel" fullname="QPixmapWheel::moveToWheel" href="qpixmapwheel.html#moveToWheel" location="qpixmapwheel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="moveToWheel(const QPixmapWheelData &amp; wheel)">
                <parameter left="const QPixmapWheelData &amp;" right="" name="wheel" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumVisibleIcons" fullname="QPixmapWheel::maximumVisibleIcons" href="qpixmapwheel.html#maximumVisibleIcons" location="qpixmapwheel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="maximumVisibleIcons() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMaximumVisibleIcons" fullname="QPixmapWheel::setMaximumVisibleIcons" href="qpixmapwheel.html#setMaximumVisibleIcons" location="qpixmapwheel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMaximumVisibleIcons(int maximum)">
                <parameter left="int" right="" name="maximum" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemSelected" fullname="QPixmapWheel::itemSelected" href="qpixmapwheel.html#itemSelected" location="qpixmapwheel.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemSelected(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="moveToCompleted" fullname="QPixmapWheel::moveToCompleted" href="qpixmapwheel.html#moveToCompleted" location="qpixmapwheel.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="moveToCompleted()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="ContentSetViewService" href="contentsetviewservice.html" location="contentsetlauncherview.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="showContentSet" fullname="ContentSetViewService::showContentSet" href="contentsetviewservice.html#showContentSet" location="contentsetlauncherview.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="showContentSet(const QContentSet &amp; set)">
                <parameter left="const QContentSet &amp;" right="" name="set" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="showContentSet" fullname="ContentSetViewService::showContentSet" href="contentsetviewservice.html#showContentSet-2" location="contentsetlauncherview.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="showContentSet(const QString &amp; title, const QContentSet &amp; set)">
                <parameter left="const QString &amp;" right="" name="title" default=""></parameter>
                <parameter left="const QContentSet &amp;" right="" name="set" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QDLLink" href="qdllink.html" location="qdllink.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QDLLink" fullname="QDLLink::QDLLink" href="qdllink.html#QDLLink" location="qdllink.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDLLink()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDLLink" fullname="QDLLink::QDLLink" href="qdllink.html#QDLLink-2" location="qdllink.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QDLLink(const QString &amp; service, const QByteArray &amp; data, const QString &amp; description, const QString &amp; icon)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="description" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="icon" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDLLink" fullname="QDLLink::QDLLink" href="qdllink.html#QDLLink-3" location="qdllink.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QDLLink(const QDLLink &amp; other)">
                <parameter left="const QDLLink &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDLLink" fullname="QDLLink::QDLLink" href="qdllink.html#QDLLink-4" location="qdllink.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QDLLink(const QDSData &amp; dataObject)">
                <parameter left="const QDSData &amp;" right="" name="dataObject" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDLLink" fullname="QDLLink::~QDLLink" href="qdllink.html#dtor.QDLLink" location="qdllink.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDLLink()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QDLLink::operator=" href="qdllink.html#operator=" location="qdllink.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QDLLink &amp;" signature="operator=(const QDLLink &amp; other)">
                <parameter left="const QDLLink &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mimeType" fullname="QDLLink::mimeType" href="qdllink.html#mimeType" location="qdllink.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMimeType" signature="mimeType()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="listMimeType" fullname="QDLLink::listMimeType" href="qdllink.html#listMimeType" location="qdllink.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMimeType" signature="listMimeType()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QDLLink::isNull" href="qdllink.html#isNull" location="qdllink.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isBroken" fullname="QDLLink::isBroken" href="qdllink.html#isBroken" location="qdllink.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isBroken() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="service" fullname="QDLLink::service" href="qdllink.html#service" location="qdllink.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="service() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="data" fullname="QDLLink::data" href="qdllink.html#data" location="qdllink.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="data() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="description" fullname="QDLLink::description" href="qdllink.html#description" location="qdllink.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="description() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="icon" fullname="QDLLink::icon" href="qdllink.html#icon" location="qdllink.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="icon() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toQDSData" fullname="QDLLink::toQDSData" href="qdllink.html#toQDSData" location="qdllink.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDSData" signature="toQDSData() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activate" fullname="QDLLink::activate" href="qdllink.html#activate" location="qdllink.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="activate() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setService" fullname="QDLLink::setService" href="qdllink.html#setService" location="qdllink.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setService(const QString &amp; service)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setData" fullname="QDLLink::setData" href="qdllink.html#setData" location="qdllink.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setData(const QByteArray &amp; data)">
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDescription" fullname="QDLLink::setDescription" href="qdllink.html#setDescription" location="qdllink.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDescription(const QString &amp; description)">
                <parameter left="const QString &amp;" right="" name="description" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIcon" fullname="QDLLink::setIcon" href="qdllink.html#setIcon" location="qdllink.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIcon(const QString &amp; icon)">
                <parameter left="const QString &amp;" right="" name="icon" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBroken" fullname="QDLLink::setBroken" href="qdllink.html#setBroken" location="qdllink.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBroken(const bool broken)">
                <parameter left="const bool" right="" name="broken" default="true"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="VideoRingtone" href="videoringtone.html" location="videoringtone.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~VideoRingtone" fullname="VideoRingtone::~VideoRingtone" href="videoringtone.html#dtor.VideoRingtone" location="videoringtone.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~VideoRingtone()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playVideo" fullname="VideoRingtone::playVideo" href="videoringtone.html#playVideo" location="videoringtone.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="playVideo(const QString &amp; fileName)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stopVideo" fullname="VideoRingtone::stopVideo" href="videoringtone.html#stopVideo" location="videoringtone.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="stopVideo()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoWidget" fullname="VideoRingtone::videoWidget" href="videoringtone.html#videoWidget" location="videoringtone.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QWidget *" signature="videoWidget()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="instance" fullname="VideoRingtone::instance" href="videoringtone.html#instance" location="videoringtone.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="VideoRingtone *" signature="instance()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoRingtoneFailed" fullname="VideoRingtone::videoRingtoneFailed" href="videoringtone.html#videoRingtoneFailed" location="videoringtone.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="videoRingtoneFailed()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoWidgetReady" fullname="VideoRingtone::videoWidgetReady" href="videoringtone.html#videoWidgetReady" location="videoringtone.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="videoWidgetReady()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoRingtoneStopped" fullname="VideoRingtone::videoRingtoneStopped" href="videoringtone.html#videoRingtoneStopped" location="videoringtone.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="videoRingtoneStopped()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPimDependencyList" href="qpimdependencylist.html" location="qpimdependencylist_p.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="typedChildrenRecords" fullname="QPimDependencyList::typedChildrenRecords" href="qpimdependencylist.html#typedChildrenRecords" location="qpimdependencylist_p.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QUniqueId&gt;" signature="typedChildrenRecords(const QUniqueId &amp; recid, const QString &amp; deptype)">
                <parameter left="const QUniqueId &amp;" right="" name="recid" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="deptype" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="childrenRecords" fullname="QPimDependencyList::childrenRecords" href="qpimdependencylist.html#childrenRecords" location="qpimdependencylist_p.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMap&lt;QString, QUniqueId&gt;" signature="childrenRecords(const QUniqueId &amp; recid)">
                <parameter left="const QUniqueId &amp;" right="" name="recid" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parentRecord" fullname="QPimDependencyList::parentRecord" href="qpimdependencylist.html#parentRecord" location="qpimdependencylist_p.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QUniqueId" signature="parentRecord(const QUniqueId &amp; recid)">
                <parameter left="const QUniqueId &amp;" right="" name="recid" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parentDependencyType" fullname="QPimDependencyList::parentDependencyType" href="qpimdependencylist.html#parentDependencyType" location="qpimdependencylist_p.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="parentDependencyType(const QUniqueId &amp; recid)">
                <parameter left="const QUniqueId &amp;" right="" name="recid" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addDependency" fullname="QPimDependencyList::addDependency" href="qpimdependencylist.html#addDependency" location="qpimdependencylist_p.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="addDependency(const QUniqueId &amp; srcid, const QUniqueId &amp; destid, const QString &amp; deptype)">
                <parameter left="const QUniqueId &amp;" right="" name="srcid" default=""></parameter>
                <parameter left="const QUniqueId &amp;" right="" name="destid" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="deptype" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateDependency" fullname="QPimDependencyList::updateDependency" href="qpimdependencylist.html#updateDependency" location="qpimdependencylist_p.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="updateDependency(const QUniqueId &amp; srcid, const QUniqueId &amp; destid, const QString &amp; deptype)">
                <parameter left="const QUniqueId &amp;" right="" name="srcid" default=""></parameter>
                <parameter left="const QUniqueId &amp;" right="" name="destid" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="deptype" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeDependency" fullname="QPimDependencyList::removeDependency" href="qpimdependencylist.html#removeDependency" location="qpimdependencylist_p.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="removeDependency(const QUniqueId &amp; srcid, const QUniqueId &amp; destid, const QString &amp; deptype)">
                <parameter left="const QUniqueId &amp;" right="" name="srcid" default=""></parameter>
                <parameter left="const QUniqueId &amp;" right="" name="destid" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="deptype" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="StorageMonitor" href="storagemonitor.html" location="storagemonitor.h" bases="QObject" module=""></class>
        <class access="public" threadsafety="unspecified" status="commendable" name="StabMonitor" href="stabmonitor.html" location="stabmonitortask.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="StabMonitor" fullname="StabMonitor::StabMonitor" href="stabmonitor.html#StabMonitor" location="stabmonitortask.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="StabMonitor(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPhoneBookEntry" href="qphonebookentry.html" location="qphonebook.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QPhoneBookEntry" fullname="QPhoneBookEntry::QPhoneBookEntry" href="qphonebookentry.html#QPhoneBookEntry" location="qphonebook.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPhoneBookEntry()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPhoneBookEntry" fullname="QPhoneBookEntry::~QPhoneBookEntry" href="qphonebookentry.html#dtor.QPhoneBookEntry" location="qphonebook.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPhoneBookEntry()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QPhoneBookEntry" fullname="QPhoneBookEntry::QPhoneBookEntry" href="qphonebookentry.html#QPhoneBookEntry-2" location="qphonebook.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QPhoneBookEntry(const QPhoneBookEntry &amp; other)">
                <parameter left="const QPhoneBookEntry &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QPhoneBookEntry::operator=" href="qphonebookentry.html#operator=" location="qphonebook.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QPhoneBookEntry &amp;" signature="operator=(const QPhoneBookEntry &amp; other)">
                <parameter left="const QPhoneBookEntry &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QPhoneBookEntry::operator==" href="qphonebookentry.html#operator==" location="qphonebook.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="operator==(const QPhoneBookEntry &amp; other)">
                <parameter left="const QPhoneBookEntry &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="index" fullname="QPhoneBookEntry::index" href="qphonebookentry.html#index" location="qphonebook.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="index() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIndex" fullname="QPhoneBookEntry::setIndex" href="qphonebookentry.html#setIndex" location="qphonebook.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIndex(uint value)">
                <parameter left="uint" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="number" fullname="QPhoneBookEntry::number" href="qphonebookentry.html#number" location="qphonebook.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="number() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNumber" fullname="QPhoneBookEntry::setNumber" href="qphonebookentry.html#setNumber" location="qphonebook.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setNumber(const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="text" fullname="QPhoneBookEntry::text" href="qphonebookentry.html#text" location="qphonebook.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="text() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setText" fullname="QPhoneBookEntry::setText" href="qphonebookentry.html#setText" location="qphonebook.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setText(const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPhoneBookLimits" href="qphonebooklimits.html" location="qphonebook.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QPhoneBookLimits" fullname="QPhoneBookLimits::QPhoneBookLimits" href="qphonebooklimits.html#QPhoneBookLimits" location="qphonebook.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPhoneBookLimits()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QPhoneBookLimits" fullname="QPhoneBookLimits::QPhoneBookLimits" href="qphonebooklimits.html#QPhoneBookLimits-2" location="qphonebook.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QPhoneBookLimits(const QPhoneBookLimits &amp; other)">
                <parameter left="const QPhoneBookLimits &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPhoneBookLimits" fullname="QPhoneBookLimits::~QPhoneBookLimits" href="qphonebooklimits.html#dtor.QPhoneBookLimits" location="qphonebook.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPhoneBookLimits()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QPhoneBookLimits::isNull" href="qphonebooklimits.html#isNull" location="qphonebook.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QPhoneBookLimits::operator=" href="qphonebooklimits.html#operator=" location="qphonebook.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QPhoneBookLimits &amp;" signature="operator=(const QPhoneBookLimits &amp; other)">
                <parameter left="const QPhoneBookLimits &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="numberLength" fullname="QPhoneBookLimits::numberLength" href="qphonebooklimits.html#numberLength" location="qphonebook.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="numberLength() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNumberLength" fullname="QPhoneBookLimits::setNumberLength" href="qphonebooklimits.html#setNumberLength" location="qphonebook.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setNumberLength(uint value)">
                <parameter left="uint" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="textLength" fullname="QPhoneBookLimits::textLength" href="qphonebooklimits.html#textLength" location="qphonebook.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="textLength() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTextLength" fullname="QPhoneBookLimits::setTextLength" href="qphonebooklimits.html#setTextLength" location="qphonebook.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTextLength(uint value)">
                <parameter left="uint" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="firstIndex" fullname="QPhoneBookLimits::firstIndex" href="qphonebooklimits.html#firstIndex" location="qphonebook.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="firstIndex() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFirstIndex" fullname="QPhoneBookLimits::setFirstIndex" href="qphonebooklimits.html#setFirstIndex" location="qphonebook.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFirstIndex(uint value)">
                <parameter left="uint" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lastIndex" fullname="QPhoneBookLimits::lastIndex" href="qphonebooklimits.html#lastIndex" location="qphonebook.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="lastIndex() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLastIndex" fullname="QPhoneBookLimits::setLastIndex" href="qphonebooklimits.html#setLastIndex" location="qphonebook.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLastIndex(uint value)">
                <parameter left="uint" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="used" fullname="QPhoneBookLimits::used" href="qphonebooklimits.html#used" location="qphonebook.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="used() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUsed" fullname="QPhoneBookLimits::setUsed" href="qphonebooklimits.html#setUsed" location="qphonebook.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setUsed(uint value)">
                <parameter left="uint" right="" name="value" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPhoneBook" href="qphonebook.html" location="qphonebook.h" bases="QCommInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QPhoneBook" fullname="QPhoneBook::QPhoneBook" href="qphonebook.html#QPhoneBook" location="qphonebook.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPhoneBook(const QString &amp; service, QObject * parent, QCommInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="service" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QCommInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPhoneBook" fullname="QPhoneBook::~QPhoneBook" href="qphonebook.html#dtor.QPhoneBook" location="qphonebook.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPhoneBook()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="getEntries" fullname="QPhoneBook::getEntries" href="qphonebook.html#getEntries" location="qphonebook.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="getEntries(const QString &amp; store)">
                <parameter left="const QString &amp;" right="" name="store" default="&quot;SM&quot;"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="add" fullname="QPhoneBook::add" href="qphonebook.html#add" location="qphonebook.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="add(const QPhoneBookEntry &amp; entry, const QString &amp; store, bool flush)">
                <parameter left="const QPhoneBookEntry &amp;" right="" name="entry" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="store" default="&quot;SM&quot;"></parameter>
                <parameter left="bool" right="" name="flush" default="true"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remove" fullname="QPhoneBook::remove" href="qphonebook.html#remove" location="qphonebook.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="remove(uint index, const QString &amp; store, bool flush)">
                <parameter left="uint" right="" name="index" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="store" default="&quot;SM&quot;"></parameter>
                <parameter left="bool" right="" name="flush" default="true"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="update" fullname="QPhoneBook::update" href="qphonebook.html#update" location="qphonebook.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="update(const QPhoneBookEntry &amp; entry, const QString &amp; store, bool flush)">
                <parameter left="const QPhoneBookEntry &amp;" right="" name="entry" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="store" default="&quot;SM&quot;"></parameter>
                <parameter left="bool" right="" name="flush" default="true"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="flush" fullname="QPhoneBook::flush" href="qphonebook.html#flush" location="qphonebook.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="flush(const QString &amp; store)">
                <parameter left="const QString &amp;" right="" name="store" default="&quot;SM&quot;"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPassword" fullname="QPhoneBook::setPassword" href="qphonebook.html#setPassword" location="qphonebook.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setPassword(const QString &amp; store, const QString &amp; password)">
                <parameter left="const QString &amp;" right="" name="store" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="password" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearPassword" fullname="QPhoneBook::clearPassword" href="qphonebook.html#clearPassword" location="qphonebook.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="clearPassword(const QString &amp; store)">
                <parameter left="const QString &amp;" right="" name="store" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestLimits" fullname="QPhoneBook::requestLimits" href="qphonebook.html#requestLimits" location="qphonebook.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="requestLimits(const QString &amp; store)">
                <parameter left="const QString &amp;" right="" name="store" default="&quot;SM&quot;"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestFixedDialingState" fullname="QPhoneBook::requestFixedDialingState" href="qphonebook.html#requestFixedDialingState" location="qphonebook.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="requestFixedDialingState()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFixedDialingState" fullname="QPhoneBook::setFixedDialingState" href="qphonebook.html#setFixedDialingState" location="qphonebook.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setFixedDialingState(bool enabled, const QString &amp; pin2)">
                <parameter left="bool" right="" name="enabled" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="pin2" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="storages" fullname="QPhoneBook::storages" href="qphonebook.html#storages" location="qphonebook.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QStringList" signature="storages()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="entries" fullname="QPhoneBook::entries" href="qphonebook.html#entries" location="qphonebook.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="entries(const QString &amp; store, const QList&lt;QPhoneBookEntry&gt; &amp; list)">
                <parameter left="const QString &amp;" right="" name="store" default=""></parameter>
                <parameter left="const QList&lt;QPhoneBookEntry&gt; &amp;" right="" name="list" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="limits" fullname="QPhoneBook::limits" href="qphonebook.html#limits" location="qphonebook.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="limits(const QString &amp; store, const QPhoneBookLimits &amp; value)">
                <parameter left="const QString &amp;" right="" name="store" default=""></parameter>
                <parameter left="const QPhoneBookLimits &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fixedDialingState" fullname="QPhoneBook::fixedDialingState" href="qphonebook.html#fixedDialingState" location="qphonebook.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="fixedDialingState(bool enabled)">
                <parameter left="bool" right="" name="enabled" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFixedDialingStateResult" fullname="QPhoneBook::setFixedDialingStateResult" href="qphonebook.html#setFixedDialingStateResult" location="qphonebook.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="setFixedDialingStateResult(QTelephony::Result result)">
                <parameter left="QTelephony::Result" right="" name="result" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="ready" fullname="QPhoneBook::ready" href="qphonebook.html#ready" location="qphonebook.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="ready()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaEngine" href="qmediaengine.html" location="qmediaengine.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaEngine" fullname="QMediaEngine::~QMediaEngine" href="qmediaengine.html#dtor.QMediaEngine" location="qmediaengine.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaEngine()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="initialize" fullname="QMediaEngine::initialize" href="qmediaengine.html#initialize" location="qmediaengine.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="initialize()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QMediaEngine::start" href="qmediaengine.html#start" location="qmediaengine.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="start()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QMediaEngine::stop" href="qmediaengine.html#stop" location="qmediaengine.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="stop()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="suspend" fullname="QMediaEngine::suspend" href="qmediaengine.html#suspend" location="qmediaengine.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="suspend()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resume" fullname="QMediaEngine::resume" href="qmediaengine.html#resume" location="qmediaengine.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="resume()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="engineInformation" fullname="QMediaEngine::engineInformation" href="qmediaengine.html#engineInformation" location="qmediaengine.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QMediaEngineInformation const *" signature="engineInformation()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaDevice" href="qmediadevice.html" location="qmediadevice.h" bases="QIODevice" module="">
            <class access="public" threadsafety="unspecified" status="commendable" name="Info" fullname="QMediaDevice::Info" href="qmediadevice-info.html" location="qmediadevice.h" bases="" module="">
                <enum access="public" threadsafety="unspecified" status="commendable" name="DataType" fullname="QMediaDevice::Info::DataType" href="qmediadevice-info.html#DataType-enum" location="qmediadevice.h">
                    <value name="Raw" value="0"></value>
                    <value name="PCM" value="1"></value>
                </enum>
                <variable access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QMediaDevice::Info::type" href="qmediadevice-info.html#type-var" location="qmediadevice.h" type="DataType" static="false"></variable>
            </class>
            <function access="public" threadsafety="unspecified" status="commendable" name="dataType" fullname="QMediaDevice::dataType" href="qmediadevice.html#dataType" location="qmediadevice.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="Info const &amp;" signature="dataType() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectToInput" fullname="QMediaDevice::connectToInput" href="qmediadevice.html#connectToInput" location="qmediadevice.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="connectToInput(QMediaDevice * input)">
                <parameter left="QMediaDevice *" right="" name="input" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disconnectFromInput" fullname="QMediaDevice::disconnectFromInput" href="qmediadevice.html#disconnectFromInput" location="qmediadevice.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="disconnectFromInput(QMediaDevice * input)">
                <parameter left="QMediaDevice *" right="" name="input" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAbstractSecondaryDisplay" href="qabstractsecondarydisplay.html" location="qabstractsecondarydisplay.h" bases="QWidget" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAbstractSecondaryDisplay" fullname="QAbstractSecondaryDisplay::QAbstractSecondaryDisplay" href="qabstractsecondarydisplay.html#QAbstractSecondaryDisplay" location="qabstractsecondarydisplay.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAbstractSecondaryDisplay(QWidget * parent, Qt::WFlags flags)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
                <parameter left="Qt::WFlags" right="" name="flags" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="applyBackgroundImage" fullname="QAbstractSecondaryDisplay::applyBackgroundImage" href="qabstractsecondarydisplay.html#applyBackgroundImage" location="qabstractsecondarydisplay.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="applyBackgroundImage()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateBackground" fullname="QAbstractSecondaryDisplay::updateBackground" href="qabstractsecondarydisplay.html#updateBackground" location="qabstractsecondarydisplay.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="updateBackground()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="MediaServerControlTask" href="mediaservercontroltask.html" location="mediaserver.h" bases="SystemShutdownHandler" module=""></class>
        <class access="public" threadsafety="unspecified" status="main" name="QDLBrowserClient" href="qdlbrowserclient.html" location="qdlbrowserclient.h" bases="QTextBrowser" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QDLBrowserClient" fullname="QDLBrowserClient::QDLBrowserClient" href="qdlbrowserclient.html#QDLBrowserClient" location="qdlbrowserclient.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDLBrowserClient(QWidget * parent, const QString &amp; name)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDLBrowserClient" fullname="QDLBrowserClient::~QDLBrowserClient" href="qdlbrowserclient.html#dtor.QDLBrowserClient" location="qdlbrowserclient.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDLBrowserClient()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="loadLinks" fullname="QDLBrowserClient::loadLinks" href="qdlbrowserclient.html#loadLinks" location="qdlbrowserclient.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="loadLinks(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activateLink" fullname="QDLBrowserClient::activateLink" href="qdlbrowserclient.html#activateLink" location="qdlbrowserclient.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="activateLink(const QUrl &amp; link)">
                <parameter left="const QUrl &amp;" right="" name="link" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="verifyLinks" fullname="QDLBrowserClient::verifyLinks" href="qdlbrowserclient.html#verifyLinks" location="qdlbrowserclient.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="verifyLinks()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAudioStateConfiguration" href="qaudiostateconfiguration.html" location="qaudiostateconfiguration.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioStateConfiguration" fullname="QAudioStateConfiguration::QAudioStateConfiguration" href="qaudiostateconfiguration.html#QAudioStateConfiguration" location="qaudiostateconfiguration.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAudioStateConfiguration(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAudioStateConfiguration" fullname="QAudioStateConfiguration::~QAudioStateConfiguration" href="qaudiostateconfiguration.html#dtor.QAudioStateConfiguration" location="qaudiostateconfiguration.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAudioStateConfiguration()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isInitialized" fullname="QAudioStateConfiguration::isInitialized" href="qaudiostateconfiguration.html#isInitialized" location="qaudiostateconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isInitialized() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="domains" fullname="QAudioStateConfiguration::domains" href="qaudiostateconfiguration.html#domains" location="qaudiostateconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSet&lt;QByteArray&gt;" signature="domains() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="states" fullname="QAudioStateConfiguration::states" href="qaudiostateconfiguration.html#states" location="qaudiostateconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSet&lt;QAudioStateInfo&gt;" signature="states() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="states" fullname="QAudioStateConfiguration::states" href="qaudiostateconfiguration.html#states-2" location="qaudiostateconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QSet&lt;QAudioStateInfo&gt;" signature="states(const QByteArray &amp; domain) const">
                <parameter left="const QByteArray &amp;" right="" name="domain" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isStateAvailable" fullname="QAudioStateConfiguration::isStateAvailable" href="qaudiostateconfiguration.html#isStateAvailable" location="qaudiostateconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isStateAvailable(const QAudioStateInfo &amp; state) const">
                <parameter left="const QAudioStateInfo &amp;" right="" name="state" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableCapabilities" fullname="QAudioStateConfiguration::availableCapabilities" href="qaudiostateconfiguration.html#availableCapabilities" location="qaudiostateconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAudio::AudioCapabilities" signature="availableCapabilities(const QAudioStateInfo &amp; state) const">
                <parameter left="const QAudioStateInfo &amp;" right="" name="state" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentState" fullname="QAudioStateConfiguration::currentState" href="qaudiostateconfiguration.html#currentState" location="qaudiostateconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAudioStateInfo" signature="currentState() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentCapability" fullname="QAudioStateConfiguration::currentCapability" href="qaudiostateconfiguration.html#currentCapability" location="qaudiostateconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAudio::AudioCapability" signature="currentCapability() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="configurationInitialized" fullname="QAudioStateConfiguration::configurationInitialized" href="qaudiostateconfiguration.html#configurationInitialized" location="qaudiostateconfiguration.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="configurationInitialized()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availabilityChanged" fullname="QAudioStateConfiguration::availabilityChanged" href="qaudiostateconfiguration.html#availabilityChanged" location="qaudiostateconfiguration.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="availabilityChanged()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentStateChanged" fullname="QAudioStateConfiguration::currentStateChanged" href="qaudiostateconfiguration.html#currentStateChanged" location="qaudiostateconfiguration.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="currentStateChanged(const QAudioStateInfo &amp; state, QAudio::AudioCapability capability)">
                <parameter left="const QAudioStateInfo &amp;" right="" name="state" default=""></parameter>
                <parameter left="QAudio::AudioCapability" right="" name="capability" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QDialOptions" href="qdialoptions.html" location="qdialoptions.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QDialOptions" fullname="QDialOptions::QDialOptions" href="qdialoptions.html#QDialOptions" location="qdialoptions.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDialOptions()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDialOptions" fullname="QDialOptions::QDialOptions" href="qdialoptions.html#QDialOptions-2" location="qdialoptions.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QDialOptions(const QDialOptions &amp; other)">
                <parameter left="const QDialOptions &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDialOptions" fullname="QDialOptions::~QDialOptions" href="qdialoptions.html#dtor.QDialOptions" location="qdialoptions.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDialOptions()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QDialOptions::operator=" href="qdialoptions.html#operator=" location="qdialoptions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QDialOptions &amp;" signature="operator=(const QDialOptions &amp; other)">
                <parameter left="const QDialOptions &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="number" fullname="QDialOptions::number" href="qdialoptions.html#number" location="qdialoptions.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="number() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNumber" fullname="QDialOptions::setNumber" href="qdialoptions.html#setNumber" location="qdialoptions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setNumber(const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="CallerId" fullname="QDialOptions::CallerId" href="qdialoptions.html#CallerId-enum" location="qdialoptions.h">
                <value name="DefaultCallerId" value="0"></value>
                <value name="SendCallerId" value="1"></value>
                <value name="SuppressCallerId" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="callerId" fullname="QDialOptions::callerId" href="qdialoptions.html#callerId" location="qdialoptions.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDialOptions::CallerId" signature="callerId() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCallerId" fullname="QDialOptions::setCallerId" href="qdialoptions.html#setCallerId" location="qdialoptions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCallerId(QDialOptions::CallerId value)">
                <parameter left="QDialOptions::CallerId" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="closedUserGroup" fullname="QDialOptions::closedUserGroup" href="qdialoptions.html#closedUserGroup" location="qdialoptions.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="closedUserGroup() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setClosedUserGroup" fullname="QDialOptions::setClosedUserGroup" href="qdialoptions.html#setClosedUserGroup" location="qdialoptions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setClosedUserGroup(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contact" fullname="QDialOptions::contact" href="qdialoptions.html#contact" location="qdialoptions.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUniqueId" signature="contact() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContact" fullname="QDialOptions::setContact" href="qdialoptions.html#setContact" location="qdialoptions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setContact(const QUniqueId &amp; value)">
                <parameter left="const QUniqueId &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="speed" fullname="QDialOptions::speed" href="qdialoptions.html#speed" location="qdialoptions.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="speed() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSpeed" fullname="QDialOptions::setSpeed" href="qdialoptions.html#setSpeed" location="qdialoptions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSpeed(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="gsmSpeed" fullname="QDialOptions::gsmSpeed" href="qdialoptions.html#gsmSpeed" location="qdialoptions.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="gsmSpeed() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setGsmSpeed" fullname="QDialOptions::setGsmSpeed" href="qdialoptions.html#setGsmSpeed" location="qdialoptions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setGsmSpeed(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Bearer" fullname="QDialOptions::Bearer" href="qdialoptions.html#Bearer-enum" location="qdialoptions.h">
                <value name="DataCircuitAsyncUDI" value="0"></value>
                <value name="DataCircuitSyncUDI" value="1"></value>
                <value name="PadAccessUDI" value="2"></value>
                <value name="PacketAccessUDI" value="3"></value>
                <value name="DataCircuitAsyncRDI" value="4"></value>
                <value name="DataCircuitSyncRDI" value="5"></value>
                <value name="PadAccessRDI" value="6"></value>
                <value name="PacketAccessRDI" value="7"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="bearer" fullname="QDialOptions::bearer" href="qdialoptions.html#bearer" location="qdialoptions.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDialOptions::Bearer" signature="bearer() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBearer" fullname="QDialOptions::setBearer" href="qdialoptions.html#setBearer" location="qdialoptions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBearer(QDialOptions::Bearer value)">
                <parameter left="QDialOptions::Bearer" right="" name="value" default=""></parameter>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="TransparentMode" fullname="QDialOptions::TransparentMode" href="qdialoptions.html#TransparentMode-enum" location="qdialoptions.h">
                <value name="Transparent" value="0"></value>
                <value name="NonTransparent" value="1"></value>
                <value name="TransparentPreferred" value="2"></value>
                <value name="NonTransparentPreferred" value="3"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="transparentMode" fullname="QDialOptions::transparentMode" href="qdialoptions.html#transparentMode" location="qdialoptions.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDialOptions::TransparentMode" signature="transparentMode() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTransparentMode" fullname="QDialOptions::setTransparentMode" href="qdialoptions.html#setTransparentMode" location="qdialoptions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTransparentMode(QDialOptions::TransparentMode value)">
                <parameter left="QDialOptions::TransparentMode" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="extensionOption" fullname="QDialOptions::extensionOption" href="qdialoptions.html#extensionOption" location="qdialoptions.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="extensionOption(const QString &amp; name, const QVariant &amp; def) const">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="def" default="QVariant()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExtensionOption" fullname="QDialOptions::setExtensionOption" href="qdialoptions.html#setExtensionOption" location="qdialoptions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setExtensionOption(const QString &amp; name, const QVariant &amp; value)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="useIpModule" fullname="QDialOptions::useIpModule" href="qdialoptions.html#useIpModule" location="qdialoptions.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="useIpModule() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUseIpModule" fullname="QDialOptions::setUseIpModule" href="qdialoptions.html#setUseIpModule" location="qdialoptions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setUseIpModule(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="ipProgramName" fullname="QDialOptions::ipProgramName" href="qdialoptions.html#ipProgramName" location="qdialoptions.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="ipProgramName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIpProgramName" fullname="QDialOptions::setIpProgramName" href="qdialoptions.html#setIpProgramName" location="qdialoptions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIpProgramName(const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="ipArgs" fullname="QDialOptions::ipArgs" href="qdialoptions.html#ipArgs" location="qdialoptions.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="ipArgs() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIpArgs" fullname="QDialOptions::setIpArgs" href="qdialoptions.html#setIpArgs" location="qdialoptions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIpArgs(const QStringList &amp; value)">
                <parameter left="const QStringList &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="ipConnectScript" fullname="QDialOptions::ipConnectScript" href="qdialoptions.html#ipConnectScript" location="qdialoptions.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="ipConnectScript() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIpConnectScript" fullname="QDialOptions::setIpConnectScript" href="qdialoptions.html#setIpConnectScript" location="qdialoptions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIpConnectScript(const QString &amp; filename)">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="ipDisconnectScript" fullname="QDialOptions::ipDisconnectScript" href="qdialoptions.html#ipDisconnectScript" location="qdialoptions.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="ipDisconnectScript() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIpDisconnectScript" fullname="QDialOptions::setIpDisconnectScript" href="qdialoptions.html#setIpDisconnectScript" location="qdialoptions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIpDisconnectScript(const QString &amp; filename)">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="ipDemandDialing" fullname="QDialOptions::ipDemandDialing" href="qdialoptions.html#ipDemandDialing" location="qdialoptions.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="ipDemandDialing() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIpDemandDialing" fullname="QDialOptions::setIpDemandDialing" href="qdialoptions.html#setIpDemandDialing" location="qdialoptions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIpDemandDialing(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contextId" fullname="QDialOptions::contextId" href="qdialoptions.html#contextId" location="qdialoptions.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="contextId() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContextId" fullname="QDialOptions::setContextId" href="qdialoptions.html#setContextId" location="qdialoptions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setContextId(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pdpType" fullname="QDialOptions::pdpType" href="qdialoptions.html#pdpType" location="qdialoptions.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="pdpType() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPdpType" fullname="QDialOptions::setPdpType" href="qdialoptions.html#setPdpType" location="qdialoptions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPdpType(const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="apn" fullname="QDialOptions::apn" href="qdialoptions.html#apn" location="qdialoptions.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="apn() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setApn" fullname="QDialOptions::setApn" href="qdialoptions.html#setApn" location="qdialoptions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setApn(const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSimToolkit" href="qsimtoolkit.html" location="qsimtoolkit.h" bases="QCommInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSimToolkit" fullname="QSimToolkit::QSimToolkit" href="qsimtoolkit.html#QSimToolkit" location="qsimtoolkit.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSimToolkit(const QString &amp; service, QObject * parent, QCommInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="service" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QCommInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSimToolkit" fullname="QSimToolkit::~QSimToolkit" href="qsimtoolkit.html#dtor.QSimToolkit" location="qsimtoolkit.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSimToolkit()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="begin" fullname="QSimToolkit::begin" href="qsimtoolkit.html#begin" location="qsimtoolkit.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="begin()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="end" fullname="QSimToolkit::end" href="qsimtoolkit.html#end" location="qsimtoolkit.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="end()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sendResponse" fullname="QSimToolkit::sendResponse" href="qsimtoolkit.html#sendResponse" location="qsimtoolkit.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="sendResponse(const QSimTerminalResponse &amp; resp)">
                <parameter left="const QSimTerminalResponse &amp;" right="" name="resp" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sendEnvelope" fullname="QSimToolkit::sendEnvelope" href="qsimtoolkit.html#sendEnvelope" location="qsimtoolkit.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="sendEnvelope(const QSimEnvelope &amp; env)">
                <parameter left="const QSimEnvelope &amp;" right="" name="env" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mainMenuSelected" fullname="QSimToolkit::mainMenuSelected" href="qsimtoolkit.html#mainMenuSelected" location="qsimtoolkit.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="mainMenuSelected(uint item)">
                <parameter left="uint" right="" name="item" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearText" fullname="QSimToolkit::clearText" href="qsimtoolkit.html#clearText" location="qsimtoolkit.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="clearText()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="key" fullname="QSimToolkit::key" href="qsimtoolkit.html#key" location="qsimtoolkit.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="key(const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="input" fullname="QSimToolkit::input" href="qsimtoolkit.html#input" location="qsimtoolkit.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="input(const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="allowCallSetup" fullname="QSimToolkit::allowCallSetup" href="qsimtoolkit.html#allowCallSetup" location="qsimtoolkit.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="allowCallSetup()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="denyCallSetup" fullname="QSimToolkit::denyCallSetup" href="qsimtoolkit.html#denyCallSetup" location="qsimtoolkit.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="denyCallSetup()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="subMenuSelected" fullname="QSimToolkit::subMenuSelected" href="qsimtoolkit.html#subMenuSelected" location="qsimtoolkit.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="subMenuSelected(uint item)">
                <parameter left="uint" right="" name="item" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="subMenuExited" fullname="QSimToolkit::subMenuExited" href="qsimtoolkit.html#subMenuExited" location="qsimtoolkit.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="subMenuExited()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="idleScreen" fullname="QSimToolkit::idleScreen" href="qsimtoolkit.html#idleScreen" location="qsimtoolkit.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="idleScreen()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="userActivity" fullname="QSimToolkit::userActivity" href="qsimtoolkit.html#userActivity" location="qsimtoolkit.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="userActivity()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="endSession" fullname="QSimToolkit::endSession" href="qsimtoolkit.html#endSession" location="qsimtoolkit.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="endSession()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="moveBackward" fullname="QSimToolkit::moveBackward" href="qsimtoolkit.html#moveBackward" location="qsimtoolkit.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="moveBackward()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cannotProcess" fullname="QSimToolkit::cannotProcess" href="qsimtoolkit.html#cannotProcess" location="qsimtoolkit.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="cannotProcess()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="temporarilyUnavailable" fullname="QSimToolkit::temporarilyUnavailable" href="qsimtoolkit.html#temporarilyUnavailable" location="qsimtoolkit.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="temporarilyUnavailable()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="noResponseFromUser" fullname="QSimToolkit::noResponseFromUser" href="qsimtoolkit.html#noResponseFromUser" location="qsimtoolkit.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="noResponseFromUser()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="aborted" fullname="QSimToolkit::aborted" href="qsimtoolkit.html#aborted" location="qsimtoolkit.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="aborted()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="help" fullname="QSimToolkit::help" href="qsimtoolkit.html#help" location="qsimtoolkit.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="help(QSimCommand::Type command, uint item)">
                <parameter left="QSimCommand::Type" right="" name="command" default=""></parameter>
                <parameter left="uint" right="" name="item" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="command" fullname="QSimToolkit::command" href="qsimtoolkit.html#command" location="qsimtoolkit.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="command(const QSimCommand &amp; command)">
                <parameter left="const QSimCommand &amp;" right="" name="command" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="beginFailed" fullname="QSimToolkit::beginFailed" href="qsimtoolkit.html#beginFailed" location="qsimtoolkit.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="beginFailed()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="controlEvent" fullname="QSimToolkit::controlEvent" href="qsimtoolkit.html#controlEvent" location="qsimtoolkit.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="controlEvent(const QSimControlEvent &amp; event)">
                <parameter left="const QSimControlEvent &amp;" right="" name="event" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="emitCommandAndRespond" fullname="QSimToolkit::emitCommandAndRespond" href="qsimtoolkit.html#emitCommandAndRespond" location="qsimtoolkit.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="emitCommandAndRespond(const QSimCommand &amp; command)">
                <parameter left="const QSimCommand &amp;" right="" name="command" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemIndicators" href="qmodemindicators.html" location="qmodemindicators.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemIndicators" fullname="QModemIndicators::QModemIndicators" href="qmodemindicators.html#QModemIndicators" location="qmodemindicators.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemIndicators(QModemService * service)">
                <parameter left="QModemService *" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemIndicators" fullname="QModemIndicators::~QModemIndicators" href="qmodemindicators.html#dtor.QModemIndicators" location="qmodemindicators.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemIndicators()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ChargeState" fullname="QModemIndicators::ChargeState" href="qmodemindicators.html#ChargeState-enum" location="qmodemindicators.h">
                <value name="PoweredByBattery" value="0"></value>
                <value name="NotPoweredByBattery" value="1"></value>
                <value name="NoBattery" value="2"></value>
                <value name="PowerFault" value="3"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SmsMemoryFullStatus" fullname="QModemIndicators::SmsMemoryFullStatus" href="qmodemindicators.html#SmsMemoryFullStatus-enum" location="qmodemindicators.h">
                <value name="SmsMemoryOK" value="0"></value>
                <value name="SmsMemoryFull" value="1"></value>
                <value name="SmsMemoryMessageRejected" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSignalQuality" fullname="QModemIndicators::setSignalQuality" href="qmodemindicators.html#setSignalQuality" location="qmodemindicators.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setSignalQuality(int value, int maxValue)">
                <parameter left="int" right="" name="value" default=""></parameter>
                <parameter left="int" right="" name="maxValue" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBatteryCharge" fullname="QModemIndicators::setBatteryCharge" href="qmodemindicators.html#setBatteryCharge" location="qmodemindicators.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setBatteryCharge(int value, int maxValue, QModemIndicators::ChargeState state)">
                <parameter left="int" right="" name="value" default=""></parameter>
                <parameter left="int" right="" name="maxValue" default=""></parameter>
                <parameter left="QModemIndicators::ChargeState" right="" name="state" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSmsMemoryFull" fullname="QModemIndicators::setSmsMemoryFull" href="qmodemindicators.html#setSmsMemoryFull" location="qmodemindicators.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setSmsMemoryFull(QModemIndicators::SmsMemoryFullStatus value)">
                <parameter left="QModemIndicators::SmsMemoryFullStatus" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNetworkTimeZone" fullname="QModemIndicators::setNetworkTimeZone" href="qmodemindicators.html#setNetworkTimeZone" location="qmodemindicators.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setNetworkTimeZone(int zone, int dst)">
                <parameter left="int" right="" name="zone" default=""></parameter>
                <parameter left="int" right="" name="dst" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNetworkTime" fullname="QModemIndicators::setNetworkTime" href="qmodemindicators.html#setNetworkTime" location="qmodemindicators.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setNetworkTime(uint time, int zone, int dst)">
                <parameter left="uint" right="" name="time" default=""></parameter>
                <parameter left="int" right="" name="zone" default=""></parameter>
                <parameter left="int" right="" name="dst" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QObexAuthenticationResponse" href="qobexauthenticationresponse.html" location="qobexauthenticationresponse.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QObexAuthenticationResponse" fullname="QObexAuthenticationResponse::QObexAuthenticationResponse" href="qobexauthenticationresponse.html#QObexAuthenticationResponse" location="qobexauthenticationresponse.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QObexAuthenticationResponse(const QObexAuthenticationResponse &amp; other)">
                <parameter left="const QObexAuthenticationResponse &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QObexAuthenticationResponse" fullname="QObexAuthenticationResponse::~QObexAuthenticationResponse" href="qobexauthenticationresponse.html#dtor.QObexAuthenticationResponse" location="qobexauthenticationresponse.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QObexAuthenticationResponse()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QObexAuthenticationResponse::operator=" href="qobexauthenticationresponse.html#operator=" location="qobexauthenticationresponse.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QObexAuthenticationResponse &amp;" signature="operator=(const QObexAuthenticationResponse &amp; other)">
                <parameter left="const QObexAuthenticationResponse &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="user" fullname="QObexAuthenticationResponse::user" href="qobexauthenticationresponse.html#user" location="qobexauthenticationresponse.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="user() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="match" fullname="QObexAuthenticationResponse::match" href="qobexauthenticationresponse.html#match" location="qobexauthenticationresponse.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="match(const QString &amp; password) const">
                <parameter left="const QString &amp;" right="" name="password" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QIrLocalDevice" href="qirlocaldevice.html" location="qirlocaldevice.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QIrLocalDevice" fullname="QIrLocalDevice::QIrLocalDevice" href="qirlocaldevice.html#QIrLocalDevice" location="qirlocaldevice.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QIrLocalDevice(const QString &amp; device)">
                <parameter left="const QString &amp;" right="" name="device" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QIrLocalDevice" fullname="QIrLocalDevice::~QIrLocalDevice" href="qirlocaldevice.html#dtor.QIrLocalDevice" location="qirlocaldevice.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QIrLocalDevice()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceName" fullname="QIrLocalDevice::deviceName" href="qirlocaldevice.html#deviceName" location="qirlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QString &amp;" signature="deviceName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isUp" fullname="QIrLocalDevice::isUp" href="qirlocaldevice.html#isUp" location="qirlocaldevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isUp() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bringUp" fullname="QIrLocalDevice::bringUp" href="qirlocaldevice.html#bringUp" location="qirlocaldevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="bringUp()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bringDown" fullname="QIrLocalDevice::bringDown" href="qirlocaldevice.html#bringDown" location="qirlocaldevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="bringDown()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="devices" fullname="QIrLocalDevice::devices" href="qirlocaldevice.html#devices" location="qirlocaldevice.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStringList" signature="devices()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="queryRemoteAttribute" fullname="QIrLocalDevice::queryRemoteAttribute" href="qirlocaldevice.html#queryRemoteAttribute" location="qirlocaldevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QVariant" signature="queryRemoteAttribute(const QIrRemoteDevice &amp; remote, const QString &amp; className, const QString &amp; attribName)">
                <parameter left="const QIrRemoteDevice &amp;" right="" name="remote" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="className" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="attribName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="discoverRemoteDevices" fullname="QIrLocalDevice::discoverRemoteDevices" href="qirlocaldevice.html#discoverRemoteDevices" location="qirlocaldevice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="bool" signature="discoverRemoteDevices(QFlags&lt;QIr::DeviceClass&gt; classes)">
                <parameter left="QFlags&lt;QIr::DeviceClass&gt;" right="" name="classes" default="QIr::All"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="discoveryStarted" fullname="QIrLocalDevice::discoveryStarted" href="qirlocaldevice.html#discoveryStarted" location="qirlocaldevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="discoveryStarted()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remoteDeviceFound" fullname="QIrLocalDevice::remoteDeviceFound" href="qirlocaldevice.html#remoteDeviceFound" location="qirlocaldevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="remoteDeviceFound(const QIrRemoteDevice &amp; device)">
                <parameter left="const QIrRemoteDevice &amp;" right="" name="device" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remoteDevicesFound" fullname="QIrLocalDevice::remoteDevicesFound" href="qirlocaldevice.html#remoteDevicesFound" location="qirlocaldevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="remoteDevicesFound(const QList&lt;QIrRemoteDevice&gt; &amp; devices)">
                <parameter left="const QList&lt;QIrRemoteDevice&gt; &amp;" right="" name="devices" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="discoveryCompleted" fullname="QIrLocalDevice::discoveryCompleted" href="qirlocaldevice.html#discoveryCompleted" location="qirlocaldevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="discoveryCompleted()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="PhoneLauncherView" href="phonelauncherview.html" location="phonelauncherview.h" bases="QGraphicsView" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="PhoneLauncherView" fullname="PhoneLauncherView::PhoneLauncherView" href="phonelauncherview.html#PhoneLauncherView" location="phonelauncherview.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="PhoneLauncherView(int rows, int cols, const QString &amp; mapping, const QString &amp; animator, const QString &amp; animatorBackground, QWidget * parent)">
                <parameter left="int" right="" name="rows" default=""></parameter>
                <parameter left="int" right="" name="cols" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="mapping" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="animator" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="animatorBackground" default=""></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~PhoneLauncherView" fullname="PhoneLauncherView::~PhoneLauncherView" href="phonelauncherview.html#dtor.PhoneLauncherView" location="phonelauncherview.cpp" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~PhoneLauncherView()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addItem" fullname="PhoneLauncherView::addItem" href="phonelauncherview.html#addItem" location="phonelauncherview.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addItem(QContent * content, int pos)">
                <parameter left="QContent *" right="" name="content" default=""></parameter>
                <parameter left="int" right="" name="pos" default="-1"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBusy" fullname="PhoneLauncherView::setBusy" href="phonelauncherview.html#setBusy" location="phonelauncherview.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBusy(bool flag)">
                <parameter left="bool" right="" name="flag" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCurrentItem" fullname="PhoneLauncherView::setCurrentItem" href="phonelauncherview.html#setCurrentItem" location="phonelauncherview.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCurrentItem(int idx)">
                <parameter left="int" right="" name="idx" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateImages" fullname="PhoneLauncherView::updateImages" href="phonelauncherview.html#updateImages" location="phonelauncherview.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="updateImages()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentItem" fullname="PhoneLauncherView::currentItem" href="phonelauncherview.html#currentItem" location="phonelauncherview.cpp" virtual="non" meta="slot" const="true" static="false" overload="false" type="QContent *" signature="currentItem() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clicked" fullname="PhoneLauncherView::clicked" href="phonelauncherview.html#clicked" location="phonelauncherview.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="clicked(QContent content)">
                <parameter left="QContent" right="" name="content" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pressed" fullname="PhoneLauncherView::pressed" href="phonelauncherview.html#pressed" location="phonelauncherview.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="pressed(QContent content)">
                <parameter left="QContent" right="" name="content" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="highlighted" fullname="PhoneLauncherView::highlighted" href="phonelauncherview.html#highlighted" location="phonelauncherview.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="highlighted(QContent content)">
                <parameter left="QContent" right="" name="content" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="TelephonyService" href="telephonyservice.html" location="telephonyservice.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="TelephonyService::start" href="telephonyservice.html#start" location="telephonyservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="start()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="TelephonyService::stop" href="telephonyservice.html#stop" location="telephonyservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="stop()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QContactAddress" href="qcontactaddress.html" location="qcontact.h" bases="" module="">
            <variable access="public" threadsafety="unspecified" status="commendable" name="street" fullname="QContactAddress::street" href="qcontactaddress.html#street-var" location="qcontact.h" type="QString" static="false"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="city" fullname="QContactAddress::city" href="qcontactaddress.html#city-var" location="qcontact.h" type="QString" static="false"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QContactAddress::state" href="qcontactaddress.html#state-var" location="qcontact.h" type="QString" static="false"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="zip" fullname="QContactAddress::zip" href="qcontactaddress.html#zip-var" location="qcontact.h" type="QString" static="false"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="country" fullname="QContactAddress::country" href="qcontactaddress.html#country-var" location="qcontact.h" type="QString" static="false"></variable>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QContactAddress::isEmpty" href="qcontactaddress.html#isEmpty" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QContactAddress::operator==" href="qcontactaddress.html#operator==" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QContactAddress &amp; other) const">
                <parameter left="const QContactAddress &amp;" right="" name="other" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QContact" href="qcontact.html" location="qcontact.h" bases="QPimRecord" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContact" fullname="QContact::QContact" href="qcontact.html#QContact" location="qcontact.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContact()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContact" fullname="QContact::QContact" href="qcontact.html#QContact-2" location="qcontact.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContact(const QContact &amp; contact)">
                <parameter left="const QContact &amp;" right="" name="contact" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContact" fullname="QContact::~QContact" href="qcontact.html#dtor.QContact" location="qcontact.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContact()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Location" fullname="QContact::Location" href="qcontact.html#Location-enum" location="qcontact.h">
                <value name="Other" value="0x00"></value>
                <value name="Home" value="0x01"></value>
                <value name="Business" value="0x02"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="PhoneType" fullname="QContact::PhoneType" href="qcontact.html#PhoneType-enum" location="qcontact.h">
                <value name="OtherPhone" value="0x00"></value>
                <value name="HomePhone" value="0x01"></value>
                <value name="BusinessPhone" value="0x02"></value>
                <value name="Mobile" value="0x0100"></value>
                <value name="HomeMobile" value="0x0101"></value>
                <value name="BusinessMobile" value="0x0102"></value>
                <value name="Fax" value="0x0200"></value>
                <value name="HomeFax" value="0x0201"></value>
                <value name="BusinessFax" value="0x0202"></value>
                <value name="VOIP" value="0x0300"></value>
                <value name="HomeVOIP" value="0x0301"></value>
                <value name="BusinessVOIP" value="0x0302"></value>
                <value name="Pager" value="0x0400"></value>
                <value name="HomePager" value="0x0401"></value>
                <value name="BusinessPager" value="0x0402"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QContact::operator=" href="qcontact.html#operator=" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QContact &amp;" signature="operator=(const QContact &amp; contact)">
                <parameter left="const QContact &amp;" right="" name="contact" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QContact::operator==" href="qcontact.html#operator==" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QContact &amp; other) const">
                <parameter left="const QContact &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QContact::operator!=" href="qcontact.html#operator!=" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QContact &amp; other) const">
                <parameter left="const QContact &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="writeVCard" fullname="QContact::writeVCard" href="qcontact.html#writeVCard" location="qcontact.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="writeVCard(QIODevice * device, const QList&lt;QContact&gt; &amp; contacts)">
                <parameter left="QIODevice *" right="" name="device" default=""></parameter>
                <parameter left="const QList&lt;QContact&gt; &amp;" right="" name="contacts" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="writeVCard" fullname="QContact::writeVCard" href="qcontact.html#writeVCard-2" location="qcontact.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="bool" signature="writeVCard(QIODevice * device, const QContact &amp; contact)">
                <parameter left="QIODevice *" right="" name="device" default=""></parameter>
                <parameter left="const QContact &amp;" right="" name="contact" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readVCard" fullname="QContact::readVCard" href="qcontact.html#readVCard" location="qcontact.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QContact&gt;" signature="readVCard(QIODevice * device)">
                <parameter left="QIODevice *" right="" name="device" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="readVCard" fullname="QContact::readVCard" href="qcontact.html#readVCard-2" location="qcontact.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QList&lt;QContact&gt;" signature="readVCard(const QString &amp; filename)">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="readVCard" fullname="QContact::readVCard" href="qcontact.html#readVCard-3" location="qcontact.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="3" type="QList&lt;QContact&gt;" signature="readVCard(const QByteArray &amp; vcard)">
                <parameter left="const QByteArray &amp;" right="" name="vcard" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readVCard" fullname="QContact::readVCard" href="qcontact.html#readVCard-4" location="qcontact.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="4" type="QList&lt;QContact&gt;" signature="readVCard(VObject * vobject)">
                <parameter left="VObject *" right="" name="vobject" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="writeVCard" fullname="QContact::writeVCard" href="qcontact.html#writeVCard-3" location="qcontact.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="3" type="bool" signature="writeVCard(const QString &amp; filename, const QList&lt;QContact&gt; &amp; contacts)">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
                <parameter left="const QList&lt;QContact&gt; &amp;" right="" name="contacts" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="writeVCard" fullname="QContact::writeVCard" href="qcontact.html#writeVCard-4" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="4" type="bool" signature="writeVCard(const QString &amp; filename) const">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="writeVCard" fullname="QContact::writeVCard" href="qcontact.html#writeVCard-5" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="5" type="void" signature="writeVCard(QFile &amp; file) const">
                <parameter left="QFile &amp;" right="" name="file" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="writeVCard" fullname="QContact::writeVCard" href="qcontact.html#writeVCard-6" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="6" type="void" signature="writeVCard(QDataStream * stream) const">
                <parameter left="QDataStream *" right="" name="stream" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNameTitle" fullname="QContact::setNameTitle" href="qcontact.html#setNameTitle" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setNameTitle(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFirstName" fullname="QContact::setFirstName" href="qcontact.html#setFirstName" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFirstName(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMiddleName" fullname="QContact::setMiddleName" href="qcontact.html#setMiddleName" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMiddleName(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLastName" fullname="QContact::setLastName" href="qcontact.html#setLastName" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLastName(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSuffix" fullname="QContact::setSuffix" href="qcontact.html#setSuffix" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSuffix(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFirstNamePronunciation" fullname="QContact::setFirstNamePronunciation" href="qcontact.html#setFirstNamePronunciation" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFirstNamePronunciation(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLastNamePronunciation" fullname="QContact::setLastNamePronunciation" href="qcontact.html#setLastNamePronunciation" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLastNamePronunciation(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCompanyPronunciation" fullname="QContact::setCompanyPronunciation" href="qcontact.html#setCompanyPronunciation" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCompanyPronunciation(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultEmail" fullname="QContact::setDefaultEmail" href="qcontact.html#setDefaultEmail" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefaultEmail(const QString &amp; v)">
                <parameter left="const QString &amp;" right="" name="v" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertEmail" fullname="QContact::insertEmail" href="qcontact.html#insertEmail" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insertEmail(const QString &amp; email)">
                <parameter left="const QString &amp;" right="" name="email" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeEmail" fullname="QContact::removeEmail" href="qcontact.html#removeEmail" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeEmail(const QString &amp; email)">
                <parameter left="const QString &amp;" right="" name="email" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearEmailList" fullname="QContact::clearEmailList" href="qcontact.html#clearEmailList" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearEmailList()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEmailList" fullname="QContact::setEmailList" href="qcontact.html#setEmailList" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setEmailList(const QStringList &amp; emails)">
                <parameter left="const QStringList &amp;" right="" name="emails" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPhoneNumber" fullname="QContact::setPhoneNumber" href="qcontact.html#setPhoneNumber" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPhoneNumber(PhoneType type, const QString &amp; str)">
                <parameter left="PhoneType" right="" name="type" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAddress" fullname="QContact::setAddress" href="qcontact.html#setAddress" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAddress(Location location, const QContactAddress &amp; address)">
                <parameter left="Location" right="" name="location" default=""></parameter>
                <parameter left="const QContactAddress &amp;" right="" name="address" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHomeStreet" fullname="QContact::setHomeStreet" href="qcontact.html#setHomeStreet" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHomeStreet(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHomeCity" fullname="QContact::setHomeCity" href="qcontact.html#setHomeCity" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHomeCity(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHomeState" fullname="QContact::setHomeState" href="qcontact.html#setHomeState" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHomeState(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHomeZip" fullname="QContact::setHomeZip" href="qcontact.html#setHomeZip" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHomeZip(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHomeCountry" fullname="QContact::setHomeCountry" href="qcontact.html#setHomeCountry" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHomeCountry(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHomePhone" fullname="QContact::setHomePhone" href="qcontact.html#setHomePhone" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHomePhone(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHomeFax" fullname="QContact::setHomeFax" href="qcontact.html#setHomeFax" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHomeFax(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHomeMobile" fullname="QContact::setHomeMobile" href="qcontact.html#setHomeMobile" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHomeMobile(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHomeVOIP" fullname="QContact::setHomeVOIP" href="qcontact.html#setHomeVOIP" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHomeVOIP(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHomeWebpage" fullname="QContact::setHomeWebpage" href="qcontact.html#setHomeWebpage" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHomeWebpage(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCompany" fullname="QContact::setCompany" href="qcontact.html#setCompany" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCompany(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBusinessStreet" fullname="QContact::setBusinessStreet" href="qcontact.html#setBusinessStreet" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBusinessStreet(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBusinessCity" fullname="QContact::setBusinessCity" href="qcontact.html#setBusinessCity" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBusinessCity(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBusinessState" fullname="QContact::setBusinessState" href="qcontact.html#setBusinessState" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBusinessState(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBusinessZip" fullname="QContact::setBusinessZip" href="qcontact.html#setBusinessZip" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBusinessZip(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBusinessCountry" fullname="QContact::setBusinessCountry" href="qcontact.html#setBusinessCountry" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBusinessCountry(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBusinessWebpage" fullname="QContact::setBusinessWebpage" href="qcontact.html#setBusinessWebpage" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBusinessWebpage(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setJobTitle" fullname="QContact::setJobTitle" href="qcontact.html#setJobTitle" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setJobTitle(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDepartment" fullname="QContact::setDepartment" href="qcontact.html#setDepartment" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDepartment(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOffice" fullname="QContact::setOffice" href="qcontact.html#setOffice" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setOffice(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBusinessPhone" fullname="QContact::setBusinessPhone" href="qcontact.html#setBusinessPhone" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBusinessPhone(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBusinessFax" fullname="QContact::setBusinessFax" href="qcontact.html#setBusinessFax" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBusinessFax(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBusinessMobile" fullname="QContact::setBusinessMobile" href="qcontact.html#setBusinessMobile" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBusinessMobile(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBusinessPager" fullname="QContact::setBusinessPager" href="qcontact.html#setBusinessPager" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBusinessPager(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBusinessVOIP" fullname="QContact::setBusinessVOIP" href="qcontact.html#setBusinessVOIP" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBusinessVOIP(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setProfession" fullname="QContact::setProfession" href="qcontact.html#setProfession" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setProfession(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAssistant" fullname="QContact::setAssistant" href="qcontact.html#setAssistant" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAssistant(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManager" fullname="QContact::setManager" href="qcontact.html#setManager" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setManager(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSpouse" fullname="QContact::setSpouse" href="qcontact.html#setSpouse" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSpouse(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="GenderType" fullname="QContact::GenderType" href="qcontact.html#GenderType-enum" location="qcontact.h">
                <value name="UnspecifiedGender" value="0"></value>
                <value name="Male" value="1"></value>
                <value name="Female" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="setGender" fullname="QContact::setGender" href="qcontact.html#setGender" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setGender(GenderType g)">
                <parameter left="GenderType" right="" name="g" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBirthday" fullname="QContact::setBirthday" href="qcontact.html#setBirthday" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBirthday(const QDate &amp; date)">
                <parameter left="const QDate &amp;" right="" name="date" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAnniversary" fullname="QContact::setAnniversary" href="qcontact.html#setAnniversary" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAnniversary(const QDate &amp; date)">
                <parameter left="const QDate &amp;" right="" name="date" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNickname" fullname="QContact::setNickname" href="qcontact.html#setNickname" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setNickname(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setChildren" fullname="QContact::setChildren" href="qcontact.html#setChildren" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setChildren(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNotes" fullname="QContact::setNotes" href="qcontact.html#setNotes" location="qcontact.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setNotes(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPortraitFile" fullname="QContact::setPortraitFile" href="qcontact.html#setPortraitFile" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPortraitFile(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="changePortrait" fullname="QContact::changePortrait" href="qcontact.html#changePortrait" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="changePortrait(const QPixmap &amp; p)">
                <parameter left="const QPixmap &amp;" right="" name="p" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="changePortrait" fullname="QContact::changePortrait" href="qcontact.html#changePortrait-2" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="changePortrait(const QImage &amp; image)">
                <parameter left="const QImage &amp;" right="" name="image" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="changePortrait" fullname="QContact::changePortrait" href="qcontact.html#changePortrait-3" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="void" signature="changePortrait(const QString &amp; imageLocation, const QRect &amp; rect)">
                <parameter left="const QString &amp;" right="" name="imageLocation" default=""></parameter>
                <parameter left="const QRect &amp;" right="" name="rect" default="QRect()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="match" fullname="QContact::match" href="qcontact.html#match-2" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="bool" signature="match(const QString &amp; expression) const">
                <parameter left="const QString &amp;" right="" name="expression" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="match" fullname="QContact::match" href="qcontact.html#match" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="match(const QRegExp &amp; expression) const">
                <parameter left="const QRegExp &amp;" right="" name="expression" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="nameTitle" fullname="QContact::nameTitle" href="qcontact.html#nameTitle" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="nameTitle() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="firstName" fullname="QContact::firstName" href="qcontact.html#firstName" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="firstName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="middleName" fullname="QContact::middleName" href="qcontact.html#middleName" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="middleName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lastName" fullname="QContact::lastName" href="qcontact.html#lastName" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="lastName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="suffix" fullname="QContact::suffix" href="qcontact.html#suffix" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="suffix() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lastNamePronunciation" fullname="QContact::lastNamePronunciation" href="qcontact.html#lastNamePronunciation" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="lastNamePronunciation() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="firstNamePronunciation" fullname="QContact::firstNamePronunciation" href="qcontact.html#firstNamePronunciation" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="firstNamePronunciation() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="companyPronunciation" fullname="QContact::companyPronunciation" href="qcontact.html#companyPronunciation" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="companyPronunciation() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLabelFormat" fullname="QContact::setLabelFormat" href="qcontact.html#setLabelFormat" location="qcontact.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setLabelFormat(const QString &amp; f)">
                <parameter left="const QString &amp;" right="" name="f" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="labelFormat" fullname="QContact::labelFormat" href="qcontact.html#labelFormat" location="qcontact.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="labelFormat()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="labelFields" fullname="QContact::labelFields" href="qcontact.html#labelFields" location="qcontact.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStringList" signature="labelFields()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="label" fullname="QContact::label" href="qcontact.html#label" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="label() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultEmail" fullname="QContact::defaultEmail" href="qcontact.html#defaultEmail" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="defaultEmail() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="emailList" fullname="QContact::emailList" href="qcontact.html#emailList" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="emailList() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="address" fullname="QContact::address" href="qcontact.html#address" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactAddress" signature="address(Location location) const">
                <parameter left="Location" right="" name="location" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="homeStreet" fullname="QContact::homeStreet" href="qcontact.html#homeStreet" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="homeStreet() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="homeCity" fullname="QContact::homeCity" href="qcontact.html#homeCity" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="homeCity() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="homeState" fullname="QContact::homeState" href="qcontact.html#homeState" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="homeState() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="homeZip" fullname="QContact::homeZip" href="qcontact.html#homeZip" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="homeZip() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="homeCountry" fullname="QContact::homeCountry" href="qcontact.html#homeCountry" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="homeCountry() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="phoneTypes" fullname="QContact::phoneTypes" href="qcontact.html#phoneTypes" location="qcontact.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;PhoneType&gt;" signature="phoneTypes()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="phoneIcon" fullname="QContact::phoneIcon" href="qcontact.html#phoneIcon" location="qcontact.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QIcon" signature="phoneIcon(PhoneType type)">
                <parameter left="PhoneType" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="phoneIconResource" fullname="QContact::phoneIconResource" href="qcontact.html#phoneIconResource" location="qcontact.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="phoneIconResource(PhoneType type)">
                <parameter left="PhoneType" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="phoneNumber" fullname="QContact::phoneNumber" href="qcontact.html#phoneNumber" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="phoneNumber(PhoneType type) const">
                <parameter left="PhoneType" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="homePhone" fullname="QContact::homePhone" href="qcontact.html#homePhone" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="homePhone() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="homeFax" fullname="QContact::homeFax" href="qcontact.html#homeFax" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="homeFax() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="homeMobile" fullname="QContact::homeMobile" href="qcontact.html#homeMobile" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="homeMobile() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="homeVOIP" fullname="QContact::homeVOIP" href="qcontact.html#homeVOIP" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="homeVOIP() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="homeWebpage" fullname="QContact::homeWebpage" href="qcontact.html#homeWebpage" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="homeWebpage() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="displayHomeAddress" fullname="QContact::displayHomeAddress" href="qcontact.html#displayHomeAddress" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="displayHomeAddress() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="displayAddress" fullname="QContact::displayAddress" href="qcontact.html#displayAddress" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="displayAddress(Location location) const">
                <parameter left="Location" right="" name="location" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="company" fullname="QContact::company" href="qcontact.html#company" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="company() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="businessStreet" fullname="QContact::businessStreet" href="qcontact.html#businessStreet" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="businessStreet() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="businessCity" fullname="QContact::businessCity" href="qcontact.html#businessCity" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="businessCity() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="businessState" fullname="QContact::businessState" href="qcontact.html#businessState" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="businessState() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="businessZip" fullname="QContact::businessZip" href="qcontact.html#businessZip" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="businessZip() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="businessCountry" fullname="QContact::businessCountry" href="qcontact.html#businessCountry" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="businessCountry() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="businessWebpage" fullname="QContact::businessWebpage" href="qcontact.html#businessWebpage" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="businessWebpage() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="jobTitle" fullname="QContact::jobTitle" href="qcontact.html#jobTitle" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="jobTitle() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="department" fullname="QContact::department" href="qcontact.html#department" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="department() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="office" fullname="QContact::office" href="qcontact.html#office" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="office() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="businessPhone" fullname="QContact::businessPhone" href="qcontact.html#businessPhone" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="businessPhone() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="businessFax" fullname="QContact::businessFax" href="qcontact.html#businessFax" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="businessFax() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="businessMobile" fullname="QContact::businessMobile" href="qcontact.html#businessMobile" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="businessMobile() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="businessVOIP" fullname="QContact::businessVOIP" href="qcontact.html#businessVOIP" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="businessVOIP() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="businessPager" fullname="QContact::businessPager" href="qcontact.html#businessPager" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="businessPager() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="profession" fullname="QContact::profession" href="qcontact.html#profession" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="profession() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="assistant" fullname="QContact::assistant" href="qcontact.html#assistant" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="assistant() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="manager" fullname="QContact::manager" href="qcontact.html#manager" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="manager() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="displayBusinessAddress" fullname="QContact::displayBusinessAddress" href="qcontact.html#displayBusinessAddress" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="displayBusinessAddress() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="phoneNumbers" fullname="QContact::phoneNumbers" href="qcontact.html#phoneNumbers" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;PhoneType, QString&gt;" signature="phoneNumbers() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addresses" fullname="QContact::addresses" href="qcontact.html#addresses" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;Location, QContactAddress&gt;" signature="addresses() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPhoneNumbers" fullname="QContact::setPhoneNumbers" href="qcontact.html#setPhoneNumbers" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPhoneNumbers(const QMap&lt;PhoneType, QString&gt; &amp; numbers)">
                <parameter left="const QMap&lt;PhoneType, QString&gt; &amp;" right="" name="numbers" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAddresses" fullname="QContact::setAddresses" href="qcontact.html#setAddresses" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAddresses(const QMap&lt;Location, QContactAddress&gt; &amp; addresses)">
                <parameter left="const QMap&lt;Location, QContactAddress&gt; &amp;" right="" name="addresses" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearPhoneNumbers" fullname="QContact::clearPhoneNumbers" href="qcontact.html#clearPhoneNumbers" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearPhoneNumbers()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearAddresses" fullname="QContact::clearAddresses" href="qcontact.html#clearAddresses" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearAddresses()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultPhoneNumber" fullname="QContact::defaultPhoneNumber" href="qcontact.html#defaultPhoneNumber" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="defaultPhoneNumber() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultPhoneNumber" fullname="QContact::setDefaultPhoneNumber" href="qcontact.html#setDefaultPhoneNumber" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefaultPhoneNumber(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultPhoneNumber" fullname="QContact::setDefaultPhoneNumber" href="qcontact.html#setDefaultPhoneNumber-2" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setDefaultPhoneNumber(PhoneType type)">
                <parameter left="PhoneType" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="spouse" fullname="QContact::spouse" href="qcontact.html#spouse" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="spouse() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="gender" fullname="QContact::gender" href="qcontact.html#gender" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="GenderType" signature="gender() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="birthday" fullname="QContact::birthday" href="qcontact.html#birthday" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDate" signature="birthday() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="anniversary" fullname="QContact::anniversary" href="qcontact.html#anniversary" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDate" signature="anniversary() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="nickname" fullname="QContact::nickname" href="qcontact.html#nickname" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="nickname() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="children" fullname="QContact::children" href="qcontact.html#children" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="children() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="notes" fullname="QContact::notes" href="qcontact.html#notes" location="qcontact.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="notes() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="portraitFile" fullname="QContact::portraitFile" href="qcontact.html#portraitFile" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="portraitFile() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toRichText" fullname="QContact::toRichText" href="qcontact.html#toRichText" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="toRichText() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parseLabel" fullname="QContact::parseLabel" href="qcontact.html#parseLabel" location="qcontact.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QContact" signature="parseLabel(const QString &amp; text, const QContact &amp; contact)">
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
                <parameter left="const QContact &amp;" right="" name="contact" default="QContact()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="portrait" fullname="QContact::portrait" href="qcontact.html#portrait" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPixmap" signature="portrait() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="icon" fullname="QContact::icon" href="qcontact.html#icon" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QIcon" signature="icon() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="thumbnail" fullname="QContact::thumbnail" href="qcontact.html#thumbnail" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPixmap" signature="thumbnail() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="portraitSize" fullname="QContact::portraitSize" href="qcontact.html#portraitSize" location="qcontact.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QSize" signature="portraitSize()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="thumbnailSize" fullname="QContact::thumbnailSize" href="qcontact.html#thumbnailSize" location="qcontact.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QSize" signature="thumbnailSize()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QObexPushClient" href="qobexpushclient.html" location="qobexpushclient.h" bases="QObject" module="">
            <contents name="handling-socket-disconnections" title="Handling socket disconnections" level="1"></contents>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Command" fullname="QObexPushClient::Command" href="qobexpushclient.html#Command-enum" location="qobexpushclient.h">
                <value name="None" value="0"></value>
                <value name="Connect" value="1"></value>
                <value name="Disconnect" value="2"></value>
                <value name="Send" value="3"></value>
                <value name="SendBusinessCard" value="4"></value>
                <value name="RequestBusinessCard" value="5"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QObexPushClient::Error" href="qobexpushclient.html#Error-enum" location="qobexpushclient.h">
                <value name="NoError" value="0"></value>
                <value name="ConnectionError" value="1"></value>
                <value name="RequestFailed" value="2"></value>
                <value name="Aborted" value="3"></value>
                <value name="UnknownError" value="100"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QObexPushClient" fullname="QObexPushClient::QObexPushClient" href="qobexpushclient.html#QObexPushClient" location="qobexpushclient.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QObexPushClient(QIODevice * device, QObject * parent)">
                <parameter left="QIODevice *" right="" name="device" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QObexPushClient" fullname="QObexPushClient::~QObexPushClient" href="qobexpushclient.html#dtor.QObexPushClient" location="qobexpushclient.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QObexPushClient()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sessionDevice" fullname="QObexPushClient::sessionDevice" href="qobexpushclient.html#sessionDevice" location="qobexpushclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QIODevice *" signature="sessionDevice() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QObexPushClient::error" href="qobexpushclient.html#error" location="qobexpushclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Error" signature="error() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lastCommandResponse" fullname="QObexPushClient::lastCommandResponse" href="qobexpushclient.html#lastCommandResponse" location="qobexpushclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QObex::ResponseCode" signature="lastCommandResponse() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentId" fullname="QObexPushClient::currentId" href="qobexpushclient.html#currentId" location="qobexpushclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="currentId() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentCommand" fullname="QObexPushClient::currentCommand" href="qobexpushclient.html#currentCommand" location="qobexpushclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Command" signature="currentCommand() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasPendingCommands" fullname="QObexPushClient::hasPendingCommands" href="qobexpushclient.html#hasPendingCommands" location="qobexpushclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasPendingCommands() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearPendingCommands" fullname="QObexPushClient::clearPendingCommands" href="qobexpushclient.html#clearPendingCommands" location="qobexpushclient.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearPendingCommands()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connect" fullname="QObexPushClient::connect" href="qobexpushclient.html#connect" location="qobexpushclient.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="connect()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disconnect" fullname="QObexPushClient::disconnect" href="qobexpushclient.html#disconnect" location="qobexpushclient.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="disconnect()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="send" fullname="QObexPushClient::send" href="qobexpushclient.html#send" location="qobexpushclient.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="send(QIODevice * device, const QString &amp; name, const QString &amp; type, const QString &amp; description)">
                <parameter left="QIODevice *" right="" name="device" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="type" default="QString()"></parameter>
                <parameter left="const QString &amp;" right="" name="description" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="send" fullname="QObexPushClient::send" href="qobexpushclient.html#send-2" location="qobexpushclient.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="int" signature="send(const QByteArray &amp; array, const QString &amp; name, const QString &amp; type, const QString &amp; description)">
                <parameter left="const QByteArray &amp;" right="" name="array" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="type" default="QString()"></parameter>
                <parameter left="const QString &amp;" right="" name="description" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sendBusinessCard" fullname="QObexPushClient::sendBusinessCard" href="qobexpushclient.html#sendBusinessCard" location="qobexpushclient.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="sendBusinessCard(QIODevice * vcard)">
                <parameter left="QIODevice *" right="" name="vcard" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestBusinessCard" fullname="QObexPushClient::requestBusinessCard" href="qobexpushclient.html#requestBusinessCard" location="qobexpushclient.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="requestBusinessCard(QIODevice * vcard)">
                <parameter left="QIODevice *" right="" name="vcard" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exchangeBusinessCard" fullname="QObexPushClient::exchangeBusinessCard" href="qobexpushclient.html#exchangeBusinessCard" location="qobexpushclient.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="exchangeBusinessCard(QIODevice * mine, QIODevice * theirs, int * putId, int * getId)">
                <parameter left="QIODevice *" right="" name="mine" default=""></parameter>
                <parameter left="QIODevice *" right="" name="theirs" default=""></parameter>
                <parameter left="int *" right="" name="putId" default="0"></parameter>
                <parameter left="int *" right="" name="getId" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="abort" fullname="QObexPushClient::abort" href="qobexpushclient.html#abort" location="qobexpushclient.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="abort()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="commandStarted" fullname="QObexPushClient::commandStarted" href="qobexpushclient.html#commandStarted" location="qobexpushclient.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="commandStarted(int id)">
                <parameter left="int" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="commandFinished" fullname="QObexPushClient::commandFinished" href="qobexpushclient.html#commandFinished" location="qobexpushclient.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="commandFinished(int id, bool error)">
                <parameter left="int" right="" name="id" default=""></parameter>
                <parameter left="bool" right="" name="error" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dataTransferProgress" fullname="QObexPushClient::dataTransferProgress" href="qobexpushclient.html#dataTransferProgress" location="qobexpushclient.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="dataTransferProgress(qint64 done, qint64 total)">
                <parameter left="qint64" right="" name="done" default=""></parameter>
                <parameter left="qint64" right="" name="total" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="done" fullname="QObexPushClient::done" href="qobexpushclient.html#done" location="qobexpushclient.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="done(bool error)">
                <parameter left="bool" right="" name="error" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPhoneStyle" href="qphonestyle.html" location="qphonestyle.h" bases="QtopiaStyle" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QPhoneStyle" fullname="QPhoneStyle::QPhoneStyle" href="qphonestyle.html#QPhoneStyle" location="qphonestyle.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPhoneStyle()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPhoneStyle" fullname="QPhoneStyle::~QPhoneStyle" href="qphonestyle.html#dtor.QPhoneStyle" location="qphonestyle.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPhoneStyle()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="PhoneStyleHint" fullname="QPhoneStyle::PhoneStyleHint" href="qphonestyle.html#PhoneStyleHint-enum" location="qphonestyle.h">
                <value name="SH_FormLayoutWrapPolicy" value="QStyle::SH_Menu_Mask + 5"></value>
                <value name="SH_FormLayoutFieldGrowthPolicy" value="QStyle::SH_Menu_Mask + 8"></value>
                <value name="SH_FormLayoutFormAlignment" value=""></value>
                <value name="SH_FormLayoutLabelAlignment" value=""></value>
                <value name="SH_ExtendedFocusHighlight" value="0x10000000+1"></value>
                <value name="SH_PopupShadows" value=""></value>
                <value name="SH_HideMenuIcons" value=""></value>
                <value name="SH_FullWidthMenu" value=""></value>
                <value name="SH_ScrollbarLineStepButtons" value=""></value>
            </enum>
            <variable access="public" threadsafety="unspecified" status="commendable" name="PE_ExtendedFocusHighlight" fullname="QPhoneStyle::PE_ExtendedFocusHighlight" href="qphonestyle.html#PE_ExtendedFocusHighlight-var" location="qphonestyle.h" type="const int" static="true"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="PE_FilledFocusRect" fullname="QPhoneStyle::PE_FilledFocusRect" href="qphonestyle.html#PE_FilledFocusRect-var" location="qphonestyle.h" type="const int" static="true"></variable>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="StartupApplications" href="startupapplications.html" location="startupapps.h" bases="QObject" module="">
            <contents name="preloaded-applications" title="Preloaded Applications" level="1"></contents>
            <contents name="background-applications" title="Background Applications" level="1"></contents>
            <function access="public" threadsafety="unspecified" status="commendable" name="StartupApplications" fullname="StartupApplications::StartupApplications" href="startupapplications.html#StartupApplications" location="startupapps.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="StartupApplications(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="preloadCrashed" fullname="StartupApplications::preloadCrashed" href="startupapplications.html#preloadCrashed" location="startupapps.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="preloadCrashed(const QString &amp; application)">
                <parameter left="const QString &amp;" right="" name="application" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QDeviceIndicators" href="qdeviceindicators.html" location="qdeviceindicators.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QDeviceIndicators" fullname="QDeviceIndicators::QDeviceIndicators" href="qdeviceindicators.html#QDeviceIndicators" location="qdeviceindicators.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDeviceIndicators(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDeviceIndicators" fullname="QDeviceIndicators::~QDeviceIndicators" href="qdeviceindicators.html#dtor.QDeviceIndicators" location="qdeviceindicators.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDeviceIndicators()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="IndicatorState" fullname="QDeviceIndicators::IndicatorState" href="qdeviceindicators.html#IndicatorState-enum" location="qdeviceindicators.h">
                <value name="Off" value="0"></value>
                <value name="On" value="1"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="isIndicatorSupported" fullname="QDeviceIndicators::isIndicatorSupported" href="qdeviceindicators.html#isIndicatorSupported" location="qdeviceindicators.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="isIndicatorSupported(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isIndicatorStateSupported" fullname="QDeviceIndicators::isIndicatorStateSupported" href="qdeviceindicators.html#isIndicatorStateSupported" location="qdeviceindicators.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="isIndicatorStateSupported(const QString &amp; name, IndicatorState state)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="IndicatorState" right="" name="state" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="indicatorState" fullname="QDeviceIndicators::indicatorState" href="qdeviceindicators.html#indicatorState" location="qdeviceindicators.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="IndicatorState" signature="indicatorState(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIndicatorState" fullname="QDeviceIndicators::setIndicatorState" href="qdeviceindicators.html#setIndicatorState" location="qdeviceindicators.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIndicatorState(const QString &amp; name, IndicatorState state)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="IndicatorState" right="" name="state" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedIndicators" fullname="QDeviceIndicators::supportedIndicators" href="qdeviceindicators.html#supportedIndicators" location="qdeviceindicators.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="supportedIndicators() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="indicatorStateChanged" fullname="QDeviceIndicators::indicatorStateChanged" href="qdeviceindicators.html#indicatorStateChanged" location="qdeviceindicators.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="indicatorStateChanged(const QString &amp; name, IndicatorState newState)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="IndicatorState" right="" name="newState" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPimSource" href="qpimsource.html" location="qpimsource.h" bases="" module="">
            <variable access="public" threadsafety="unspecified" status="commendable" name="context" fullname="QPimSource::context" href="qpimsource.html#context-var" location="qpimsource.h" type="QUuid" static="false"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="identity" fullname="QPimSource::identity" href="qpimsource.html#identity-var" location="qpimsource.h" type="QString" static="false"></variable>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QPimSource::operator==" href="qpimsource.html#operator==" location="qpimsource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QPimSource &amp; other) const">
                <parameter left="const QPimSource &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QPimSource::operator!=" href="qpimsource.html#operator!=" location="qpimsource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QPimSource &amp; other) const">
                <parameter left="const QPimSource &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;" fullname="QPimSource::operator&lt;" href="qpimsource.html#operator&lt;" location="qpimsource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator&lt;(const QPimSource &amp; other) const">
                <parameter left="const QPimSource &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QPimSource::isNull" href="qpimsource.html#isNull" location="qpimsource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"></function>
        </class>
        <function access="public" threadsafety="unspecified" status="commendable" name="qHash" href="qpimsource.html#qHash-21" location="qpimsource.cpp" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="21" relates="QPimSource" type="uint" signature="qHash(const QPimSource &amp; s)">
            <parameter left="const QPimSource &amp;" right="" name="s" default=""></parameter>
        </function>
        <class access="public" threadsafety="unspecified" status="main" name="QPimContext" href="qpimcontext.html" location="qpimsource.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="icon" fullname="QPimContext::icon" href="qpimcontext.html#icon" location="qpimsource.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QIcon" signature="icon() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="description" fullname="QPimContext::description" href="qpimcontext.html#description" location="qpimsource.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="description() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="title" fullname="QPimContext::title" href="qpimcontext.html#title" location="qpimsource.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="title() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="title" fullname="QPimContext::title" href="qpimcontext.html#title-2" location="qpimsource.h" virtual="impure" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QString" signature="title(const QPimSource &amp; source) const">
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultSource" fullname="QPimContext::defaultSource" href="qpimcontext.html#defaultSource" location="qpimsource.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QPimSource" signature="defaultSource() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="editable" fullname="QPimContext::editable" href="qpimcontext.html#editable" location="qpimsource.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="editable() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="editable" fullname="QPimContext::editable" href="qpimcontext.html#editable-2" location="qpimsource.h" virtual="impure" meta="plain" const="true" static="false" overload="true" overload-number="2" type="bool" signature="editable(const QUniqueId &amp; id) const">
                <parameter left="const QUniqueId &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVisibleSources" fullname="QPimContext::setVisibleSources" href="qpimcontext.html#setVisibleSources" location="qpimsource.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setVisibleSources(const QSet&lt;QPimSource&gt; &amp; visible)">
                <parameter left="const QSet&lt;QPimSource&gt; &amp;" right="" name="visible" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="visibleSources" fullname="QPimContext::visibleSources" href="qpimcontext.html#visibleSources" location="qpimsource.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QSet&lt;QPimSource&gt;" signature="visibleSources() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sources" fullname="QPimContext::sources" href="qpimcontext.html#sources" location="qpimsource.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QSet&lt;QPimSource&gt;" signature="sources() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QPimContext::id" href="qpimcontext.html#id" location="qpimsource.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QUuid" signature="id() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exists" fullname="QPimContext::exists" href="qpimcontext.html#exists" location="qpimsource.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="exists(const QUniqueId &amp; id) const">
                <parameter left="const QUniqueId &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exists" fullname="QPimContext::exists" href="qpimcontext.html#exists-2" location="qpimsource.h" virtual="impure" meta="plain" const="true" static="false" overload="true" overload-number="2" type="bool" signature="exists(const QUniqueId &amp; id, const QPimSource &amp; source) const">
                <parameter left="const QUniqueId &amp;" right="" name="id" default=""></parameter>
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="source" fullname="QPimContext::source" href="qpimcontext.html#source" location="qpimsource.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QPimSource" signature="source(const QUniqueId &amp; id) const">
                <parameter left="const QUniqueId &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QPimContext" fullname="QPimContext::QPimContext" href="qpimcontext.html#QPimContext" location="qpimsource.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPimContext(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QContactContext" href="qcontactcontext.html" location="qpimsource.h" bases="QPimContext" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="updateContact" fullname="QContactContext::updateContact" href="qcontactcontext.html#updateContact" location="qpimsource.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="updateContact(const QContact &amp; contact)">
                <parameter left="const QContact &amp;" right="" name="contact" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeContact" fullname="QContactContext::removeContact" href="qcontactcontext.html#removeContact" location="qpimsource.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeContact(const QUniqueId &amp; id)">
                <parameter left="const QUniqueId &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addContact" fullname="QContactContext::addContact" href="qcontactcontext.html#addContact" location="qpimsource.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QUniqueId" signature="addContact(const QContact &amp; contact, const QPimSource &amp; source)">
                <parameter left="const QContact &amp;" right="" name="contact" default=""></parameter>
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exportContacts" fullname="QContactContext::exportContacts" href="qcontactcontext.html#exportContacts" location="qpimsource.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContact&gt;" signature="exportContacts(const QPimSource &amp; source, bool &amp; ok) const">
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
                <parameter left="bool &amp;" right="" name="ok" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="importContacts" fullname="QContactContext::importContacts" href="qcontactcontext.html#importContacts" location="qpimsource.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="importContacts(const QPimSource &amp; source, const QList&lt;QContact&gt; &amp; contacts)">
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
                <parameter left="const QList&lt;QContact&gt; &amp;" right="" name="contacts" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exportContact" fullname="QContactContext::exportContact" href="qcontactcontext.html#exportContact" location="qpimsource.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QContact" signature="exportContact(const QUniqueId &amp; id, bool &amp; ok) const">
                <parameter left="const QUniqueId &amp;" right="" name="id" default=""></parameter>
                <parameter left="bool &amp;" right="" name="ok" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="importContact" fullname="QContactContext::importContact" href="qcontactcontext.html#importContact" location="qpimsource.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="importContact(const QPimSource &amp; source, const QContact &amp; contact)">
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
                <parameter left="const QContact &amp;" right="" name="contact" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QContactContext" fullname="QContactContext::QContactContext" href="qcontactcontext.html#QContactContext" location="qpimsource.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactContext(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QAppointmentContext" href="qappointmentcontext.html" location="qpimsource.h" bases="QPimContext" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="updateAppointment" fullname="QAppointmentContext::updateAppointment" href="qappointmentcontext.html#updateAppointment" location="qpimsource.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="updateAppointment(const QAppointment &amp; appointment)">
                <parameter left="const QAppointment &amp;" right="" name="appointment" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeAppointment" fullname="QAppointmentContext::removeAppointment" href="qappointmentcontext.html#removeAppointment" location="qpimsource.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeAppointment(const QUniqueId &amp; id)">
                <parameter left="const QUniqueId &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addAppointment" fullname="QAppointmentContext::addAppointment" href="qappointmentcontext.html#addAppointment" location="qpimsource.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QUniqueId" signature="addAppointment(const QAppointment &amp; appointment, const QPimSource &amp; source)">
                <parameter left="const QAppointment &amp;" right="" name="appointment" default=""></parameter>
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeOccurrence" fullname="QAppointmentContext::removeOccurrence" href="qappointmentcontext.html#removeOccurrence" location="qpimsource.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeOccurrence(const QUniqueId &amp; id, const QDate &amp; date)">
                <parameter left="const QUniqueId &amp;" right="" name="id" default=""></parameter>
                <parameter left="const QDate &amp;" right="" name="date" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="restoreOccurrence" fullname="QAppointmentContext::restoreOccurrence" href="qappointmentcontext.html#restoreOccurrence" location="qpimsource.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="restoreOccurrence(const QUniqueId &amp; identifier, const QDate &amp; date)">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
                <parameter left="const QDate &amp;" right="" name="date" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="replaceOccurrence" fullname="QAppointmentContext::replaceOccurrence" href="qappointmentcontext.html#replaceOccurrence" location="qpimsource.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QUniqueId" signature="replaceOccurrence(const QUniqueId &amp; id, const QOccurrence &amp; occurrence, const QDate &amp; date)">
                <parameter left="const QUniqueId &amp;" right="" name="id" default=""></parameter>
                <parameter left="const QOccurrence &amp;" right="" name="occurrence" default=""></parameter>
                <parameter left="const QDate &amp;" right="" name="date" default="QDate()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="replaceRemaining" fullname="QAppointmentContext::replaceRemaining" href="qappointmentcontext.html#replaceRemaining" location="qpimsource.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QUniqueId" signature="replaceRemaining(const QUniqueId &amp; id, const QAppointment &amp; appointment, const QDate &amp; date)">
                <parameter left="const QUniqueId &amp;" right="" name="id" default=""></parameter>
                <parameter left="const QAppointment &amp;" right="" name="appointment" default=""></parameter>
                <parameter left="const QDate &amp;" right="" name="date" default="QDate()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exportAppointments" fullname="QAppointmentContext::exportAppointments" href="qappointmentcontext.html#exportAppointments" location="qpimsource.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QAppointment&gt;" signature="exportAppointments(const QPimSource &amp; source, bool &amp; ok) const">
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
                <parameter left="bool &amp;" right="" name="ok" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="importAppointments" fullname="QAppointmentContext::importAppointments" href="qappointmentcontext.html#importAppointments" location="qpimsource.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="importAppointments(const QPimSource &amp; source, const QList&lt;QAppointment&gt; &amp; appointments)">
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
                <parameter left="const QList&lt;QAppointment&gt; &amp;" right="" name="appointments" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exportAppointment" fullname="QAppointmentContext::exportAppointment" href="qappointmentcontext.html#exportAppointment" location="qpimsource.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QAppointment" signature="exportAppointment(const QUniqueId &amp; id, bool &amp; ok) const">
                <parameter left="const QUniqueId &amp;" right="" name="id" default=""></parameter>
                <parameter left="bool &amp;" right="" name="ok" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="importAppointment" fullname="QAppointmentContext::importAppointment" href="qappointmentcontext.html#importAppointment" location="qpimsource.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="importAppointment(const QPimSource &amp; source, const QAppointment &amp; appointment)">
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
                <parameter left="const QAppointment &amp;" right="" name="appointment" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QAppointmentContext" fullname="QAppointmentContext::QAppointmentContext" href="qappointmentcontext.html#QAppointmentContext" location="qpimsource.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAppointmentContext(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QTaskContext" href="qtaskcontext.html" location="qpimsource.h" bases="QPimContext" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="updateTask" fullname="QTaskContext::updateTask" href="qtaskcontext.html#updateTask" location="qpimsource.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="updateTask(const QTask &amp; task)">
                <parameter left="const QTask &amp;" right="" name="task" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeTask" fullname="QTaskContext::removeTask" href="qtaskcontext.html#removeTask" location="qpimsource.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeTask(const QUniqueId &amp; id)">
                <parameter left="const QUniqueId &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addTask" fullname="QTaskContext::addTask" href="qtaskcontext.html#addTask" location="qpimsource.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QUniqueId" signature="addTask(const QTask &amp; task, const QPimSource &amp; source)">
                <parameter left="const QTask &amp;" right="" name="task" default=""></parameter>
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exportTasks" fullname="QTaskContext::exportTasks" href="qtaskcontext.html#exportTasks" location="qpimsource.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QTask&gt;" signature="exportTasks(const QPimSource &amp; source, bool &amp; ok) const">
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
                <parameter left="bool &amp;" right="" name="ok" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="importTasks" fullname="QTaskContext::importTasks" href="qtaskcontext.html#importTasks" location="qpimsource.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="importTasks(const QPimSource &amp; source, const QList&lt;QTask&gt; &amp; tasks)">
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
                <parameter left="const QList&lt;QTask&gt; &amp;" right="" name="tasks" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exportTask" fullname="QTaskContext::exportTask" href="qtaskcontext.html#exportTask" location="qpimsource.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QTask" signature="exportTask(const QUniqueId &amp; id, bool &amp; ok) const">
                <parameter left="const QUniqueId &amp;" right="" name="id" default=""></parameter>
                <parameter left="bool &amp;" right="" name="ok" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="importTask" fullname="QTaskContext::importTask" href="qtaskcontext.html#importTask" location="qpimsource.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="importTask(const QPimSource &amp; source, const QTask &amp; task)">
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
                <parameter left="const QTask &amp;" right="" name="task" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QTaskContext" fullname="QTaskContext::QTaskContext" href="qtaskcontext.html#QTaskContext" location="qpimsource.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QTaskContext(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QDLEditClient" href="qdleditclient.html" location="qdleditclient.h" bases="QDLClient" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QDLEditClient" fullname="QDLEditClient::QDLEditClient" href="qdleditclient.html#QDLEditClient" location="qdleditclient.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDLEditClient(QTextEdit * edit, const QString &amp; name)">
                <parameter left="QTextEdit *" right="" name="edit" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDLEditClient" fullname="QDLEditClient::~QDLEditClient" href="qdleditclient.html#dtor.QDLEditClient" location="qdleditclient.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDLEditClient()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setupStandardContextMenu" fullname="QDLEditClient::setupStandardContextMenu" href="qdleditclient.html#setupStandardContextMenu" location="qdleditclient.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMenu *" signature="setupStandardContextMenu(QMenu * context)">
                <parameter left="QMenu *" right="" name="context" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QDLEditClient::isValid" href="qdleditclient.html#isValid" location="qdleditclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hint" fullname="QDLEditClient::hint" href="qdleditclient.html#hint" location="qdleditclient.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="hint() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestLinks" fullname="QDLEditClient::requestLinks" href="qdleditclient.html#requestLinks" location="qdleditclient.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="requestLinks()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPhoneStatus" href="qphonestatus.html" location="qphonestatus.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QPhoneStatus" fullname="QPhoneStatus::QPhoneStatus" href="qphonestatus.html#QPhoneStatus" location="qphonestatus.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPhoneStatus(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPhoneStatus" fullname="QPhoneStatus::~QPhoneStatus" href="qphonestatus.html#dtor.QPhoneStatus" location="qphonestatus.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPhoneStatus()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="StatusItem" fullname="QPhoneStatus::StatusItem" href="qphonestatus.html#StatusItem-enum" location="qphonestatus.h">
                <value name="BatteryLevel" value="1"></value>
                <value name="SignalLevel" value="2"></value>
                <value name="MissedCalls" value="3"></value>
                <value name="NewMessages" value="4"></value>
                <value name="ActiveCalls" value="5"></value>
                <value name="OperatorName" value="100"></value>
                <value name="Profile" value="101"></value>
                <value name="Roaming" value="200"></value>
                <value name="Locked" value="201"></value>
                <value name="Alarm" value="202"></value>
                <value name="CallDivert" value="203"></value>
                <value name="NetworkRegistered" value="204"></value>
                <value name="VoIPRegistered" value="205"></value>
                <value name="Presence" value="206"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QPhoneStatus::value" href="qphonestatus.html#value" location="qphonestatus.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QVariant" signature="value(StatusItem item)">
                <parameter left="StatusItem" right="" name="item" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="incomingCall" fullname="QPhoneStatus::incomingCall" href="qphonestatus.html#incomingCall" location="qphonestatus.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="incomingCall(const QString &amp; number, const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="statusChanged" fullname="QPhoneStatus::statusChanged" href="qphonestatus.html#statusChanged" location="qphonestatus.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="statusChanged()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QIr" href="qir.html" location="qirnamespace.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="DeviceClass" fullname="QIr::DeviceClass" href="qir.html#DeviceClass-enum" location="qirnamespace.h" typedef="QIr::DeviceClasses">
                <value name="PlugNPlay" value="0x0001"></value>
                <value name="PDA" value="0x0002"></value>
                <value name="Computer" value="0x0004"></value>
                <value name="Printer" value="0x0008"></value>
                <value name="Modem" value="0x0010"></value>
                <value name="Fax" value="0x0020"></value>
                <value name="LAN" value="0x0040"></value>
                <value name="Telephony" value="0x0080"></value>
                <value name="FileServer" value="0x0100"></value>
                <value name="Communications" value="0x0200"></value>
                <value name="Message" value="0x0400"></value>
                <value name="HTTP" value="0x0800"></value>
                <value name="OBEX" value="0x1000"></value>
                <value name="All" value="0xffff"></value>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="DeviceClasses" fullname="QIr::DeviceClasses" href="qir.html#DeviceClasses-typedef" location="qirnamespace.h" enum="QIr::DeviceClass"></typedef>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QTaskDelegate" href="qtaskdelegate.html" location="qtaskview.h" bases="QPimDelegate" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QTaskDelegate" fullname="QTaskDelegate::QTaskDelegate" href="qtaskdelegate.html#QTaskDelegate" location="qtaskview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QTaskDelegate(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QTaskDelegate" fullname="QTaskDelegate::~QTaskDelegate" href="qtaskdelegate.html#dtor.QTaskDelegate" location="qtaskview.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QTaskDelegate()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QTaskListView" href="qtasklistview.html" location="qtaskview.h" bases="QListView" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QTaskListView" fullname="QTaskListView::QTaskListView" href="qtasklistview.html#QTaskListView" location="qtaskview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QTaskListView(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QTaskListView" fullname="QTaskListView::~QTaskListView" href="qtasklistview.html#dtor.QTaskListView" location="qtaskview.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QTaskListView()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setModel" fullname="QTaskListView::setModel" href="qtasklistview.html#setModel" location="qtaskview.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setModel(QAbstractItemModel * model)">
                <parameter left="QAbstractItemModel *" right="" name="model" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentTask" fullname="QTaskListView::currentTask" href="qtasklistview.html#currentTask" location="qtaskview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QTask" signature="currentTask() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedTasks" fullname="QTaskListView::selectedTasks" href="qtasklistview.html#selectedTasks" location="qtaskview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QTask&gt;" signature="selectedTasks() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedTaskIds" fullname="QTaskListView::selectedTaskIds" href="qtasklistview.html#selectedTaskIds" location="qtaskview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QUniqueId&gt;" signature="selectedTaskIds() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="taskModel" fullname="QTaskListView::taskModel" href="qtasklistview.html#taskModel" location="qtaskview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QTaskModel *" signature="taskModel() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="taskDelegate" fullname="QTaskListView::taskDelegate" href="qtasklistview.html#taskDelegate" location="qtaskview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QTaskDelegate *" signature="taskDelegate() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QTaskSelector" href="qtaskselector.html" location="qtaskview.h" bases="QDialog" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QTaskSelector" fullname="QTaskSelector::QTaskSelector" href="qtaskselector.html#QTaskSelector" location="qtaskview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QTaskSelector(bool allowNew, QWidget * parent)">
                <parameter left="bool" right="" name="allowNew" default=""></parameter>
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QTaskSelector" fullname="QTaskSelector::~QTaskSelector" href="qtaskselector.html#dtor.QTaskSelector" location="qtaskview.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QTaskSelector()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setModel" fullname="QTaskSelector::setModel" href="qtaskselector.html#setModel" location="qtaskview.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setModel(QTaskModel * model)">
                <parameter left="QTaskModel *" right="" name="model" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="newTaskSelected" fullname="QTaskSelector::newTaskSelected" href="qtaskselector.html#newTaskSelected" location="qtaskview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="newTaskSelected() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="taskSelected" fullname="QTaskSelector::taskSelected" href="qtaskselector.html#taskSelected" location="qtaskview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="taskSelected() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedTask" fullname="QTaskSelector::selectedTask" href="qtaskselector.html#selectedTask" location="qtaskview.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QTask" signature="selectedTask() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="RingControl" href="ringcontrol.html" location="ringcontrol.h" bases="QObject" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="RingType" fullname="RingControl::RingType" href="ringcontrol.html#RingType-enum" location="ringcontrol.h">
                <value name="NotRinging" value="0"></value>
                <value name="Call" value="1"></value>
                <value name="Msg" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCallRingEnabled" fullname="RingControl::setCallRingEnabled" href="ringcontrol.html#setCallRingEnabled" location="ringcontrol.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCallRingEnabled(bool enabled)">
                <parameter left="bool" right="" name="enabled" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callRingEnabled" fullname="RingControl::callRingEnabled" href="ringcontrol.html#callRingEnabled" location="ringcontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="callRingEnabled() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMessageRingEnabled" fullname="RingControl::setMessageRingEnabled" href="ringcontrol.html#setMessageRingEnabled" location="ringcontrol.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMessageRingEnabled(bool enabled)">
                <parameter left="bool" right="" name="enabled" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="messageRingEnabled" fullname="RingControl::messageRingEnabled" href="ringcontrol.html#messageRingEnabled" location="ringcontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="messageRingEnabled() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="ringType" fullname="RingControl::ringType" href="ringcontrol.html#ringType" location="ringcontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="RingType" signature="ringType() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="ringTime" fullname="RingControl::ringTime" href="ringcontrol.html#ringTime" location="ringcontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="ringTime() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playSound" fullname="RingControl::playSound" href="ringcontrol.html#playSound" location="ringcontrol.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="playSound(const QString &amp; soundFile)">
                <parameter left="const QString &amp;" right="" name="soundFile" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVolume" fullname="RingControl::setVolume" href="ringcontrol.html#setVolume" location="ringcontrol.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVibrateDuration" fullname="RingControl::setVibrateDuration" href="ringcontrol.html#setVibrateDuration" location="ringcontrol.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setVibrateDuration(int duration)">
                <parameter left="int" right="" name="duration" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="vibrateDuration" fullname="RingControl::vibrateDuration" href="ringcontrol.html#vibrateDuration" location="ringcontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="vibrateDuration() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMsgRingTime" fullname="RingControl::setMsgRingTime" href="ringcontrol.html#setMsgRingTime" location="ringcontrol.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMsgRingTime(int time)">
                <parameter left="int" right="" name="time" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="msgRingTime" fullname="RingControl::msgRingTime" href="ringcontrol.html#msgRingTime" location="ringcontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="msgRingTime() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stopRing" fullname="RingControl::stopRing" href="ringcontrol.html#stopRing" location="ringcontrol.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="stopRing()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="muteRing" fullname="RingControl::muteRing" href="ringcontrol.html#muteRing" location="ringcontrol.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="muteRing()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stopMessageAlert" fullname="RingControl::stopMessageAlert" href="ringcontrol.html#stopMessageAlert" location="ringcontrol.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="stopMessageAlert()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="ringTypeChanged" fullname="RingControl::ringTypeChanged" href="ringcontrol.html#ringTypeChanged" location="ringcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="ringTypeChanged(RingControl::RingType type)">
                <parameter left="RingControl::RingType" right="" name="type" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSimIconReader" href="qsimiconreader.html" location="qsimiconreader.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSimIconReader" fullname="QSimIconReader::QSimIconReader" href="qsimiconreader.html#QSimIconReader" location="qsimiconreader.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSimIconReader(const QString &amp; service, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="service" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSimIconReader" fullname="QSimIconReader::~QSimIconReader" href="qsimiconreader.html#dtor.QSimIconReader" location="qsimiconreader.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSimIconReader()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="haveIcon" fullname="QSimIconReader::haveIcon" href="qsimiconreader.html#haveIcon" location="qsimiconreader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="haveIcon(int iconId) const">
                <parameter left="int" right="" name="iconId" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="icon" fullname="QSimIconReader::icon" href="qsimiconreader.html#icon" location="qsimiconreader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QImage" signature="icon(int iconId) const">
                <parameter left="int" right="" name="iconId" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestIcon" fullname="QSimIconReader::requestIcon" href="qsimiconreader.html#requestIcon" location="qsimiconreader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="requestIcon(int iconId)">
                <parameter left="int" right="" name="iconId" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="iconAvailable" fullname="QSimIconReader::iconAvailable" href="qsimiconreader.html#iconAvailable" location="qsimiconreader.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="iconAvailable(int iconId)">
                <parameter left="int" right="" name="iconId" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="iconNotFound" fullname="QSimIconReader::iconNotFound" href="qsimiconreader.html#iconNotFound" location="qsimiconreader.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="iconNotFound(int iconId)">
                <parameter left="int" right="" name="iconId" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="TasksService" href="tasksservice.html" location="mainwindow.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="newTask" fullname="TasksService::newTask" href="tasksservice.html#newTask" location="mainwindow.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="newTask()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addTask" fullname="TasksService::addTask" href="tasksservice.html#addTask" location="mainwindow.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="addTask(const QTask &amp; task)">
                <parameter left="const QTask &amp;" right="" name="task" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateTask" fullname="TasksService::updateTask" href="tasksservice.html#updateTask" location="mainwindow.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="updateTask(const QTask &amp; task)">
                <parameter left="const QTask &amp;" right="" name="task" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeTask" fullname="TasksService::removeTask" href="tasksservice.html#removeTask" location="mainwindow.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="removeTask(const QTask &amp; task)">
                <parameter left="const QTask &amp;" right="" name="task" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="showTask" fullname="TasksService::showTask" href="tasksservice.html#showTask" location="mainwindow.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="showTask(const QUniqueId &amp; uid)">
                <parameter left="const QUniqueId &amp;" right="" name="uid" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activateLink" fullname="TasksService::activateLink" href="tasksservice.html#activateLink" location="mainwindow.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="activateLink(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestLinks" fullname="TasksService::requestLinks" href="tasksservice.html#requestLinks" location="mainwindow.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="requestLinks(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateRecurringTasks" fullname="TasksService::updateRecurringTasks" href="tasksservice.html#updateRecurringTasks" location="mainwindow.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="updateRecurringTasks(const QDateTime &amp; datetime, int data)">
                <parameter left="const QDateTime &amp;" right="" name="datetime" default=""></parameter>
                <parameter left="int" right="" name="data" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QNetworkState" href="qnetworkstate.html" location="qnetworkstate.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkState" fullname="QNetworkState::QNetworkState" href="qnetworkstate.html#QNetworkState" location="qnetworkstate.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNetworkState(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNetworkState" fullname="QNetworkState::~QNetworkState" href="qnetworkstate.html#dtor.QNetworkState" location="qnetworkstate.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNetworkState()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="gateway" fullname="QNetworkState::gateway" href="qnetworkstate.html#gateway" location="qnetworkstate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="gateway() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="interfacesOnline" fullname="QNetworkState::interfacesOnline" href="qnetworkstate.html#interfacesOnline" location="qnetworkstate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QString&gt;" signature="interfacesOnline() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultWapAccount" fullname="QNetworkState::defaultWapAccount" href="qnetworkstate.html#defaultWapAccount" location="qnetworkstate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="defaultWapAccount() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableNetworkDevices" fullname="QNetworkState::availableNetworkDevices" href="qnetworkstate.html#availableNetworkDevices" location="qnetworkstate.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QString&gt;" signature="availableNetworkDevices(QFlags&lt;QtopiaNetwork::TypeFlag&gt; type)">
                <parameter left="QFlags&lt;QtopiaNetwork::TypeFlag&gt;" right="" name="type" default="QtopiaNetwork::Any"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceType" fullname="QNetworkState::deviceType" href="qnetworkstate.html#deviceType" location="qnetworkstate.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QtopiaNetwork::Type" signature="deviceType(const QString &amp; devHandle)">
                <parameter left="const QString &amp;" right="" name="devHandle" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultGatewayChanged" fullname="QNetworkState::defaultGatewayChanged" href="qnetworkstate.html#defaultGatewayChanged" location="qnetworkstate.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="defaultGatewayChanged(QString handle, const QNetworkInterface &amp; local)">
                <parameter left="QString" right="" name="handle" default=""></parameter>
                <parameter left="const QNetworkInterface &amp;" right="" name="local" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connected" fullname="QNetworkState::connected" href="qnetworkstate.html#connected" location="qnetworkstate.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="connected()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disconnected" fullname="QNetworkState::disconnected" href="qnetworkstate.html#disconnected" location="qnetworkstate.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="disconnected()"></function>
        </class>
        <namespace access="public" threadsafety="unspecified" status="commendable" name="StandardDialogs" href="standarddialogs.html" location="standarddialogs.h" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="disableShutdownDialog" fullname="StandardDialogs::disableShutdownDialog" href="standarddialogs.html#disableShutdownDialog" location="standarddialogs.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="disableShutdownDialog()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disableDefaultCrashDialog" fullname="StandardDialogs::disableDefaultCrashDialog" href="standarddialogs.html#disableDefaultCrashDialog" location="standarddialogs.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="disableDefaultCrashDialog()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disablePreloadCrashDialog" fullname="StandardDialogs::disablePreloadCrashDialog" href="standarddialogs.html#disablePreloadCrashDialog" location="standarddialogs.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="disablePreloadCrashDialog()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disableTerminationHandlerDialog" fullname="StandardDialogs::disableTerminationHandlerDialog" href="standarddialogs.html#disableTerminationHandlerDialog" location="standarddialogs.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="disableTerminationHandlerDialog()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disablePowerAlertDialog" fullname="StandardDialogs::disablePowerAlertDialog" href="standarddialogs.html#disablePowerAlertDialog" location="standarddialogs.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="disablePowerAlertDialog()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disableVolumeDialog" fullname="StandardDialogs::disableVolumeDialog" href="standarddialogs.html#disableVolumeDialog" location="standarddialogs.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="disableVolumeDialog()"></function>
        </namespace>
        <class access="public" threadsafety="unspecified" status="main" name="QMediaVideoControl" href="qmediavideocontrol.html" location="qmediavideocontrol.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaVideoControl" fullname="QMediaVideoControl::QMediaVideoControl" href="qmediavideocontrol.html#QMediaVideoControl" location="qmediavideocontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaVideoControl(QMediaContent * mediaContent)">
                <parameter left="QMediaContent *" right="" name="mediaContent" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaVideoControl" fullname="QMediaVideoControl::~QMediaVideoControl" href="qmediavideocontrol.html#dtor.QMediaVideoControl" location="qmediavideocontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaVideoControl()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="createVideoWidget" fullname="QMediaVideoControl::createVideoWidget" href="qmediavideocontrol.html#createVideoWidget" location="qmediavideocontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QWidget *" signature="createVideoWidget(QWidget * parent) const">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QMediaVideoControl::name" href="qmediavideocontrol.html#name" location="qmediavideocontrol.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="name()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="valid" fullname="QMediaVideoControl::valid" href="qmediavideocontrol.html#valid" location="qmediavideocontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="valid()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="invalid" fullname="QMediaVideoControl::invalid" href="qmediavideocontrol.html#invalid" location="qmediavideocontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="invalid()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoTargetAvailable" fullname="QMediaVideoControl::videoTargetAvailable" href="qmediavideocontrol.html#videoTargetAvailable" location="qmediavideocontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="videoTargetAvailable()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoTargetRemoved" fullname="QMediaVideoControl::videoTargetRemoved" href="qmediavideocontrol.html#videoTargetRemoved" location="qmediavideocontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="videoTargetRemoved()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemCellBroadcast" href="qmodemcellbroadcast.html" location="qmodemcellbroadcast.h" bases="QCellBroadcast" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemCellBroadcast" fullname="QModemCellBroadcast::QModemCellBroadcast" href="qmodemcellbroadcast.html#QModemCellBroadcast" location="qmodemcellbroadcast.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemCellBroadcast(QModemService * service)">
                <parameter left="QModemService *" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemCellBroadcast" fullname="QModemCellBroadcast::~QModemCellBroadcast" href="qmodemcellbroadcast.html#dtor.QModemCellBroadcast" location="qmodemcellbroadcast.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemCellBroadcast()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="removeBeforeChange" fullname="QModemCellBroadcast::removeBeforeChange" href="qmodemcellbroadcast.html#removeBeforeChange" location="qmodemcellbroadcast.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="removeBeforeChange() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="removeOneByOne" fullname="QModemCellBroadcast::removeOneByOne" href="qmodemcellbroadcast.html#removeOneByOne" location="qmodemcellbroadcast.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="removeOneByOne() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="CameraMonitor" href="cameramonitor.html" location="cameramonitor.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="CameraMonitor" fullname="CameraMonitor::CameraMonitor" href="cameramonitor.html#CameraMonitor" location="cameramonitor.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="CameraMonitor(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="update" fullname="CameraMonitor::update" href="cameramonitor.html#update" location="cameramonitor.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="update()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="WebAccessService" href="webaccessservice.html" location="webaccessservice.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="openURL" fullname="WebAccessService::openURL" href="webaccessservice.html#openURL" location="webaccessservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="openURL(const QString &amp; url)">
                <parameter left="const QString &amp;" right="" name="url" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearSession" fullname="WebAccessService::clearSession" href="webaccessservice.html#clearSession" location="webaccessservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="clearSession()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemServicePluginInterface" href="qmodemserviceplugininterface.html" location="qmodemserviceplugin.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="supports" fullname="QModemServicePluginInterface::supports" href="qmodemserviceplugininterface.html#supports" location="qmodemserviceplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="supports(const QString &amp; manufacturer)">
                <parameter left="const QString &amp;" right="" name="manufacturer" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="create" fullname="QModemServicePluginInterface::create" href="qmodemserviceplugininterface.html#create" location="qmodemserviceplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QModemService *" signature="create(const QString &amp; service, QSerialIODeviceMultiplexer * mux, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
                <parameter left="QSerialIODeviceMultiplexer *" right="" name="mux" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemServicePlugin" href="qmodemserviceplugin.html" location="qmodemserviceplugin.h" bases="QObject,QModemServicePluginInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemServicePlugin" fullname="QModemServicePlugin::QModemServicePlugin" href="qmodemserviceplugin.html#QModemServicePlugin" location="qmodemserviceplugin.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemServicePlugin(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemServicePlugin" fullname="QModemServicePlugin::~QModemServicePlugin" href="qmodemserviceplugin.html#dtor.QModemServicePlugin" location="qmodemserviceplugin.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemServicePlugin()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="keys" fullname="QModemServicePlugin::keys" href="qmodemserviceplugin.html#keys" location="qmodemserviceplugin.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="keys() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supports" fullname="QModemServicePlugin::supports" href="qmodemserviceplugin.html#supports" location="qmodemserviceplugin.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="supports(const QString &amp; manufacturer)">
                <parameter left="const QString &amp;" right="" name="manufacturer" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="create" fullname="QModemServicePlugin::create" href="qmodemserviceplugin.html#create" location="qmodemserviceplugin.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QModemService *" signature="create(const QString &amp; service, QSerialIODeviceMultiplexer * mux, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
                <parameter left="QSerialIODeviceMultiplexer *" right="" name="mux" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QDependentEventsContext" href="qdependenteventscontext.html" location="qdependentcontexts_p.h" bases="QAppointmentContext" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QDependentEventsContext" fullname="QDependentEventsContext::QDependentEventsContext" href="qdependenteventscontext.html#QDependentEventsContext" location="qdependentcontexts_p.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDependentEventsContext(QObject * parent, QObject * access)">
                <parameter left="QObject *" right="" name="parent" default=""></parameter>
                <parameter left="QObject *" right="" name="access" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="editable" fullname="QDependentEventsContext::editable" href="qdependenteventscontext.html#editable" location="qdependentcontexts_p.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="editable() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sources" fullname="QDependentEventsContext::sources" href="qdependenteventscontext.html#sources" location="qdependentcontexts_p.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QSet&lt;QPimSource&gt;" signature="sources() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mappedContext" fullname="QDependentEventsContext::mappedContext" href="qdependenteventscontext.html#mappedContext" location="qdependentcontexts_p.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="uint" signature="mappedContext()"></function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="mAccess" fullname="QDependentEventsContext::mAccess" href="qdependenteventscontext.html#mAccess-var" location="qdependentcontexts_p.h" type="QAppointmentSqlIO *" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="mMappedContext" fullname="QDependentEventsContext::mMappedContext" href="qdependenteventscontext.html#mMappedContext-var" location="qdependentcontexts_p.h" type="int" static="false"></variable>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QContactBirthdayContext" href="qcontactbirthdaycontext.html" location="qdependentcontexts_p.h" bases="QDependentEventsContext" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactBirthdayContext" fullname="QContactBirthdayContext::QContactBirthdayContext" href="qcontactbirthdaycontext.html#QContactBirthdayContext" location="qdependentcontexts_p.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactBirthdayContext(QObject * parent, QObject * source)">
                <parameter left="QObject *" right="" name="parent" default=""></parameter>
                <parameter left="QObject *" right="" name="source" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QContactAnniversaryContext" href="qcontactanniversarycontext.html" location="qdependentcontexts_p.h" bases="QDependentEventsContext" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactAnniversaryContext" fullname="QContactAnniversaryContext::QContactAnniversaryContext" href="qcontactanniversarycontext.html#QContactAnniversaryContext" location="qdependentcontexts_p.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactAnniversaryContext(QObject * parent, QObject * source)">
                <parameter left="QObject *" right="" name="parent" default=""></parameter>
                <parameter left="QObject *" right="" name="source" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QTaskEventContext" href="qtaskeventcontext.html" location="qdependentcontexts_p.h" bases="QDependentEventsContext" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QTaskEventContext" fullname="QTaskEventContext::QTaskEventContext" href="qtaskeventcontext.html#QTaskEventContext" location="qdependentcontexts_p.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QTaskEventContext(QObject * parent, QObject * source)">
                <parameter left="QObject *" right="" name="parent" default=""></parameter>
                <parameter left="QObject *" right="" name="source" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QIMActionDescription" href="qimactiondescription.html" location="inputmethodinterface.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QIMActionDescription" fullname="QIMActionDescription::QIMActionDescription" href="qimactiondescription.html#QIMActionDescription" location="inputmethodinterface.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QIMActionDescription(const QIMActionDescription &amp; original)">
                <parameter left="const QIMActionDescription &amp;" right="" name="original" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QIMActionDescription" fullname="QIMActionDescription::QIMActionDescription" href="qimactiondescription.html#QIMActionDescription-2" location="inputmethodinterface.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QIMActionDescription(int id, QString label, QString iconFileName)">
                <parameter left="int" right="" name="id" default="0"></parameter>
                <parameter left="QString" right="" name="label" default="QString()"></parameter>
                <parameter left="QString" right="" name="iconFileName" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QIMActionDescription" fullname="QIMActionDescription::~QIMActionDescription" href="qimactiondescription.html#dtor.QIMActionDescription" location="inputmethodinterface.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QIMActionDescription()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QIMActionDescription::id" href="qimactiondescription.html#id" location="inputmethodinterface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="id() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setId" fullname="QIMActionDescription::setId" href="qimactiondescription.html#setId" location="inputmethodinterface.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setId(const int id)">
                <parameter left="const int" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="label" fullname="QIMActionDescription::label" href="qimactiondescription.html#label" location="inputmethodinterface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="label() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLabel" fullname="QIMActionDescription::setLabel" href="qimactiondescription.html#setLabel" location="inputmethodinterface.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLabel(const QString &amp; string)">
                <parameter left="const QString &amp;" right="" name="string" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="iconFileName" fullname="QIMActionDescription::iconFileName" href="qimactiondescription.html#iconFileName" location="inputmethodinterface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="iconFileName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIconFileName" fullname="QIMActionDescription::setIconFileName" href="qimactiondescription.html#setIconFileName" location="inputmethodinterface.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIconFileName(const QString &amp; string)">
                <parameter left="const QString &amp;" right="" name="string" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serialize" fullname="QIMActionDescription::serialize" href="qimactiondescription.html#serialize" location="inputmethodinterface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="serialize(T &amp; stream) const">
                <parameter left="T &amp;" right="" name="stream" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deserialize" fullname="QIMActionDescription::deserialize" href="qimactiondescription.html#deserialize" location="inputmethodinterface.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="deserialize(T &amp; stream)">
                <parameter left="T &amp;" right="" name="stream" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaInputMethod" href="qtopiainputmethod.html" location="inputmethodinterface.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaInputMethod" fullname="QtopiaInputMethod::QtopiaInputMethod" href="qtopiainputmethod.html#QtopiaInputMethod" location="inputmethodinterface.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtopiaInputMethod(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtopiaInputMethod" fullname="QtopiaInputMethod::~QtopiaInputMethod" href="qtopiainputmethod.html#dtor.QtopiaInputMethod" location="inputmethodinterface.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtopiaInputMethod()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Properties" fullname="QtopiaInputMethod::Properties" href="qtopiainputmethod.html#Properties-enum" location="inputmethodinterface.h">
                <value name="RequireMouse" value="0x0001"></value>
                <value name="RequireKeypad" value="0x0002"></value>
                <value name="InputModifier" value="0x0004"></value>
                <value name="InteractiveIcon" value="0x0008"></value>
                <value name="InputWidget" value="0x0010"></value>
                <value name="DockedInputWidget" value="0x0030"></value>
                <value name="MenuItem" value="0x0040"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QtopiaInputMethod::State" href="qtopiainputmethod.html#State-enum" location="inputmethodinterface.h">
                <value name="Sleeping" value="0"></value>
                <value name="Ready" value="1"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QtopiaInputMethod::name" href="qtopiainputmethod.html#name" location="inputmethodinterface.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="identifier" fullname="QtopiaInputMethod::identifier" href="qtopiainputmethod.html#identifier" location="inputmethodinterface.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="identifier() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="version" fullname="QtopiaInputMethod::version" href="qtopiainputmethod.html#version" location="inputmethodinterface.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="version() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QtopiaInputMethod::state" href="qtopiainputmethod.html#state" location="inputmethodinterface.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="State" signature="state() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="properties" fullname="QtopiaInputMethod::properties" href="qtopiainputmethod.html#properties" location="inputmethodinterface.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="properties() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="testProperty" fullname="QtopiaInputMethod::testProperty" href="qtopiainputmethod.html#testProperty" location="inputmethodinterface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="testProperty(int p) const">
                <parameter left="int" right="" name="p" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="icon" fullname="QtopiaInputMethod::icon" href="qtopiainputmethod.html#icon" location="inputmethodinterface.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QIcon" signature="icon() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="reset" fullname="QtopiaInputMethod::reset" href="qtopiainputmethod.html#reset" location="inputmethodinterface.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="reset()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="statusWidget" fullname="QtopiaInputMethod::statusWidget" href="qtopiainputmethod.html#statusWidget" location="inputmethodinterface.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QWidget *" signature="statusWidget(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="inputWidget" fullname="QtopiaInputMethod::inputWidget" href="qtopiainputmethod.html#inputWidget" location="inputmethodinterface.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QWidget *" signature="inputWidget(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="inputModifier" fullname="QtopiaInputMethod::inputModifier" href="qtopiainputmethod.html#inputModifier" location="inputmethodinterface.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QWSInputMethod *" signature="inputModifier()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHint" fullname="QtopiaInputMethod::setHint" href="qtopiainputmethod.html#setHint" location="inputmethodinterface.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setHint(const QString &amp; hint, bool restricted)">
                <parameter left="const QString &amp;" right="" name="hint" default=""></parameter>
                <parameter left="bool" right="" name="restricted" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="restrictedToHint" fullname="QtopiaInputMethod::restrictedToHint" href="qtopiainputmethod.html#restrictedToHint" location="inputmethodinterface.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="restrictedToHint() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="passwordHint" fullname="QtopiaInputMethod::passwordHint" href="qtopiainputmethod.html#passwordHint" location="inputmethodinterface.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="passwordHint() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="menuDescription" fullname="QtopiaInputMethod::menuDescription" href="qtopiainputmethod.html#menuDescription" location="inputmethodinterface.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QList&lt;QIMActionDescription *&gt;" signature="menuDescription()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QtopiaInputMethod::stateChanged" href="qtopiainputmethod.html#stateChanged" location="inputmethodinterface.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateMenuAction" fullname="QtopiaInputMethod::updateMenuAction" href="qtopiainputmethod.html#updateMenuAction" location="inputmethodinterface.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="updateMenuAction(bool showMenuAction)">
                <parameter left="bool" right="" name="showMenuAction" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clicked" fullname="QtopiaInputMethod::clicked" href="qtopiainputmethod.html#clicked" location="inputmethodinterface.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="clicked()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusChanged" fullname="QtopiaInputMethod::focusChanged" href="qtopiainputmethod.html#focusChanged" location="inputmethodinterface.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="focusChanged()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="menuActionActivated" fullname="QtopiaInputMethod::menuActionActivated" href="qtopiainputmethod.html#menuActionActivated" location="inputmethodinterface.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="menuActionActivated(int data)">
                <parameter left="int" right="" name="data" default=""></parameter>
            </function>
        </class>
        <namespace access="public" threadsafety="unspecified" status="main" name="Qtopia" href="qtopia.html" location="qtopianamespace.h" module="">
            <contents name="word-list-related" title="Word list related" level="1"></contents>
            <contents name="path-related" title="Path related" level="1"></contents>
            <function access="public" threadsafety="unspecified" status="commendable" name="installPaths" fullname="Qtopia::installPaths" href="qtopia.html#installPaths" location="qtopianamespace.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="QStringList" signature="installPaths()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateDir" fullname="Qtopia::updateDir" href="qtopia.html#updateDir" location="qtopianamespace.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="updateDir()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="qtopiaDir" fullname="Qtopia::qtopiaDir" href="qtopia.html#qtopiaDir" location="qtopianamespace.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="qtopiaDir()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="packagePath" fullname="Qtopia::packagePath" href="qtopia.html#packagePath" location="qtopianamespace.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="packagePath()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="documentDir" fullname="Qtopia::documentDir" href="qtopia.html#documentDir" location="qtopianamespace.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="documentDir()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="homePath" fullname="Qtopia::homePath" href="qtopia.html#homePath" location="qtopianamespace.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="homePath()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="helpPaths" fullname="Qtopia::helpPaths" href="qtopia.html#helpPaths" location="qtopianamespace.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="QStringList" signature="helpPaths()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="truncateFile" fullname="Qtopia::truncateFile" href="qtopia.html#truncateFile" location="qtopianamespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="truncateFile(QFile &amp; f, int size)">
                <parameter left="QFile &amp;" right="" name="f" default=""></parameter>
                <parameter left="int" right="" name="size" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="tempDir" fullname="Qtopia::tempDir" href="qtopia.html#tempDir" location="qtopianamespace.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="tempDir()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="tempName" fullname="Qtopia::tempName" href="qtopia.html#tempName" location="qtopianamespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="tempName(const QString &amp; fname)">
                <parameter left="const QString &amp;" right="" name="fname" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sandboxDir" fullname="Qtopia::sandboxDir" href="qtopia.html#sandboxDir" location="qtopianamespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="sandboxDir()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="applicationFileName" fullname="Qtopia::applicationFileName" href="qtopia.html#applicationFileName" location="qtopianamespace.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="applicationFileName(const QString &amp; appname, const QString &amp; filename)">
                <parameter left="const QString &amp;" right="" name="appname" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isDocumentFileName" fullname="Qtopia::isDocumentFileName" href="qtopia.html#isDocumentFileName" location="qtopianamespace.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="isDocumentFileName(const QString &amp; file)">
                <parameter left="const QString &amp;" right="" name="file" default=""></parameter>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Lockflags" fullname="Qtopia::Lockflags" href="qtopia.html#Lockflags-enum" location="qtopianamespace.h">
                <value name="LockShare" value="1"></value>
                <value name="LockWrite" value="2"></value>
                <value name="LockBlock" value="4"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="lockFile" fullname="Qtopia::lockFile" href="qtopia.html#lockFile" location="qtopianamespace.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="lockFile(QFile &amp; f, int flags)">
                <parameter left="QFile &amp;" right="" name="f" default=""></parameter>
                <parameter left="int" right="" name="flags" default="-1"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unlockFile" fullname="Qtopia::unlockFile" href="qtopia.html#unlockFile" location="qtopianamespace.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="unlockFile(QFile &amp; f)">
                <parameter left="QFile &amp;" right="" name="f" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFileLocked" fullname="Qtopia::isFileLocked" href="qtopia.html#isFileLocked" location="qtopianamespace.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="isFileLocked(QFile &amp; f, int flags)">
                <parameter left="QFile &amp;" right="" name="f" default=""></parameter>
                <parameter left="int" right="" name="flags" default="-1"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mousePreferred" fullname="Qtopia::mousePreferred" href="qtopia.html#mousePreferred" location="qtopianamespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="mousePreferred()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasKey" fullname="Qtopia::hasKey" href="qtopia.html#hasKey" location="qtopianamespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="hasKey(int key)">
                <parameter left="int" right="" name="key" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="obsolete" name="execute" fullname="Qtopia::execute" href="qtopia-obsolete.html#execute" location="qtopianamespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="execute(const QString &amp; app, const QString &amp; document)">
                <parameter left="const QString &amp;" right="" name="app" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="document" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="confirmDelete" fullname="Qtopia::confirmDelete" href="qtopia.html#confirmDelete" location="qtopianamespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="confirmDelete(QWidget * parent, const QString &amp; caption, const QString &amp; object)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="caption" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="object" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="actionConfirmation" fullname="Qtopia::actionConfirmation" href="qtopia.html#actionConfirmation" location="qtopianamespace.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="actionConfirmation(const QPixmap &amp; pixmap, const QString &amp; text)">
                <parameter left="const QPixmap &amp;" right="" name="pixmap" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="soundAlarm" fullname="Qtopia::soundAlarm" href="qtopia.html#soundAlarm" location="qtopianamespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="soundAlarm()"></function>
            <function access="public" threadsafety="unspecified" status="obsolete" name="statusMessage" fullname="Qtopia::statusMessage" href="qtopia-obsolete.html#statusMessage" location="qtopianamespace.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="statusMessage(const QString &amp; message)">
                <parameter left="const QString &amp;" right="" name="message" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="translate" fullname="Qtopia::translate" href="qtopia.html#translate" location="qtopianamespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="translate(const QString &amp; key, const QString &amp; c, const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="c" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="languageList" fullname="Qtopia::languageList" href="qtopia.html#languageList" location="qtopianamespace.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="QStringList" signature="languageList()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="weekStartsOnMonday" fullname="Qtopia::weekStartsOnMonday" href="qtopia.html#weekStartsOnMonday" location="qtopianamespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="weekStartsOnMonday()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setWeekStartsOnMonday" fullname="Qtopia::setWeekStartsOnMonday" href="qtopia.html#setWeekStartsOnMonday" location="qtopianamespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setWeekStartsOnMonday(bool v)">
                <parameter left="bool" right="" name="v" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="findDisplayFont" fullname="Qtopia::findDisplayFont" href="qtopia.html#findDisplayFont" location="qtopianamespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QVariant" signature="findDisplayFont(const QString &amp; s)">
                <parameter left="const QString &amp;" right="" name="s" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addAlarm" fullname="Qtopia::addAlarm" href="qtopia.html#addAlarm" location="qtopianamespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addAlarm(QDateTime when, const QString &amp; channel, const QString &amp; message, int data)">
                <parameter left="QDateTime" right="" name="when" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="channel" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="message" default=""></parameter>
                <parameter left="int" right="" name="data" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deleteAlarm" fullname="Qtopia::deleteAlarm" href="qtopia.html#deleteAlarm" location="qtopianamespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="deleteAlarm(QDateTime when, const QString &amp; channel, const QString &amp; message, int data)">
                <parameter left="QDateTime" right="" name="when" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="channel" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="message" default=""></parameter>
                <parameter left="int" right="" name="data" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="writeHWClock" fullname="Qtopia::writeHWClock" href="qtopia.html#writeHWClock" location="qtopianamespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="writeHWClock()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="simplifyMultiLineSpace" fullname="Qtopia::simplifyMultiLineSpace" href="qtopia.html#simplifyMultiLineSpace" location="qtopianamespace.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="simplifyMultiLineSpace(const QString &amp; multiLine)">
                <parameter left="const QString &amp;" right="" name="multiLine" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dehyphenate" fullname="Qtopia::dehyphenate" href="qtopia.html#dehyphenate" location="qtopianamespace.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="dehyphenate(const QString &amp; s)">
                <parameter left="const QString &amp;" right="" name="s" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="shellQuote" fullname="Qtopia::shellQuote" href="qtopia.html#shellQuote" location="qtopianamespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="shellQuote(const QString &amp; s)">
                <parameter left="const QString &amp;" right="" name="s" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stringQuote" fullname="Qtopia::stringQuote" href="qtopia.html#stringQuote" location="qtopianamespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="stringQuote(const QString &amp; s)">
                <parameter left="const QString &amp;" right="" name="s" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sleep" fullname="Qtopia::sleep" href="qtopia.html#sleep" location="qtopianamespace.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="sleep(unsigned long secs)">
                <parameter left="unsigned long" right="" name="secs" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="msleep" fullname="Qtopia::msleep" href="qtopia.html#msleep" location="qtopianamespace.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="msleep(unsigned long msecs)">
                <parameter left="unsigned long" right="" name="msecs" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="usleep" fullname="Qtopia::usleep" href="qtopia.html#usleep" location="qtopianamespace.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="usleep(unsigned long usecs)">
                <parameter left="unsigned long" right="" name="usecs" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="version" fullname="Qtopia::version" href="qtopia.html#version" location="qtopianamespace.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="version()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="architecture" fullname="Qtopia::architecture" href="qtopia.html#architecture" location="qtopianamespace.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="architecture()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceId" fullname="Qtopia::deviceId" href="qtopia.html#deviceId" location="qtopianamespace.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="deviceId()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="ownerName" fullname="Qtopia::ownerName" href="qtopia.html#ownerName" location="qtopianamespace.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="ownerName()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fixedDawg" fullname="Qtopia::fixedDawg" href="qtopia.html#fixedDawg" location="qtopianamespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="const QDawg &amp;" signature="fixedDawg()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addedDawg" fullname="Qtopia::addedDawg" href="qtopia.html#addedDawg" location="qtopianamespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="const QDawg &amp;" signature="addedDawg()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dawg" fullname="Qtopia::dawg" href="qtopia.html#dawg" location="qtopianamespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="const QDawg &amp;" signature="dawg(const QString &amp; name, const QString &amp; language)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="language" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addWords" fullname="Qtopia::addWords" href="qtopia.html#addWords" location="qtopianamespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addWords(const QStringList &amp; wordlist)">
                <parameter left="const QStringList &amp;" right="" name="wordlist" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addWords" fullname="Qtopia::addWords" href="qtopia.html#addWords-2" location="qtopianamespace.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="addWords(const QString &amp; dictname, const QStringList &amp; wordlist)">
                <parameter left="const QString &amp;" right="" name="dictname" default=""></parameter>
                <parameter left="const QStringList &amp;" right="" name="wordlist" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeWords" fullname="Qtopia::removeWords" href="qtopia.html#removeWords" location="qtopianamespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeWords(const QStringList &amp; wordlist)">
                <parameter left="const QStringList &amp;" right="" name="wordlist" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeWords" fullname="Qtopia::removeWords" href="qtopia.html#removeWords-2" location="qtopianamespace.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="removeWords(const QString &amp; dictname, const QStringList &amp; wordlist)">
                <parameter left="const QString &amp;" right="" name="dictname" default=""></parameter>
                <parameter left="const QStringList &amp;" right="" name="wordlist" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="qtopiaReloadWords" fullname="Qtopia::qtopiaReloadWords" href="qtopia.html#qtopiaReloadWords" location="qtopianamespace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="qtopiaReloadWords(const QString &amp; dictname)">
                <parameter left="const QString &amp;" right="" name="dictname" default=""></parameter>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ItemDataRole" fullname="Qtopia::ItemDataRole" href="qtopia.html#ItemDataRole-enum" location="qtopianamespace.h">
                <value name="AdditionalDecorationRole" value="1000"></value>
                <value name="UserRole" value="2000"></value>
            </enum>
        </namespace>
        <class access="public" threadsafety="unspecified" status="main" name="QAtChat" href="qatchat.html" location="qatchat.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="chat" fullname="QAtChat::chat" href="qatchat.html#chat" location="qatchat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="chat(const QString &amp; command)">
                <parameter left="const QString &amp;" right="" name="command" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="chat" fullname="QAtChat::chat" href="qatchat.html#chat-2" location="qatchat.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="chat(const QString &amp; command, QObject * target, const char * slot, QAtResult::UserData * data)">
                <parameter left="const QString &amp;" right="" name="command" default=""></parameter>
                <parameter left="QObject *" right="" name="target" default=""></parameter>
                <parameter left="const char *" right="" name="slot" default=""></parameter>
                <parameter left="QAtResult::UserData *" right="" name="data" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="chatPDU" fullname="QAtChat::chatPDU" href="qatchat.html#chatPDU" location="qatchat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="chatPDU(const QString &amp; command, const QByteArray &amp; pdu, QObject * target, const char * slot, QAtResult::UserData * data)">
                <parameter left="const QString &amp;" right="" name="command" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="pdu" default=""></parameter>
                <parameter left="QObject *" right="" name="target" default=""></parameter>
                <parameter left="const char *" right="" name="slot" default=""></parameter>
                <parameter left="QAtResult::UserData *" right="" name="data" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="registerNotificationType" fullname="QAtChat::registerNotificationType" href="qatchat.html#registerNotificationType" location="qatchat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="registerNotificationType(const QString &amp; type, QObject * target, const char * slot, bool mayBeCommand)">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
                <parameter left="QObject *" right="" name="target" default=""></parameter>
                <parameter left="const char *" right="" name="slot" default=""></parameter>
                <parameter left="bool" right="" name="mayBeCommand" default="false"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="abortDial" fullname="QAtChat::abortDial" href="qatchat.html#abortDial" location="qatchat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="abortDial()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="suspend" fullname="QAtChat::suspend" href="qatchat.html#suspend" location="qatchat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="suspend()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resume" fullname="QAtChat::resume" href="qatchat.html#resume" location="qatchat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="resume()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDebugChars" fullname="QAtChat::setDebugChars" href="qatchat.html#setDebugChars" location="qatchat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDebugChars(char from, char to, char notify, char unknown)">
                <parameter left="char" right="" name="from" default=""></parameter>
                <parameter left="char" right="" name="to" default=""></parameter>
                <parameter left="char" right="" name="notify" default=""></parameter>
                <parameter left="char" right="" name="unknown" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deadTimeout" fullname="QAtChat::deadTimeout" href="qatchat.html#deadTimeout" location="qatchat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="deadTimeout() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDeadTimeout" fullname="QAtChat::setDeadTimeout" href="qatchat.html#setDeadTimeout" location="qatchat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDeadTimeout(int msec)">
                <parameter left="int" right="" name="msec" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="retryOnNonEcho" fullname="QAtChat::retryOnNonEcho" href="qatchat.html#retryOnNonEcho" location="qatchat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="retryOnNonEcho() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRetryOnNonEcho" fullname="QAtChat::setRetryOnNonEcho" href="qatchat.html#setRetryOnNonEcho" location="qatchat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRetryOnNonEcho(int msec)">
                <parameter left="int" right="" name="msec" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCPINTerminator" fullname="QAtChat::setCPINTerminator" href="qatchat.html#setCPINTerminator" location="qatchat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCPINTerminator()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestNextLine" fullname="QAtChat::requestNextLine" href="qatchat.html#requestNextLine" location="qatchat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="requestNextLine(QObject * target, const char * slot)">
                <parameter left="QObject *" right="" name="target" default=""></parameter>
                <parameter left="const char *" right="" name="slot" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="send" fullname="QAtChat::send" href="qatchat.html#send" location="qatchat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="send(const QString &amp; command)">
                <parameter left="const QString &amp;" right="" name="command" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="registerErrorPrefix" fullname="QAtChat::registerErrorPrefix" href="qatchat.html#registerErrorPrefix" location="qatchat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="registerErrorPrefix(const QString &amp; type)">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="registerWakeupCommand" fullname="QAtChat::registerWakeupCommand" href="qatchat.html#registerWakeupCommand" location="qatchat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="registerWakeupCommand(const QString &amp; cmd, int wakeupTime)">
                <parameter left="const QString &amp;" right="" name="cmd" default=""></parameter>
                <parameter left="int" right="" name="wakeupTime" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pduNotification" fullname="QAtChat::pduNotification" href="qatchat.html#pduNotification" location="qatchat.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="pduNotification(const QString &amp; type, const QByteArray &amp; pdu)">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="pdu" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callNotification" fullname="QAtChat::callNotification" href="qatchat.html#callNotification" location="qatchat.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="callNotification(const QString &amp; type)">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dead" fullname="QAtChat::dead" href="qatchat.html#dead" location="qatchat.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="dead()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="EmailService" href="emailservice.html" location="emailclient.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="writeMail" fullname="EmailService::writeMail" href="emailservice.html#writeMail" location="emailclient.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="writeMail()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="writeMail" fullname="EmailService::writeMail" href="emailservice.html#writeMail-2" location="emailclient.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="writeMail(const QString &amp; name, const QString &amp; email)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="email" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="writeMessage" fullname="EmailService::writeMessage" href="emailservice.html#writeMessage" location="emailclient.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="writeMessage(const QString &amp; name, const QString &amp; email, const QStringList &amp; docAttachments, const QStringList &amp; fileAttachments)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="email" default=""></parameter>
                <parameter left="const QStringList &amp;" right="" name="docAttachments" default=""></parameter>
                <parameter left="const QStringList &amp;" right="" name="fileAttachments" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="viewMail" fullname="EmailService::viewMail" href="emailservice.html#viewMail" location="emailclient.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="viewMail()"></function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="viewMail" fullname="EmailService::viewMail" href="emailservice.html#viewMail-2" location="emailclient.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="viewMail(const QMailId &amp; id)">
                <parameter left="const QMailId &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="emailVCard" fullname="EmailService::emailVCard" href="emailservice.html#emailVCard" location="emailclient.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="emailVCard(const QString &amp; filename, const QString &amp; description)">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="description" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="cleanupMessages" fullname="EmailService::cleanupMessages" href="emailservice.html#cleanupMessages" location="emailclient.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="cleanupMessages(const QDate &amp; date, int size)">
                <parameter left="const QDate &amp;" right="" name="date" default=""></parameter>
                <parameter left="int" right="" name="size" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="emailVCard" fullname="EmailService::emailVCard" href="emailservice.html#emailVCard-3" location="emailclient.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="3" type="void" signature="emailVCard(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="SMSService" href="smsservice.html" location="emailclient.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="writeSms" fullname="SMSService::writeSms" href="smsservice.html#writeSms" location="emailclient.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="writeSms()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="writeSms" fullname="SMSService::writeSms" href="smsservice.html#writeSms-2" location="emailclient.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="writeSms(const QString &amp; name, const QString &amp; number)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="writeSms" fullname="SMSService::writeSms" href="smsservice.html#writeSms-3" location="emailclient.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="3" type="void" signature="writeSms(const QString &amp; name, const QString &amp; number, const QString &amp; filename)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="viewSms" fullname="SMSService::viewSms" href="smsservice.html#viewSms" location="emailclient.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="viewSms()"></function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="viewSmsList" fullname="SMSService::viewSmsList" href="smsservice.html#viewSmsList" location="emailclient.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="viewSmsList()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="smsVCard" fullname="SMSService::smsVCard" href="smsservice.html#smsVCard" location="emailclient.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="smsVCard(const QString &amp; filename, const QString &amp; description)">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="description" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="smsVCard" fullname="SMSService::smsVCard" href="smsservice.html#smsVCard-2" location="emailclient.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="smsVCard(const QString &amp; channel, const QString &amp; id, const QString &amp; filename, const QString &amp; description)">
                <parameter left="const QString &amp;" right="" name="channel" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="description" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="smsVCard" fullname="SMSService::smsVCard" href="smsservice.html#smsVCard-3" location="emailclient.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="3" type="void" signature="smsVCard(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pushMmsMessage" fullname="SMSService::pushMmsMessage" href="smsservice.html#pushMmsMessage" location="emailclient.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="pushMmsMessage(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="flashSms" fullname="SMSService::flashSms" href="smsservice.html#flashSms" location="emailclient.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="flashSms(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="MessagesService" href="messagesservice.html" location="emailclient.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="viewNewMessages" fullname="MessagesService::viewNewMessages" href="messagesservice.html#viewNewMessages" location="emailclient.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="viewNewMessages(bool userRequest)">
                <parameter left="bool" right="" name="userRequest" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="viewMessage" fullname="MessagesService::viewMessage" href="messagesservice.html#viewMessage" location="emailclient.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="viewMessage(QMailId id)">
                <parameter left="QMailId" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="composeMessage" fullname="MessagesService::composeMessage" href="messagesservice.html#composeMessage" location="emailclient.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="composeMessage(QMailMessage::MessageType type, QMailAddressList to, QString subject, QString text)">
                <parameter left="QMailMessage::MessageType" right="" name="type" default=""></parameter>
                <parameter left="QMailAddressList" right="" name="to" default=""></parameter>
                <parameter left="QString" right="" name="subject" default=""></parameter>
                <parameter left="QString" right="" name="text" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="composeMessage" fullname="MessagesService::composeMessage" href="messagesservice.html#composeMessage-2" location="emailclient.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="composeMessage(QMailMessage::MessageType type, QMailAddressList to, QString subject, QString text, QContentList attachments, QMailMessage::AttachmentsAction action)">
                <parameter left="QMailMessage::MessageType" right="" name="type" default=""></parameter>
                <parameter left="QMailAddressList" right="" name="to" default=""></parameter>
                <parameter left="QString" right="" name="subject" default=""></parameter>
                <parameter left="QString" right="" name="text" default=""></parameter>
                <parameter left="QContentList" right="" name="attachments" default=""></parameter>
                <parameter left="QMailMessage::AttachmentsAction" right="" name="action" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="composeMessage" fullname="MessagesService::composeMessage" href="messagesservice.html#composeMessage-3" location="emailclient.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="3" type="void" signature="composeMessage(QMailMessage message)">
                <parameter left="QMailMessage" right="" name="message" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="CallHistory" href="callhistory.html" location="callhistory.h" bases="QWidget" module=""></class>
        <class access="public" threadsafety="unspecified" status="commendable" name="CallHistoryService" href="callhistoryservice.html" location="callhistory.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="showCallHistory" fullname="CallHistoryService::showCallHistory" href="callhistoryservice.html#showCallHistory" location="callhistory.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="showCallHistory(QCallList::ListType type)">
                <parameter left="QCallList::ListType" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="viewDetails" fullname="CallHistoryService::viewDetails" href="callhistoryservice.html#viewDetails" location="callhistory.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="viewDetails(QCallListItem item, QContact contact, int fieldType)">
                <parameter left="QCallListItem" right="" name="item" default=""></parameter>
                <parameter left="QContact" right="" name="contact" default=""></parameter>
                <parameter left="int" right="" name="fieldType" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemNetworkRegistration" href="qmodemnetworkregistration.html" location="qmodemnetworkregistration.h" bases="QNetworkRegistrationServer" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemNetworkRegistration" fullname="QModemNetworkRegistration::QModemNetworkRegistration" href="qmodemnetworkregistration.html#QModemNetworkRegistration" location="qmodemnetworkregistration.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemNetworkRegistration(QModemService * service)">
                <parameter left="QModemService *" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemNetworkRegistration" fullname="QModemNetworkRegistration::~QModemNetworkRegistration" href="qmodemnetworkregistration.html#dtor.QModemNetworkRegistration" location="qmodemnetworkregistration.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemNetworkRegistration()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportsOperatorTechnology" fullname="QModemNetworkRegistration::supportsOperatorTechnology" href="qmodemnetworkregistration.html#supportsOperatorTechnology" location="qmodemnetworkregistration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="supportsOperatorTechnology() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSupportsOperatorTechnology" fullname="QModemNetworkRegistration::setSupportsOperatorTechnology" href="qmodemnetworkregistration.html#setSupportsOperatorTechnology" location="qmodemnetworkregistration.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSupportsOperatorTechnology(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operatorNameForId" fullname="QModemNetworkRegistration::operatorNameForId" href="qmodemnetworkregistration.html#operatorNameForId" location="qmodemnetworkregistration.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="operatorNameForId(const QString &amp; id)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCurrentOperator" fullname="QModemNetworkRegistration::setCurrentOperator" href="qmodemnetworkregistration.html#setCurrentOperator" location="qmodemnetworkregistration.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setCurrentOperator(QTelephony::OperatorMode mode, const QString &amp; id, const QString &amp; technology)">
                <parameter left="QTelephony::OperatorMode" right="" name="mode" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="technology" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="resetModem" fullname="QModemNetworkRegistration::resetModem" href="qmodemnetworkregistration.html#resetModem" location="qmodemnetworkregistration.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="resetModem()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="queryRegistration" fullname="QModemNetworkRegistration::queryRegistration" href="qmodemnetworkregistration.html#queryRegistration" location="qmodemnetworkregistration.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="queryRegistration()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setCurrentOperatorCommand" fullname="QModemNetworkRegistration::setCurrentOperatorCommand" href="qmodemnetworkregistration.html#setCurrentOperatorCommand" location="qmodemnetworkregistration.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QString" signature="setCurrentOperatorCommand(QTelephony::OperatorMode mode, const QString &amp; id, const QString &amp; technology)">
                <parameter left="QTelephony::OperatorMode" right="" name="mode" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="technology" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAbstractHomeScreen" href="qabstracthomescreen.html" location="qabstracthomescreen.h" bases="QWidget" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAbstractHomeScreen" fullname="QAbstractHomeScreen::QAbstractHomeScreen" href="qabstracthomescreen.html#QAbstractHomeScreen" location="qabstracthomescreen.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAbstractHomeScreen(QWidget * parent, Qt::WFlags flags)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
                <parameter left="Qt::WFlags" right="" name="flags" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="keyLocked" fullname="QAbstractHomeScreen::keyLocked" href="qabstracthomescreen.html#keyLocked" location="qabstracthomescreen.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="keyLocked() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setKeyLocked" fullname="QAbstractHomeScreen::setKeyLocked" href="qabstracthomescreen.html#setKeyLocked" location="qabstracthomescreen.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="setKeyLocked(bool lock) const">
                <parameter left="bool" right="" name="lock" default=""></parameter>
            </function>
            <class access="protected" threadsafety="unspecified" status="commendable" name="InfoData" fullname="QAbstractHomeScreen::InfoData" href="qabstracthomescreen-infodata.html" location="qabstracthomescreen.h" bases="" module="">
                <variable access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QAbstractHomeScreen::InfoData::id" href="qabstracthomescreen-infodata.html#id-var" location="qabstracthomescreen.h" type="int" static="false"></variable>
                <variable access="public" threadsafety="unspecified" status="commendable" name="priority" fullname="QAbstractHomeScreen::InfoData::priority" href="qabstracthomescreen-infodata.html#priority-var" location="qabstracthomescreen.h" type="int" static="false"></variable>
                <variable access="public" threadsafety="unspecified" status="commendable" name="text" fullname="QAbstractHomeScreen::InfoData::text" href="qabstracthomescreen-infodata.html#text-var" location="qabstracthomescreen.h" type="QString" static="false"></variable>
                <variable access="public" threadsafety="unspecified" status="commendable" name="pixmap" fullname="QAbstractHomeScreen::InfoData::pixmap" href="qabstracthomescreen-infodata.html#pixmap-var" location="qabstracthomescreen.h" type="QPixmap" static="false"></variable>
            </class>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="emLock" fullname="QAbstractHomeScreen::emLock" href="qabstracthomescreen.html#emLock-var" location="qabstracthomescreen.h" type="BasicEmergencyLock *" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="simLock" fullname="QAbstractHomeScreen::simLock" href="qabstracthomescreen.html#simLock-var" location="qabstracthomescreen.h" type="BasicSimPinLock *" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="keyLock" fullname="QAbstractHomeScreen::keyLock" href="qabstracthomescreen.html#keyLock-var" location="qabstracthomescreen.h" type="BasicKeyLock *" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="actionLock" fullname="QAbstractHomeScreen::actionLock" href="qabstracthomescreen.html#actionLock-var" location="qabstracthomescreen.h" type="QAction *" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="infoData" fullname="QAbstractHomeScreen::infoData" href="qabstracthomescreen.html#infoData-var" location="qabstracthomescreen.h" type="QList&lt;InfoData&gt;" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="speeddialTimer" fullname="QAbstractHomeScreen::speeddialTimer" href="qabstracthomescreen.html#speeddialTimer-var" location="qabstracthomescreen.h" type="QTimer *" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="speeddial" fullname="QAbstractHomeScreen::speeddial" href="qabstracthomescreen.html#speeddial-var" location="qabstracthomescreen.h" type="QString" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="speeddial_activated_preedit" fullname="QAbstractHomeScreen::speeddial_activated_preedit" href="qabstracthomescreen.html#speeddial_activated_preedit-var" location="qabstracthomescreen.h" type="QString" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="ph" fullname="QAbstractHomeScreen::ph" href="qabstracthomescreen.html#ph-var" location="qabstracthomescreen.h" type="PressHoldGate *" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="m_contextMenu" fullname="QAbstractHomeScreen::m_contextMenu" href="qabstracthomescreen.html#m_contextMenu-var" location="qabstracthomescreen.h" type="QMenu *" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="lockMsgId" fullname="QAbstractHomeScreen::lockMsgId" href="qabstracthomescreen.html#lockMsgId-var" location="qabstracthomescreen.h" type="int" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="infoMsgId" fullname="QAbstractHomeScreen::infoMsgId" href="qabstracthomescreen.html#infoMsgId-var" location="qabstracthomescreen.h" type="int" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="missedCalls" fullname="QAbstractHomeScreen::missedCalls" href="qabstracthomescreen.html#missedCalls-var" location="qabstracthomescreen.h" type="int" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="speeddial_preedit" fullname="QAbstractHomeScreen::speeddial_preedit" href="qabstracthomescreen.html#speeddial_preedit-var" location="qabstracthomescreen.h" type="int" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="speeddialdown" fullname="QAbstractHomeScreen::speeddialdown" href="qabstracthomescreen.html#speeddialdown-var" location="qabstracthomescreen.h" type="bool" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="newMessages" fullname="QAbstractHomeScreen::newMessages" href="qabstracthomescreen.html#newMessages-var" location="qabstracthomescreen.h" type="int" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="smsMemoryFull" fullname="QAbstractHomeScreen::smsMemoryFull" href="qabstracthomescreen.html#smsMemoryFull-var" location="qabstracthomescreen.h" type="bool" static="false"></variable>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemSimInfo" href="qmodemsiminfo.html" location="qmodemsiminfo.h" bases="QSimInfo" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemSimInfo" fullname="QModemSimInfo::QModemSimInfo" href="qmodemsiminfo.html#QModemSimInfo" location="qmodemsiminfo.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemSimInfo(QModemService * service)">
                <parameter left="QModemService *" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemSimInfo" fullname="QModemSimInfo::~QModemSimInfo" href="qmodemsiminfo.html#dtor.QModemSimInfo" location="qmodemsiminfo.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemSimInfo()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="simInserted" fullname="QModemSimInfo::simInserted" href="qmodemsiminfo.html#simInserted" location="qmodemsiminfo.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="simInserted()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="simRemoved" fullname="QModemSimInfo::simRemoved" href="qmodemsiminfo.html#simRemoved" location="qmodemsiminfo.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="simRemoved()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="KeyClick" href="keyclick.html" location="keyclick.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="KeyClick" fullname="KeyClick::KeyClick" href="keyclick.html#KeyClick" location="keyclick.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="KeyClick()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~KeyClick" fullname="KeyClick::~KeyClick" href="keyclick.html#dtor.KeyClick" location="keyclick.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~KeyClick()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="keyClick" fullname="KeyClick::keyClick" href="keyclick.html#keyClick" location="keyclick.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="keyClick(int unicode, int keycode, int modifiers, bool press, bool repeat)">
                <parameter left="int" right="" name="unicode" default=""></parameter>
                <parameter left="int" right="" name="keycode" default=""></parameter>
                <parameter left="int" right="" name="modifiers" default=""></parameter>
                <parameter left="bool" right="" name="press" default=""></parameter>
                <parameter left="bool" right="" name="repeat" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="ApplicationIpcRouter" href="applicationipcrouter.html" location="applicationlauncher.h" bases="QObject" module="">
            <class access="public" threadsafety="unspecified" status="commendable" name="RouteDestination" fullname="ApplicationIpcRouter::RouteDestination" href="applicationipcrouter-routedestination.html" location="applicationlauncher.h" bases="" module="">
                <function access="public" threadsafety="unspecified" status="commendable" name="routeMessage" fullname="ApplicationIpcRouter::RouteDestination::routeMessage" href="applicationipcrouter-routedestination.html#routeMessage" location="applicationlauncher.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="routeMessage(const QString &amp; appName, const QString &amp; message, const QByteArray &amp; data)">
                    <parameter left="const QString &amp;" right="" name="appName" default=""></parameter>
                    <parameter left="const QString &amp;" right="" name="message" default=""></parameter>
                    <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
                </function>
            </class>
            <function access="public" threadsafety="unspecified" status="commendable" name="addRoute" fullname="ApplicationIpcRouter::addRoute" href="applicationipcrouter.html#addRoute" location="applicationlauncher.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="addRoute(const QString &amp; app, RouteDestination * dest)">
                <parameter left="const QString &amp;" right="" name="app" default=""></parameter>
                <parameter left="RouteDestination *" right="" name="dest" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remRoute" fullname="ApplicationIpcRouter::remRoute" href="applicationipcrouter.html#remRoute" location="applicationlauncher.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="remRoute(const QString &amp; app, RouteDestination * dest)">
                <parameter left="const QString &amp;" right="" name="app" default=""></parameter>
                <parameter left="RouteDestination *" right="" name="dest" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="ApplicationTypeLauncher" href="applicationtypelauncher.html" location="applicationlauncher.h" bases="QObject" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="TerminationReason" fullname="ApplicationTypeLauncher::TerminationReason" href="applicationtypelauncher.html#TerminationReason-enum" location="applicationlauncher.h">
                <value name="FailedToStart" value="0"></value>
                <value name="Crashed" value="1"></value>
                <value name="Unknown" value="2"></value>
                <value name="Normal" value="3"></value>
                <value name="Killed" value="4"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ApplicationState" fullname="ApplicationTypeLauncher::ApplicationState" href="applicationtypelauncher.html#ApplicationState-enum" location="applicationlauncher.h">
                <value name="NotRunning" value="0"></value>
                <value name="Starting" value="1"></value>
                <value name="Running" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ApplicationTypeLauncher" fullname="ApplicationTypeLauncher::~ApplicationTypeLauncher" href="applicationtypelauncher.html#dtor.ApplicationTypeLauncher" location="applicationlauncher.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~ApplicationTypeLauncher()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="applicationState" fullname="ApplicationTypeLauncher::applicationState" href="applicationtypelauncher.html#applicationState" location="applicationlauncher.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="ApplicationState" signature="applicationState(const QString &amp; application)">
                <parameter left="const QString &amp;" right="" name="application" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="canLaunch" fullname="ApplicationTypeLauncher::canLaunch" href="applicationtypelauncher.html#canLaunch" location="applicationlauncher.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="canLaunch(const QString &amp; application)">
                <parameter left="const QString &amp;" right="" name="application" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="launch" fullname="ApplicationTypeLauncher::launch" href="applicationtypelauncher.html#launch" location="applicationlauncher.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="launch(const QString &amp; application)">
                <parameter left="const QString &amp;" right="" name="application" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="kill" fullname="ApplicationTypeLauncher::kill" href="applicationtypelauncher.html#kill" location="applicationlauncher.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="kill(const QString &amp; application)">
                <parameter left="const QString &amp;" right="" name="application" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="ApplicationTypeLauncher::name" href="applicationtypelauncher.html#name" location="applicationlauncher.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QString" signature="name()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="applicationStateChanged" fullname="ApplicationTypeLauncher::applicationStateChanged" href="applicationtypelauncher.html#applicationStateChanged" location="applicationlauncher.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="applicationStateChanged(const QString &amp; application, ApplicationTypeLauncher::ApplicationState state)">
                <parameter left="const QString &amp;" right="" name="application" default=""></parameter>
                <parameter left="ApplicationTypeLauncher::ApplicationState" right="" name="state" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="terminated" fullname="ApplicationTypeLauncher::terminated" href="applicationtypelauncher.html#terminated" location="applicationlauncher.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="terminated(const QString &amp; application, ApplicationTypeLauncher::TerminationReason reason)">
                <parameter left="const QString &amp;" right="" name="application" default=""></parameter>
                <parameter left="ApplicationTypeLauncher::TerminationReason" right="" name="reason" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="ApplicationTerminationHandler" href="applicationterminationhandler.html" location="applicationlauncher.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ApplicationTerminationHandler" fullname="ApplicationTerminationHandler::ApplicationTerminationHandler" href="applicationterminationhandler.html#ApplicationTerminationHandler" location="applicationlauncher.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ApplicationTerminationHandler(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="terminated" fullname="ApplicationTerminationHandler::terminated" href="applicationterminationhandler.html#terminated" location="applicationlauncher.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="terminated(const QString &amp; appName, ApplicationTypeLauncher::TerminationReason reason)">
                <parameter left="const QString &amp;" right="" name="appName" default=""></parameter>
                <parameter left="ApplicationTypeLauncher::TerminationReason" right="" name="reason" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="ApplicationLauncher" href="applicationlauncher.html" location="applicationlauncher.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="canLaunch" fullname="ApplicationLauncher::canLaunch" href="applicationlauncher.html#canLaunch" location="applicationlauncher.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="canLaunch(const QString &amp; app)">
                <parameter left="const QString &amp;" right="" name="app" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="launch" fullname="ApplicationLauncher::launch" href="applicationlauncher.html#launch" location="applicationlauncher.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="launch(const QString &amp; app)">
                <parameter left="const QString &amp;" right="" name="app" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="applications" fullname="ApplicationLauncher::applications" href="applicationlauncher.html#applications" location="applicationlauncher.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="applications() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="ApplicationLauncher::state" href="applicationlauncher.html#state" location="applicationlauncher.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="ApplicationTypeLauncher::ApplicationState" signature="state(const QString &amp; app) const">
                <parameter left="const QString &amp;" right="" name="app" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="applicationTerminated" fullname="ApplicationLauncher::applicationTerminated" href="applicationlauncher.html#applicationTerminated" location="applicationlauncher.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="applicationTerminated(const QString &amp; application, ApplicationTypeLauncher::TerminationReason reason, bool filtered)">
                <parameter left="const QString &amp;" right="" name="application" default=""></parameter>
                <parameter left="ApplicationTypeLauncher::TerminationReason" right="" name="reason" default=""></parameter>
                <parameter left="bool" right="" name="filtered" default="false"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="applicationStateChanged" fullname="ApplicationLauncher::applicationStateChanged" href="applicationlauncher.html#applicationStateChanged" location="applicationlauncher.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="applicationStateChanged(const QString &amp; application, ApplicationTypeLauncher::ApplicationState state)">
                <parameter left="const QString &amp;" right="" name="application" default=""></parameter>
                <parameter left="ApplicationTypeLauncher::ApplicationState" right="" name="state" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="applicationNotFound" fullname="ApplicationLauncher::applicationNotFound" href="applicationlauncher.html#applicationNotFound" location="applicationlauncher.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="applicationNotFound(const QString &amp; application)">
                <parameter left="const QString &amp;" right="" name="application" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtopiaServerApplicationLauncher" href="qtopiaserverapplicationlauncher.html" location="applicationlauncher.h" bases="ApplicationTypeLauncher,RouteDestination" module=""></class>
        <class access="public" threadsafety="unspecified" status="commendable" name="ExeApplicationLauncher" href="exeapplicationlauncher.html" location="applicationlauncher.h" bases="ApplicationTypeLauncher,RouteDestination" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ExeApplicationLauncher" fullname="ExeApplicationLauncher::ExeApplicationLauncher" href="exeapplicationlauncher.html#ExeApplicationLauncher" location="applicationlauncher.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ExeApplicationLauncher()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ExeApplicationLauncher" fullname="ExeApplicationLauncher::~ExeApplicationLauncher" href="exeapplicationlauncher.html#dtor.ExeApplicationLauncher" location="applicationlauncher.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~ExeApplicationLauncher()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="addStartingApplication" fullname="ExeApplicationLauncher::addStartingApplication" href="exeapplicationlauncher.html#addStartingApplication" location="applicationlauncher.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addStartingApplication(const QString &amp; app, QProcess * proc)">
                <parameter left="const QString &amp;" right="" name="app" default=""></parameter>
                <parameter left="QProcess *" right="" name="proc" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="isRunning" fullname="ExeApplicationLauncher::isRunning" href="exeapplicationlauncher.html#isRunning" location="applicationlauncher.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="isRunning(const QString &amp; app)">
                <parameter left="const QString &amp;" right="" name="app" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="SimpleExeApplicationLauncher" href="simpleexeapplicationlauncher.html" location="applicationlauncher.h" bases="ExeApplicationLauncher" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="SimpleExeApplicationLauncher" fullname="SimpleExeApplicationLauncher::SimpleExeApplicationLauncher" href="simpleexeapplicationlauncher.html#SimpleExeApplicationLauncher" location="applicationlauncher.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="SimpleExeApplicationLauncher()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~SimpleExeApplicationLauncher" fullname="SimpleExeApplicationLauncher::~SimpleExeApplicationLauncher" href="simpleexeapplicationlauncher.html#dtor.SimpleExeApplicationLauncher" location="applicationlauncher.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~SimpleExeApplicationLauncher()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="ConsoleApplicationLauncher" href="consoleapplicationlauncher.html" location="applicationlauncher.h" bases="ApplicationTypeLauncher,RouteDestination" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ConsoleApplicationLauncher" fullname="ConsoleApplicationLauncher::ConsoleApplicationLauncher" href="consoleapplicationlauncher.html#ConsoleApplicationLauncher" location="applicationlauncher.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ConsoleApplicationLauncher()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ConsoleApplicationLauncher" fullname="ConsoleApplicationLauncher::~ConsoleApplicationLauncher" href="consoleapplicationlauncher.html#dtor.ConsoleApplicationLauncher" location="applicationlauncher.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~ConsoleApplicationLauncher()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="BuiltinApplicationLauncher" href="builtinapplicationlauncher.html" location="applicationlauncher.h" bases="ApplicationTypeLauncher,RouteDestination" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="BuiltinApplicationLauncher" fullname="BuiltinApplicationLauncher::BuiltinApplicationLauncher" href="builtinapplicationlauncher.html#BuiltinApplicationLauncher" location="applicationlauncher.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="BuiltinApplicationLauncher()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~BuiltinApplicationLauncher" fullname="BuiltinApplicationLauncher::~BuiltinApplicationLauncher" href="builtinapplicationlauncher.html#dtor.BuiltinApplicationLauncher" location="applicationlauncher.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~BuiltinApplicationLauncher()"></function>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="BuiltinFunc" fullname="BuiltinApplicationLauncher::BuiltinFunc" href="builtinapplicationlauncher.html#BuiltinFunc-typedef" location="applicationlauncher.h"></typedef>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QCallSettings" href="qcallsettings.html" location="qcallsettings.h" bases="QCommInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QCallSettings" fullname="QCallSettings::QCallSettings" href="qcallsettings.html#QCallSettings" location="qcallsettings.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCallSettings(const QString &amp; service, QObject * parent, QCommInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="service" default="QString::null"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QCommInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCallSettings" fullname="QCallSettings::~QCallSettings" href="qcallsettings.html#dtor.QCallSettings" location="qcallsettings.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCallSettings()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="CallerIdRestriction" fullname="QCallSettings::CallerIdRestriction" href="qcallsettings.html#CallerIdRestriction-enum" location="qcallsettings.h">
                <value name="Subscription" value="0"></value>
                <value name="Invoked" value="1"></value>
                <value name="Suppressed" value="2"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="CallerIdRestrictionStatus" fullname="QCallSettings::CallerIdRestrictionStatus" href="qcallsettings.html#CallerIdRestrictionStatus-enum" location="qcallsettings.h">
                <value name="NotProvisioned" value="0"></value>
                <value name="Permanent" value="1"></value>
                <value name="Unknown" value="2"></value>
                <value name="TemporaryRestricted" value="3"></value>
                <value name="TemporaryAllowed" value="4"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SmsTransport" fullname="QCallSettings::SmsTransport" href="qcallsettings.html#SmsTransport-enum" location="qcallsettings.h">
                <value name="SmsTransportPD" value="0"></value>
                <value name="SmsTransportCS" value="1"></value>
                <value name="SmsTransportPDPreferred" value="2"></value>
                <value name="SmsTransportCSPreferred" value="3"></value>
                <value name="SmsTransportUnavailable" value="4"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="PresentationStatus" fullname="QCallSettings::PresentationStatus" href="qcallsettings.html#PresentationStatus-enum" location="qcallsettings.h">
                <value name="PresentationNotProvisioned" value="0"></value>
                <value name="PresentationProvisioned" value="1"></value>
                <value name="PresentationUnknown" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestCallWaiting" fullname="QCallSettings::requestCallWaiting" href="qcallsettings.html#requestCallWaiting" location="qcallsettings.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="requestCallWaiting()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCallWaiting" fullname="QCallSettings::setCallWaiting" href="qcallsettings.html#setCallWaiting" location="qcallsettings.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setCallWaiting(bool enable, QTelephony::CallClass cls)">
                <parameter left="bool" right="" name="enable" default=""></parameter>
                <parameter left="QTelephony::CallClass" right="" name="cls" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestCallerIdRestriction" fullname="QCallSettings::requestCallerIdRestriction" href="qcallsettings.html#requestCallerIdRestriction" location="qcallsettings.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="requestCallerIdRestriction()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCallerIdRestriction" fullname="QCallSettings::setCallerIdRestriction" href="qcallsettings.html#setCallerIdRestriction" location="qcallsettings.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setCallerIdRestriction(QCallSettings::CallerIdRestriction clir)">
                <parameter left="QCallSettings::CallerIdRestriction" right="" name="clir" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestSmsTransport" fullname="QCallSettings::requestSmsTransport" href="qcallsettings.html#requestSmsTransport" location="qcallsettings.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="requestSmsTransport()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSmsTransport" fullname="QCallSettings::setSmsTransport" href="qcallsettings.html#setSmsTransport" location="qcallsettings.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setSmsTransport(QCallSettings::SmsTransport transport)">
                <parameter left="QCallSettings::SmsTransport" right="" name="transport" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestCallerIdPresentation" fullname="QCallSettings::requestCallerIdPresentation" href="qcallsettings.html#requestCallerIdPresentation" location="qcallsettings.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="requestCallerIdPresentation()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestConnectedIdPresentation" fullname="QCallSettings::requestConnectedIdPresentation" href="qcallsettings.html#requestConnectedIdPresentation" location="qcallsettings.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="requestConnectedIdPresentation()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callWaiting" fullname="QCallSettings::callWaiting" href="qcallsettings.html#callWaiting" location="qcallsettings.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="callWaiting(QTelephony::CallClass cls)">
                <parameter left="QTelephony::CallClass" right="" name="cls" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCallWaitingResult" fullname="QCallSettings::setCallWaitingResult" href="qcallsettings.html#setCallWaitingResult" location="qcallsettings.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="setCallWaitingResult(QTelephony::Result result)">
                <parameter left="QTelephony::Result" right="" name="result" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callerIdRestriction" fullname="QCallSettings::callerIdRestriction" href="qcallsettings.html#callerIdRestriction" location="qcallsettings.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="callerIdRestriction(QCallSettings::CallerIdRestriction clir, QCallSettings::CallerIdRestrictionStatus status)">
                <parameter left="QCallSettings::CallerIdRestriction" right="" name="clir" default=""></parameter>
                <parameter left="QCallSettings::CallerIdRestrictionStatus" right="" name="status" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCallerIdRestrictionResult" fullname="QCallSettings::setCallerIdRestrictionResult" href="qcallsettings.html#setCallerIdRestrictionResult" location="qcallsettings.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="setCallerIdRestrictionResult(QTelephony::Result result)">
                <parameter left="QTelephony::Result" right="" name="result" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="smsTransport" fullname="QCallSettings::smsTransport" href="qcallsettings.html#smsTransport" location="qcallsettings.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="smsTransport(QCallSettings::SmsTransport transport)">
                <parameter left="QCallSettings::SmsTransport" right="" name="transport" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSmsTransportResult" fullname="QCallSettings::setSmsTransportResult" href="qcallsettings.html#setSmsTransportResult" location="qcallsettings.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="setSmsTransportResult(QTelephony::Result result)">
                <parameter left="QTelephony::Result" right="" name="result" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callerIdPresentation" fullname="QCallSettings::callerIdPresentation" href="qcallsettings.html#callerIdPresentation" location="qcallsettings.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="callerIdPresentation(QCallSettings::PresentationStatus status)">
                <parameter left="QCallSettings::PresentationStatus" right="" name="status" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectedIdPresentation" fullname="QCallSettings::connectedIdPresentation" href="qcallsettings.html#connectedIdPresentation" location="qcallsettings.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="connectedIdPresentation(QCallSettings::PresentationStatus status)">
                <parameter left="QCallSettings::PresentationStatus" right="" name="status" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QDocumentPropertiesWidget" href="qdocumentpropertieswidget.html" location="qdocumentproperties.h" bases="QWidget" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QDocumentPropertiesWidget" fullname="QDocumentPropertiesWidget::QDocumentPropertiesWidget" href="qdocumentpropertieswidget.html#QDocumentPropertiesWidget" location="qdocumentproperties.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDocumentPropertiesWidget(const QContent &amp; doc, QWidget * parent)">
                <parameter left="const QContent &amp;" right="" name="doc" default=""></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDocumentPropertiesWidget" fullname="QDocumentPropertiesWidget::~QDocumentPropertiesWidget" href="qdocumentpropertieswidget.html#dtor.QDocumentPropertiesWidget" location="qdocumentproperties.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDocumentPropertiesWidget()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="document" fullname="QDocumentPropertiesWidget::document" href="qdocumentpropertieswidget.html#document" location="qdocumentproperties.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContent" signature="document() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="applyChanges" fullname="QDocumentPropertiesWidget::applyChanges" href="qdocumentpropertieswidget.html#applyChanges" location="qdocumentproperties.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="applyChanges()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="done" fullname="QDocumentPropertiesWidget::done" href="qdocumentpropertieswidget.html#done" location="qdocumentproperties.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="done()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="beamLnk" fullname="QDocumentPropertiesWidget::beamLnk" href="qdocumentpropertieswidget.html#beamLnk" location="qdocumentproperties.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="beamLnk()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="unlinkLnk" fullname="QDocumentPropertiesWidget::unlinkLnk" href="qdocumentpropertieswidget.html#unlinkLnk" location="qdocumentproperties.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="unlinkLnk()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="duplicateLnk" fullname="QDocumentPropertiesWidget::duplicateLnk" href="qdocumentpropertieswidget.html#duplicateLnk" location="qdocumentproperties.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="duplicateLnk()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="showLicenses" fullname="QDocumentPropertiesWidget::showLicenses" href="qdocumentpropertieswidget.html#showLicenses" location="qdocumentproperties.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="showLicenses()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QDocumentPropertiesDialog" href="qdocumentpropertiesdialog.html" location="qdocumentproperties.h" bases="QDialog" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QDocumentPropertiesDialog" fullname="QDocumentPropertiesDialog::QDocumentPropertiesDialog" href="qdocumentpropertiesdialog.html#QDocumentPropertiesDialog" location="qdocumentproperties.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDocumentPropertiesDialog(const QContent &amp; doc, QWidget * parent)">
                <parameter left="const QContent &amp;" right="" name="doc" default=""></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDocumentPropertiesDialog" fullname="QDocumentPropertiesDialog::~QDocumentPropertiesDialog" href="qdocumentpropertiesdialog.html#dtor.QDocumentPropertiesDialog" location="qdocumentproperties.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDocumentPropertiesDialog()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="document" fullname="QDocumentPropertiesDialog::document" href="qdocumentpropertiesdialog.html#document" location="qdocumentproperties.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContent" signature="document() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothAddress" href="qbluetoothaddress.html" location="qbluetoothaddress.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothAddress" fullname="QBluetoothAddress::QBluetoothAddress" href="qbluetoothaddress.html#QBluetoothAddress" location="qbluetoothaddress.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothAddress()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothAddress" fullname="QBluetoothAddress::QBluetoothAddress" href="qbluetoothaddress.html#QBluetoothAddress-2" location="qbluetoothaddress.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QBluetoothAddress(const QBluetoothAddress &amp; other)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothAddress" fullname="QBluetoothAddress::QBluetoothAddress" href="qbluetoothaddress.html#QBluetoothAddress-3" location="qbluetoothaddress.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QBluetoothAddress(const QString &amp; addr)">
                <parameter left="const QString &amp;" right="" name="addr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothAddress" fullname="QBluetoothAddress::~QBluetoothAddress" href="qbluetoothaddress.html#dtor.QBluetoothAddress" location="qbluetoothaddress.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothAddress()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QBluetoothAddress::operator=" href="qbluetoothaddress.html#operator=" location="qbluetoothaddress.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QBluetoothAddress &amp;" signature="operator=(const QBluetoothAddress &amp; other)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QBluetoothAddress::operator==" href="qbluetoothaddress.html#operator==" location="qbluetoothaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QBluetoothAddress &amp; other) const">
                <parameter left="const QBluetoothAddress &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QBluetoothAddress::operator!=" href="qbluetoothaddress.html#operator!=" location="qbluetoothaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QBluetoothAddress &amp; other) const">
                <parameter left="const QBluetoothAddress &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QBluetoothAddress::isValid" href="qbluetoothaddress.html#isValid" location="qbluetoothaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toString" fullname="QBluetoothAddress::toString" href="qbluetoothaddress.html#toString" location="qbluetoothaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="toString() const"></function>
            <variable access="public" threadsafety="unspecified" status="commendable" name="invalid" fullname="QBluetoothAddress::invalid" href="qbluetoothaddress.html#invalid-var" location="qbluetoothaddress.h" type="const QBluetoothAddress" static="true"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="any" fullname="QBluetoothAddress::any" href="qbluetoothaddress.html#any-var" location="qbluetoothaddress.h" type="const QBluetoothAddress" static="true"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="all" fullname="QBluetoothAddress::all" href="qbluetoothaddress.html#all-var" location="qbluetoothaddress.h" type="const QBluetoothAddress" static="true"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="local" fullname="QBluetoothAddress::local" href="qbluetoothaddress.html#local-var" location="qbluetoothaddress.h" type="const QBluetoothAddress" static="true"></variable>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QBluetoothHandsfreeService" href="qbluetoothhandsfreeservice.html" location="qbluetoothhfservice_p.h" bases="QBluetoothAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothHandsfreeService" fullname="QBluetoothHandsfreeService::QBluetoothHandsfreeService" href="qbluetoothhandsfreeservice.html#QBluetoothHandsfreeService" location="qbluetoothhfservice_p.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothHandsfreeService(const QString &amp; service, const QString &amp; displayName, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="displayName" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothHandsfreeService" fullname="QBluetoothHandsfreeService::~QBluetoothHandsfreeService" href="qbluetoothhandsfreeservice.html#dtor.QBluetoothHandsfreeService" location="qbluetoothhfservice_p.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothHandsfreeService()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connect" fullname="QBluetoothHandsfreeService::connect" href="qbluetoothhandsfreeservice.html#connect" location="qbluetoothhfservice_p.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="connect(const QBluetoothAddress &amp; addr, int rfcomm_channel)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="addr" default=""></parameter>
                <parameter left="int" right="" name="rfcomm_channel" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disconnect" fullname="QBluetoothHandsfreeService::disconnect" href="qbluetoothhandsfreeservice.html#disconnect" location="qbluetoothhfservice_p.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="disconnect()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSpeakerVolume" fullname="QBluetoothHandsfreeService::setSpeakerVolume" href="qbluetoothhandsfreeservice.html#setSpeakerVolume" location="qbluetoothhfservice_p.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSpeakerVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMicrophoneVolume" fullname="QBluetoothHandsfreeService::setMicrophoneVolume" href="qbluetoothhandsfreeservice.html#setMicrophoneVolume" location="qbluetoothhfservice_p.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMicrophoneVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="releaseAudio" fullname="QBluetoothHandsfreeService::releaseAudio" href="qbluetoothhandsfreeservice.html#releaseAudio" location="qbluetoothhfservice_p.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="releaseAudio()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectAudio" fullname="QBluetoothHandsfreeService::connectAudio" href="qbluetoothhandsfreeservice.html#connectAudio" location="qbluetoothhfservice_p.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="connectAudio()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QBluetoothHandsfreeCommInterface" href="qbluetoothhandsfreecomminterface.html" location="qbluetoothhfservice_p.h" bases="QAbstractIpcInterfaceGroup" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothHandsfreeCommInterface" fullname="QBluetoothHandsfreeCommInterface::QBluetoothHandsfreeCommInterface" href="qbluetoothhandsfreecomminterface.html#QBluetoothHandsfreeCommInterface" location="qbluetoothhfservice_p.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothHandsfreeCommInterface(const QByteArray &amp; audioDev, QBluetoothHandsfreeService * parent)">
                <parameter left="const QByteArray &amp;" right="" name="audioDev" default=""></parameter>
                <parameter left="QBluetoothHandsfreeService *" right="" name="parent" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothHandsfreeCommInterface" fullname="QBluetoothHandsfreeCommInterface::~QBluetoothHandsfreeCommInterface" href="qbluetoothhandsfreecomminterface.html#dtor.QBluetoothHandsfreeCommInterface" location="qbluetoothhfservice_p.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothHandsfreeCommInterface()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="TimeService" href="timeservice.html" location="settime.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="editTime" fullname="TimeService::editTime" href="timeservice.html#editTime" location="settime.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="editTime()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="DateService" href="dateservice.html" location="settime.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="editDate" fullname="DateService::editDate" href="dateservice.html#editDate" location="settime.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="editDate()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMailFolderKey" href="qmailfolderkey.html" location="qmailfolderkey.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Operand" fullname="QMailFolderKey::Operand" href="qmailfolderkey.html#Operand-enum" location="qmailfolderkey.h">
                <value name="LessThan" value="0"></value>
                <value name="LessThanEqual" value="1"></value>
                <value name="GreaterThan" value="2"></value>
                <value name="GreaterThanEqual" value="3"></value>
                <value name="Equal" value="4"></value>
                <value name="NotEqual" value="5"></value>
                <value name="Contains" value="6"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Property" fullname="QMailFolderKey::Property" href="qmailfolderkey.html#Property-enum" location="qmailfolderkey.h">
                <value name="Id" value="0"></value>
                <value name="Name" value="1"></value>
                <value name="ParentId" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailFolderKey" fullname="QMailFolderKey::QMailFolderKey" href="qmailfolderkey.html#QMailFolderKey" location="qmailfolderkey.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMailFolderKey()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailFolderKey" fullname="QMailFolderKey::QMailFolderKey" href="qmailfolderkey.html#QMailFolderKey-2" location="qmailfolderkey.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMailFolderKey(const Property &amp; p, const QVariant &amp; value, const Operand &amp; c)">
                <parameter left="const Property &amp;" right="" name="p" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
                <parameter left="const Operand &amp;" right="" name="c" default="Equal"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailFolderKey" fullname="QMailFolderKey::QMailFolderKey" href="qmailfolderkey.html#QMailFolderKey-3" location="qmailfolderkey.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMailFolderKey(const QMailIdList &amp; ids)">
                <parameter left="const QMailIdList &amp;" right="" name="ids" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailFolderKey" fullname="QMailFolderKey::QMailFolderKey" href="qmailfolderkey.html#QMailFolderKey-4" location="qmailfolderkey.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QMailFolderKey(const QMailFolderKey &amp; other)">
                <parameter left="const QMailFolderKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMailFolderKey" fullname="QMailFolderKey::~QMailFolderKey" href="qmailfolderkey.html#dtor.QMailFolderKey" location="qmailfolderkey.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMailFolderKey()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator~" fullname="QMailFolderKey::operator~" href="qmailfolderkey.html#operator~" location="qmailfolderkey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailFolderKey" signature="operator~() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&amp;" fullname="QMailFolderKey::operator&amp;" href="qmailfolderkey.html#operator&amp;" location="qmailfolderkey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailFolderKey" signature="operator&amp;(const QMailFolderKey &amp; other) const">
                <parameter left="const QMailFolderKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator|" fullname="QMailFolderKey::operator|" href="qmailfolderkey.html#operator|" location="qmailfolderkey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailFolderKey" signature="operator|(const QMailFolderKey &amp; other) const">
                <parameter left="const QMailFolderKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&amp;=" fullname="QMailFolderKey::operator&amp;=" href="qmailfolderkey.html#operator&amp;=" location="qmailfolderkey.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMailFolderKey &amp;" signature="operator&amp;=(const QMailFolderKey &amp; other)">
                <parameter left="const QMailFolderKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator|=" fullname="QMailFolderKey::operator|=" href="qmailfolderkey.html#operator|=" location="qmailfolderkey.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMailFolderKey &amp;" signature="operator|=(const QMailFolderKey &amp; other)">
                <parameter left="const QMailFolderKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QMailFolderKey::operator==" href="qmailfolderkey.html#operator==" location="qmailfolderkey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QMailFolderKey &amp; other) const">
                <parameter left="const QMailFolderKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QMailFolderKey::operator!=" href="qmailfolderkey.html#operator!=" location="qmailfolderkey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QMailFolderKey &amp; other) const">
                <parameter left="const QMailFolderKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QMailFolderKey::operator=" href="qmailfolderkey.html#operator=" location="qmailfolderkey.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMailFolderKey &amp;" signature="operator=(const QMailFolderKey &amp; other)">
                <parameter left="const QMailFolderKey &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QMailFolderKey::isEmpty" href="qmailfolderkey.html#isEmpty" location="qmailfolderkey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QAbstractIpcInterface" href="qabstractipcinterface.html" location="qabstractipcinterface.h" bases="QObject" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Mode" fullname="QAbstractIpcInterface::Mode" href="qabstractipcinterface.html#Mode-enum" location="qabstractipcinterface.h">
                <value name="Client" value="0"></value>
                <value name="Server" value="1"></value>
                <value name="Invalid" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAbstractIpcInterface" fullname="QAbstractIpcInterface::QAbstractIpcInterface" href="qabstractipcinterface.html#QAbstractIpcInterface" location="qabstractipcinterface.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAbstractIpcInterface(const QString &amp; valueSpaceLocation, const QString &amp; interfaceName, const QString &amp; groupName, QObject * parent, QAbstractIpcInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="valueSpaceLocation" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="interfaceName" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="groupName" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QAbstractIpcInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAbstractIpcInterface" fullname="QAbstractIpcInterface::~QAbstractIpcInterface" href="qabstractipcinterface.html#dtor.QAbstractIpcInterface" location="qabstractipcinterface.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAbstractIpcInterface()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="groupName" fullname="QAbstractIpcInterface::groupName" href="qabstractipcinterface.html#groupName" location="qabstractipcinterface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="groupName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="interfaceName" fullname="QAbstractIpcInterface::interfaceName" href="qabstractipcinterface.html#interfaceName" location="qabstractipcinterface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="interfaceName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mode" fullname="QAbstractIpcInterface::mode" href="qabstractipcinterface.html#mode" location="qabstractipcinterface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAbstractIpcInterface::Mode" signature="mode() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="available" fullname="QAbstractIpcInterface::available" href="qabstractipcinterface.html#available" location="qabstractipcinterface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="available() const"></function>
            <enum access="protected" threadsafety="unspecified" status="commendable" name="SyncType" fullname="QAbstractIpcInterface::SyncType" href="qabstractipcinterface.html#SyncType-enum" location="qabstractipcinterface.h">
                <value name="Immediate" value="0"></value>
                <value name="Delayed" value="1"></value>
            </enum>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setPriority" fullname="QAbstractIpcInterface::setPriority" href="qabstractipcinterface.html#setPriority" location="qabstractipcinterface.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPriority(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="proxy" fullname="QAbstractIpcInterface::proxy" href="qabstractipcinterface.html#proxy" location="qabstractipcinterface.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="proxy(const QByteArray &amp; member)">
                <parameter left="const QByteArray &amp;" right="" name="member" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="proxyAll" fullname="QAbstractIpcInterface::proxyAll" href="qabstractipcinterface.html#proxyAll" location="qabstractipcinterface.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="proxyAll(const QMetaObject &amp; meta)">
                <parameter left="const QMetaObject &amp;" right="" name="meta" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="proxyAll" fullname="QAbstractIpcInterface::proxyAll" href="qabstractipcinterface.html#proxyAll-2" location="qabstractipcinterface.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="proxyAll(const QMetaObject &amp; meta, const QString &amp; subInterfaceName)">
                <parameter left="const QMetaObject &amp;" right="" name="meta" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="subInterfaceName" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="invoke" fullname="QAbstractIpcInterface::invoke" href="qabstractipcinterface.html#invoke" location="qabstractipcinterface.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QtopiaIpcSendEnvelope" signature="invoke(const QByteArray &amp; name)">
                <parameter left="const QByteArray &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="invoke" fullname="QAbstractIpcInterface::invoke" href="qabstractipcinterface.html#invoke-2" location="qabstractipcinterface.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="invoke(const QByteArray &amp; name, QVariant arg1)">
                <parameter left="const QByteArray &amp;" right="" name="name" default=""></parameter>
                <parameter left="QVariant" right="" name="arg1" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="invoke" fullname="QAbstractIpcInterface::invoke" href="qabstractipcinterface.html#invoke-3" location="qabstractipcinterface.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="void" signature="invoke(const QByteArray &amp; name, QVariant arg1, QVariant arg2)">
                <parameter left="const QByteArray &amp;" right="" name="name" default=""></parameter>
                <parameter left="QVariant" right="" name="arg1" default=""></parameter>
                <parameter left="QVariant" right="" name="arg2" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="invoke" fullname="QAbstractIpcInterface::invoke" href="qabstractipcinterface.html#invoke-4" location="qabstractipcinterface.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="4" type="void" signature="invoke(const QByteArray &amp; name, QVariant arg1, QVariant arg2, QVariant arg3)">
                <parameter left="const QByteArray &amp;" right="" name="name" default=""></parameter>
                <parameter left="QVariant" right="" name="arg1" default=""></parameter>
                <parameter left="QVariant" right="" name="arg2" default=""></parameter>
                <parameter left="QVariant" right="" name="arg3" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="invoke" fullname="QAbstractIpcInterface::invoke" href="qabstractipcinterface.html#invoke-5" location="qabstractipcinterface.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="5" type="void" signature="invoke(const QByteArray &amp; name, const QList&lt;QVariant&gt; &amp; args)">
                <parameter left="const QByteArray &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QList&lt;QVariant&gt; &amp;" right="" name="args" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setValue" fullname="QAbstractIpcInterface::setValue" href="qabstractipcinterface.html#setValue" location="qabstractipcinterface.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setValue(const QString &amp; name, const QVariant &amp; value, QAbstractIpcInterface::SyncType sync)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
                <parameter left="QAbstractIpcInterface::SyncType" right="" name="sync" default="Immediate"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="value" fullname="QAbstractIpcInterface::value" href="qabstractipcinterface.html#value" location="qabstractipcinterface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="value(const QString &amp; name, const QVariant &amp; def) const">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="def" default="QVariant()"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="removeValue" fullname="QAbstractIpcInterface::removeValue" href="qabstractipcinterface.html#removeValue" location="qabstractipcinterface.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeValue(const QString &amp; name, QAbstractIpcInterface::SyncType sync)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="QAbstractIpcInterface::SyncType" right="" name="sync" default="Immediate"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="valueNames" fullname="QAbstractIpcInterface::valueNames" href="qabstractipcinterface.html#valueNames" location="qabstractipcinterface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QString&gt;" signature="valueNames(const QString &amp; path) const">
                <parameter left="const QString &amp;" right="" name="path" default="QString()"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="groupInitialized" fullname="QAbstractIpcInterface::groupInitialized" href="qabstractipcinterface.html#groupInitialized" location="qabstractipcinterface.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="groupInitialized(QAbstractIpcInterfaceGroup * group)">
                <parameter left="QAbstractIpcInterfaceGroup *" right="" name="group" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disconnected" fullname="QAbstractIpcInterface::disconnected" href="qabstractipcinterface.html#disconnected" location="qabstractipcinterface.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="disconnected()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QObexClientSession" href="qobexclientsession.html" location="qobexclientsession.h" bases="QObject" module="">
            <contents name="executing-obex-client-requests" title="Executing OBEX client requests" level="1"></contents>
            <contents name="multiplexing-and-connection-ids" title="Multiplexing and Connection IDs" level="1"></contents>
            <contents name="handling-socket-disconnections" title="Handling socket disconnections" level="1"></contents>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QObexClientSession::Error" href="qobexclientsession.html#Error-enum" location="qobexclientsession.h">
                <value name="NoError" value="0"></value>
                <value name="ConnectionError" value="1"></value>
                <value name="RequestFailed" value="2"></value>
                <value name="InvalidRequest" value="3"></value>
                <value name="InvalidResponse" value="4"></value>
                <value name="Aborted" value="5"></value>
                <value name="AuthenticationFailed" value="6"></value>
                <value name="UnknownError" value="100"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QObexClientSession" fullname="QObexClientSession::QObexClientSession" href="qobexclientsession.html#QObexClientSession" location="qobexclientsession.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QObexClientSession(QIODevice * device, QObject * parent)">
                <parameter left="QIODevice *" right="" name="device" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QObexClientSession" fullname="QObexClientSession::~QObexClientSession" href="qobexclientsession.html#dtor.QObexClientSession" location="qobexclientsession.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QObexClientSession()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sessionDevice" fullname="QObexClientSession::sessionDevice" href="qobexclientsession.html#sessionDevice" location="qobexclientsession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QIODevice *" signature="sessionDevice() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connect" fullname="QObexClientSession::connect" href="qobexclientsession.html#connect" location="qobexclientsession.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="connect(const QObexHeader &amp; header)">
                <parameter left="const QObexHeader &amp;" right="" name="header" default="QObexHeader()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disconnect" fullname="QObexClientSession::disconnect" href="qobexclientsession.html#disconnect" location="qobexclientsession.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="disconnect(const QObexHeader &amp; header)">
                <parameter left="const QObexHeader &amp;" right="" name="header" default="QObexHeader()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="put" fullname="QObexClientSession::put" href="qobexclientsession.html#put" location="qobexclientsession.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="put(const QObexHeader &amp; header, QIODevice * dev)">
                <parameter left="const QObexHeader &amp;" right="" name="header" default=""></parameter>
                <parameter left="QIODevice *" right="" name="dev" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="put" fullname="QObexClientSession::put" href="qobexclientsession.html#put-2" location="qobexclientsession.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="int" signature="put(const QObexHeader &amp; header, const QByteArray &amp; data)">
                <parameter left="const QObexHeader &amp;" right="" name="header" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="putDelete" fullname="QObexClientSession::putDelete" href="qobexclientsession.html#putDelete" location="qobexclientsession.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="putDelete(const QObexHeader &amp; header)">
                <parameter left="const QObexHeader &amp;" right="" name="header" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="get" fullname="QObexClientSession::get" href="qobexclientsession.html#get" location="qobexclientsession.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="get(const QObexHeader &amp; header, QIODevice * dev)">
                <parameter left="const QObexHeader &amp;" right="" name="header" default=""></parameter>
                <parameter left="QIODevice *" right="" name="dev" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPath" fullname="QObexClientSession::setPath" href="qobexclientsession.html#setPath" location="qobexclientsession.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="setPath(const QObexHeader &amp; header, QFlags&lt;QObex::SetPathFlag&gt; flags)">
                <parameter left="const QObexHeader &amp;" right="" name="header" default=""></parameter>
                <parameter left="QFlags&lt;QObex::SetPathFlag&gt;" right="" name="flags" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentId" fullname="QObexClientSession::currentId" href="qobexclientsession.html#currentId" location="qobexclientsession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="currentId() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentRequest" fullname="QObexClientSession::currentRequest" href="qobexclientsession.html#currentRequest" location="qobexclientsession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QObex::Request" signature="currentRequest() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentDevice" fullname="QObexClientSession::currentDevice" href="qobexclientsession.html#currentDevice" location="qobexclientsession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QIODevice *" signature="currentDevice() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearPendingRequests" fullname="QObexClientSession::clearPendingRequests" href="qobexclientsession.html#clearPendingRequests" location="qobexclientsession.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearPendingRequests()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasPendingRequests" fullname="QObexClientSession::hasPendingRequests" href="qobexclientsession.html#hasPendingRequests" location="qobexclientsession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasPendingRequests() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="read" fullname="QObexClientSession::read" href="qobexclientsession.html#read" location="qobexclientsession.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="qint64" signature="read(char * data, qint64 maxlen)">
                <parameter left="char *" right="" name="data" default=""></parameter>
                <parameter left="qint64" right="" name="maxlen" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readAll" fullname="QObexClientSession::readAll" href="qobexclientsession.html#readAll" location="qobexclientsession.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QByteArray" signature="readAll()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bytesAvailable" fullname="QObexClientSession::bytesAvailable" href="qobexclientsession.html#bytesAvailable" location="qobexclientsession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="bytesAvailable() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lastResponseCode" fullname="QObexClientSession::lastResponseCode" href="qobexclientsession.html#lastResponseCode" location="qobexclientsession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QObex::ResponseCode" signature="lastResponseCode() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lastResponseHeader" fullname="QObexClientSession::lastResponseHeader" href="qobexclientsession.html#lastResponseHeader" location="qobexclientsession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QObexHeader" signature="lastResponseHeader() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectionId" fullname="QObexClientSession::connectionId" href="qobexclientsession.html#connectionId" location="qobexclientsession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint32" signature="connectionId() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasConnectionId" fullname="QObexClientSession::hasConnectionId" href="qobexclientsession.html#hasConnectionId" location="qobexclientsession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasConnectionId() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QObexClientSession::error" href="qobexclientsession.html#error" location="qobexclientsession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Error" signature="error() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QObexClientSession::errorString" href="qobexclientsession.html#errorString" location="qobexclientsession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="abort" fullname="QObexClientSession::abort" href="qobexclientsession.html#abort" location="qobexclientsession.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="abort()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestStarted" fullname="QObexClientSession::requestStarted" href="qobexclientsession.html#requestStarted" location="qobexclientsession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="requestStarted(int id)">
                <parameter left="int" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestFinished" fullname="QObexClientSession::requestFinished" href="qobexclientsession.html#requestFinished" location="qobexclientsession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="requestFinished(int id, bool error)">
                <parameter left="int" right="" name="id" default=""></parameter>
                <parameter left="bool" right="" name="error" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="responseHeaderReceived" fullname="QObexClientSession::responseHeaderReceived" href="qobexclientsession.html#responseHeaderReceived" location="qobexclientsession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="responseHeaderReceived(const QObexHeader &amp; header)">
                <parameter left="const QObexHeader &amp;" right="" name="header" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dataTransferProgress" fullname="QObexClientSession::dataTransferProgress" href="qobexclientsession.html#dataTransferProgress" location="qobexclientsession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="dataTransferProgress(qint64 done, qint64 total)">
                <parameter left="qint64" right="" name="done" default=""></parameter>
                <parameter left="qint64" right="" name="total" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readyRead" fullname="QObexClientSession::readyRead" href="qobexclientsession.html#readyRead" location="qobexclientsession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="readyRead()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="done" fullname="QObexClientSession::done" href="qobexclientsession.html#done" location="qobexclientsession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="done(bool error)">
                <parameter left="bool" right="" name="error" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="authenticationRequired" fullname="QObexClientSession::authenticationRequired" href="qobexclientsession.html#authenticationRequired" location="qobexclientsession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="authenticationRequired(QObexAuthenticationChallenge * challenge)">
                <parameter left="QObexAuthenticationChallenge *" right="" name="challenge" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="authenticationResponse" fullname="QObexClientSession::authenticationResponse" href="qobexclientsession.html#authenticationResponse" location="qobexclientsession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="authenticationResponse(const QObexAuthenticationResponse &amp; response, bool * accept)">
                <parameter left="const QObexAuthenticationResponse &amp;" right="" name="response" default=""></parameter>
                <parameter left="bool *" right="" name="accept" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="TaskManagerService" href="taskmanagerservice.html" location="taskmanagerservice.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="multitask" fullname="TaskManagerService::multitask" href="taskmanagerservice.html#multitask" location="taskmanagerservice.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="multitask()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="showRunningTasks" fullname="TaskManagerService::showRunningTasks" href="taskmanagerservice.html#showRunningTasks" location="taskmanagerservice.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="showRunningTasks()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QTelephonyConfiguration" href="qtelephonyconfiguration.html" location="qtelephonyconfiguration.h" bases="QCommInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QTelephonyConfiguration" fullname="QTelephonyConfiguration::QTelephonyConfiguration" href="qtelephonyconfiguration.html#QTelephonyConfiguration" location="qtelephonyconfiguration.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QTelephonyConfiguration(const QString &amp; service, QObject * parent, QCommInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QCommInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QTelephonyConfiguration" fullname="QTelephonyConfiguration::~QTelephonyConfiguration" href="qtelephonyconfiguration.html#dtor.QTelephonyConfiguration" location="qtelephonyconfiguration.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QTelephonyConfiguration()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="update" fullname="QTelephonyConfiguration::update" href="qtelephonyconfiguration.html#update" location="qtelephonyconfiguration.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="update(const QString &amp; name, const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="request" fullname="QTelephonyConfiguration::request" href="qtelephonyconfiguration.html#request" location="qtelephonyconfiguration.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="request(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="notification" fullname="QTelephonyConfiguration::notification" href="qtelephonyconfiguration.html#notification" location="qtelephonyconfiguration.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="notification(const QString &amp; name, const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothRemoteDevice" href="qbluetoothremotedevice.html" location="qbluetoothremotedevice.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothRemoteDevice" fullname="QBluetoothRemoteDevice::QBluetoothRemoteDevice" href="qbluetoothremotedevice.html#QBluetoothRemoteDevice" location="qbluetoothremotedevice.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothRemoteDevice(const QBluetoothAddress &amp; address)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="address" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothRemoteDevice" fullname="QBluetoothRemoteDevice::QBluetoothRemoteDevice" href="qbluetoothremotedevice.html#QBluetoothRemoteDevice-2" location="qbluetoothremotedevice.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QBluetoothRemoteDevice(const QBluetoothAddress &amp; address, const QString &amp; name, const QString &amp; version, const QString &amp; revision, const QString &amp; manufacturer, const QString &amp; company, int rssi, QBluetooth::DeviceMajor devMajor, quint8 devMinor, QFlags&lt;QBluetooth::ServiceClass&gt; serviceClasses)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="address" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="version" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="revision" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="manufacturer" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="company" default=""></parameter>
                <parameter left="int" right="" name="rssi" default=""></parameter>
                <parameter left="QBluetooth::DeviceMajor" right="" name="devMajor" default=""></parameter>
                <parameter left="quint8" right="" name="devMinor" default=""></parameter>
                <parameter left="QFlags&lt;QBluetooth::ServiceClass&gt;" right="" name="serviceClasses" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothRemoteDevice" fullname="QBluetoothRemoteDevice::QBluetoothRemoteDevice" href="qbluetoothremotedevice.html#QBluetoothRemoteDevice-3" location="qbluetoothremotedevice.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QBluetoothRemoteDevice(const QBluetoothRemoteDevice &amp; other)">
                <parameter left="const QBluetoothRemoteDevice &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothRemoteDevice" fullname="QBluetoothRemoteDevice::~QBluetoothRemoteDevice" href="qbluetoothremotedevice.html#dtor.QBluetoothRemoteDevice" location="qbluetoothremotedevice.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothRemoteDevice()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QBluetoothRemoteDevice::operator=" href="qbluetoothremotedevice.html#operator=" location="qbluetoothremotedevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QBluetoothRemoteDevice &amp;" signature="operator=(const QBluetoothRemoteDevice &amp; other)">
                <parameter left="const QBluetoothRemoteDevice &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QBluetoothRemoteDevice::operator==" href="qbluetoothremotedevice.html#operator==" location="qbluetoothremotedevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QBluetoothRemoteDevice &amp; other) const">
                <parameter left="const QBluetoothRemoteDevice &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QBluetoothRemoteDevice::operator!=" href="qbluetoothremotedevice.html#operator!=" location="qbluetoothremotedevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QBluetoothRemoteDevice &amp; other) const">
                <parameter left="const QBluetoothRemoteDevice &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QBluetoothRemoteDevice::name" href="qbluetoothremotedevice.html#name" location="qbluetoothremotedevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setName" fullname="QBluetoothRemoteDevice::setName" href="qbluetoothremotedevice.html#setName" location="qbluetoothremotedevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setName(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="version" fullname="QBluetoothRemoteDevice::version" href="qbluetoothremotedevice.html#version" location="qbluetoothremotedevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="version() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVersion" fullname="QBluetoothRemoteDevice::setVersion" href="qbluetoothremotedevice.html#setVersion" location="qbluetoothremotedevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setVersion(const QString &amp; version)">
                <parameter left="const QString &amp;" right="" name="version" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="revision" fullname="QBluetoothRemoteDevice::revision" href="qbluetoothremotedevice.html#revision" location="qbluetoothremotedevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="revision() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRevision" fullname="QBluetoothRemoteDevice::setRevision" href="qbluetoothremotedevice.html#setRevision" location="qbluetoothremotedevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRevision(const QString &amp; revision)">
                <parameter left="const QString &amp;" right="" name="revision" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="manufacturer" fullname="QBluetoothRemoteDevice::manufacturer" href="qbluetoothremotedevice.html#manufacturer" location="qbluetoothremotedevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="manufacturer() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManufacturer" fullname="QBluetoothRemoteDevice::setManufacturer" href="qbluetoothremotedevice.html#setManufacturer" location="qbluetoothremotedevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setManufacturer(const QString &amp; manufacturer)">
                <parameter left="const QString &amp;" right="" name="manufacturer" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="company" fullname="QBluetoothRemoteDevice::company" href="qbluetoothremotedevice.html#company" location="qbluetoothremotedevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="company() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCompany" fullname="QBluetoothRemoteDevice::setCompany" href="qbluetoothremotedevice.html#setCompany" location="qbluetoothremotedevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCompany(const QString &amp; company)">
                <parameter left="const QString &amp;" right="" name="company" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rssi" fullname="QBluetoothRemoteDevice::rssi" href="qbluetoothremotedevice.html#rssi" location="qbluetoothremotedevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="rssi() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRssi" fullname="QBluetoothRemoteDevice::setRssi" href="qbluetoothremotedevice.html#setRssi" location="qbluetoothremotedevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRssi(int rssi)">
                <parameter left="int" right="" name="rssi" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceMajor" fullname="QBluetoothRemoteDevice::deviceMajor" href="qbluetoothremotedevice.html#deviceMajor" location="qbluetoothremotedevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetooth::DeviceMajor" signature="deviceMajor() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceMajorAsString" fullname="QBluetoothRemoteDevice::deviceMajorAsString" href="qbluetoothremotedevice.html#deviceMajorAsString" location="qbluetoothremotedevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="deviceMajorAsString() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDeviceMajor" fullname="QBluetoothRemoteDevice::setDeviceMajor" href="qbluetoothremotedevice.html#setDeviceMajor" location="qbluetoothremotedevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDeviceMajor(QBluetooth::DeviceMajor deviceMajor)">
                <parameter left="QBluetooth::DeviceMajor" right="" name="deviceMajor" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceMinor" fullname="QBluetoothRemoteDevice::deviceMinor" href="qbluetoothremotedevice.html#deviceMinor" location="qbluetoothremotedevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint8" signature="deviceMinor() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceMinorAsString" fullname="QBluetoothRemoteDevice::deviceMinorAsString" href="qbluetoothremotedevice.html#deviceMinorAsString" location="qbluetoothremotedevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="deviceMinorAsString() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDeviceMinor" fullname="QBluetoothRemoteDevice::setDeviceMinor" href="qbluetoothremotedevice.html#setDeviceMinor" location="qbluetoothremotedevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDeviceMinor(quint8 deviceMinor)">
                <parameter left="quint8" right="" name="deviceMinor" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serviceClasses" fullname="QBluetoothRemoteDevice::serviceClasses" href="qbluetoothremotedevice.html#serviceClasses" location="qbluetoothremotedevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetooth::ServiceClasses" signature="serviceClasses() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serviceClassesAsString" fullname="QBluetoothRemoteDevice::serviceClassesAsString" href="qbluetoothremotedevice.html#serviceClassesAsString" location="qbluetoothremotedevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="serviceClassesAsString() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setServiceClasses" fullname="QBluetoothRemoteDevice::setServiceClasses" href="qbluetoothremotedevice.html#setServiceClasses" location="qbluetoothremotedevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setServiceClasses(QFlags&lt;QBluetooth::ServiceClass&gt; serviceClasses)">
                <parameter left="QFlags&lt;QBluetooth::ServiceClass&gt;" right="" name="serviceClasses" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="address" fullname="QBluetoothRemoteDevice::address" href="qbluetoothremotedevice.html#address" location="qbluetoothremotedevice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothAddress" signature="address() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="PhoneLauncher" href="phonelauncher.html" location="phonelauncher.h" bases="QAbstractServerInterface" module=""></class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtopiaInputEvents" href="qtopiainputevents.html" location="qtopiainputevents.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="sendKeyEvent" fullname="QtopiaInputEvents::sendKeyEvent" href="qtopiainputevents.html#sendKeyEvent" location="qtopiainputevents.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="sendKeyEvent(int unicode, int keycode, Qt::KeyboardModifiers modifiers, bool isPress, bool autoRepeat)">
                <parameter left="int" right="" name="unicode" default=""></parameter>
                <parameter left="int" right="" name="keycode" default=""></parameter>
                <parameter left="Qt::KeyboardModifiers" right="" name="modifiers" default=""></parameter>
                <parameter left="bool" right="" name="isPress" default=""></parameter>
                <parameter left="bool" right="" name="autoRepeat" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="processKeyEvent" fullname="QtopiaInputEvents::processKeyEvent" href="qtopiainputevents.html#processKeyEvent" location="qtopiainputevents.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="processKeyEvent(int unicode, int keycode, Qt::KeyboardModifiers modifiers, bool isPress, bool autoRepeat)">
                <parameter left="int" right="" name="unicode" default=""></parameter>
                <parameter left="int" right="" name="keycode" default=""></parameter>
                <parameter left="Qt::KeyboardModifiers" right="" name="modifiers" default=""></parameter>
                <parameter left="bool" right="" name="isPress" default=""></parameter>
                <parameter left="bool" right="" name="autoRepeat" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addKeyboardFilter" fullname="QtopiaInputEvents::addKeyboardFilter" href="qtopiainputevents.html#addKeyboardFilter" location="qtopiainputevents.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="addKeyboardFilter(QtopiaKeyboardFilter * filter)">
                <parameter left="QtopiaKeyboardFilter *" right="" name="filter" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeKeyboardFilter" fullname="QtopiaInputEvents::removeKeyboardFilter" href="qtopiainputevents.html#removeKeyboardFilter" location="qtopiainputevents.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="removeKeyboardFilter()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="suspendMouse" fullname="QtopiaInputEvents::suspendMouse" href="qtopiainputevents.html#suspendMouse" location="qtopiainputevents.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="suspendMouse()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resumeMouse" fullname="QtopiaInputEvents::resumeMouse" href="qtopiainputevents.html#resumeMouse" location="qtopiainputevents.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="resumeMouse()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="openMouse" fullname="QtopiaInputEvents::openMouse" href="qtopiainputevents.html#openMouse" location="qtopiainputevents.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="openMouse()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="openKeyboard" fullname="QtopiaInputEvents::openKeyboard" href="qtopiainputevents.html#openKeyboard" location="qtopiainputevents.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="openKeyboard()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSimInfo" href="qsiminfo.html" location="qsiminfo.h" bases="QCommInterface" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="identity" fullname="QSimInfo::identity" href="qsiminfo.html#identity-prop" location="qsiminfo.h" type="QString">
                <getter name="identity"></getter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="insertedTime" fullname="QSimInfo::insertedTime" href="qsiminfo.html#insertedTime-prop" location="qsiminfo.h" type="QDateTime">
                <getter name="insertedTime"></getter>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSimInfo" fullname="QSimInfo::QSimInfo" href="qsiminfo.html#QSimInfo" location="qsiminfo.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSimInfo(const QString &amp; service, QObject * parent, QCommInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="service" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QCommInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSimInfo" fullname="QSimInfo::~QSimInfo" href="qsiminfo.html#dtor.QSimInfo" location="qsiminfo.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSimInfo()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="identity" fullname="QSimInfo::identity" href="qsiminfo.html#identity-prop" location="qsiminfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="identity" type="QString" signature="identity() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertedTime" fullname="QSimInfo::insertedTime" href="qsiminfo.html#insertedTime-prop" location="qsiminfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="insertedTime" type="QDateTime" signature="insertedTime() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="inserted" fullname="QSimInfo::inserted" href="qsiminfo.html#inserted" location="qsiminfo.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="inserted()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removed" fullname="QSimInfo::removed" href="qsiminfo.html#removed" location="qsiminfo.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="removed()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="notInserted" fullname="QSimInfo::notInserted" href="qsiminfo.html#notInserted" location="qsiminfo.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="notInserted()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setIdentity" fullname="QSimInfo::setIdentity" href="qsiminfo.html#setIdentity" location="qsiminfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIdentity(const QString &amp; identity)">
                <parameter left="const QString &amp;" right="" name="identity" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="MediaServicesTask" href="mediaservicestask.html" location="mediaservicestask.h" bases="QObject" module=""></class>
        <class access="public" threadsafety="unspecified" status="main" name="QServiceLoadingReader" href="qserviceloadingreader.html" location="qserviceloadingreader.h" bases="QWbXmlReader" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QServiceLoadingReader" fullname="QServiceLoadingReader::QServiceLoadingReader" href="qserviceloadingreader.html#QServiceLoadingReader" location="qserviceloadingreader.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QServiceLoadingReader()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QServiceLoadingReader" fullname="QServiceLoadingReader::~QServiceLoadingReader" href="qserviceloadingreader.html#dtor.QServiceLoadingReader" location="qserviceloadingreader.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QServiceLoadingReader()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSerialIODeviceMultiplexerPluginInterface" href="qserialiodevicemultiplexerplugininterface.html" location="qserialiodevicemultiplexerplugin.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="forceGsm0710Stop" fullname="QSerialIODeviceMultiplexerPluginInterface::forceGsm0710Stop" href="qserialiodevicemultiplexerplugininterface.html#forceGsm0710Stop" location="qserialiodevicemultiplexerplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="forceGsm0710Stop()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detect" fullname="QSerialIODeviceMultiplexerPluginInterface::detect" href="qserialiodevicemultiplexerplugininterface.html#detect" location="qserialiodevicemultiplexerplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="detect(QSerialIODevice * device)">
                <parameter left="QSerialIODevice *" right="" name="device" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="create" fullname="QSerialIODeviceMultiplexerPluginInterface::create" href="qserialiodevicemultiplexerplugininterface.html#create" location="qserialiodevicemultiplexerplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QSerialIODeviceMultiplexer *" signature="create(QSerialIODevice * device)">
                <parameter left="QSerialIODevice *" right="" name="device" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSerialIODeviceMultiplexerPlugin" href="qserialiodevicemultiplexerplugin.html" location="qserialiodevicemultiplexerplugin.h" bases="QObject,QSerialIODeviceMultiplexerPluginInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSerialIODeviceMultiplexerPlugin" fullname="QSerialIODeviceMultiplexerPlugin::QSerialIODeviceMultiplexerPlugin" href="qserialiodevicemultiplexerplugin.html#QSerialIODeviceMultiplexerPlugin" location="qserialiodevicemultiplexerplugin.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSerialIODeviceMultiplexerPlugin(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSerialIODeviceMultiplexerPlugin" fullname="QSerialIODeviceMultiplexerPlugin::~QSerialIODeviceMultiplexerPlugin" href="qserialiodevicemultiplexerplugin.html#dtor.QSerialIODeviceMultiplexerPlugin" location="qserialiodevicemultiplexerplugin.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSerialIODeviceMultiplexerPlugin()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="keys" fullname="QSerialIODeviceMultiplexerPlugin::keys" href="qserialiodevicemultiplexerplugin.html#keys" location="qserialiodevicemultiplexerplugin.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="keys() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="forceGsm0710Stop" fullname="QSerialIODeviceMultiplexerPlugin::forceGsm0710Stop" href="qserialiodevicemultiplexerplugin.html#forceGsm0710Stop" location="qserialiodevicemultiplexerplugin.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="forceGsm0710Stop()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detect" fullname="QSerialIODeviceMultiplexerPlugin::detect" href="qserialiodevicemultiplexerplugin.html#detect" location="qserialiodevicemultiplexerplugin.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="detect(QSerialIODevice * device)">
                <parameter left="QSerialIODevice *" right="" name="device" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="create" fullname="QSerialIODeviceMultiplexerPlugin::create" href="qserialiodevicemultiplexerplugin.html#create" location="qserialiodevicemultiplexerplugin.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QSerialIODeviceMultiplexer *" signature="create(QSerialIODevice * device)">
                <parameter left="QSerialIODevice *" right="" name="device" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QDSServices" href="qdsservices.html" location="qdsservices.h" bases="QList" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QDSServices" fullname="QDSServices::QDSServices" href="qdsservices.html#QDSServices" location="qdsservices.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDSServices(const QString &amp; requestDataType, const QString &amp; responseDataType, const QStringList &amp; attributes, const QString &amp; service)">
                <parameter left="const QString &amp;" right="" name="requestDataType" default="QString( &quot;*&quot; )"></parameter>
                <parameter left="const QString &amp;" right="" name="responseDataType" default="QString( &quot;*&quot; )"></parameter>
                <parameter left="const QStringList &amp;" right="" name="attributes" default="QStringList()"></parameter>
                <parameter left="const QString &amp;" right="" name="service" default="QString( &quot;*&quot; )"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="findFirst" fullname="QDSServices::findFirst" href="qdsservices.html#findFirst" location="qdsservices.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QDSServiceInfo" signature="findFirst(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSimMenuItem" href="qsimmenuitem.html" location="qsimcommand.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSimMenuItem" fullname="QSimMenuItem::QSimMenuItem" href="qsimmenuitem.html#QSimMenuItem" location="qsimcommand.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSimMenuItem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSimMenuItem" fullname="QSimMenuItem::QSimMenuItem" href="qsimmenuitem.html#QSimMenuItem-2" location="qsimcommand.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QSimMenuItem(const QSimMenuItem &amp; value)">
                <parameter left="const QSimMenuItem &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSimMenuItem" fullname="QSimMenuItem::~QSimMenuItem" href="qsimmenuitem.html#dtor.QSimMenuItem" location="qsimcommand.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSimMenuItem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="identifier" fullname="QSimMenuItem::identifier" href="qsimmenuitem.html#identifier" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="identifier() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIdentifier" fullname="QSimMenuItem::setIdentifier" href="qsimmenuitem.html#setIdentifier" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIdentifier(uint value)">
                <parameter left="uint" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="label" fullname="QSimMenuItem::label" href="qsimmenuitem.html#label" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="label() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLabel" fullname="QSimMenuItem::setLabel" href="qsimmenuitem.html#setLabel" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLabel(const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasHelp" fullname="QSimMenuItem::hasHelp" href="qsimmenuitem.html#hasHelp" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasHelp() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHasHelp" fullname="QSimMenuItem::setHasHelp" href="qsimmenuitem.html#setHasHelp" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHasHelp(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="iconId" fullname="QSimMenuItem::iconId" href="qsimmenuitem.html#iconId" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="iconId() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIconId" fullname="QSimMenuItem::setIconId" href="qsimmenuitem.html#setIconId" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIconId(uint value)">
                <parameter left="uint" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="iconSelfExplanatory" fullname="QSimMenuItem::iconSelfExplanatory" href="qsimmenuitem.html#iconSelfExplanatory" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="iconSelfExplanatory() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIconSelfExplanatory" fullname="QSimMenuItem::setIconSelfExplanatory" href="qsimmenuitem.html#setIconSelfExplanatory" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIconSelfExplanatory(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="nextAction" fullname="QSimMenuItem::nextAction" href="qsimmenuitem.html#nextAction" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="nextAction() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNextAction" fullname="QSimMenuItem::setNextAction" href="qsimmenuitem.html#setNextAction" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setNextAction(uint value)">
                <parameter left="uint" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QSimMenuItem::operator=" href="qsimmenuitem.html#operator=" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QSimMenuItem &amp;" signature="operator=(const QSimMenuItem &amp; value)">
                <parameter left="const QSimMenuItem &amp;" right="" name="value" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSimCommand" href="qsimcommand.html" location="qsimcommand.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSimCommand" fullname="QSimCommand::QSimCommand" href="qsimcommand.html#QSimCommand" location="qsimcommand.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSimCommand()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSimCommand" fullname="QSimCommand::QSimCommand" href="qsimcommand.html#QSimCommand-2" location="qsimcommand.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QSimCommand(const QSimCommand &amp; value)">
                <parameter left="const QSimCommand &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSimCommand" fullname="QSimCommand::~QSimCommand" href="qsimcommand.html#dtor.QSimCommand" location="qsimcommand.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSimCommand()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="QSimCommand::Type" href="qsimcommand.html#Type-enum" location="qsimcommand.h">
                <value name="NoCommand" value="-1"></value>
                <value name="Timeout" value="-2"></value>
                <value name="Refresh" value="0x01"></value>
                <value name="MoreTime" value="0x02"></value>
                <value name="PollInterval" value="0x03"></value>
                <value name="PollingOff" value="0x04"></value>
                <value name="SetupEventList" value="0x05"></value>
                <value name="SetupCall" value="0x10"></value>
                <value name="SendSS" value="0x11"></value>
                <value name="SendUSSD" value="0x12"></value>
                <value name="SendSMS" value="0x13"></value>
                <value name="SendDTMF" value="0x14"></value>
                <value name="LaunchBrowser" value="0x15"></value>
                <value name="PlayTone" value="0x20"></value>
                <value name="DisplayText" value="0x21"></value>
                <value name="GetInkey" value="0x22"></value>
                <value name="GetInput" value="0x23"></value>
                <value name="SelectItem" value="0x24"></value>
                <value name="SetupMenu" value="0x25"></value>
                <value name="ProvideLocalInformation" value="0x26"></value>
                <value name="TimerManagement" value="0x27"></value>
                <value name="SetupIdleModeText" value="0x28"></value>
                <value name="PerformCardAPDU" value="0x30"></value>
                <value name="PowerOnCard" value="0x31"></value>
                <value name="PowerOffCard" value="0x32"></value>
                <value name="GetReaderStatus" value="0x33"></value>
                <value name="RunATCommand" value="0x34"></value>
                <value name="LanguageNotification" value="0x35"></value>
                <value name="OpenChannel" value="0x40"></value>
                <value name="CloseChannel" value="0x41"></value>
                <value name="ReceiveData" value="0x42"></value>
                <value name="SendData" value="0x43"></value>
                <value name="GetChannelStatus" value="0x44"></value>
                <value name="EndSession" value="0x81"></value>
                <value name="SetupMainMenu" value="SetupMenu"></value>
                <value name="SetupSubMenu" value="SelectItem"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Disposition" fullname="QSimCommand::Disposition" href="qsimcommand.html#Disposition-enum" location="qsimcommand.h">
                <value name="IfNoOtherCalls" value="0"></value>
                <value name="PutOnHold" value="1"></value>
                <value name="Disconnect" value="2"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="CallClass" fullname="QSimCommand::CallClass" href="qsimcommand.html#CallClass-enum" location="qsimcommand.h">
                <value name="Voice" value="0"></value>
                <value name="Data" value="1"></value>
                <value name="Fax" value="2"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Tone" fullname="QSimCommand::Tone" href="qsimcommand.html#Tone-enum" location="qsimcommand.h">
                <value name="ToneNone" value="-1"></value>
                <value name="ToneDial" value="0x01"></value>
                <value name="ToneBusy" value="0x02"></value>
                <value name="ToneCongestion" value="0x03"></value>
                <value name="ToneRadioAck" value="0x04"></value>
                <value name="ToneDropped" value="0x05"></value>
                <value name="ToneError" value="0x06"></value>
                <value name="ToneCallWaiting" value="0x07"></value>
                <value name="ToneRinging" value="0x08"></value>
                <value name="ToneGeneralBeep" value="0x10"></value>
                <value name="TonePositiveBeep" value="0x11"></value>
                <value name="ToneNegativeBeep" value="0x12"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="RefreshType" fullname="QSimCommand::RefreshType" href="qsimcommand.html#RefreshType-enum" location="qsimcommand.h">
                <value name="InitAndFullFileChange" value="0"></value>
                <value name="FileChange" value="1"></value>
                <value name="InitAndFileChange" value="2"></value>
                <value name="Initialization" value="3"></value>
                <value name="Reset" value="4"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Event" fullname="QSimCommand::Event" href="qsimcommand.html#Event-enum" location="qsimcommand.h">
                <value name="NoEvent" value="0"></value>
                <value name="IdleScreen" value="1"></value>
                <value name="UserActivity" value="2"></value>
                <value name="Both" value="3"></value>
                <value name="Cancel" value="4"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="BrowserLaunchMode" fullname="QSimCommand::BrowserLaunchMode" href="qsimcommand.html#BrowserLaunchMode-enum" location="qsimcommand.h">
                <value name="IfNotAlreadyLaunched" value="0"></value>
                <value name="UseExisting" value="2"></value>
                <value name="CloseExistingAndLaunch" value="3"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="MenuPresentation" fullname="QSimCommand::MenuPresentation" href="qsimcommand.html#MenuPresentation-enum" location="qsimcommand.h">
                <value name="AnyPresentation" value="0"></value>
                <value name="DataValuesPresentation" value="1"></value>
                <value name="NavigationOptionsPresentation" value="2"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Device" fullname="QSimCommand::Device" href="qsimcommand.html#Device-enum" location="qsimcommand.h">
                <value name="Keypad" value="0x01"></value>
                <value name="Display" value="0x02"></value>
                <value name="Earpiece" value="0x03"></value>
                <value name="CardReader0" value="0x10"></value>
                <value name="CardReader1" value="0x11"></value>
                <value name="CardReader2" value="0x12"></value>
                <value name="CardReader3" value="0x13"></value>
                <value name="CardReader4" value="0x14"></value>
                <value name="CardReader5" value="0x15"></value>
                <value name="CardReader6" value="0x16"></value>
                <value name="CardReader7" value="0x17"></value>
                <value name="Channel1" value="0x21"></value>
                <value name="Channel2" value="0x22"></value>
                <value name="Channel3" value="0x23"></value>
                <value name="Channel4" value="0x24"></value>
                <value name="Channel5" value="0x25"></value>
                <value name="Channel6" value="0x26"></value>
                <value name="Channel7" value="0x27"></value>
                <value name="SIM" value="0x81"></value>
                <value name="ME" value="0x82"></value>
                <value name="Network" value="0x83"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="commandNumber" fullname="QSimCommand::commandNumber" href="qsimcommand.html#commandNumber" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="commandNumber() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCommandNumber" fullname="QSimCommand::setCommandNumber" href="qsimcommand.html#setCommandNumber" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCommandNumber(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QSimCommand::type" href="qsimcommand.html#type" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Type" signature="type() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setType" fullname="QSimCommand::setType" href="qsimcommand.html#setType" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setType(QSimCommand::Type value)">
                <parameter left="QSimCommand::Type" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sourceDevice" fullname="QSimCommand::sourceDevice" href="qsimcommand.html#sourceDevice" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSimCommand::Device" signature="sourceDevice() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSourceDevice" fullname="QSimCommand::setSourceDevice" href="qsimcommand.html#setSourceDevice" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSourceDevice(QSimCommand::Device value)">
                <parameter left="QSimCommand::Device" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="destinationDevice" fullname="QSimCommand::destinationDevice" href="qsimcommand.html#destinationDevice" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSimCommand::Device" signature="destinationDevice() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDestinationDevice" fullname="QSimCommand::setDestinationDevice" href="qsimcommand.html#setDestinationDevice" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDestinationDevice(QSimCommand::Device value)">
                <parameter left="QSimCommand::Device" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasHelp" fullname="QSimCommand::hasHelp" href="qsimcommand.html#hasHelp" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasHelp() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHasHelp" fullname="QSimCommand::setHasHelp" href="qsimcommand.html#setHasHelp" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHasHelp(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="text" fullname="QSimCommand::text" href="qsimcommand.html#text" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="text() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setText" fullname="QSimCommand::setText" href="qsimcommand.html#setText" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setText(const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="suppressUserFeedback" fullname="QSimCommand::suppressUserFeedback" href="qsimcommand.html#suppressUserFeedback" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="suppressUserFeedback() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSuppressUserFeedback" fullname="QSimCommand::setSuppressUserFeedback" href="qsimcommand.html#setSuppressUserFeedback" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSuppressUserFeedback(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="otherText" fullname="QSimCommand::otherText" href="qsimcommand.html#otherText" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="otherText() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOtherText" fullname="QSimCommand::setOtherText" href="qsimcommand.html#setOtherText" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setOtherText(const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultText" fullname="QSimCommand::defaultText" href="qsimcommand.html#defaultText" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="defaultText() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultText" fullname="QSimCommand::setDefaultText" href="qsimcommand.html#setDefaultText" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefaultText(const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="highPriority" fullname="QSimCommand::highPriority" href="qsimcommand.html#highPriority" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="highPriority() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHighPriority" fullname="QSimCommand::setHighPriority" href="qsimcommand.html#setHighPriority" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHighPriority(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearAfterDelay" fullname="QSimCommand::clearAfterDelay" href="qsimcommand.html#clearAfterDelay" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="clearAfterDelay() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setClearAfterDelay" fullname="QSimCommand::setClearAfterDelay" href="qsimcommand.html#setClearAfterDelay" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setClearAfterDelay(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="immediateResponse" fullname="QSimCommand::immediateResponse" href="qsimcommand.html#immediateResponse" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="immediateResponse() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setImmediateResponse" fullname="QSimCommand::setImmediateResponse" href="qsimcommand.html#setImmediateResponse" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setImmediateResponse(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="ucs2Input" fullname="QSimCommand::ucs2Input" href="qsimcommand.html#ucs2Input" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="ucs2Input() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUcs2Input" fullname="QSimCommand::setUcs2Input" href="qsimcommand.html#setUcs2Input" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setUcs2Input(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="packedInput" fullname="QSimCommand::packedInput" href="qsimcommand.html#packedInput" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="packedInput() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPackedInput" fullname="QSimCommand::setPackedInput" href="qsimcommand.html#setPackedInput" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPackedInput(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="wantDigits" fullname="QSimCommand::wantDigits" href="qsimcommand.html#wantDigits" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="wantDigits() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setWantDigits" fullname="QSimCommand::setWantDigits" href="qsimcommand.html#setWantDigits" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setWantDigits(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="wantYesNo" fullname="QSimCommand::wantYesNo" href="qsimcommand.html#wantYesNo" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="wantYesNo() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setWantYesNo" fullname="QSimCommand::setWantYesNo" href="qsimcommand.html#setWantYesNo" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setWantYesNo(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="minimumLength" fullname="QSimCommand::minimumLength" href="qsimcommand.html#minimumLength" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="minimumLength() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMinimumLength" fullname="QSimCommand::setMinimumLength" href="qsimcommand.html#setMinimumLength" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMinimumLength(uint value)">
                <parameter left="uint" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumLength" fullname="QSimCommand::maximumLength" href="qsimcommand.html#maximumLength" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="maximumLength() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMaximumLength" fullname="QSimCommand::setMaximumLength" href="qsimcommand.html#setMaximumLength" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMaximumLength(uint value)">
                <parameter left="uint" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="echo" fullname="QSimCommand::echo" href="qsimcommand.html#echo" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="echo() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEcho" fullname="QSimCommand::setEcho" href="qsimcommand.html#setEcho" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setEcho(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disposition" fullname="QSimCommand::disposition" href="qsimcommand.html#disposition" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSimCommand::Disposition" signature="disposition() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDisposition" fullname="QSimCommand::setDisposition" href="qsimcommand.html#setDisposition" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDisposition(QSimCommand::Disposition value)">
                <parameter left="QSimCommand::Disposition" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="withRedial" fullname="QSimCommand::withRedial" href="qsimcommand.html#withRedial" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="withRedial() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setWithRedial" fullname="QSimCommand::setWithRedial" href="qsimcommand.html#setWithRedial" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setWithRedial(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="number" fullname="QSimCommand::number" href="qsimcommand.html#number" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="number() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNumber" fullname="QSimCommand::setNumber" href="qsimcommand.html#setNumber" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setNumber(const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="subAddress" fullname="QSimCommand::subAddress" href="qsimcommand.html#subAddress" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="subAddress() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSubAddress" fullname="QSimCommand::setSubAddress" href="qsimcommand.html#setSubAddress" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSubAddress(const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callClass" fullname="QSimCommand::callClass" href="qsimcommand.html#callClass" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSimCommand::CallClass" signature="callClass() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCallClass" fullname="QSimCommand::setCallClass" href="qsimcommand.html#setCallClass" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCallClass(QSimCommand::CallClass value)">
                <parameter left="QSimCommand::CallClass" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="tone" fullname="QSimCommand::tone" href="qsimcommand.html#tone" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSimCommand::Tone" signature="tone() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTone" fullname="QSimCommand::setTone" href="qsimcommand.html#setTone" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTone(QSimCommand::Tone value)">
                <parameter left="QSimCommand::Tone" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toneTime" fullname="QSimCommand::toneTime" href="qsimcommand.html#toneTime" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="toneTime() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setToneTime" fullname="QSimCommand::setToneTime" href="qsimcommand.html#setToneTime" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setToneTime(uint value)">
                <parameter left="uint" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QSimCommand::duration" href="qsimcommand.html#duration" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="duration() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDuration" fullname="QSimCommand::setDuration" href="qsimcommand.html#setDuration" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDuration(uint value)">
                <parameter left="uint" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="softKeysPreferred" fullname="QSimCommand::softKeysPreferred" href="qsimcommand.html#softKeysPreferred" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="softKeysPreferred() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSoftKeysPreferred" fullname="QSimCommand::setSoftKeysPreferred" href="qsimcommand.html#setSoftKeysPreferred" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSoftKeysPreferred(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="menuPresentation" fullname="QSimCommand::menuPresentation" href="qsimcommand.html#menuPresentation" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSimCommand::MenuPresentation" signature="menuPresentation() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMenuPresentation" fullname="QSimCommand::setMenuPresentation" href="qsimcommand.html#setMenuPresentation" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMenuPresentation(QSimCommand::MenuPresentation value)">
                <parameter left="QSimCommand::MenuPresentation" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="title" fullname="QSimCommand::title" href="qsimcommand.html#title" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="title() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTitle" fullname="QSimCommand::setTitle" href="qsimcommand.html#setTitle" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTitle(const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultItem" fullname="QSimCommand::defaultItem" href="qsimcommand.html#defaultItem" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="defaultItem() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultItem" fullname="QSimCommand::setDefaultItem" href="qsimcommand.html#setDefaultItem" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefaultItem(uint value)">
                <parameter left="uint" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="menuItems" fullname="QSimCommand::menuItems" href="qsimcommand.html#menuItems" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QSimMenuItem&gt;" signature="menuItems() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMenuItems" fullname="QSimCommand::setMenuItems" href="qsimcommand.html#setMenuItems" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMenuItems(const QList&lt;QSimMenuItem&gt; &amp; value)">
                <parameter left="const QList&lt;QSimMenuItem&gt; &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="refreshType" fullname="QSimCommand::refreshType" href="qsimcommand.html#refreshType" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSimCommand::RefreshType" signature="refreshType() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRefreshType" fullname="QSimCommand::setRefreshType" href="qsimcommand.html#setRefreshType" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRefreshType(QSimCommand::RefreshType value)">
                <parameter left="QSimCommand::RefreshType" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="events" fullname="QSimCommand::events" href="qsimcommand.html#events" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSimCommand::Event" signature="events() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEvents" fullname="QSimCommand::setEvents" href="qsimcommand.html#setEvents" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setEvents(QSimCommand::Event value)">
                <parameter left="QSimCommand::Event" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="browserLaunchMode" fullname="QSimCommand::browserLaunchMode" href="qsimcommand.html#browserLaunchMode" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSimCommand::BrowserLaunchMode" signature="browserLaunchMode() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBrowserLaunchMode" fullname="QSimCommand::setBrowserLaunchMode" href="qsimcommand.html#setBrowserLaunchMode" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBrowserLaunchMode(QSimCommand::BrowserLaunchMode value)">
                <parameter left="QSimCommand::BrowserLaunchMode" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="url" fullname="QSimCommand::url" href="qsimcommand.html#url" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="url() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUrl" fullname="QSimCommand::setUrl" href="qsimcommand.html#setUrl" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setUrl(const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="iconId" fullname="QSimCommand::iconId" href="qsimcommand.html#iconId" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="iconId() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIconId" fullname="QSimCommand::setIconId" href="qsimcommand.html#setIconId" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIconId(uint value)">
                <parameter left="uint" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="iconSelfExplanatory" fullname="QSimCommand::iconSelfExplanatory" href="qsimcommand.html#iconSelfExplanatory" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="iconSelfExplanatory() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIconSelfExplanatory" fullname="QSimCommand::setIconSelfExplanatory" href="qsimcommand.html#setIconSelfExplanatory" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIconSelfExplanatory(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="otherIconId" fullname="QSimCommand::otherIconId" href="qsimcommand.html#otherIconId" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="otherIconId() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOtherIconId" fullname="QSimCommand::setOtherIconId" href="qsimcommand.html#setOtherIconId" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setOtherIconId(uint value)">
                <parameter left="uint" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="otherIconSelfExplanatory" fullname="QSimCommand::otherIconSelfExplanatory" href="qsimcommand.html#otherIconSelfExplanatory" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="otherIconSelfExplanatory() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOtherIconSelfExplanatory" fullname="QSimCommand::setOtherIconSelfExplanatory" href="qsimcommand.html#setOtherIconSelfExplanatory" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setOtherIconSelfExplanatory(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="smsPacking" fullname="QSimCommand::smsPacking" href="qsimcommand.html#smsPacking" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="smsPacking() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSmsPacking" fullname="QSimCommand::setSmsPacking" href="qsimcommand.html#setSmsPacking" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSmsPacking(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="qualifier" fullname="QSimCommand::qualifier" href="qsimcommand.html#qualifier" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="qualifier() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setQualifier" fullname="QSimCommand::setQualifier" href="qsimcommand.html#setQualifier" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setQualifier(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="extensionData" fullname="QSimCommand::extensionData" href="qsimcommand.html#extensionData" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="extensionData() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExtensionData" fullname="QSimCommand::setExtensionData" href="qsimcommand.html#setExtensionData" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setExtensionData(QByteArray value)">
                <parameter left="QByteArray" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="extensionField" fullname="QSimCommand::extensionField" href="qsimcommand.html#extensionField" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="extensionField(int tag) const">
                <parameter left="int" right="" name="tag" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addExtensionField" fullname="QSimCommand::addExtensionField" href="qsimcommand.html#addExtensionField" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addExtensionField(int tag, const QByteArray &amp; value)">
                <parameter left="int" right="" name="tag" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="value" default=""></parameter>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ToPduOptions" fullname="QSimCommand::ToPduOptions" href="qsimcommand.html#ToPduOptions-enum" location="qsimcommand.h">
                <value name="NoPduOptions" value="0x00"></value>
                <value name="NoBerWrapper" value="0x01"></value>
                <value name="PackedStrings" value="0x02"></value>
                <value name="UCS2Strings" value="0x04"></value>
                <value name="EncodeEmptyStrings" value="0x08"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromPdu" fullname="QSimCommand::fromPdu" href="qsimcommand.html#fromPdu" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QSimCommand" signature="fromPdu(const QByteArray &amp; pdu)">
                <parameter left="const QByteArray &amp;" right="" name="pdu" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toPdu" fullname="QSimCommand::toPdu" href="qsimcommand.html#toPdu" location="qsimcommand.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="toPdu(QSimCommand::ToPduOptions options) const">
                <parameter left="QSimCommand::ToPduOptions" right="" name="options" default="NoPduOptions"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QSimCommand::operator=" href="qsimcommand.html#operator=" location="qsimcommand.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QSimCommand &amp;" signature="operator=(const QSimCommand &amp; value)">
                <parameter left="const QSimCommand &amp;" right="" name="value" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QTimeZone" href="qtimezone.html" location="qtimezone.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QTimeZone" fullname="QTimeZone::QTimeZone" href="qtimezone.html#QTimeZone" location="qtimezone.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QTimeZone()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QTimeZone" fullname="QTimeZone::QTimeZone" href="qtimezone.html#QTimeZone-2" location="qtimezone.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QTimeZone(const char * locId)">
                <parameter left="const char *" right="" name="locId" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QTimeZone" fullname="QTimeZone::QTimeZone" href="qtimezone.html#QTimeZone-3" location="qtimezone.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QTimeZone(const QTimeZone &amp; other)">
                <parameter left="const QTimeZone &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QTimeZone" fullname="QTimeZone::~QTimeZone" href="qtimezone.html#dtor.QTimeZone" location="qtimezone.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QTimeZone()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QTimeZone::isValid" href="qtimezone.html#isValid" location="qtimezone.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setId" fullname="QTimeZone::setId" href="qtimezone.html#setId" location="qtimezone.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setId(const char * id)">
                <parameter left="const char *" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QTimeZone::operator=" href="qtimezone.html#operator=" location="qtimezone.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QTimeZone &amp;" signature="operator=(const QTimeZone &amp; from)">
                <parameter left="const QTimeZone &amp;" right="" name="from" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QTimeZone::operator==" href="qtimezone.html#operator==" location="qtimezone.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QTimeZone &amp; c) const">
                <parameter left="const QTimeZone &amp;" right="" name="c" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QTimeZone::operator!=" href="qtimezone.html#operator!=" location="qtimezone.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QTimeZone &amp; c) const">
                <parameter left="const QTimeZone &amp;" right="" name="c" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toTime_t" fullname="QTimeZone::toTime_t" href="qtimezone.html#toTime_t" location="qtimezone.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="toTime_t(const QDateTime &amp; dt) const">
                <parameter left="const QDateTime &amp;" right="" name="dt" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toUtc" fullname="QTimeZone::toUtc" href="qtimezone.html#toUtc" location="qtimezone.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="toUtc(const QDateTime &amp; dt) const">
                <parameter left="const QDateTime &amp;" right="" name="dt" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromUtc" fullname="QTimeZone::fromUtc" href="qtimezone.html#fromUtc" location="qtimezone.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="fromUtc(const QDateTime &amp; utc) const">
                <parameter left="const QDateTime &amp;" right="" name="utc" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toCurrent" fullname="QTimeZone::toCurrent" href="qtimezone.html#toCurrent" location="qtimezone.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="toCurrent(const QDateTime &amp; dt) const">
                <parameter left="const QDateTime &amp;" right="" name="dt" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromCurrent" fullname="QTimeZone::fromCurrent" href="qtimezone.html#fromCurrent" location="qtimezone.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="fromCurrent(const QDateTime &amp; curT) const">
                <parameter left="const QDateTime &amp;" right="" name="curT" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="convert" fullname="QTimeZone::convert" href="qtimezone.html#convert" location="qtimezone.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="convert(const QDateTime &amp; dt, const QTimeZone &amp; dtTz) const">
                <parameter left="const QDateTime &amp;" right="" name="dt" default=""></parameter>
                <parameter left="const QTimeZone &amp;" right="" name="dtTz" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="current" fullname="QTimeZone::current" href="qtimezone.html#current" location="qtimezone.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QTimeZone" signature="current()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="utc" fullname="QTimeZone::utc" href="qtimezone.html#utc" location="qtimezone.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QTimeZone" signature="utc()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="utcDateTime" fullname="QTimeZone::utcDateTime" href="qtimezone.html#utcDateTime" location="qtimezone.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QDateTime" signature="utcDateTime()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="findFromMinutesEast" fullname="QTimeZone::findFromMinutesEast" href="qtimezone.html#findFromMinutesEast" location="qtimezone.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QTimeZone" signature="findFromMinutesEast(const QDateTime &amp; t, int mineast, bool isdst)">
                <parameter left="const QDateTime &amp;" right="" name="t" default=""></parameter>
                <parameter left="int" right="" name="mineast" default=""></parameter>
                <parameter left="bool" right="" name="isdst" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="latitude" fullname="QTimeZone::latitude" href="qtimezone.html#latitude" location="qtimezone.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="latitude() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="longitude" fullname="QTimeZone::longitude" href="qtimezone.html#longitude" location="qtimezone.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="longitude() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QTimeZone::name" href="qtimezone.html#name" location="qtimezone.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dstAbbreviation" fullname="QTimeZone::dstAbbreviation" href="qtimezone.html#dstAbbreviation" location="qtimezone.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="dstAbbreviation() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="standardAbbreviation" fullname="QTimeZone::standardAbbreviation" href="qtimezone.html#standardAbbreviation" location="qtimezone.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="standardAbbreviation() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="description" fullname="QTimeZone::description" href="qtimezone.html#description" location="qtimezone.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="description() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="area" fullname="QTimeZone::area" href="qtimezone.html#area" location="qtimezone.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="area() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="city" fullname="QTimeZone::city" href="qtimezone.html#city" location="qtimezone.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="city() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="countryCode" fullname="QTimeZone::countryCode" href="qtimezone.html#countryCode" location="qtimezone.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="countryCode()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QTimeZone::id" href="qtimezone.html#id" location="qtimezone.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="id() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="ids" fullname="QTimeZone::ids" href="qtimezone.html#ids" location="qtimezone.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStringList" signature="ids()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QCacheOperationReader" href="qcacheoperationreader.html" location="qcacheoperationreader.h" bases="QWbXmlReader" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QCacheOperationReader" fullname="QCacheOperationReader::QCacheOperationReader" href="qcacheoperationreader.html#QCacheOperationReader" location="qcacheoperationreader.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCacheOperationReader()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCacheOperationReader" fullname="QCacheOperationReader::~QCacheOperationReader" href="qcacheoperationreader.html#dtor.QCacheOperationReader" location="qcacheoperationreader.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCacheOperationReader()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtopiaSendVia" href="qtopiasendvia.html" location="qtopiasendvia.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="isDataSupported" fullname="QtopiaSendVia::isDataSupported" href="qtopiasendvia.html#isDataSupported" location="qtopiasendvia.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="isDataSupported(const QString &amp; mimetype)">
                <parameter left="const QString &amp;" right="" name="mimetype" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFileSupported" fullname="QtopiaSendVia::isFileSupported" href="qtopiasendvia.html#isFileSupported" location="qtopiasendvia.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="isFileSupported()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sendData" fullname="QtopiaSendVia::sendData" href="qtopiasendvia.html#sendData" location="qtopiasendvia.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="sendData(QWidget * parent, const QByteArray &amp; data, const QString &amp; mimetype)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="mimetype" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sendFile" fullname="QtopiaSendVia::sendFile" href="qtopiasendvia.html#sendFile" location="qtopiasendvia.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="sendFile(QWidget * parent, const QString &amp; filename, const QString &amp; mimetype, const QString &amp; description, bool autodelete)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="mimetype" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="description" default="QString()"></parameter>
                <parameter left="bool" right="" name="autodelete" default="false"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sendFile" fullname="QtopiaSendVia::sendFile" href="qtopiasendvia.html#sendFile-2" location="qtopiasendvia.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="bool" signature="sendFile(QWidget * parent, const QContent &amp; content, bool autodelete)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
                <parameter left="const QContent &amp;" right="" name="content" default=""></parameter>
                <parameter left="bool" right="" name="autodelete" default="false"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaServiceDescription" href="qtopiaservicedescription.html" location="qtopiaserviceselector.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaServiceDescription" fullname="QtopiaServiceDescription::QtopiaServiceDescription" href="qtopiaservicedescription.html#QtopiaServiceDescription" location="qtopiaserviceselector.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtopiaServiceDescription()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaServiceDescription" fullname="QtopiaServiceDescription::QtopiaServiceDescription" href="qtopiaservicedescription.html#QtopiaServiceDescription-2" location="qtopiaserviceselector.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QtopiaServiceDescription(const QtopiaServiceRequest &amp; request, const QString &amp; label, const QString &amp; icon, const QVariantMap &amp; optionalProperties)">
                <parameter left="const QtopiaServiceRequest &amp;" right="" name="request" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="label" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="icon" default=""></parameter>
                <parameter left="const QVariantMap &amp;" right="" name="optionalProperties" default="QVariantMap()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtopiaServiceDescription" fullname="QtopiaServiceDescription::~QtopiaServiceDescription" href="qtopiaservicedescription.html#dtor.QtopiaServiceDescription" location="qtopiaserviceselector.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtopiaServiceDescription()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaServiceDescription" fullname="QtopiaServiceDescription::QtopiaServiceDescription" href="qtopiaservicedescription.html#QtopiaServiceDescription-3" location="qtopiaserviceselector.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QtopiaServiceDescription(const QtopiaServiceDescription &amp; other)">
                <parameter left="const QtopiaServiceDescription &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QtopiaServiceDescription::operator=" href="qtopiaservicedescription.html#operator=" location="qtopiaserviceselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QtopiaServiceDescription &amp;" signature="operator=(const QtopiaServiceDescription &amp; other)">
                <parameter left="const QtopiaServiceDescription &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="request" fullname="QtopiaServiceDescription::request" href="qtopiaservicedescription.html#request" location="qtopiaserviceselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtopiaServiceRequest" signature="request() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="label" fullname="QtopiaServiceDescription::label" href="qtopiaservicedescription.html#label" location="qtopiaserviceselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="label() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="iconName" fullname="QtopiaServiceDescription::iconName" href="qtopiaservicedescription.html#iconName" location="qtopiaserviceselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="iconName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRequest" fullname="QtopiaServiceDescription::setRequest" href="qtopiaservicedescription.html#setRequest" location="qtopiaserviceselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRequest(const QtopiaServiceRequest &amp; request)">
                <parameter left="const QtopiaServiceRequest &amp;" right="" name="request" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLabel" fullname="QtopiaServiceDescription::setLabel" href="qtopiaservicedescription.html#setLabel" location="qtopiaserviceselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLabel(const QString &amp; label)">
                <parameter left="const QString &amp;" right="" name="label" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIconName" fullname="QtopiaServiceDescription::setIconName" href="qtopiaservicedescription.html#setIconName" location="qtopiaserviceselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIconName(const QString &amp; iconName)">
                <parameter left="const QString &amp;" right="" name="iconName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="optionalProperty" fullname="QtopiaServiceDescription::optionalProperty" href="qtopiaservicedescription.html#optionalProperty" location="qtopiaserviceselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="optionalProperty(const QString &amp; name) const">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOptionalProperty" fullname="QtopiaServiceDescription::setOptionalProperty" href="qtopiaservicedescription.html#setOptionalProperty" location="qtopiaserviceselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setOptionalProperty(const QString &amp; name, const QVariant &amp; value)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeOptionalProperty" fullname="QtopiaServiceDescription::removeOptionalProperty" href="qtopiaservicedescription.html#removeOptionalProperty" location="qtopiaserviceselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeOptionalProperty(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="optionalProperties" fullname="QtopiaServiceDescription::optionalProperties" href="qtopiaservicedescription.html#optionalProperties" location="qtopiaserviceselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariantMap" signature="optionalProperties() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOptionalProperties" fullname="QtopiaServiceDescription::setOptionalProperties" href="qtopiaservicedescription.html#setOptionalProperties" location="qtopiaserviceselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setOptionalProperties(QVariantMap properties)">
                <parameter left="QVariantMap" right="" name="properties" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaServiceSelector" href="qtopiaserviceselector.html" location="qtopiaserviceselector.h" bases="QDialog" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaServiceSelector" fullname="QtopiaServiceSelector::QtopiaServiceSelector" href="qtopiaserviceselector.html#QtopiaServiceSelector" location="qtopiaserviceselector.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtopiaServiceSelector(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addApplications" fullname="QtopiaServiceSelector::addApplications" href="qtopiaserviceselector.html#addApplications" location="qtopiaserviceselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addApplications()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="descriptionFor" fullname="QtopiaServiceSelector::descriptionFor" href="qtopiaserviceselector.html#descriptionFor" location="qtopiaserviceselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtopiaServiceDescription" signature="descriptionFor(const QtopiaServiceRequest &amp; req) const">
                <parameter left="const QtopiaServiceRequest &amp;" right="" name="req" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="edit" fullname="QtopiaServiceSelector::edit" href="qtopiaserviceselector.html#edit" location="qtopiaserviceselector.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="bool" signature="edit(const QString &amp; targetlabel, QtopiaServiceDescription &amp; item)">
                <parameter left="const QString &amp;" right="" name="targetlabel" default=""></parameter>
                <parameter left="QtopiaServiceDescription &amp;" right="" name="item" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QTask" href="qtask.html" location="qtask.h" bases="QPimRecord" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Status" fullname="QTask::Status" href="qtask.html#Status-enum" location="qtask.h">
                <value name="NotStarted" value="0"></value>
                <value name="InProgress" value="1"></value>
                <value name="Completed" value="2"></value>
                <value name="Waiting" value="3"></value>
                <value name="Deferred" value="4"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Priority" fullname="QTask::Priority" href="qtask.html#Priority-enum" location="qtask.h">
                <value name="VeryHigh" value="1"></value>
                <value name="High" value="2"></value>
                <value name="Normal" value="3"></value>
                <value name="Low" value="4"></value>
                <value name="VeryLow" value="5"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QTask" fullname="QTask::QTask" href="qtask.html#QTask" location="qtask.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QTask()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QTask" fullname="QTask::QTask" href="qtask.html#QTask-2" location="qtask.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QTask(const QTask &amp; other)">
                <parameter left="const QTask &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QTask::operator=" href="qtask.html#operator=" location="qtask.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QTask &amp;" signature="operator=(const QTask &amp; other)">
                <parameter left="const QTask &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QTask::operator==" href="qtask.html#operator==" location="qtask.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QTask &amp; other) const">
                <parameter left="const QTask &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QTask::operator!=" href="qtask.html#operator!=" location="qtask.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QTask &amp; other) const">
                <parameter left="const QTask &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QTask" fullname="QTask::~QTask" href="qtask.html#dtor.QTask" location="qtask.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QTask()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="writeVCalendar" fullname="QTask::writeVCalendar" href="qtask.html#writeVCalendar" location="qtask.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="writeVCalendar(QIODevice * device, const QList&lt;QTask&gt; &amp; tasks)">
                <parameter left="QIODevice *" right="" name="device" default=""></parameter>
                <parameter left="const QList&lt;QTask&gt; &amp;" right="" name="tasks" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="writeVCalendar" fullname="QTask::writeVCalendar" href="qtask.html#writeVCalendar-2" location="qtask.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="bool" signature="writeVCalendar(QIODevice * device, const QTask &amp; task)">
                <parameter left="QIODevice *" right="" name="device" default=""></parameter>
                <parameter left="const QTask &amp;" right="" name="task" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readVCalendar" fullname="QTask::readVCalendar" href="qtask.html#readVCalendar" location="qtask.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QTask&gt;" signature="readVCalendar(QIODevice * device)">
                <parameter left="QIODevice *" right="" name="device" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="writeVCalendar" fullname="QTask::writeVCalendar" href="qtask.html#writeVCalendar-3" location="qtask.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="3" type="void" signature="writeVCalendar(const QString &amp; filename, const QList&lt;QTask&gt; &amp; tasks)">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
                <parameter left="const QList&lt;QTask&gt; &amp;" right="" name="tasks" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="writeVCalendar" fullname="QTask::writeVCalendar" href="qtask.html#writeVCalendar-4" location="qtask.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="4" type="void" signature="writeVCalendar(const QString &amp; filename, const QTask &amp; task)">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
                <parameter left="const QTask &amp;" right="" name="task" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="writeVCalendar" fullname="QTask::writeVCalendar" href="qtask.html#writeVCalendar-5" location="qtask.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="5" type="void" signature="writeVCalendar(const QString &amp; filename) const">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="writeVCalendar" fullname="QTask::writeVCalendar" href="qtask.html#writeVCalendar-6" location="qtask.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="6" type="void" signature="writeVCalendar(QFile &amp; file) const">
                <parameter left="QFile &amp;" right="" name="file" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="writeVCalendar" fullname="QTask::writeVCalendar" href="qtask.html#writeVCalendar-7" location="qtask.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="7" type="void" signature="writeVCalendar(QDataStream * stream) const">
                <parameter left="QDataStream *" right="" name="stream" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="readVCalendar" fullname="QTask::readVCalendar" href="qtask.html#readVCalendar-2" location="qtask.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QList&lt;QTask&gt;" signature="readVCalendar(const QString &amp; filename)">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="readVCalendarData" fullname="QTask::readVCalendarData" href="qtask.html#readVCalendarData" location="qtask.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QTask&gt;" signature="readVCalendarData(const char * data, unsigned long len)">
                <parameter left="const char *" right="" name="data" default=""></parameter>
                <parameter left="unsigned long" right="" name="len" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="readVCalendar" fullname="QTask::readVCalendar" href="qtask.html#readVCalendar-3" location="qtask.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="3" type="QList&lt;QTask&gt;" signature="readVCalendar(const QByteArray &amp; vcal)">
                <parameter left="const QByteArray &amp;" right="" name="vcal" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPriority" fullname="QTask::setPriority" href="qtask.html#setPriority" location="qtask.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPriority(Priority priority)">
                <parameter left="Priority" right="" name="priority" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPriority" fullname="QTask::setPriority" href="qtask.html#setPriority-2" location="qtask.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setPriority(int priority)">
                <parameter left="int" right="" name="priority" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="priority" fullname="QTask::priority" href="qtask.html#priority" location="qtask.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Priority" signature="priority() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDescription" fullname="QTask::setDescription" href="qtask.html#setDescription" location="qtask.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDescription(const QString &amp; description)">
                <parameter left="const QString &amp;" right="" name="description" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="description" fullname="QTask::description" href="qtask.html#description" location="qtask.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="description() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDueDate" fullname="QTask::setDueDate" href="qtask.html#setDueDate" location="qtask.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDueDate(const QDate &amp; date)">
                <parameter left="const QDate &amp;" right="" name="date" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearDueDate" fullname="QTask::clearDueDate" href="qtask.html#clearDueDate" location="qtask.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearDueDate()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dueDate" fullname="QTask::dueDate" href="qtask.html#dueDate" location="qtask.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDate" signature="dueDate() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasDueDate" fullname="QTask::hasDueDate" href="qtask.html#hasDueDate" location="qtask.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasDueDate() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="startedDate" fullname="QTask::startedDate" href="qtask.html#startedDate" location="qtask.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDate" signature="startedDate() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStartedDate" fullname="QTask::setStartedDate" href="qtask.html#setStartedDate" location="qtask.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setStartedDate(const QDate &amp; date)">
                <parameter left="const QDate &amp;" right="" name="date" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasStartedDate" fullname="QTask::hasStartedDate" href="qtask.html#hasStartedDate" location="qtask.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasStartedDate() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="completedDate" fullname="QTask::completedDate" href="qtask.html#completedDate" location="qtask.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDate" signature="completedDate() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCompletedDate" fullname="QTask::setCompletedDate" href="qtask.html#setCompletedDate" location="qtask.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCompletedDate(const QDate &amp; date)">
                <parameter left="const QDate &amp;" right="" name="date" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="status" fullname="QTask::status" href="qtask.html#status" location="qtask.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Status" signature="status() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStatus" fullname="QTask::setStatus" href="qtask.html#setStatus" location="qtask.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setStatus(Status status)">
                <parameter left="Status" right="" name="status" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStatus" fullname="QTask::setStatus" href="qtask.html#setStatus-2" location="qtask.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setStatus(int status)">
                <parameter left="int" right="" name="status" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isCompleted" fullname="QTask::isCompleted" href="qtask.html#isCompleted" location="qtask.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isCompleted() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCompleted" fullname="QTask::setCompleted" href="qtask.html#setCompleted" location="qtask.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCompleted(bool b)">
                <parameter left="bool" right="" name="b" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="percentCompleted" fullname="QTask::percentCompleted" href="qtask.html#percentCompleted" location="qtask.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="percentCompleted() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPercentCompleted" fullname="QTask::setPercentCompleted" href="qtask.html#setPercentCompleted" location="qtask.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPercentCompleted(uint percent)">
                <parameter left="uint" right="" name="percent" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="notes" fullname="QTask::notes" href="qtask.html#notes" location="qtask.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="notes() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNotes" fullname="QTask::setNotes" href="qtask.html#setNotes" location="qtask.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setNotes(const QString &amp; notes)">
                <parameter left="const QString &amp;" right="" name="notes" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="match" fullname="QTask::match" href="qtask.html#match" location="qtask.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="match(const QRegExp &amp; r) const">
                <parameter left="const QRegExp &amp;" right="" name="r" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toRichText" fullname="QTask::toRichText" href="qtask.html#toRichText" location="qtask.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="toRichText() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="statusToText" fullname="QTask::statusToText" href="qtask.html#statusToText" location="qtask.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="statusToText(Status status)">
                <parameter left="Status" right="" name="status" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBinarySimFile" href="qbinarysimfile.html" location="qbinarysimfile.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBinarySimFile" fullname="QBinarySimFile::QBinarySimFile" href="qbinarysimfile.html#QBinarySimFile" location="qbinarysimfile.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBinarySimFile(const QString &amp; fileid, const QString &amp; service, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="fileid" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="service" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBinarySimFile" fullname="QBinarySimFile::~QBinarySimFile" href="qbinarysimfile.html#dtor.QBinarySimFile" location="qbinarysimfile.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBinarySimFile()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestFileSize" fullname="QBinarySimFile::requestFileSize" href="qbinarysimfile.html#requestFileSize" location="qbinarysimfile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="requestFileSize()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="read" fullname="QBinarySimFile::read" href="qbinarysimfile.html#read" location="qbinarysimfile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="read(int pos, int len)">
                <parameter left="int" right="" name="pos" default=""></parameter>
                <parameter left="int" right="" name="len" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="write" fullname="QBinarySimFile::write" href="qbinarysimfile.html#write" location="qbinarysimfile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="write(int pos, const char * data, int len)">
                <parameter left="int" right="" name="pos" default=""></parameter>
                <parameter left="const char *" right="" name="data" default=""></parameter>
                <parameter left="int" right="" name="len" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="write" fullname="QBinarySimFile::write" href="qbinarysimfile.html#write-2" location="qbinarysimfile.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="write(int pos, const QByteArray &amp; data)">
                <parameter left="int" right="" name="pos" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QBinarySimFile::error" href="qbinarysimfile.html#error" location="qbinarysimfile.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="error(QTelephony::SimFileError err)">
                <parameter left="QTelephony::SimFileError" right="" name="err" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fileSize" fullname="QBinarySimFile::fileSize" href="qbinarysimfile.html#fileSize" location="qbinarysimfile.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="fileSize(int size)">
                <parameter left="int" right="" name="size" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readDone" fullname="QBinarySimFile::readDone" href="qbinarysimfile.html#readDone" location="qbinarysimfile.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="readDone(const QByteArray &amp; data, int pos)">
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
                <parameter left="int" right="" name="pos" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="writeDone" fullname="QBinarySimFile::writeDone" href="qbinarysimfile.html#writeDone" location="qbinarysimfile.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="writeDone(int pos)">
                <parameter left="int" right="" name="pos" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QServiceNumbers" href="qservicenumbers.html" location="qservicenumbers.h" bases="QCommInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QServiceNumbers" fullname="QServiceNumbers::QServiceNumbers" href="qservicenumbers.html#QServiceNumbers" location="qservicenumbers.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QServiceNumbers(const QString &amp; service, QObject * parent, QCommInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="service" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QCommInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QServiceNumbers" fullname="QServiceNumbers::~QServiceNumbers" href="qservicenumbers.html#dtor.QServiceNumbers" location="qservicenumbers.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QServiceNumbers()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="NumberId" fullname="QServiceNumbers::NumberId" href="qservicenumbers.html#NumberId-enum" location="qservicenumbers.h">
                <value name="VoiceMail" value="0"></value>
                <value name="SmsServiceCenter" value="1"></value>
                <value name="SubscriberNumber" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestServiceNumber" fullname="QServiceNumbers::requestServiceNumber" href="qservicenumbers.html#requestServiceNumber" location="qservicenumbers.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="requestServiceNumber(QServiceNumbers::NumberId id)">
                <parameter left="QServiceNumbers::NumberId" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setServiceNumber" fullname="QServiceNumbers::setServiceNumber" href="qservicenumbers.html#setServiceNumber" location="qservicenumbers.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setServiceNumber(QServiceNumbers::NumberId id, const QString &amp; number)">
                <parameter left="QServiceNumbers::NumberId" right="" name="id" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serviceNumber" fullname="QServiceNumbers::serviceNumber" href="qservicenumbers.html#serviceNumber" location="qservicenumbers.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="serviceNumber(QServiceNumbers::NumberId id, const QString &amp; number)">
                <parameter left="QServiceNumbers::NumberId" right="" name="id" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setServiceNumberResult" fullname="QServiceNumbers::setServiceNumberResult" href="qservicenumbers.html#setServiceNumberResult" location="qservicenumbers.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="setServiceNumberResult(QServiceNumbers::NumberId id, QTelephony::Result result)">
                <parameter left="QServiceNumbers::NumberId" right="" name="id" default=""></parameter>
                <parameter left="QTelephony::Result" right="" name="result" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QWbXmlReader" href="qwbxmlreader.html" location="qwbxmlreader.h" bases="QXmlReader" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QWbXmlReader" fullname="QWbXmlReader::QWbXmlReader" href="qwbxmlreader.html#QWbXmlReader" location="qwbxmlreader.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QWbXmlReader()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QWbXmlReader" fullname="QWbXmlReader::QWbXmlReader" href="qwbxmlreader.html#QWbXmlReader-2" location="qwbxmlreader.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QWbXmlReader(const QWbXmlTagSet &amp; tags, const QWbXmlTagSet &amp; attrs)">
                <parameter left="const QWbXmlTagSet &amp;" right="" name="tags" default=""></parameter>
                <parameter left="const QWbXmlTagSet &amp;" right="" name="attrs" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QWbXmlReader" fullname="QWbXmlReader::~QWbXmlReader" href="qwbxmlreader.html#dtor.QWbXmlReader" location="qwbxmlreader.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QWbXmlReader()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="feature" fullname="QWbXmlReader::feature" href="qwbxmlreader.html#feature" location="qwbxmlreader.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="feature(const QString &amp; name, bool * ok) const">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="bool *" right="" name="ok" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFeature" fullname="QWbXmlReader::setFeature" href="qwbxmlreader.html#setFeature" location="qwbxmlreader.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setFeature(const QString &amp; name, bool value)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasFeature" fullname="QWbXmlReader::hasFeature" href="qwbxmlreader.html#hasFeature" location="qwbxmlreader.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasFeature(const QString &amp; name) const">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="property" fullname="QWbXmlReader::property" href="qwbxmlreader.html#property" location="qwbxmlreader.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="void *" signature="property(const QString &amp; name, bool * ok) const">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="bool *" right="" name="ok" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setProperty" fullname="QWbXmlReader::setProperty" href="qwbxmlreader.html#setProperty" location="qwbxmlreader.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setProperty(const QString &amp; name, void * value)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="void *" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasProperty" fullname="QWbXmlReader::hasProperty" href="qwbxmlreader.html#hasProperty" location="qwbxmlreader.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasProperty(const QString &amp; name) const">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEntityResolver" fullname="QWbXmlReader::setEntityResolver" href="qwbxmlreader.html#setEntityResolver" location="qwbxmlreader.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setEntityResolver(QXmlEntityResolver * handler)">
                <parameter left="QXmlEntityResolver *" right="" name="handler" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="entityResolver" fullname="QWbXmlReader::entityResolver" href="qwbxmlreader.html#entityResolver" location="qwbxmlreader.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QXmlEntityResolver *" signature="entityResolver() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDTDHandler" fullname="QWbXmlReader::setDTDHandler" href="qwbxmlreader.html#setDTDHandler" location="qwbxmlreader.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setDTDHandler(QXmlDTDHandler * handler)">
                <parameter left="QXmlDTDHandler *" right="" name="handler" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="DTDHandler" fullname="QWbXmlReader::DTDHandler" href="qwbxmlreader.html#DTDHandler" location="qwbxmlreader.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QXmlDTDHandler *" signature="DTDHandler() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContentHandler" fullname="QWbXmlReader::setContentHandler" href="qwbxmlreader.html#setContentHandler" location="qwbxmlreader.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setContentHandler(QXmlContentHandler * handler)">
                <parameter left="QXmlContentHandler *" right="" name="handler" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentHandler" fullname="QWbXmlReader::contentHandler" href="qwbxmlreader.html#contentHandler" location="qwbxmlreader.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QXmlContentHandler *" signature="contentHandler() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setErrorHandler" fullname="QWbXmlReader::setErrorHandler" href="qwbxmlreader.html#setErrorHandler" location="qwbxmlreader.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setErrorHandler(QXmlErrorHandler * handler)">
                <parameter left="QXmlErrorHandler *" right="" name="handler" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorHandler" fullname="QWbXmlReader::errorHandler" href="qwbxmlreader.html#errorHandler" location="qwbxmlreader.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QXmlErrorHandler *" signature="errorHandler() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLexicalHandler" fullname="QWbXmlReader::setLexicalHandler" href="qwbxmlreader.html#setLexicalHandler" location="qwbxmlreader.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setLexicalHandler(QXmlLexicalHandler * handler)">
                <parameter left="QXmlLexicalHandler *" right="" name="handler" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lexicalHandler" fullname="QWbXmlReader::lexicalHandler" href="qwbxmlreader.html#lexicalHandler" location="qwbxmlreader.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QXmlLexicalHandler *" signature="lexicalHandler() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDeclHandler" fullname="QWbXmlReader::setDeclHandler" href="qwbxmlreader.html#setDeclHandler" location="qwbxmlreader.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setDeclHandler(QXmlDeclHandler * handler)">
                <parameter left="QXmlDeclHandler *" right="" name="handler" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="declHandler" fullname="QWbXmlReader::declHandler" href="qwbxmlreader.html#declHandler" location="qwbxmlreader.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QXmlDeclHandler *" signature="declHandler() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parse" fullname="QWbXmlReader::parse" href="qwbxmlreader.html#parse" location="qwbxmlreader.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="parse(const QXmlInputSource &amp; input)">
                <parameter left="const QXmlInputSource &amp;" right="" name="input" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parse" fullname="QWbXmlReader::parse" href="qwbxmlreader.html#parse-2" location="qwbxmlreader.h" virtual="impure" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="parse(const QXmlInputSource * input)">
                <parameter left="const QXmlInputSource *" right="" name="input" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parse" fullname="QWbXmlReader::parse" href="qwbxmlreader.html#parse-3" location="qwbxmlreader.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="bool" signature="parse(const QByteArray &amp; input)">
                <parameter left="const QByteArray &amp;" right="" name="input" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parse" fullname="QWbXmlReader::parse" href="qwbxmlreader.html#parse-4" location="qwbxmlreader.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="4" type="bool" signature="parse(QIODevice &amp; input)">
                <parameter left="QIODevice &amp;" right="" name="input" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTagSets" fullname="QWbXmlReader::setTagSets" href="qwbxmlreader.html#setTagSets" location="qwbxmlreader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTagSets(const QWbXmlTagSet &amp; tags, const QWbXmlTagSet &amp; attrs)">
                <parameter left="const QWbXmlTagSet &amp;" right="" name="tags" default=""></parameter>
                <parameter left="const QWbXmlTagSet &amp;" right="" name="attrs" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toXml" fullname="QWbXmlReader::toXml" href="qwbxmlreader.html#toXml" location="qwbxmlreader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="toXml(const QByteArray &amp; input)">
                <parameter left="const QByteArray &amp;" right="" name="input" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toXml" fullname="QWbXmlReader::toXml" href="qwbxmlreader.html#toXml-2" location="qwbxmlreader.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="QString" signature="toXml(QIODevice &amp; input)">
                <parameter left="QIODevice &amp;" right="" name="input" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="resolveOpaque" fullname="QWbXmlReader::resolveOpaque" href="qwbxmlreader.html#resolveOpaque" location="qwbxmlreader.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QString" signature="resolveOpaque(const QString &amp; attr, const QByteArray &amp; data)">
                <parameter left="const QString &amp;" right="" name="attr" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QWbXmlToXmlContentHandler" href="qwbxmltoxmlcontenthandler.html" location="qwbxmlreader.h" bases="QXmlContentHandler" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QWbXmlToXmlContentHandler" fullname="QWbXmlToXmlContentHandler::QWbXmlToXmlContentHandler" href="qwbxmltoxmlcontenthandler.html#QWbXmlToXmlContentHandler" location="qwbxmlreader.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QWbXmlToXmlContentHandler()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QWbXmlToXmlContentHandler" fullname="QWbXmlToXmlContentHandler::~QWbXmlToXmlContentHandler" href="qwbxmltoxmlcontenthandler.html#dtor.QWbXmlToXmlContentHandler" location="qwbxmlreader.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QWbXmlToXmlContentHandler()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDocumentLocator" fullname="QWbXmlToXmlContentHandler::setDocumentLocator" href="qwbxmltoxmlcontenthandler.html#setDocumentLocator" location="qwbxmlreader.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setDocumentLocator(QXmlLocator * locator)">
                <parameter left="QXmlLocator *" right="" name="locator" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="startDocument" fullname="QWbXmlToXmlContentHandler::startDocument" href="qwbxmltoxmlcontenthandler.html#startDocument" location="qwbxmlreader.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="startDocument()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="endDocument" fullname="QWbXmlToXmlContentHandler::endDocument" href="qwbxmltoxmlcontenthandler.html#endDocument" location="qwbxmlreader.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="endDocument()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="startPrefixMapping" fullname="QWbXmlToXmlContentHandler::startPrefixMapping" href="qwbxmltoxmlcontenthandler.html#startPrefixMapping" location="qwbxmlreader.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="startPrefixMapping(const QString &amp; prefix, const QString &amp; uri)">
                <parameter left="const QString &amp;" right="" name="prefix" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="uri" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="endPrefixMapping" fullname="QWbXmlToXmlContentHandler::endPrefixMapping" href="qwbxmltoxmlcontenthandler.html#endPrefixMapping" location="qwbxmlreader.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="endPrefixMapping(const QString &amp; prefix)">
                <parameter left="const QString &amp;" right="" name="prefix" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="startElement" fullname="QWbXmlToXmlContentHandler::startElement" href="qwbxmltoxmlcontenthandler.html#startElement" location="qwbxmlreader.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="startElement(const QString &amp; namespaceURI, const QString &amp; localName, const QString &amp; qName, const QXmlAttributes &amp; atts)">
                <parameter left="const QString &amp;" right="" name="namespaceURI" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="localName" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="qName" default=""></parameter>
                <parameter left="const QXmlAttributes &amp;" right="" name="atts" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="endElement" fullname="QWbXmlToXmlContentHandler::endElement" href="qwbxmltoxmlcontenthandler.html#endElement" location="qwbxmlreader.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="endElement(const QString &amp; namespaceURI, const QString &amp; localName, const QString &amp; qName)">
                <parameter left="const QString &amp;" right="" name="namespaceURI" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="localName" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="qName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="characters" fullname="QWbXmlToXmlContentHandler::characters" href="qwbxmltoxmlcontenthandler.html#characters" location="qwbxmlreader.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="characters(const QString &amp; ch)">
                <parameter left="const QString &amp;" right="" name="ch" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="ignorableWhitespace" fullname="QWbXmlToXmlContentHandler::ignorableWhitespace" href="qwbxmltoxmlcontenthandler.html#ignorableWhitespace" location="qwbxmlreader.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="ignorableWhitespace(const QString &amp; ch)">
                <parameter left="const QString &amp;" right="" name="ch" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="processingInstruction" fullname="QWbXmlToXmlContentHandler::processingInstruction" href="qwbxmltoxmlcontenthandler.html#processingInstruction" location="qwbxmlreader.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="processingInstruction(const QString &amp; target, const QString &amp; data)">
                <parameter left="const QString &amp;" right="" name="target" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="skippedEntity" fullname="QWbXmlToXmlContentHandler::skippedEntity" href="qwbxmltoxmlcontenthandler.html#skippedEntity" location="qwbxmlreader.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="skippedEntity(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QWbXmlToXmlContentHandler::errorString" href="qwbxmltoxmlcontenthandler.html#errorString" location="qwbxmlreader.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toString" fullname="QWbXmlToXmlContentHandler::toString" href="qwbxmltoxmlcontenthandler.html#toString" location="qwbxmlreader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="toString() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="CellBroadcastControl" href="cellbroadcastcontrol.html" location="cellbroadcastcontrol.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="CellBroadcastControl" fullname="CellBroadcastControl::CellBroadcastControl" href="cellbroadcastcontrol.html#CellBroadcastControl" location="cellbroadcastcontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="CellBroadcastControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="CellBroadcastControl::Type" href="cellbroadcastcontrol.html#Type-enum" location="cellbroadcastcontrol.h">
                <value name="Popup" value="0"></value>
                <value name="Background" value="1"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="instance" fullname="CellBroadcastControl::instance" href="cellbroadcastcontrol.html#instance" location="cellbroadcastcontrol.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="CellBroadcastControl *" signature="instance()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="broadcast" fullname="CellBroadcastControl::broadcast" href="cellbroadcastcontrol.html#broadcast" location="cellbroadcastcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="broadcast(CellBroadcastControl::Type type, const QString &amp; channel, const QString &amp; text)">
                <parameter left="CellBroadcastControl::Type" right="" name="type" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="channel" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QDSData" href="qdsdata.html" location="qdsdata.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QDSData" fullname="QDSData::QDSData" href="qdsdata.html#QDSData" location="qdsdata.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDSData()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDSData" fullname="QDSData::QDSData" href="qdsdata.html#QDSData-2" location="qdsdata.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QDSData(const QDSData &amp; other)">
                <parameter left="const QDSData &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDSData" fullname="QDSData::QDSData" href="qdsdata.html#QDSData-3" location="qdsdata.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QDSData(const QUniqueId &amp; key)">
                <parameter left="const QUniqueId &amp;" right="" name="key" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDSData" fullname="QDSData::QDSData" href="qdsdata.html#QDSData-4" location="qdsdata.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QDSData(const QByteArray &amp; data, const QMimeType &amp; type)">
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
                <parameter left="const QMimeType &amp;" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDSData" fullname="QDSData::QDSData" href="qdsdata.html#QDSData-5" location="qdsdata.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="5" type="" signature="QDSData(const QString &amp; data, const QMimeType &amp; type)">
                <parameter left="const QString &amp;" right="" name="data" default=""></parameter>
                <parameter left="const QMimeType &amp;" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDSData" fullname="QDSData::QDSData" href="qdsdata.html#QDSData-6" location="qdsdata.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="6" type="" signature="QDSData(QFile &amp; data, const QMimeType &amp; type)">
                <parameter left="QFile &amp;" right="" name="data" default=""></parameter>
                <parameter left="const QMimeType &amp;" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDSData" fullname="QDSData::~QDSData" href="qdsdata.html#dtor.QDSData" location="qdsdata.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDSData()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QDSData::operator=" href="qdsdata.html#operator=" location="qdsdata.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="const QDSData &amp;" signature="operator=(const QDSData &amp; other)">
                <parameter left="const QDSData &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QDSData::operator==" href="qdsdata.html#operator==" location="qdsdata.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QDSData &amp; other) const">
                <parameter left="const QDSData &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QDSData::operator!=" href="qdsdata.html#operator!=" location="qdsdata.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QDSData &amp; other) const">
                <parameter left="const QDSData &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QDSData::isValid" href="qdsdata.html#isValid" location="qdsdata.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QDSData::type" href="qdsdata.html#type" location="qdsdata.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMimeType" signature="type() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="data" fullname="QDSData::data" href="qdsdata.html#data" location="qdsdata.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="data() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toString" fullname="QDSData::toString" href="qdsdata.html#toString" location="qdsdata.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="toString() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toIODevice" fullname="QDSData::toIODevice" href="qdsdata.html#toIODevice" location="qdsdata.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QIODevice *" signature="toIODevice() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="store" fullname="QDSData::store" href="qdsdata.html#store" location="qdsdata.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QUniqueId" signature="store()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remove" fullname="QDSData::remove" href="qdsdata.html#remove" location="qdsdata.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="remove()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="modify" fullname="QDSData::modify" href="qdsdata.html#modify" location="qdsdata.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="modify(const QByteArray &amp; data)">
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="modify" fullname="QDSData::modify" href="qdsdata.html#modify-2" location="qdsdata.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="modify(const QString &amp; data)">
                <parameter left="const QString &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="modify" fullname="QDSData::modify" href="qdsdata.html#modify-3" location="qdsdata.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="bool" signature="modify(QFile &amp; data)">
                <parameter left="QFile &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="modify" fullname="QDSData::modify" href="qdsdata.html#modify-4" location="qdsdata.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="4" type="bool" signature="modify(const QByteArray &amp; data, const QMimeType &amp; type)">
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
                <parameter left="const QMimeType &amp;" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="modify" fullname="QDSData::modify" href="qdsdata.html#modify-5" location="qdsdata.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="5" type="bool" signature="modify(const QString &amp; data, const QMimeType &amp; type)">
                <parameter left="const QString &amp;" right="" name="data" default=""></parameter>
                <parameter left="const QMimeType &amp;" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="modify" fullname="QDSData::modify" href="qdsdata.html#modify-6" location="qdsdata.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="6" type="bool" signature="modify(QFile &amp; data, const QMimeType &amp; type)">
                <parameter left="QFile &amp;" right="" name="data" default=""></parameter>
                <parameter left="const QMimeType &amp;" right="" name="type" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemSimToolkit" href="qmodemsimtoolkit.html" location="qmodemsimtoolkit.h" bases="QSimToolkit" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemSimToolkit" fullname="QModemSimToolkit::QModemSimToolkit" href="qmodemsimtoolkit.html#QModemSimToolkit" location="qmodemsimtoolkit.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemSimToolkit(QModemService * service)">
                <parameter left="QModemService *" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemSimToolkit" fullname="QModemSimToolkit::~QModemSimToolkit" href="qmodemsimtoolkit.html#dtor.QModemSimToolkit" location="qmodemsimtoolkit.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemSimToolkit()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="service" fullname="QModemSimToolkit::service" href="qmodemsimtoolkit.html#service" location="qmodemsimtoolkit.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QModemService *" signature="service() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="initialize" fullname="QModemSimToolkit::initialize" href="qmodemsimtoolkit.html#initialize" location="qmodemsimtoolkit.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="initialize()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sendResponse" fullname="QModemSimToolkit::sendResponse" href="qmodemsimtoolkit.html#sendResponse" location="qmodemsimtoolkit.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="sendResponse(const QSimTerminalResponse &amp; resp)">
                <parameter left="const QSimTerminalResponse &amp;" right="" name="resp" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sendEnvelope" fullname="QModemSimToolkit::sendEnvelope" href="qmodemsimtoolkit.html#sendEnvelope" location="qmodemsimtoolkit.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="sendEnvelope(const QSimEnvelope &amp; env)">
                <parameter left="const QSimEnvelope &amp;" right="" name="env" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="initializationStarted" fullname="QModemSimToolkit::initializationStarted" href="qmodemsimtoolkit.html#initializationStarted" location="qmodemsimtoolkit.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="initializationStarted()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="initializationDone" fullname="QModemSimToolkit::initializationDone" href="qmodemsimtoolkit.html#initializationDone" location="qmodemsimtoolkit.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="initializationDone()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="fetchCommand" fullname="QModemSimToolkit::fetchCommand" href="qmodemsimtoolkit.html#fetchCommand" location="qmodemsimtoolkit.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="fetchCommand(int size)">
                <parameter left="int" right="" name="size" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPhoneRfFunctionality" href="qphonerffunctionality.html" location="qphonerffunctionality.h" bases="QCommInterface" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="level" fullname="QPhoneRfFunctionality::level" href="qphonerffunctionality.html#level-prop" location="qphonerffunctionality.h" type="QPhoneRfFunctionality::Level">
                <getter name="level"></getter>
                <setter name="setLevel"></setter>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QPhoneRfFunctionality" fullname="QPhoneRfFunctionality::QPhoneRfFunctionality" href="qphonerffunctionality.html#QPhoneRfFunctionality" location="qphonerffunctionality.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPhoneRfFunctionality(const QString &amp; service, QObject * parent, QCommInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="service" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QCommInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPhoneRfFunctionality" fullname="QPhoneRfFunctionality::~QPhoneRfFunctionality" href="qphonerffunctionality.html#dtor.QPhoneRfFunctionality" location="qphonerffunctionality.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPhoneRfFunctionality()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Level" fullname="QPhoneRfFunctionality::Level" href="qphonerffunctionality.html#Level-enum" location="qphonerffunctionality.h">
                <value name="Minimum" value="0"></value>
                <value name="Full" value="1"></value>
                <value name="DisableTransmit" value="2"></value>
                <value name="DisableReceive" value="3"></value>
                <value name="DisableTransmitAndReceive" value="4"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="level" fullname="QPhoneRfFunctionality::level" href="qphonerffunctionality.html#level-prop" location="qphonerffunctionality.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="level" type="QPhoneRfFunctionality::Level" signature="level() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="forceLevelRequest" fullname="QPhoneRfFunctionality::forceLevelRequest" href="qphonerffunctionality.html#forceLevelRequest" location="qphonerffunctionality.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="forceLevelRequest()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLevel" fullname="QPhoneRfFunctionality::setLevel" href="qphonerffunctionality.html#level-prop" location="qphonerffunctionality.h" virtual="impure" meta="slot" const="false" static="false" overload="false" associated-property="level" type="void" signature="setLevel(QPhoneRfFunctionality::Level level)">
                <parameter left="QPhoneRfFunctionality::Level" right="" name="level" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="levelChanged" fullname="QPhoneRfFunctionality::levelChanged" href="qphonerffunctionality.html#levelChanged" location="qphonerffunctionality.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="levelChanged()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLevelResult" fullname="QPhoneRfFunctionality::setLevelResult" href="qphonerffunctionality.html#setLevelResult" location="qphonerffunctionality.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="setLevelResult(QTelephony::Result result)">
                <parameter left="QTelephony::Result" right="" name="result" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSimGenericAccess" href="qsimgenericaccess.html" location="qsimgenericaccess.h" bases="QCommInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSimGenericAccess" fullname="QSimGenericAccess::QSimGenericAccess" href="qsimgenericaccess.html#QSimGenericAccess" location="qsimgenericaccess.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSimGenericAccess(const QString &amp; service, QObject * parent, QCommInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="service" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QCommInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSimGenericAccess" fullname="QSimGenericAccess::~QSimGenericAccess" href="qsimgenericaccess.html#dtor.QSimGenericAccess" location="qsimgenericaccess.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSimGenericAccess()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="command" fullname="QSimGenericAccess::command" href="qsimgenericaccess.html#command" location="qsimgenericaccess.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="command(const QByteArray &amp; data)">
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="command" fullname="QSimGenericAccess::command" href="qsimgenericaccess.html#command-2" location="qsimgenericaccess.h" virtual="impure" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="command(const QString &amp; reqid, const QByteArray &amp; data)">
                <parameter left="const QString &amp;" right="" name="reqid" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="response" fullname="QSimGenericAccess::response" href="qsimgenericaccess.html#response" location="qsimgenericaccess.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="response(const QString &amp; reqid, QTelephony::Result result, const QByteArray &amp; data)">
                <parameter left="const QString &amp;" right="" name="reqid" default=""></parameter>
                <parameter left="QTelephony::Result" right="" name="result" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QAtChatScript" href="qatchatscript.html" location="qatchatscript.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAtChatScript" fullname="QAtChatScript::QAtChatScript" href="qatchatscript.html#QAtChatScript" location="qatchatscript.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAtChatScript(QAtChat * atchat, QObject * parent)">
                <parameter left="QAtChat *" right="" name="atchat" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAtChatScript" fullname="QAtChatScript::~QAtChatScript" href="qatchatscript.html#dtor.QAtChatScript" location="qatchatscript.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAtChatScript()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="totalCommands" fullname="QAtChatScript::totalCommands" href="qatchatscript.html#totalCommands" location="qatchatscript.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="totalCommands() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="successfulCommands" fullname="QAtChatScript::successfulCommands" href="qatchatscript.html#successfulCommands" location="qatchatscript.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="successfulCommands() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="runChatFile" fullname="QAtChatScript::runChatFile" href="qatchatscript.html#runChatFile" location="qatchatscript.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="runChatFile(const QString &amp; filename)">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="runChat" fullname="QAtChatScript::runChat" href="qatchatscript.html#runChat" location="qatchatscript.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="runChat(const QString &amp; chatScript)">
                <parameter left="const QString &amp;" right="" name="chatScript" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="runChat" fullname="QAtChatScript::runChat" href="qatchatscript.html#runChat-2" location="qatchatscript.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="runChat(const QStringList &amp; commands)">
                <parameter left="const QStringList &amp;" right="" name="commands" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QAtChatScript::stop" href="qatchatscript.html#stop" location="qatchatscript.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="stop()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="done" fullname="QAtChatScript::done" href="qatchatscript.html#done" location="qatchatscript.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="done(bool ok, const QAtResult &amp; result)">
                <parameter left="bool" right="" name="ok" default=""></parameter>
                <parameter left="const QAtResult &amp;" right="" name="result" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="MmsComms" href="mmscomms.html" location="mmscomms.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="MmsComms" fullname="MmsComms::MmsComms" href="mmscomms.html#MmsComms" location="mmscomms.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="MmsComms(QMailAccount * acc, QObject * parent)">
                <parameter left="QMailAccount *" right="" name="acc" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~MmsComms" fullname="MmsComms::~MmsComms" href="mmscomms.html#dtor.MmsComms" location="mmscomms.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~MmsComms()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sendMessage" fullname="MmsComms::sendMessage" href="mmscomms.html#sendMessage" location="mmscomms.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="sendMessage(MMSMessage &amp; msg, const QByteArray &amp; encoded)">
                <parameter left="MMSMessage &amp;" right="" name="msg" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="encoded" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="retrieveMessage" fullname="MmsComms::retrieveMessage" href="mmscomms.html#retrieveMessage" location="mmscomms.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="retrieveMessage(const QUrl &amp; url)">
                <parameter left="const QUrl &amp;" right="" name="url" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isActive" fullname="MmsComms::isActive" href="mmscomms.html#isActive" location="mmscomms.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isActive() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearRequests" fullname="MmsComms::clearRequests" href="mmscomms.html#clearRequests" location="mmscomms.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="clearRequests()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="networkConfig" fullname="MmsComms::networkConfig" href="mmscomms.html#networkConfig" location="mmscomms.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="networkConfig() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="notificationInd" fullname="MmsComms::notificationInd" href="mmscomms.html#notificationInd" location="mmscomms.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="notificationInd(const MMSMessage &amp; msg)">
                <parameter left="const MMSMessage &amp;" right="" name="msg" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deliveryInd" fullname="MmsComms::deliveryInd" href="mmscomms.html#deliveryInd" location="mmscomms.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="deliveryInd(const MMSMessage &amp; msg)">
                <parameter left="const MMSMessage &amp;" right="" name="msg" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sendConf" fullname="MmsComms::sendConf" href="mmscomms.html#sendConf" location="mmscomms.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="sendConf(const MMSMessage &amp; msg)">
                <parameter left="const MMSMessage &amp;" right="" name="msg" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="retrieveConf" fullname="MmsComms::retrieveConf" href="mmscomms.html#retrieveConf" location="mmscomms.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="retrieveConf(const MMSMessage &amp; msg, int size)">
                <parameter left="const MMSMessage &amp;" right="" name="msg" default=""></parameter>
                <parameter left="int" right="" name="size" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="statusChange" fullname="MmsComms::statusChange" href="mmscomms.html#statusChange" location="mmscomms.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="statusChange(const QString &amp; status)">
                <parameter left="const QString &amp;" right="" name="status" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="MmsComms::error" href="mmscomms.html#error" location="mmscomms.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="error(int code, const QString &amp; msg)">
                <parameter left="int" right="" name="code" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="msg" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="transferSize" fullname="MmsComms::transferSize" href="mmscomms.html#transferSize" location="mmscomms.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="transferSize(int size)">
                <parameter left="int" right="" name="size" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="transfersComplete" fullname="MmsComms::transfersComplete" href="mmscomms.html#transfersComplete" location="mmscomms.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="transfersComplete()"></function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="account" fullname="MmsComms::account" href="mmscomms.html#account-var" location="mmscomms.h" type="QMailAccount *" static="false"></variable>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QThumbnail" href="qthumbnail.html" location="qthumbnail.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QThumbnail" fullname="QThumbnail::QThumbnail" href="qthumbnail.html#QThumbnail" location="qthumbnail.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QThumbnail(const QString &amp; fileName)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QThumbnail" fullname="QThumbnail::QThumbnail" href="qthumbnail.html#QThumbnail-2" location="qthumbnail.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QThumbnail(QIODevice * device)">
                <parameter left="QIODevice *" right="" name="device" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QThumbnail" fullname="QThumbnail::~QThumbnail" href="qthumbnail.html#dtor.QThumbnail" location="qthumbnail.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QThumbnail()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="actualSize" fullname="QThumbnail::actualSize" href="qthumbnail.html#actualSize" location="qthumbnail.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QSize" signature="actualSize(const QSize &amp; size, Qt::AspectRatioMode mode)">
                <parameter left="const QSize &amp;" right="" name="size" default="QSize()"></parameter>
                <parameter left="Qt::AspectRatioMode" right="" name="mode" default="Qt::KeepAspectRatio"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pixmap" fullname="QThumbnail::pixmap" href="qthumbnail.html#pixmap" location="qthumbnail.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QPixmap" signature="pixmap(const QSize &amp; size, Qt::AspectRatioMode mode, Qt::TransformationMode transformationMode)">
                <parameter left="const QSize &amp;" right="" name="size" default=""></parameter>
                <parameter left="Qt::AspectRatioMode" right="" name="mode" default="Qt::KeepAspectRatio"></parameter>
                <parameter left="Qt::TransformationMode" right="" name="transformationMode" default="Qt::FastTransformation"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="AlarmControl" href="alarmcontrol.html" location="alarmcontrol.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="instance" fullname="AlarmControl::instance" href="alarmcontrol.html#instance" location="alarmcontrol.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="AlarmControl *" signature="instance()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="alarmState" fullname="AlarmControl::alarmState" href="alarmcontrol.html#alarmState" location="alarmcontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="alarmState() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="alarmStateChanged" fullname="AlarmControl::alarmStateChanged" href="alarmcontrol.html#alarmStateChanged" location="alarmcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="alarmStateChanged(bool newState)">
                <parameter left="bool" right="" name="newState" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemGprsNetworkRegistration" href="qmodemgprsnetworkregistration.html" location="qmodemgprsnetworkregistration.h" bases="QGprsNetworkRegistrationServer" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemGprsNetworkRegistration" fullname="QModemGprsNetworkRegistration::QModemGprsNetworkRegistration" href="qmodemgprsnetworkregistration.html#QModemGprsNetworkRegistration" location="qmodemgprsnetworkregistration.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemGprsNetworkRegistration(QModemService * service)">
                <parameter left="QModemService *" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemGprsNetworkRegistration" fullname="QModemGprsNetworkRegistration::~QModemGprsNetworkRegistration" href="qmodemgprsnetworkregistration.html#dtor.QModemGprsNetworkRegistration" location="qmodemgprsnetworkregistration.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemGprsNetworkRegistration()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="CameraService" href="cameraservice.html" location="mainwindow.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="getImage" fullname="CameraService::getImage" href="cameraservice.html#getImage" location="mainwindow.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="getImage(const QDSActionRequest &amp; request)">
                <parameter left="const QDSActionRequest &amp;" right="" name="request" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="shutter" fullname="CameraService::shutter" href="cameraservice.html#shutter" location="mainwindow.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="shutter()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBandSelection" href="qbandselection.html" location="qbandselection.h" bases="QCommInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBandSelection" fullname="QBandSelection::QBandSelection" href="qbandselection.html#QBandSelection" location="qbandselection.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBandSelection(const QString &amp; service, QObject * parent, QCommInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="service" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QCommInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBandSelection" fullname="QBandSelection::~QBandSelection" href="qbandselection.html#dtor.QBandSelection" location="qbandselection.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBandSelection()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="BandMode" fullname="QBandSelection::BandMode" href="qbandselection.html#BandMode-enum" location="qbandselection.h">
                <value name="Automatic" value="0"></value>
                <value name="Manual" value="1"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestBand" fullname="QBandSelection::requestBand" href="qbandselection.html#requestBand" location="qbandselection.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="requestBand()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestBands" fullname="QBandSelection::requestBands" href="qbandselection.html#requestBands" location="qbandselection.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="requestBands()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBand" fullname="QBandSelection::setBand" href="qbandselection.html#setBand" location="qbandselection.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setBand(QBandSelection::BandMode mode, const QString &amp; value)">
                <parameter left="QBandSelection::BandMode" right="" name="mode" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="band" fullname="QBandSelection::band" href="qbandselection.html#band" location="qbandselection.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="band(QBandSelection::BandMode mode, const QString &amp; value)">
                <parameter left="QBandSelection::BandMode" right="" name="mode" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bands" fullname="QBandSelection::bands" href="qbandselection.html#bands" location="qbandselection.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="bands(const QStringList &amp; list)">
                <parameter left="const QStringList &amp;" right="" name="list" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBandResult" fullname="QBandSelection::setBandResult" href="qbandselection.html#setBandResult" location="qbandselection.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="setBandResult(QTelephony::Result result)">
                <parameter left="QTelephony::Result" right="" name="result" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSimControlEvent" href="qsimcontrolevent.html" location="qsimcontrolevent.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSimControlEvent" fullname="QSimControlEvent::QSimControlEvent" href="qsimcontrolevent.html#QSimControlEvent" location="qsimcontrolevent.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSimControlEvent()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSimControlEvent" fullname="QSimControlEvent::QSimControlEvent" href="qsimcontrolevent.html#QSimControlEvent-2" location="qsimcontrolevent.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QSimControlEvent(const QSimControlEvent &amp; value)">
                <parameter left="const QSimControlEvent &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSimControlEvent" fullname="QSimControlEvent::~QSimControlEvent" href="qsimcontrolevent.html#dtor.QSimControlEvent" location="qsimcontrolevent.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSimControlEvent()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="QSimControlEvent::Type" href="qsimcontrolevent.html#Type-enum" location="qsimcontrolevent.h">
                <value name="Call" value="0"></value>
                <value name="Sms" value="1"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Result" fullname="QSimControlEvent::Result" href="qsimcontrolevent.html#Result-enum" location="qsimcontrolevent.h">
                <value name="Allowed" value="0"></value>
                <value name="NotAllowed" value="1"></value>
                <value name="AllowedWithModifications" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QSimControlEvent::type" href="qsimcontrolevent.html#type" location="qsimcontrolevent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSimControlEvent::Type" signature="type() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setType" fullname="QSimControlEvent::setType" href="qsimcontrolevent.html#setType" location="qsimcontrolevent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setType(QSimControlEvent::Type value)">
                <parameter left="QSimControlEvent::Type" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="result" fullname="QSimControlEvent::result" href="qsimcontrolevent.html#result" location="qsimcontrolevent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSimControlEvent::Result" signature="result() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setResult" fullname="QSimControlEvent::setResult" href="qsimcontrolevent.html#setResult" location="qsimcontrolevent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setResult(QSimControlEvent::Result value)">
                <parameter left="QSimControlEvent::Result" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="text" fullname="QSimControlEvent::text" href="qsimcontrolevent.html#text" location="qsimcontrolevent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="text() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setText" fullname="QSimControlEvent::setText" href="qsimcontrolevent.html#setText" location="qsimcontrolevent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setText(const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="extensionData" fullname="QSimControlEvent::extensionData" href="qsimcontrolevent.html#extensionData" location="qsimcontrolevent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="extensionData() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExtensionData" fullname="QSimControlEvent::setExtensionData" href="qsimcontrolevent.html#setExtensionData" location="qsimcontrolevent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setExtensionData(QByteArray value)">
                <parameter left="QByteArray" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="extensionField" fullname="QSimControlEvent::extensionField" href="qsimcontrolevent.html#extensionField" location="qsimcontrolevent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="extensionField(int tag) const">
                <parameter left="int" right="" name="tag" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addExtensionField" fullname="QSimControlEvent::addExtensionField" href="qsimcontrolevent.html#addExtensionField" location="qsimcontrolevent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addExtensionField(int tag, const QByteArray &amp; value)">
                <parameter left="int" right="" name="tag" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromPdu" fullname="QSimControlEvent::fromPdu" href="qsimcontrolevent.html#fromPdu" location="qsimcontrolevent.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QSimControlEvent" signature="fromPdu(QSimControlEvent::Type type, const QByteArray &amp; pdu)">
                <parameter left="QSimControlEvent::Type" right="" name="type" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="pdu" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toPdu" fullname="QSimControlEvent::toPdu" href="qsimcontrolevent.html#toPdu" location="qsimcontrolevent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="toPdu() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QSimControlEvent::operator=" href="qsimcontrolevent.html#operator=" location="qsimcontrolevent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QSimControlEvent &amp;" signature="operator=(const QSimControlEvent &amp; value)">
                <parameter left="const QSimControlEvent &amp;" right="" name="value" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QCallBarring" href="qcallbarring.html" location="qcallbarring.h" bases="QCommInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QCallBarring" fullname="QCallBarring::QCallBarring" href="qcallbarring.html#QCallBarring" location="qcallbarring.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCallBarring(const QString &amp; service, QObject * parent, QCommInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="service" default="QString::null"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QCommInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCallBarring" fullname="QCallBarring::~QCallBarring" href="qcallbarring.html#dtor.QCallBarring" location="qcallbarring.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCallBarring()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="BarringType" fullname="QCallBarring::BarringType" href="qcallbarring.html#BarringType-enum" location="qcallbarring.h">
                <value name="OutgoingAll" value="0"></value>
                <value name="OutgoingInternational" value="1"></value>
                <value name="OutgoingInternationalExceptHome" value="2"></value>
                <value name="IncomingAll" value="3"></value>
                <value name="IncomingWhenRoaming" value="4"></value>
                <value name="IncomingNonTA" value="5"></value>
                <value name="IncomingNonMT" value="6"></value>
                <value name="IncomingNonSIM" value="7"></value>
                <value name="IncomingNonMemory" value="8"></value>
                <value name="AllBarringServices" value="9"></value>
                <value name="AllOutgoingBarringServices" value="10"></value>
                <value name="AllIncomingBarringServices" value="11"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestBarringStatus" fullname="QCallBarring::requestBarringStatus" href="qcallbarring.html#requestBarringStatus" location="qcallbarring.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="requestBarringStatus(QCallBarring::BarringType type)">
                <parameter left="QCallBarring::BarringType" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBarringStatus" fullname="QCallBarring::setBarringStatus" href="qcallbarring.html#setBarringStatus" location="qcallbarring.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setBarringStatus(QCallBarring::BarringType type, const QString &amp; password, QTelephony::CallClass cls, bool lock)">
                <parameter left="QCallBarring::BarringType" right="" name="type" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="password" default=""></parameter>
                <parameter left="QTelephony::CallClass" right="" name="cls" default=""></parameter>
                <parameter left="bool" right="" name="lock" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unlockAll" fullname="QCallBarring::unlockAll" href="qcallbarring.html#unlockAll" location="qcallbarring.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="unlockAll(const QString &amp; password)">
                <parameter left="const QString &amp;" right="" name="password" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unlockAllIncoming" fullname="QCallBarring::unlockAllIncoming" href="qcallbarring.html#unlockAllIncoming" location="qcallbarring.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="unlockAllIncoming(const QString &amp; password)">
                <parameter left="const QString &amp;" right="" name="password" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unlockAllOutgoing" fullname="QCallBarring::unlockAllOutgoing" href="qcallbarring.html#unlockAllOutgoing" location="qcallbarring.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="unlockAllOutgoing(const QString &amp; password)">
                <parameter left="const QString &amp;" right="" name="password" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="changeBarringPassword" fullname="QCallBarring::changeBarringPassword" href="qcallbarring.html#changeBarringPassword" location="qcallbarring.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="changeBarringPassword(QCallBarring::BarringType type, const QString &amp; oldPassword, const QString &amp; newPassword)">
                <parameter left="QCallBarring::BarringType" right="" name="type" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="oldPassword" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="newPassword" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="barringStatus" fullname="QCallBarring::barringStatus" href="qcallbarring.html#barringStatus" location="qcallbarring.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="barringStatus(QCallBarring::BarringType type, QTelephony::CallClass cls)">
                <parameter left="QCallBarring::BarringType" right="" name="type" default=""></parameter>
                <parameter left="QTelephony::CallClass" right="" name="cls" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBarringStatusResult" fullname="QCallBarring::setBarringStatusResult" href="qcallbarring.html#setBarringStatusResult" location="qcallbarring.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="setBarringStatusResult(QTelephony::Result result)">
                <parameter left="QTelephony::Result" right="" name="result" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unlockResult" fullname="QCallBarring::unlockResult" href="qcallbarring.html#unlockResult" location="qcallbarring.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="unlockResult(QTelephony::Result result)">
                <parameter left="QTelephony::Result" right="" name="result" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="changeBarringPasswordResult" fullname="QCallBarring::changeBarringPasswordResult" href="qcallbarring.html#changeBarringPasswordResult" location="qcallbarring.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="changeBarringPasswordResult(QTelephony::Result result)">
                <parameter left="QTelephony::Result" right="" name="result" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtopiaPowerManager" href="qtopiapowermanager.html" location="qtopiapowermanager.h" bases="QObject,QWSScreenSaver" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaPowerManager" fullname="QtopiaPowerManager::QtopiaPowerManager" href="qtopiapowermanager.html#QtopiaPowerManager" location="qtopiapowermanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtopiaPowerManager()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="restore" fullname="QtopiaPowerManager::restore" href="qtopiapowermanager.html#restore" location="qtopiapowermanager.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="restore()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultIntervals" fullname="QtopiaPowerManager::setDefaultIntervals" href="qtopiapowermanager.html#setDefaultIntervals" location="qtopiapowermanager.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefaultIntervals()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIntervals" fullname="QtopiaPowerManager::setIntervals" href="qtopiapowermanager.html#setIntervals" location="qtopiapowermanager.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setIntervals(int * v, int size)">
                <parameter left="int *" right="" name="v" default=""></parameter>
                <parameter left="int" right="" name="size" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="save" fullname="QtopiaPowerManager::save" href="qtopiapowermanager.html#save" location="qtopiapowermanager.cpp" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="save(int level)">
                <parameter left="int" right="" name="level" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setActive" fullname="QtopiaPowerManager::setActive" href="qtopiapowermanager.html#setActive" location="qtopiapowermanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setActive(bool on)">
                <parameter left="bool" right="" name="on" default=""></parameter>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="m_powerConstraint" fullname="QtopiaPowerManager::m_powerConstraint" href="qtopiapowermanager.html#m_powerConstraint-var" location="qtopiapowermanager.h" type="QtopiaApplication::PowerConstraint" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="m_dimLightEnabled" fullname="QtopiaPowerManager::m_dimLightEnabled" href="qtopiapowermanager.html#m_dimLightEnabled-var" location="qtopiapowermanager.h" type="bool" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="m_lightOffEnabled" fullname="QtopiaPowerManager::m_lightOffEnabled" href="qtopiapowermanager.html#m_lightOffEnabled-var" location="qtopiapowermanager.h" type="bool" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="m_levelToAction" fullname="QtopiaPowerManager::m_levelToAction" href="qtopiapowermanager.html#m_levelToAction-var" location="qtopiapowermanager.h" type="QMap&lt;int, int&gt;" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="m_vso" fullname="QtopiaPowerManager::m_vso" href="qtopiapowermanager.html#m_vso-var" location="qtopiapowermanager.h" type="QValueSpaceObject *" static="true"></variable>
            <function access="protected" threadsafety="unspecified" status="commendable" name="forceSuspend" fullname="QtopiaPowerManager::forceSuspend" href="qtopiapowermanager.html#forceSuspend" location="qtopiapowermanager.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="forceSuspend()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtopiaPowerConstraintManager" href="qtopiapowerconstraintmanager.html" location="qtopiapowermanager.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaPowerConstraintManager" fullname="QtopiaPowerConstraintManager::QtopiaPowerConstraintManager" href="qtopiapowerconstraintmanager.html#QtopiaPowerConstraintManager" location="qtopiapowermanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtopiaPowerConstraintManager(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setConstraint" fullname="QtopiaPowerConstraintManager::setConstraint" href="qtopiapowerconstraintmanager.html#setConstraint" location="qtopiapowermanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setConstraint(QtopiaApplication::PowerConstraint mode, const QString &amp; app)">
                <parameter left="QtopiaApplication::PowerConstraint" right="" name="mode" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="app" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="instance" fullname="QtopiaPowerConstraintManager::instance" href="qtopiapowerconstraintmanager.html#instance" location="qtopiapowermanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QtopiaPowerConstraintManager *" signature="instance()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="applicationTerminated" fullname="QtopiaPowerConstraintManager::applicationTerminated" href="qtopiapowerconstraintmanager.html#applicationTerminated" location="qtopiapowermanager.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="applicationTerminated(const QString &amp; app)">
                <parameter left="const QString &amp;" right="" name="app" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="forceSuspend" fullname="QtopiaPowerConstraintManager::forceSuspend" href="qtopiapowerconstraintmanager.html#forceSuspend" location="qtopiapowermanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="forceSuspend()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QContentFilterModel" href="qcontentfiltermodel.html" location="qcontentfiltermodel.h" bases="QAbstractItemModel" module="">
            <contents name="file-path-lists" title="File path lists" level="1"></contents>
            <contents name="mime-type-lists" title="Mime type lists" level="1"></contents>
            <contents name="category-lists" title="Category lists" level="1"></contents>
            <contents name="property-lists" title="Property lists" level="1"></contents>
            <contents name="templates" title="Templates" level="1"></contents>
            <contents name="labels" title="Labels" level="2"></contents>
            <contents name="nested-templates" title="Nested templates" level="2"></contents>
            <contents name="multiple-selection" title="Multiple selection" level="1"></contents>
            <enum access="public" threadsafety="unspecified" status="commendable" name="TemplateOption" fullname="QContentFilterModel::TemplateOption" href="qcontentfiltermodel.html#TemplateOption-enum" location="qcontentfiltermodel.h" typedef="QContentFilterModel::TemplateOptions">
                <value name="NoTemplateOptions" value="0x00"></value>
                <value name="SelectAll" value="0x01"></value>
                <value name="ForceAll" value="0x02"></value>
                <value name="CheckList" value="0x04"></value>
                <value name="AndCheckedFilters" value="0x08"></value>
                <value name="ShowEmptyLabels" value="0x10"></value>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="TemplateOptions" fullname="QContentFilterModel::TemplateOptions" href="qcontentfiltermodel.html#TemplateOptions-typedef" location="qcontentfiltermodel.h" enum="QContentFilterModel::TemplateOption"></typedef>
            <class access="public" threadsafety="unspecified" status="main" name="Template" fullname="QContentFilterModel::Template" href="qcontentfiltermodel-template.html" location="qcontentfiltermodel.h" bases="" module="">
                <function access="public" threadsafety="unspecified" status="commendable" name="Template" fullname="QContentFilterModel::Template::Template" href="qcontentfiltermodel-template.html#Template" location="qcontentfiltermodel.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="Template()"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="Template" fullname="QContentFilterModel::Template::Template" href="qcontentfiltermodel-template.html#Template-2" location="qcontentfiltermodel.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="Template(QContentFilter::FilterType type, const QString &amp; scope, QFlags&lt;QContentFilterModel::TemplateOption&gt; options, const QStringList &amp; checked)">
                    <parameter left="QContentFilter::FilterType" right="" name="type" default=""></parameter>
                    <parameter left="const QString &amp;" right="" name="scope" default="QString()"></parameter>
                    <parameter left="QFlags&lt;QContentFilterModel::TemplateOption&gt;" right="" name="options" default="NoTemplateOptions"></parameter>
                    <parameter left="const QStringList &amp;" right="" name="checked" default="QStringList()"></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="Template" fullname="QContentFilterModel::Template::Template" href="qcontentfiltermodel-template.html#Template-3" location="qcontentfiltermodel.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="Template(QContent::Property property, QFlags&lt;QContentFilterModel::TemplateOption&gt; options, const QStringList &amp; checked)">
                    <parameter left="QContent::Property" right="" name="property" default=""></parameter>
                    <parameter left="QFlags&lt;QContentFilterModel::TemplateOption&gt;" right="" name="options" default="NoTemplateOptions"></parameter>
                    <parameter left="const QStringList &amp;" right="" name="checked" default="QStringList()"></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="Template" fullname="QContentFilterModel::Template::Template" href="qcontentfiltermodel-template.html#Template-4" location="qcontentfiltermodel.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="Template(const Template &amp; target, QContentFilter::FilterType type, const QString &amp; scope, QFlags&lt;QContentFilterModel::TemplateOption&gt; options, const QStringList &amp; checked)">
                    <parameter left="const Template &amp;" right="" name="target" default=""></parameter>
                    <parameter left="QContentFilter::FilterType" right="" name="type" default=""></parameter>
                    <parameter left="const QString &amp;" right="" name="scope" default="QString()"></parameter>
                    <parameter left="QFlags&lt;QContentFilterModel::TemplateOption&gt;" right="" name="options" default="NoTemplateOptions"></parameter>
                    <parameter left="const QStringList &amp;" right="" name="checked" default="QStringList()"></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="Template" fullname="QContentFilterModel::Template::Template" href="qcontentfiltermodel-template.html#Template-5" location="qcontentfiltermodel.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="5" type="" signature="Template(const Template &amp; target, QContent::Property property, QFlags&lt;QContentFilterModel::TemplateOption&gt; options, const QStringList &amp; checked)">
                    <parameter left="const Template &amp;" right="" name="target" default=""></parameter>
                    <parameter left="QContent::Property" right="" name="property" default=""></parameter>
                    <parameter left="QFlags&lt;QContentFilterModel::TemplateOption&gt;" right="" name="options" default="NoTemplateOptions"></parameter>
                    <parameter left="const QStringList &amp;" right="" name="checked" default="QStringList()"></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="Template" fullname="QContentFilterModel::Template::Template" href="qcontentfiltermodel-template.html#Template-6" location="qcontentfiltermodel.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="6" type="" signature="Template(const Template &amp; other)">
                    <parameter left="const Template &amp;" right="" name="other" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="~Template" fullname="QContentFilterModel::Template::~Template" href="qcontentfiltermodel-template.html#dtor.Template" location="qcontentfiltermodel.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~Template()"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QContentFilterModel::Template::operator=" href="qcontentfiltermodel-template.html#operator=" location="qcontentfiltermodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="Template &amp;" signature="operator=(const Template &amp; other)">
                    <parameter left="const Template &amp;" right="" name="other" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QContentFilterModel::Template::isValid" href="qcontentfiltermodel-template.html#isValid" location="qcontentfiltermodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="options" fullname="QContentFilterModel::Template::options" href="qcontentfiltermodel-template.html#options" location="qcontentfiltermodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="TemplateOptions" signature="options() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="setOptions" fullname="QContentFilterModel::Template::setOptions" href="qcontentfiltermodel-template.html#setOptions" location="qcontentfiltermodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setOptions(QFlags&lt;QContentFilterModel::TemplateOption&gt; options)">
                    <parameter left="QFlags&lt;QContentFilterModel::TemplateOption&gt;" right="" name="options" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="addLabel" fullname="QContentFilterModel::Template::addLabel" href="qcontentfiltermodel-template.html#addLabel" location="qcontentfiltermodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addLabel(const QString &amp; title, bool checked)">
                    <parameter left="const QString &amp;" right="" name="title" default=""></parameter>
                    <parameter left="bool" right="" name="checked" default="false"></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="addLabel" fullname="QContentFilterModel::Template::addLabel" href="qcontentfiltermodel-template.html#addLabel-2" location="qcontentfiltermodel.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="addLabel(const Template &amp; target, const QString &amp; title, bool checked)">
                    <parameter left="const Template &amp;" right="" name="target" default=""></parameter>
                    <parameter left="const QString &amp;" right="" name="title" default=""></parameter>
                    <parameter left="bool" right="" name="checked" default="false"></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="addLabel" fullname="QContentFilterModel::Template::addLabel" href="qcontentfiltermodel-template.html#addLabel-3" location="qcontentfiltermodel.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="void" signature="addLabel(const QString &amp; title, const QContentFilter &amp; filter, bool checked)">
                    <parameter left="const QString &amp;" right="" name="title" default=""></parameter>
                    <parameter left="const QContentFilter &amp;" right="" name="filter" default=""></parameter>
                    <parameter left="bool" right="" name="checked" default="false"></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="addLabel" fullname="QContentFilterModel::Template::addLabel" href="qcontentfiltermodel-template.html#addLabel-4" location="qcontentfiltermodel.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="4" type="void" signature="addLabel(const Template &amp; target, const QString &amp; title, const QContentFilter &amp; filter, bool checked)">
                    <parameter left="const Template &amp;" right="" name="target" default=""></parameter>
                    <parameter left="const QString &amp;" right="" name="title" default=""></parameter>
                    <parameter left="const QContentFilter &amp;" right="" name="filter" default=""></parameter>
                    <parameter left="bool" right="" name="checked" default="false"></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="addList" fullname="QContentFilterModel::Template::addList" href="qcontentfiltermodel-template.html#addList" location="qcontentfiltermodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addList(QContentFilter::FilterType type, const QString &amp; scope, const QStringList &amp; checked)">
                    <parameter left="QContentFilter::FilterType" right="" name="type" default=""></parameter>
                    <parameter left="const QString &amp;" right="" name="scope" default="QString()"></parameter>
                    <parameter left="const QStringList &amp;" right="" name="checked" default="QStringList()"></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="addList" fullname="QContentFilterModel::Template::addList" href="qcontentfiltermodel-template.html#addList-2" location="qcontentfiltermodel.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="addList(const Template &amp; target, QContentFilter::FilterType type, const QString &amp; scope, const QStringList &amp; checked)">
                    <parameter left="const Template &amp;" right="" name="target" default=""></parameter>
                    <parameter left="QContentFilter::FilterType" right="" name="type" default=""></parameter>
                    <parameter left="const QString &amp;" right="" name="scope" default="QString()"></parameter>
                    <parameter left="const QStringList &amp;" right="" name="checked" default="QStringList()"></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="addList" fullname="QContentFilterModel::Template::addList" href="qcontentfiltermodel-template.html#addList-3" location="qcontentfiltermodel.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="void" signature="addList(const QContentFilter &amp; filter, QContentFilter::FilterType type, const QString &amp; scope, const QStringList &amp; checked)">
                    <parameter left="const QContentFilter &amp;" right="" name="filter" default=""></parameter>
                    <parameter left="QContentFilter::FilterType" right="" name="type" default=""></parameter>
                    <parameter left="const QString &amp;" right="" name="scope" default="QString()"></parameter>
                    <parameter left="const QStringList &amp;" right="" name="checked" default="QStringList()"></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="addList" fullname="QContentFilterModel::Template::addList" href="qcontentfiltermodel-template.html#addList-4" location="qcontentfiltermodel.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="4" type="void" signature="addList(const Template &amp; target, const QContentFilter &amp; filter, QContentFilter::FilterType type, const QString &amp; scope, const QStringList &amp; checked)">
                    <parameter left="const Template &amp;" right="" name="target" default=""></parameter>
                    <parameter left="const QContentFilter &amp;" right="" name="filter" default=""></parameter>
                    <parameter left="QContentFilter::FilterType" right="" name="type" default=""></parameter>
                    <parameter left="const QString &amp;" right="" name="scope" default="QString()"></parameter>
                    <parameter left="const QStringList &amp;" right="" name="checked" default="QStringList()"></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="addList" fullname="QContentFilterModel::Template::addList" href="qcontentfiltermodel-template.html#addList-5" location="qcontentfiltermodel.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="5" type="void" signature="addList(QContent::Property property, const QStringList &amp; checked)">
                    <parameter left="QContent::Property" right="" name="property" default=""></parameter>
                    <parameter left="const QStringList &amp;" right="" name="checked" default="QStringList()"></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="addList" fullname="QContentFilterModel::Template::addList" href="qcontentfiltermodel-template.html#addList-6" location="qcontentfiltermodel.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="6" type="void" signature="addList(const Template &amp; target, QContent::Property property, const QStringList &amp; checked)">
                    <parameter left="const Template &amp;" right="" name="target" default=""></parameter>
                    <parameter left="QContent::Property" right="" name="property" default=""></parameter>
                    <parameter left="const QStringList &amp;" right="" name="checked" default="QStringList()"></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="addList" fullname="QContentFilterModel::Template::addList" href="qcontentfiltermodel-template.html#addList-7" location="qcontentfiltermodel.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="7" type="void" signature="addList(const QContentFilter &amp; filter, QContent::Property property, const QStringList &amp; checked)">
                    <parameter left="const QContentFilter &amp;" right="" name="filter" default=""></parameter>
                    <parameter left="QContent::Property" right="" name="property" default=""></parameter>
                    <parameter left="const QStringList &amp;" right="" name="checked" default="QStringList()"></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="addList" fullname="QContentFilterModel::Template::addList" href="qcontentfiltermodel-template.html#addList-8" location="qcontentfiltermodel.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="8" type="void" signature="addList(const Template &amp; target, const QContentFilter &amp; filter, QContent::Property property, const QStringList &amp; checked)">
                    <parameter left="const Template &amp;" right="" name="target" default=""></parameter>
                    <parameter left="const QContentFilter &amp;" right="" name="filter" default=""></parameter>
                    <parameter left="QContent::Property" right="" name="property" default=""></parameter>
                    <parameter left="const QStringList &amp;" right="" name="checked" default="QStringList()"></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QContentFilterModel::Template::filter" href="qcontentfiltermodel-template.html#filter" location="qcontentfiltermodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentFilter" signature="filter() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="setFilter" fullname="QContentFilterModel::Template::setFilter" href="qcontentfiltermodel-template.html#setFilter" location="qcontentfiltermodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilter(const QContentFilter &amp; filter)">
                    <parameter left="const QContentFilter &amp;" right="" name="filter" default=""></parameter>
                </function>
            </class>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentFilterModel" fullname="QContentFilterModel::QContentFilterModel" href="qcontentfiltermodel.html#QContentFilterModel" location="qcontentfiltermodel.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContentFilterModel(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentFilterModel" fullname="QContentFilterModel::QContentFilterModel" href="qcontentfiltermodel.html#QContentFilterModel-2" location="qcontentfiltermodel.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContentFilterModel(QContent::Property property, QFlags&lt;QContentFilterModel::TemplateOption&gt; options, const QStringList &amp; checked, QObject * parent)">
                <parameter left="QContent::Property" right="" name="property" default=""></parameter>
                <parameter left="QFlags&lt;QContentFilterModel::TemplateOption&gt;" right="" name="options" default="SelectAll"></parameter>
                <parameter left="const QStringList &amp;" right="" name="checked" default="QStringList()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContentFilterModel" fullname="QContentFilterModel::QContentFilterModel" href="qcontentfiltermodel.html#QContentFilterModel-3" location="qcontentfiltermodel.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QContentFilterModel(QContentFilter::FilterType type, const QString &amp; scope, QFlags&lt;QContentFilterModel::TemplateOption&gt; options, const QStringList &amp; checked, QObject * parent)">
                <parameter left="QContentFilter::FilterType" right="" name="type" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="scope" default="QString()"></parameter>
                <parameter left="QFlags&lt;QContentFilterModel::TemplateOption&gt;" right="" name="options" default="SelectAll"></parameter>
                <parameter left="const QStringList &amp;" right="" name="checked" default="QStringList()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContentFilterModel" fullname="QContentFilterModel::~QContentFilterModel" href="qcontentfiltermodel.html#dtor.QContentFilterModel" location="qcontentfiltermodel.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContentFilterModel()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="modelTemplate" fullname="QContentFilterModel::modelTemplate" href="qcontentfiltermodel.html#modelTemplate" location="qcontentfiltermodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Template" signature="modelTemplate() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setModelTemplate" fullname="QContentFilterModel::setModelTemplate" href="qcontentfiltermodel.html#setModelTemplate" location="qcontentfiltermodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setModelTemplate(const Template &amp; modelTemplate)">
                <parameter left="const Template &amp;" right="" name="modelTemplate" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="baseFilter" fullname="QContentFilterModel::baseFilter" href="qcontentfiltermodel.html#baseFilter" location="qcontentfiltermodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentFilter" signature="baseFilter() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBaseFilter" fullname="QContentFilterModel::setBaseFilter" href="qcontentfiltermodel.html#setBaseFilter" location="qcontentfiltermodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBaseFilter(const QContentFilter &amp; filter)">
                <parameter left="const QContentFilter &amp;" right="" name="filter" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QContentFilterModel::filter" href="qcontentfiltermodel.html#filter" location="qcontentfiltermodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentFilter" signature="filter(const QModelIndex &amp; index) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="checkedFilter" fullname="QContentFilterModel::checkedFilter" href="qcontentfiltermodel.html#checkedFilter" location="qcontentfiltermodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentFilter" signature="checkedFilter(const QModelIndex &amp; parent) const">
                <parameter left="const QModelIndex &amp;" right="" name="parent" default="QModelIndex()"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPimModel" href="qpimmodel.html" location="qpimmodel.h" bases="QAbstractItemModel" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QPimModel" fullname="QPimModel::QPimModel" href="qpimmodel.html#QPimModel" location="qpimmodel.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPimModel(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPimModel" fullname="QPimModel::~QPimModel" href="qpimmodel.html#dtor.QPimModel" location="qpimmodel.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPimModel()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="startSyncTransaction" fullname="QPimModel::startSyncTransaction" href="qpimmodel.html#startSyncTransaction" location="qpimmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="startSyncTransaction(const QDateTime &amp; timestamp)">
                <parameter left="const QDateTime &amp;" right="" name="timestamp" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="abortSyncTransaction" fullname="QPimModel::abortSyncTransaction" href="qpimmodel.html#abortSyncTransaction" location="qpimmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="abortSyncTransaction()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="commitSyncTransaction" fullname="QPimModel::commitSyncTransaction" href="qpimmodel.html#commitSyncTransaction" location="qpimmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="commitSyncTransaction()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removed" fullname="QPimModel::removed" href="qpimmodel.html#removed" location="qpimmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QUniqueId&gt;" signature="removed(const QDateTime &amp; timestamp) const">
                <parameter left="const QDateTime &amp;" right="" name="timestamp" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="added" fullname="QPimModel::added" href="qpimmodel.html#added" location="qpimmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QUniqueId&gt;" signature="added(const QDateTime &amp; timestamp) const">
                <parameter left="const QDateTime &amp;" right="" name="timestamp" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="modified" fullname="QPimModel::modified" href="qpimmodel.html#modified" location="qpimmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QUniqueId&gt;" signature="modified(const QDateTime &amp; timestamp) const">
                <parameter left="const QDateTime &amp;" right="" name="timestamp" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contexts" fullname="QPimModel::contexts" href="qpimmodel.html#contexts" location="qpimmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QList&lt;QPimContext *&gt; &amp;" signature="contexts() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="visibleSources" fullname="QPimModel::visibleSources" href="qpimmodel.html#visibleSources" location="qpimmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSet&lt;QPimSource&gt;" signature="visibleSources() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVisibleSources" fullname="QPimModel::setVisibleSources" href="qpimmodel.html#setVisibleSources" location="qpimmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setVisibleSources(const QSet&lt;QPimSource&gt; &amp; list)">
                <parameter left="const QSet&lt;QPimSource&gt; &amp;" right="" name="list" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableSources" fullname="QPimModel::availableSources" href="qpimmodel.html#availableSources" location="qpimmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSet&lt;QPimSource&gt;" signature="availableSources() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultSource" fullname="QPimModel::defaultSource" href="qpimmodel.html#defaultSource" location="qpimmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPimSource" signature="defaultSource() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="source" fullname="QPimModel::source" href="qpimmodel.html#source" location="qpimmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPimSource" signature="source(const QUniqueId &amp; identifier) const">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="context" fullname="QPimModel::context" href="qpimmodel.html#context" location="qpimmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPimContext *" signature="context(const QUniqueId &amp; identifier) const">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="context" fullname="QPimModel::context" href="qpimmodel.html#context-2" location="qpimmodel.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QPimContext *" signature="context(const QPimSource &amp; source) const">
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sourceExists" fullname="QPimModel::sourceExists" href="qpimmodel.html#sourceExists" location="qpimmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="sourceExists(const QPimSource &amp; source, const QUniqueId &amp; identifier) const">
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="count" fullname="QPimModel::count" href="qpimmodel.html#count" location="qpimmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="count() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contains" fullname="QPimModel::contains" href="qpimmodel.html#contains" location="qpimmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="contains(const QModelIndex &amp; index) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contains" fullname="QPimModel::contains" href="qpimmodel.html#contains-2" location="qpimmodel.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="bool" signature="contains(const QUniqueId &amp; identifier) const">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exists" fullname="QPimModel::exists" href="qpimmodel.html#exists" location="qpimmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="exists(const QUniqueId &amp; identifier) const">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="editable" fullname="QPimModel::editable" href="qpimmodel.html#editable" location="qpimmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="editable(const QModelIndex &amp; index) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="editable" fullname="QPimModel::editable" href="qpimmodel.html#editable-2" location="qpimmodel.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="bool" signature="editable(const QUniqueId &amp; identifier) const">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="index" fullname="QPimModel::index" href="qpimmodel.html#index" location="qpimmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QModelIndex" signature="index(const QUniqueId &amp; identifier) const">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QPimModel::id" href="qpimmodel.html#id" location="qpimmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUniqueId" signature="id(const QModelIndex &amp; index) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QPimModel::id" href="qpimmodel.html#id-2" location="qpimmodel.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QUniqueId" signature="id(int row) const">
                <parameter left="int" right="" name="row" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCategoryFilter" fullname="QPimModel::setCategoryFilter" href="qpimmodel.html#setCategoryFilter" location="qpimmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCategoryFilter(const QCategoryFilter &amp; filter)">
                <parameter left="const QCategoryFilter &amp;" right="" name="filter" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="categoryFilter" fullname="QPimModel::categoryFilter" href="qpimmodel.html#categoryFilter" location="qpimmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QCategoryFilter" signature="categoryFilter() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addRecord" fullname="QPimModel::addRecord" href="qpimmodel.html#addRecord" location="qpimmodel.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QUniqueId" signature="addRecord(const QByteArray &amp; bytes, const QPimSource &amp; source, const QString &amp; format)">
                <parameter left="const QByteArray &amp;" right="" name="bytes" default=""></parameter>
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="format" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateRecord" fullname="QPimModel::updateRecord" href="qpimmodel.html#updateRecord" location="qpimmodel.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="updateRecord(const QUniqueId &amp; id, const QByteArray &amp; bytes, const QString &amp; format)">
                <parameter left="const QUniqueId &amp;" right="" name="id" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="bytes" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="format" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeRecord" fullname="QPimModel::removeRecord" href="qpimmodel.html#removeRecord" location="qpimmodel.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeRecord(const QUniqueId &amp; identifier)">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="record" fullname="QPimModel::record" href="qpimmodel.html#record" location="qpimmodel.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="record(const QUniqueId &amp; identifier, const QString &amp; format) const">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="format" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="flush" fullname="QPimModel::flush" href="qpimmodel.html#flush" location="qpimmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="flush()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="refresh" fullname="QPimModel::refresh" href="qpimmodel.html#refresh" location="qpimmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="refresh()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAbstractDialerScreen" href="qabstractdialerscreen.html" location="qabstractdialerscreen.h" bases="QWidget" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAbstractDialerScreen" fullname="QAbstractDialerScreen::QAbstractDialerScreen" href="qabstractdialerscreen.html#QAbstractDialerScreen" location="qabstractdialerscreen.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAbstractDialerScreen(QWidget * parent, Qt::WFlags flags)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
                <parameter left="Qt::WFlags" right="" name="flags" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="digits" fullname="QAbstractDialerScreen::digits" href="qabstractdialerscreen.html#digits" location="qabstractdialerscreen.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="digits() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="reset" fullname="QAbstractDialerScreen::reset" href="qabstractdialerscreen.html#reset" location="qabstractdialerscreen.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="reset()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="appendDigits" fullname="QAbstractDialerScreen::appendDigits" href="qabstractdialerscreen.html#appendDigits" location="qabstractdialerscreen.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="appendDigits(const QString &amp; digits)">
                <parameter left="const QString &amp;" right="" name="digits" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDigits" fullname="QAbstractDialerScreen::setDigits" href="qabstractdialerscreen.html#setDigits" location="qabstractdialerscreen.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="setDigits(const QString &amp; digits)">
                <parameter left="const QString &amp;" right="" name="digits" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestDial" fullname="QAbstractDialerScreen::requestDial" href="qabstractdialerscreen.html#requestDial" location="qabstractdialerscreen.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="requestDial(const QString &amp; number, const QUniqueId &amp; contact)">
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
                <parameter left="const QUniqueId &amp;" right="" name="contact" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="speedDial" fullname="QAbstractDialerScreen::speedDial" href="qabstractdialerscreen.html#speedDial" location="qabstractdialerscreen.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="speedDial(const QString &amp; number)">
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filterKeys" fullname="QAbstractDialerScreen::filterKeys" href="qabstractdialerscreen.html#filterKeys" location="qabstractdialerscreen.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="filterKeys(const QString &amp; input, bool &amp; filtered)">
                <parameter left="const QString &amp;" right="" name="input" default=""></parameter>
                <parameter left="bool &amp;" right="" name="filtered" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filterSelect" fullname="QAbstractDialerScreen::filterSelect" href="qabstractdialerscreen.html#filterSelect" location="qabstractdialerscreen.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="filterSelect(const QString &amp; input, bool &amp; filtered)">
                <parameter left="const QString &amp;" right="" name="input" default=""></parameter>
                <parameter left="bool &amp;" right="" name="filtered" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="BtPowerServiceTask" href="btpowerservicetask.html" location="btpowerservice.h" bases="QObject" module=""></class>
        <class access="public" threadsafety="unspecified" status="main" name="QCommDeviceSession" href="qcommdevicesession.html" location="qcommdevicesession.h" bases="QObject" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="WaitType" fullname="QCommDeviceSession::WaitType" href="qcommdevicesession.html#WaitType-enum" location="qcommdevicesession.h">
                <value name="Block" value="0"></value>
                <value name="BlockWithEventLoop" value="1"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QCommDeviceSession" fullname="QCommDeviceSession::QCommDeviceSession" href="qcommdevicesession.html#QCommDeviceSession" location="qcommdevicesession.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCommDeviceSession(const QByteArray &amp; deviceId, QObject * parent)">
                <parameter left="const QByteArray &amp;" right="" name="deviceId" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCommDeviceSession" fullname="QCommDeviceSession::~QCommDeviceSession" href="qcommdevicesession.html#dtor.QCommDeviceSession" location="qcommdevicesession.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCommDeviceSession()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="startSession" fullname="QCommDeviceSession::startSession" href="qcommdevicesession.html#startSession" location="qcommdevicesession.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="startSession()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="endSession" fullname="QCommDeviceSession::endSession" href="qcommdevicesession.html#endSession" location="qcommdevicesession.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="endSession()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceId" fullname="QCommDeviceSession::deviceId" href="qcommdevicesession.html#deviceId" location="qcommdevicesession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QByteArray &amp;" signature="deviceId() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="session" fullname="QCommDeviceSession::session" href="qcommdevicesession.html#session" location="qcommdevicesession.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QCommDeviceSession *" signature="session(const QByteArray &amp; deviceId, WaitType type, QObject * parent)">
                <parameter left="const QByteArray &amp;" right="" name="deviceId" default=""></parameter>
                <parameter left="WaitType" right="" name="type" default="BlockWithEventLoop"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sessionOpen" fullname="QCommDeviceSession::sessionOpen" href="qcommdevicesession.html#sessionOpen" location="qcommdevicesession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="sessionOpen()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sessionFailed" fullname="QCommDeviceSession::sessionFailed" href="qcommdevicesession.html#sessionFailed" location="qcommdevicesession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="sessionFailed()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sessionClosed" fullname="QCommDeviceSession::sessionClosed" href="qcommdevicesession.html#sessionClosed" location="qcommdevicesession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="sessionClosed()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothLocalDeviceManager" href="qbluetoothlocaldevicemanager.html" location="qbluetoothlocaldevicemanager.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothLocalDeviceManager" fullname="QBluetoothLocalDeviceManager::QBluetoothLocalDeviceManager" href="qbluetoothlocaldevicemanager.html#QBluetoothLocalDeviceManager" location="qbluetoothlocaldevicemanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothLocalDeviceManager(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothLocalDeviceManager" fullname="QBluetoothLocalDeviceManager::~QBluetoothLocalDeviceManager" href="qbluetoothlocaldevicemanager.html#dtor.QBluetoothLocalDeviceManager" location="qbluetoothlocaldevicemanager.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothLocalDeviceManager()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="devices" fullname="QBluetoothLocalDeviceManager::devices" href="qbluetoothlocaldevicemanager.html#devices" location="qbluetoothlocaldevicemanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QStringList" signature="devices()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultDevice" fullname="QBluetoothLocalDeviceManager::defaultDevice" href="qbluetoothlocaldevicemanager.html#defaultDevice" location="qbluetoothlocaldevicemanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="defaultDevice()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceAdded" fullname="QBluetoothLocalDeviceManager::deviceAdded" href="qbluetoothlocaldevicemanager.html#deviceAdded" location="qbluetoothlocaldevicemanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="deviceAdded(const QString &amp; device)">
                <parameter left="const QString &amp;" right="" name="device" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceRemoved" fullname="QBluetoothLocalDeviceManager::deviceRemoved" href="qbluetoothlocaldevicemanager.html#deviceRemoved" location="qbluetoothlocaldevicemanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="deviceRemoved(const QString &amp; device)">
                <parameter left="const QString &amp;" right="" name="device" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultDeviceChanged" fullname="QBluetoothLocalDeviceManager::defaultDeviceChanged" href="qbluetoothlocaldevicemanager.html#defaultDeviceChanged" location="qbluetoothlocaldevicemanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="defaultDeviceChanged(const QString &amp; device)">
                <parameter left="const QString &amp;" right="" name="device" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QContentPlugin" href="qcontentplugin.html" location="qcontentplugin.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContentPlugin" fullname="QContentPlugin::~QContentPlugin" href="qcontentplugin.html#dtor.QContentPlugin" location="qcontentplugin.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContentPlugin()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="keys" fullname="QContentPlugin::keys" href="qcontentplugin.html#keys" location="qcontentplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="keys() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="installContent" fullname="QContentPlugin::installContent" href="qcontentplugin.html#installContent" location="qcontentplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="installContent(const QString &amp; fileName, QContent * content)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
                <parameter left="QContent *" right="" name="content" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateContent" fullname="QContentPlugin::updateContent" href="qcontentplugin.html#updateContent" location="qcontentplugin.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="updateContent(QContent * content)">
                <parameter left="QContent *" right="" name="content" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QDocumentSelectorService" href="qdocumentselectorservice.html" location="qdocumentselectorservice.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QDocumentSelectorService" fullname="QDocumentSelectorService::QDocumentSelectorService" href="qdocumentselectorservice.html#QDocumentSelectorService" location="qdocumentselectorservice.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDocumentSelectorService(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDocumentSelectorService" fullname="QDocumentSelectorService::~QDocumentSelectorService" href="qdocumentselectorservice.html#dtor.QDocumentSelectorService" location="qdocumentselectorservice.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDocumentSelectorService()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QDocumentSelectorService::filter" href="qdocumentselectorservice.html#filter" location="qdocumentselectorservice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentFilter" signature="filter() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilter" fullname="QDocumentSelectorService::setFilter" href="qdocumentselectorservice.html#setFilter" location="qdocumentselectorservice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilter(const QContentFilter &amp; filter)">
                <parameter left="const QContentFilter &amp;" right="" name="filter" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sortCriteria" fullname="QDocumentSelectorService::sortCriteria" href="qdocumentselectorservice.html#sortCriteria" location="qdocumentselectorservice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentSortCriteria" signature="sortCriteria() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSortCriteria" fullname="QDocumentSelectorService::setSortCriteria" href="qdocumentselectorservice.html#setSortCriteria" location="qdocumentselectorservice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSortCriteria(const QContentSortCriteria &amp; sort)">
                <parameter left="const QContentSortCriteria &amp;" right="" name="sort" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedDocument" fullname="QDocumentSelectorService::selectedDocument" href="qdocumentselectorservice.html#selectedDocument" location="qdocumentselectorservice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContent" signature="selectedDocument() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedDocumentData" fullname="QDocumentSelectorService::selectedDocumentData" href="qdocumentselectorservice.html#selectedDocumentData" location="qdocumentselectorservice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QIODevice *" signature="selectedDocumentData()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="newDocument" fullname="QDocumentSelectorService::newDocument" href="qdocumentselectorservice.html#newDocument" location="qdocumentselectorservice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="newDocument(const QString &amp; name, const QString &amp; type, QWidget * widget)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
                <parameter left="QWidget *" right="" name="widget" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="newDocument" fullname="QDocumentSelectorService::newDocument" href="qdocumentselectorservice.html#newDocument-2" location="qdocumentselectorservice.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="newDocument(const QString &amp; name, const QStringList &amp; types, QWidget * widget)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QStringList &amp;" right="" name="types" default=""></parameter>
                <parameter left="QWidget *" right="" name="widget" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="openDocument" fullname="QDocumentSelectorService::openDocument" href="qdocumentselectorservice.html#openDocument" location="qdocumentselectorservice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="openDocument(QWidget * widget)">
                <parameter left="QWidget *" right="" name="widget" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveDocument" fullname="QDocumentSelectorService::saveDocument" href="qdocumentselectorservice.html#saveDocument" location="qdocumentselectorservice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveDocument(QWidget * widget)">
                <parameter left="QWidget *" right="" name="widget" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="close" fullname="QDocumentSelectorService::close" href="qdocumentselectorservice.html#close" location="qdocumentselectorservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="close()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="documentOpened" fullname="QDocumentSelectorService::documentOpened" href="qdocumentselectorservice.html#documentOpened" location="qdocumentselectorservice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="documentOpened(const QContent &amp; document, QIODevice * data)">
                <parameter left="const QContent &amp;" right="" name="document" default=""></parameter>
                <parameter left="QIODevice *" right="" name="data" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="DeviceButtonTask" href="devicebuttontask.html" location="devicebuttontask.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="activated" fullname="DeviceButtonTask::activated" href="devicebuttontask.html#activated" location="devicebuttontask.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="activated(int keycode, bool wasHeld, bool isPressed)">
                <parameter left="int" right="" name="keycode" default=""></parameter>
                <parameter left="bool" right="" name="wasHeld" default=""></parameter>
                <parameter left="bool" right="" name="isPressed" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QAppointmentDelegate" href="qappointmentdelegate.html" location="qappointmentview.h" bases="QAbstractItemDelegate" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAppointmentDelegate" fullname="QAppointmentDelegate::QAppointmentDelegate" href="qappointmentdelegate.html#QAppointmentDelegate" location="qappointmentview.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAppointmentDelegate(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAppointmentDelegate" fullname="QAppointmentDelegate::~QAppointmentDelegate" href="qappointmentdelegate.html#dtor.QAppointmentDelegate" location="qappointmentview.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAppointmentDelegate()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPimSourceDialog" href="qpimsourcedialog.html" location="qpimsourcedialog.h" bases="QDialog" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QPimSourceDialog" fullname="QPimSourceDialog::QPimSourceDialog" href="qpimsourcedialog.html#QPimSourceDialog" location="qpimsourcedialog.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPimSourceDialog(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPimSourceDialog" fullname="QPimSourceDialog::~QPimSourceDialog" href="qpimsourcedialog.html#dtor.QPimSourceDialog" location="qpimsourcedialog.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPimSourceDialog()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPimModel" fullname="QPimSourceDialog::setPimModel" href="qpimsourcedialog.html#setPimModel" location="qpimsourcedialog.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setPimModel(QPimModel * m)">
                <parameter left="QPimModel *" right="" name="m" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pimSourceModel" fullname="QPimSourceDialog::pimSourceModel" href="qpimsourcedialog.html#pimSourceModel" location="qpimsourcedialog.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPimSourceModel *" signature="pimSourceModel() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="SXEPolicyManager" href="sxepolicymanager.html" location="qsxepolicy.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="getInstance" fullname="SXEPolicyManager::getInstance" href="sxepolicymanager.html#getInstance" location="qsxepolicy.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="SXEPolicyManager *" signature="getInstance()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~SXEPolicyManager" fullname="SXEPolicyManager::~SXEPolicyManager" href="sxepolicymanager.html#dtor.SXEPolicyManager" location="qsxepolicy.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~SXEPolicyManager()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="findPolicy" fullname="SXEPolicyManager::findPolicy" href="sxepolicymanager.html#findPolicy" location="qsxepolicy.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QStringList" signature="findPolicy(unsigned char progId)">
                <parameter left="unsigned char" right="" name="progId" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="findRequest" fullname="SXEPolicyManager::findRequest" href="sxepolicymanager.html#findRequest" location="qsxepolicy.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="findRequest(QString request, QStringList prof)">
                <parameter left="QString" right="" name="request" default=""></parameter>
                <parameter left="QStringList" right="" name="prof" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="policyCheck" fullname="SXEPolicyManager::policyCheck" href="sxepolicymanager.html#policyCheck" location="qsxepolicy.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="policyCheck(QTransportAuth::Data &amp; d, const QString &amp; req)">
                <parameter left="QTransportAuth::Data &amp;" right="" name="d" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="req" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resetDateCheck" fullname="SXEPolicyManager::resetDateCheck" href="sxepolicymanager.html#resetDateCheck" location="qsxepolicy.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="resetDateCheck()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="ModemEmulatorService" href="modememulatorservice.html" location="modememulatorservice.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="addSerialPort" fullname="ModemEmulatorService::addSerialPort" href="modememulatorservice.html#addSerialPort" location="modememulatorservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="addSerialPort(const QString &amp; deviceName)">
                <parameter left="const QString &amp;" right="" name="deviceName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addSerialPort" fullname="ModemEmulatorService::addSerialPort" href="modememulatorservice.html#addSerialPort-2" location="modememulatorservice.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="addSerialPort(const QString &amp; deviceName, const QString &amp; options)">
                <parameter left="const QString &amp;" right="" name="deviceName" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="options" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addTcpPort" fullname="ModemEmulatorService::addTcpPort" href="modememulatorservice.html#addTcpPort" location="modememulatorservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="addTcpPort(int tcpPort, bool localHostOnly)">
                <parameter left="int" right="" name="tcpPort" default=""></parameter>
                <parameter left="bool" right="" name="localHostOnly" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addTcpPort" fullname="ModemEmulatorService::addTcpPort" href="modememulatorservice.html#addTcpPort-2" location="modememulatorservice.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="addTcpPort(int tcpPort, bool localHostOnly, const QString &amp; options)">
                <parameter left="int" right="" name="tcpPort" default=""></parameter>
                <parameter left="bool" right="" name="localHostOnly" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="options" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeSerialPort" fullname="ModemEmulatorService::removeSerialPort" href="modememulatorservice.html#removeSerialPort" location="modememulatorservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="removeSerialPort(const QString &amp; deviceName)">
                <parameter left="const QString &amp;" right="" name="deviceName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeTcpPort" fullname="ModemEmulatorService::removeTcpPort" href="modememulatorservice.html#removeTcpPort" location="modememulatorservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="removeTcpPort(int tcpPort)">
                <parameter left="int" right="" name="tcpPort" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="PhoneQuickDialerScreen" href="phonequickdialerscreen.html" location="quickdial.h" bases="QAbstractDialerScreen" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="PhoneQuickDialerScreen" fullname="PhoneQuickDialerScreen::PhoneQuickDialerScreen" href="phonequickdialerscreen.html#PhoneQuickDialerScreen" location="quickdial.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="PhoneQuickDialerScreen(QWidget * parent, Qt::WFlags fl)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
                <parameter left="Qt::WFlags" right="" name="fl" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~PhoneQuickDialerScreen" fullname="PhoneQuickDialerScreen::~PhoneQuickDialerScreen" href="phonequickdialerscreen.html#dtor.PhoneQuickDialerScreen" location="quickdial.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~PhoneQuickDialerScreen()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QDrmRights" href="qdrmrights.html" location="qdrmrights.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Status" fullname="QDrmRights::Status" href="qdrmrights.html#Status-enum" location="qdrmrights.h">
                <value name="Invalid" value="0"></value>
                <value name="Valid" value="1"></value>
                <value name="ValidInFuture" value="2"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Permission" fullname="QDrmRights::Permission" href="qdrmrights.html#Permission-enum" location="qdrmrights.h" typedef="QDrmRights::Permissions">
                <value name="NoPermissions" value="0x0000"></value>
                <value name="Play" value="0x0001"></value>
                <value name="Display" value="0x0002"></value>
                <value name="Execute" value="0x0004"></value>
                <value name="Print" value="0x0008"></value>
                <value name="Export" value="0x0010"></value>
                <value name="Distribute" value="0x0020"></value>
                <value name="Preview" value="0x0040"></value>
                <value name="Automated" value="0x0080"></value>
                <value name="BrowseContents" value="0x0100"></value>
                <value name="Unrestricted" value="0x7F00 | Play | Display | Execute | Print | Export | Distribute | Preview | Automated | BrowseContents"></value>
                <value name="InvalidPermission" value="0x8000"></value>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="Permissions" fullname="QDrmRights::Permissions" href="qdrmrights.html#Permissions-typedef" location="qdrmrights.h" enum="QDrmRights::Permission"></typedef>
            <class access="public" threadsafety="unspecified" status="main" name="Constraint" fullname="QDrmRights::Constraint" href="qdrmrights-constraint.html" location="qdrmrights.h" bases="" module="">
                <function access="public" threadsafety="unspecified" status="commendable" name="Constraint" fullname="QDrmRights::Constraint::Constraint" href="qdrmrights-constraint.html#Constraint" location="qdrmrights.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="Constraint()"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="Constraint" fullname="QDrmRights::Constraint::Constraint" href="qdrmrights-constraint.html#Constraint-2" location="qdrmrights.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="Constraint(const QString &amp; name, const QVariant &amp; value)">
                    <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                    <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="Constraint" fullname="QDrmRights::Constraint::Constraint" href="qdrmrights-constraint.html#Constraint-3" location="qdrmrights.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="Constraint(const QString &amp; name, const QVariant &amp; value, const QList&lt;QPair&lt;QString, QVariant&gt; &gt; &amp; attributes)">
                    <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                    <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
                    <parameter left="const QList&lt;QPair&lt;QString, QVariant&gt; &gt; &amp;" right="" name="attributes" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="Constraint" fullname="QDrmRights::Constraint::Constraint" href="qdrmrights-constraint.html#Constraint-4" location="qdrmrights.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="Constraint(const Constraint &amp; other)">
                    <parameter left="const Constraint &amp;" right="" name="other" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="~Constraint" fullname="QDrmRights::Constraint::~Constraint" href="qdrmrights-constraint.html#dtor.Constraint" location="qdrmrights.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~Constraint()"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QDrmRights::Constraint::operator=" href="qdrmrights-constraint.html#operator=" location="qdrmrights.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="Constraint &amp;" signature="operator=(const Constraint &amp; other)">
                    <parameter left="const Constraint &amp;" right="" name="other" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QDrmRights::Constraint::name" href="qdrmrights-constraint.html#name" location="qdrmrights.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QDrmRights::Constraint::value" href="qdrmrights-constraint.html#value" location="qdrmrights.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="value() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="attributeCount" fullname="QDrmRights::Constraint::attributeCount" href="qdrmrights-constraint.html#attributeCount" location="qdrmrights.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="attributeCount() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="attributeName" fullname="QDrmRights::Constraint::attributeName" href="qdrmrights-constraint.html#attributeName" location="qdrmrights.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="attributeName(int index) const">
                    <parameter left="int" right="" name="index" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="attributeValue" fullname="QDrmRights::Constraint::attributeValue" href="qdrmrights-constraint.html#attributeValue" location="qdrmrights.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="attributeValue(int index) const">
                    <parameter left="int" right="" name="index" default=""></parameter>
                </function>
            </class>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="ConstraintList" fullname="QDrmRights::ConstraintList" href="qdrmrights.html#ConstraintList-typedef" location="qdrmrights.h"></typedef>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDrmRights" fullname="QDrmRights::QDrmRights" href="qdrmrights.html#QDrmRights" location="qdrmrights.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDrmRights()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDrmRights" fullname="QDrmRights::QDrmRights" href="qdrmrights.html#QDrmRights-2" location="qdrmrights.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QDrmRights(Permission permission, Status status, const ConstraintList &amp; constraints)">
                <parameter left="Permission" right="" name="permission" default=""></parameter>
                <parameter left="Status" right="" name="status" default=""></parameter>
                <parameter left="const ConstraintList &amp;" right="" name="constraints" default="ConstraintList()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDrmRights" fullname="QDrmRights::QDrmRights" href="qdrmrights.html#QDrmRights-3" location="qdrmrights.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QDrmRights(const QDrmRights &amp; other)">
                <parameter left="const QDrmRights &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDrmRights" fullname="QDrmRights::~QDrmRights" href="qdrmrights.html#dtor.QDrmRights" location="qdrmrights.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDrmRights()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QDrmRights::operator=" href="qdrmrights.html#operator=" location="qdrmrights.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QDrmRights &amp;" signature="operator=(const QDrmRights &amp; other)">
                <parameter left="const QDrmRights &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="permission" fullname="QDrmRights::permission" href="qdrmrights.html#permission" location="qdrmrights.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Permission" signature="permission() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="status" fullname="QDrmRights::status" href="qdrmrights.html#status" location="qdrmrights.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Status" signature="status() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="constraints" fullname="QDrmRights::constraints" href="qdrmrights.html#constraints" location="qdrmrights.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="ConstraintList" signature="constraints() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toString" fullname="QDrmRights::toString" href="qdrmrights.html#toString" location="qdrmrights.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="toString(Permission permission)">
                <parameter left="Permission" right="" name="permission" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toString" fullname="QDrmRights::toString" href="qdrmrights.html#toString-2" location="qdrmrights.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QString" signature="toString(Permission permission, Status status)">
                <parameter left="Permission" right="" name="permission" default=""></parameter>
                <parameter left="Status" right="" name="status" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QAudio" href="qaudio.html" location="qaudionamespace.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="AudioCapability" fullname="QAudio::AudioCapability" href="qaudio.html#AudioCapability-enum" location="qaudionamespace.h" typedef="QAudio::AudioCapabilities">
                <value name="None" value="0x0"></value>
                <value name="InputOnly" value="0x01"></value>
                <value name="OutputOnly" value="0x02"></value>
                <value name="InputAndOutput" value="0x04"></value>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="AudioCapabilities" fullname="QAudio::AudioCapabilities" href="qaudio.html#AudioCapabilities-typedef" location="qaudionamespace.h" enum="QAudio::AudioCapability"></typedef>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSignalSource" href="qsignalsource.html" location="qsignalsource.h" bases="QHardwareInterface" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Availability" fullname="QSignalSource::Availability" href="qsignalsource.html#Availability-enum" location="qsignalsource.h">
                <value name="Available" value="0"></value>
                <value name="NotAvailable" value="1"></value>
                <value name="Invalid" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSignalSource" fullname="QSignalSource::QSignalSource" href="qsignalsource.html#QSignalSource" location="qsignalsource.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSignalSource(const QString &amp; id, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="id" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSignalSource" fullname="QSignalSource::~QSignalSource" href="qsignalsource.html#dtor.QSignalSource" location="qsignalsource.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSignalSource()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QSignalSource::type" href="qsignalsource.html#type" location="qsignalsource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="type() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availability" fullname="QSignalSource::availability" href="qsignalsource.html#availability" location="qsignalsource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Availability" signature="availability() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="signalStrength" fullname="QSignalSource::signalStrength" href="qsignalsource.html#signalStrength" location="qsignalsource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="signalStrength() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availabilityChanged" fullname="QSignalSource::availabilityChanged" href="qsignalsource.html#availabilityChanged" location="qsignalsource.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="availabilityChanged(QSignalSource::Availability availability)">
                <parameter left="QSignalSource::Availability" right="" name="availability" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="signalStrengthChanged" fullname="QSignalSource::signalStrengthChanged" href="qsignalsource.html#signalStrengthChanged" location="qsignalsource.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="signalStrengthChanged(int signalStrength)">
                <parameter left="int" right="" name="signalStrength" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSignalSourceProvider" href="qsignalsourceprovider.html" location="qsignalsource.h" bases="QSignalSource" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSignalSourceProvider" fullname="QSignalSourceProvider::QSignalSourceProvider" href="qsignalsourceprovider.html#QSignalSourceProvider" location="qsignalsource.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSignalSourceProvider(const QString &amp; type, const QString &amp; id, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSignalSourceProvider" fullname="QSignalSourceProvider::~QSignalSourceProvider" href="qsignalsourceprovider.html#dtor.QSignalSourceProvider" location="qsignalsource.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSignalSourceProvider()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAvailability" fullname="QSignalSourceProvider::setAvailability" href="qsignalsourceprovider.html#setAvailability" location="qsignalsource.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setAvailability(QSignalSource::Availability availability)">
                <parameter left="QSignalSource::Availability" right="" name="availability" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSignalStrength" fullname="QSignalSourceProvider::setSignalStrength" href="qsignalsourceprovider.html#setSignalStrength" location="qsignalsource.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setSignalStrength(int strength)">
                <parameter left="int" right="" name="strength" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaServerSession" href="qmediaserversession.html" location="qmediaserversession.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaServerSession" fullname="QMediaServerSession::~QMediaServerSession" href="qmediaserversession.html#dtor.QMediaServerSession" location="qmediaserversession.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaServerSession()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QMediaServerSession::start" href="qmediaserversession.html#start" location="qmediaserversession.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="start()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pause" fullname="QMediaServerSession::pause" href="qmediaserversession.html#pause" location="qmediaserversession.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="pause()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QMediaServerSession::stop" href="qmediaserversession.html#stop" location="qmediaserversession.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="stop()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="suspend" fullname="QMediaServerSession::suspend" href="qmediaserversession.html#suspend" location="qmediaserversession.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="suspend()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resume" fullname="QMediaServerSession::resume" href="qmediaserversession.html#resume" location="qmediaserversession.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="resume()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="seek" fullname="QMediaServerSession::seek" href="qmediaserversession.html#seek" location="qmediaserversession.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="seek(quint32 ms)">
                <parameter left="quint32" right="" name="ms" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="length" fullname="QMediaServerSession::length" href="qmediaserversession.html#length" location="qmediaserversession.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="quint32" signature="length()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVolume" fullname="QMediaServerSession::setVolume" href="qmediaserversession.html#setVolume" location="qmediaserversession.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="QMediaServerSession::volume" href="qmediaserversession.html#volume" location="qmediaserversession.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="volume() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMuted" fullname="QMediaServerSession::setMuted" href="qmediaserversession.html#setMuted" location="qmediaserversession.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setMuted(bool mute)">
                <parameter left="bool" right="" name="mute" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMuted" fullname="QMediaServerSession::isMuted" href="qmediaserversession.html#isMuted" location="qmediaserversession.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isMuted() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playerState" fullname="QMediaServerSession::playerState" href="qmediaserversession.html#playerState" location="qmediaserversession.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QtopiaMedia::State" signature="playerState() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QMediaServerSession::errorString" href="qmediaserversession.html#errorString" location="qmediaserversession.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QString" signature="errorString()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDomain" fullname="QMediaServerSession::setDomain" href="qmediaserversession.html#setDomain" location="qmediaserversession.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setDomain(QString const &amp; domain)">
                <parameter left="QString const &amp;" right="" name="domain" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="domain" fullname="QMediaServerSession::domain" href="qmediaserversession.html#domain" location="qmediaserversession.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="domain() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="interfaces" fullname="QMediaServerSession::interfaces" href="qmediaserversession.html#interfaces" location="qmediaserversession.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QStringList" signature="interfaces()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QMediaServerSession::id" href="qmediaserversession.html#id" location="qmediaserversession.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="id() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="reportData" fullname="QMediaServerSession::reportData" href="qmediaserversession.html#reportData" location="qmediaserversession.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="reportData() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playerStateChanged" fullname="QMediaServerSession::playerStateChanged" href="qmediaserversession.html#playerStateChanged" location="qmediaserversession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="playerStateChanged(QtopiaMedia::State state)">
                <parameter left="QtopiaMedia::State" right="" name="state" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="positionChanged" fullname="QMediaServerSession::positionChanged" href="qmediaserversession.html#positionChanged" location="qmediaserversession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="positionChanged(quint32 ms)">
                <parameter left="quint32" right="" name="ms" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lengthChanged" fullname="QMediaServerSession::lengthChanged" href="qmediaserversession.html#lengthChanged" location="qmediaserversession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="lengthChanged(quint32 ms)">
                <parameter left="quint32" right="" name="ms" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volumeChanged" fullname="QMediaServerSession::volumeChanged" href="qmediaserversession.html#volumeChanged" location="qmediaserversession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="volumeChanged(int volume)">
                <parameter left="int" right="" name="volume" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volumeMuted" fullname="QMediaServerSession::volumeMuted" href="qmediaserversession.html#volumeMuted" location="qmediaserversession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="volumeMuted(bool muted)">
                <parameter left="bool" right="" name="muted" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="interfaceAvailable" fullname="QMediaServerSession::interfaceAvailable" href="qmediaserversession.html#interfaceAvailable" location="qmediaserversession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="interfaceAvailable(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="interfaceUnavailable" fullname="QMediaServerSession::interfaceUnavailable" href="qmediaserversession.html#interfaceUnavailable" location="qmediaserversession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="interfaceUnavailable(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothRfcommSocket" href="qbluetoothrfcommsocket.html" location="qbluetoothrfcommsocket.h" bases="QBluetoothAbstractSocket" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothRfcommSocket" fullname="QBluetoothRfcommSocket::QBluetoothRfcommSocket" href="qbluetoothrfcommsocket.html#QBluetoothRfcommSocket" location="qbluetoothrfcommsocket.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothRfcommSocket(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothRfcommSocket" fullname="QBluetoothRfcommSocket::~QBluetoothRfcommSocket" href="qbluetoothrfcommsocket.html#dtor.QBluetoothRfcommSocket" location="qbluetoothrfcommsocket.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothRfcommSocket()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connect" fullname="QBluetoothRfcommSocket::connect" href="qbluetoothrfcommsocket.html#connect" location="qbluetoothrfcommsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="connect(const QBluetoothAddress &amp; local, const QBluetoothAddress &amp; remote, int channel, QFlags&lt;QBluetooth::SecurityOption&gt; options)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="local" default=""></parameter>
                <parameter left="const QBluetoothAddress &amp;" right="" name="remote" default=""></parameter>
                <parameter left="int" right="" name="channel" default=""></parameter>
                <parameter left="QFlags&lt;QBluetooth::SecurityOption&gt;" right="" name="options" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remoteAddress" fullname="QBluetoothRfcommSocket::remoteAddress" href="qbluetoothrfcommsocket.html#remoteAddress" location="qbluetoothrfcommsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothAddress" signature="remoteAddress() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remoteChannel" fullname="QBluetoothRfcommSocket::remoteChannel" href="qbluetoothrfcommsocket.html#remoteChannel" location="qbluetoothrfcommsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="remoteChannel() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localAddress" fullname="QBluetoothRfcommSocket::localAddress" href="qbluetoothrfcommsocket.html#localAddress" location="qbluetoothrfcommsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothAddress" signature="localAddress() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEncrypted" fullname="QBluetoothRfcommSocket::isEncrypted" href="qbluetoothrfcommsocket.html#isEncrypted" location="qbluetoothrfcommsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEncrypted() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAuthenticated" fullname="QBluetoothRfcommSocket::isAuthenticated" href="qbluetoothrfcommsocket.html#isAuthenticated" location="qbluetoothrfcommsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isAuthenticated() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="securityOptions" fullname="QBluetoothRfcommSocket::securityOptions" href="qbluetoothrfcommsocket.html#securityOptions" location="qbluetoothrfcommsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetooth::SecurityOptions" signature="securityOptions() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="TimeMonitorService" href="timemonitorservice.html" location="timemonitorservice.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="timeChange" fullname="TimeMonitorService::timeChange" href="timemonitorservice.html#timeChange" location="timemonitorservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="timeChange(const QString &amp; timezone)">
                <parameter left="const QString &amp;" right="" name="timezone" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBootSourceAccessory" href="qbootsourceaccessory.html" location="qbootsourceaccessory.h" bases="QHardwareInterface" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Source" fullname="QBootSourceAccessory::Source" href="qbootsourceaccessory.html#Source-enum" location="qbootsourceaccessory.h">
                <value name="Unknown" value="0"></value>
                <value name="PowerKey" value="1"></value>
                <value name="Charger" value="2"></value>
                <value name="Alarm" value="3"></value>
                <value name="Watchdog" value="4"></value>
                <value name="Software" value="5"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QBootSourceAccessory" fullname="QBootSourceAccessory::QBootSourceAccessory" href="qbootsourceaccessory.html#QBootSourceAccessory" location="qbootsourceaccessory.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBootSourceAccessory(const QString &amp; id, QObject * parent, QAbstractIpcInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="id" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QAbstractIpcInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBootSourceAccessory" fullname="QBootSourceAccessory::~QBootSourceAccessory" href="qbootsourceaccessory.html#dtor.QBootSourceAccessory" location="qbootsourceaccessory.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBootSourceAccessory()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bootSource" fullname="QBootSourceAccessory::bootSource" href="qbootsourceaccessory.html#bootSource" location="qbootsourceaccessory.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBootSourceAccessory::Source" signature="bootSource() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bootSourceModified" fullname="QBootSourceAccessory::bootSourceModified" href="qbootsourceaccessory.html#bootSourceModified" location="qbootsourceaccessory.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="bootSourceModified()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBootSourceAccessoryProvider" href="qbootsourceaccessoryprovider.html" location="qbootsourceaccessory.h" bases="QBootSourceAccessory" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBootSourceAccessoryProvider" fullname="QBootSourceAccessoryProvider::QBootSourceAccessoryProvider" href="qbootsourceaccessoryprovider.html#QBootSourceAccessoryProvider" location="qbootsourceaccessory.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBootSourceAccessoryProvider(const QString &amp; id, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBootSourceAccessoryProvider" fullname="QBootSourceAccessoryProvider::~QBootSourceAccessoryProvider" href="qbootsourceaccessoryprovider.html#dtor.QBootSourceAccessoryProvider" location="qbootsourceaccessory.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBootSourceAccessoryProvider()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBootSource" fullname="QBootSourceAccessoryProvider::setBootSource" href="qbootsourceaccessoryprovider.html#setBootSource" location="qbootsourceaccessory.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setBootSource(QBootSourceAccessory::Source source)">
                <parameter left="QBootSourceAccessory::Source" right="" name="source" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QTelephonyService" href="qtelephonyservice.html" location="qtelephonyservice.h" bases="QAbstractIpcInterfaceGroup" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QTelephonyService" fullname="QTelephonyService::QTelephonyService" href="qtelephonyservice.html#QTelephonyService" location="qtelephonyservice.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QTelephonyService(const QString &amp; service, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QTelephonyService" fullname="QTelephonyService::~QTelephonyService" href="qtelephonyservice.html#dtor.QTelephonyService" location="qtelephonyservice.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QTelephonyService()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="service" fullname="QTelephonyService::service" href="qtelephonyservice.html#service" location="qtelephonyservice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="service() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callProvider" fullname="QTelephonyService::callProvider" href="qtelephonyservice.html#callProvider" location="qtelephonyservice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPhoneCallProvider *" signature="callProvider() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCallProvider" fullname="QTelephonyService::setCallProvider" href="qtelephonyservice.html#setCallProvider" location="qtelephonyservice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCallProvider(QPhoneCallProvider * provider)">
                <parameter left="QPhoneCallProvider *" right="" name="provider" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dispatchDatagram" fullname="QTelephonyService::dispatchDatagram" href="qtelephonyservice.html#dispatchDatagram" location="qtelephonyservice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="dispatchDatagram(const QSMSMessage &amp; msg)">
                <parameter left="const QSMSMessage &amp;" right="" name="msg" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QHardwareInterface" href="qhardwareinterface.html" location="qhardwareinterface.h" bases="QAbstractIpcInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QHardwareInterface" fullname="QHardwareInterface::QHardwareInterface" href="qhardwareinterface.html#QHardwareInterface" location="qhardwareinterface.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QHardwareInterface(const QString &amp; name, const QString &amp; id, QObject * parent, QAbstractIpcInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="id" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QAbstractIpcInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QHardwareInterface" fullname="QHardwareInterface::~QHardwareInterface" href="qhardwareinterface.html#dtor.QHardwareInterface" location="qhardwareinterface.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QHardwareInterface()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothScoServer" href="qbluetoothscoserver.html" location="qbluetoothscoserver.h" bases="QBluetoothAbstractServer" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothScoServer" fullname="QBluetoothScoServer::QBluetoothScoServer" href="qbluetoothscoserver.html#QBluetoothScoServer" location="qbluetoothscoserver.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothScoServer(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothScoServer" fullname="QBluetoothScoServer::~QBluetoothScoServer" href="qbluetoothscoserver.html#dtor.QBluetoothScoServer" location="qbluetoothscoserver.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothScoServer()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="listen" fullname="QBluetoothScoServer::listen" href="qbluetoothscoserver.html#listen" location="qbluetoothscoserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="listen(const QBluetoothAddress &amp; local)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="local" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serverAddress" fullname="QBluetoothScoServer::serverAddress" href="qbluetoothscoserver.html#serverAddress" location="qbluetoothscoserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothAddress" signature="serverAddress() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QObexHeader" href="qobexheader.html" location="qobexheader.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="HeaderId" fullname="QObexHeader::HeaderId" href="qobexheader.html#HeaderId-enum" location="qobexheader.h">
                <value name="Count" value="0xc0"></value>
                <value name="Name" value="0x01"></value>
                <value name="Type" value="0x42"></value>
                <value name="Length" value="0xc3"></value>
                <value name="Time" value="0x44"></value>
                <value name="Description" value="0x05"></value>
                <value name="Target" value="0x46"></value>
                <value name="Http" value="0x47"></value>
                <value name="Who" value="0x4A"></value>
                <value name="ConnectionId" value="0xcb"></value>
                <value name="AppParameters" value="0x4c"></value>
                <value name="AuthChallenge" value="0x4d"></value>
                <value name="AuthResponse" value="0x4e"></value>
                <value name="CreatorId" value="0xcf"></value>
                <value name="WanUuid" value="0x50"></value>
                <value name="ObjectClass" value="0x51"></value>
                <value name="SessionParameters" value="0x52"></value>
                <value name="SessionSequenceNumber" value="0x93"></value>
                <value name="MaximumHeaderId" value="0x3f"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QObexHeader" fullname="QObexHeader::QObexHeader" href="qobexheader.html#QObexHeader" location="qobexheader.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QObexHeader()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QObexHeader" fullname="QObexHeader::QObexHeader" href="qobexheader.html#QObexHeader-2" location="qobexheader.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QObexHeader(const QObexHeader &amp; other)">
                <parameter left="const QObexHeader &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QObexHeader" fullname="QObexHeader::~QObexHeader" href="qobexheader.html#dtor.QObexHeader" location="qobexheader.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QObexHeader()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QObexHeader::operator=" href="qobexheader.html#operator=" location="qobexheader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QObexHeader &amp;" signature="operator=(const QObexHeader &amp; other)">
                <parameter left="const QObexHeader &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QObexHeader::operator==" href="qobexheader.html#operator==" location="qobexheader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QObexHeader &amp; other) const">
                <parameter left="const QObexHeader &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QObexHeader::operator!=" href="qobexheader.html#operator!=" location="qobexheader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QObexHeader &amp; other) const">
                <parameter left="const QObexHeader &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contains" fullname="QObexHeader::contains" href="qobexheader.html#contains" location="qobexheader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="contains(int headerId) const">
                <parameter left="int" right="" name="headerId" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="headerIds" fullname="QObexHeader::headerIds" href="qobexheader.html#headerIds" location="qobexheader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;int&gt;" signature="headerIds() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="size" fullname="QObexHeader::size" href="qobexheader.html#size" location="qobexheader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="size() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCount" fullname="QObexHeader::setCount" href="qobexheader.html#setCount" location="qobexheader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCount(quint32 count)">
                <parameter left="quint32" right="" name="count" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="count" fullname="QObexHeader::count" href="qobexheader.html#count" location="qobexheader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint32" signature="count() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setName" fullname="QObexHeader::setName" href="qobexheader.html#setName" location="qobexheader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setName(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QObexHeader::name" href="qobexheader.html#name" location="qobexheader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setType" fullname="QObexHeader::setType" href="qobexheader.html#setType" location="qobexheader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setType(const QString &amp; type)">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QObexHeader::type" href="qobexheader.html#type" location="qobexheader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="type() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLength" fullname="QObexHeader::setLength" href="qobexheader.html#setLength" location="qobexheader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLength(quint32 length)">
                <parameter left="quint32" right="" name="length" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="length" fullname="QObexHeader::length" href="qobexheader.html#length" location="qobexheader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint32" signature="length() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTime" fullname="QObexHeader::setTime" href="qobexheader.html#setTime" location="qobexheader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTime(const QDateTime &amp; dateTime)">
                <parameter left="const QDateTime &amp;" right="" name="dateTime" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="time" fullname="QObexHeader::time" href="qobexheader.html#time" location="qobexheader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="time() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDescription" fullname="QObexHeader::setDescription" href="qobexheader.html#setDescription" location="qobexheader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDescription(const QString &amp; description)">
                <parameter left="const QString &amp;" right="" name="description" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="description" fullname="QObexHeader::description" href="qobexheader.html#description" location="qobexheader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="description() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTarget" fullname="QObexHeader::setTarget" href="qobexheader.html#setTarget" location="qobexheader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTarget(const QByteArray &amp; target)">
                <parameter left="const QByteArray &amp;" right="" name="target" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="target" fullname="QObexHeader::target" href="qobexheader.html#target" location="qobexheader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="target() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHttp" fullname="QObexHeader::setHttp" href="qobexheader.html#setHttp" location="qobexheader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHttp(const QByteArray &amp; http)">
                <parameter left="const QByteArray &amp;" right="" name="http" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="http" fullname="QObexHeader::http" href="qobexheader.html#http" location="qobexheader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="http() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setWho" fullname="QObexHeader::setWho" href="qobexheader.html#setWho" location="qobexheader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setWho(const QByteArray &amp; who)">
                <parameter left="const QByteArray &amp;" right="" name="who" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="who" fullname="QObexHeader::who" href="qobexheader.html#who" location="qobexheader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="who() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setConnectionId" fullname="QObexHeader::setConnectionId" href="qobexheader.html#setConnectionId" location="qobexheader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setConnectionId(quint32 connectionId)">
                <parameter left="quint32" right="" name="connectionId" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectionId" fullname="QObexHeader::connectionId" href="qobexheader.html#connectionId" location="qobexheader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint32" signature="connectionId() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAppParameters" fullname="QObexHeader::setAppParameters" href="qobexheader.html#setAppParameters" location="qobexheader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAppParameters(const QByteArray &amp; params)">
                <parameter left="const QByteArray &amp;" right="" name="params" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="appParameters" fullname="QObexHeader::appParameters" href="qobexheader.html#appParameters" location="qobexheader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="appParameters() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCreatorId" fullname="QObexHeader::setCreatorId" href="qobexheader.html#setCreatorId" location="qobexheader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCreatorId(quint32 creatorId)">
                <parameter left="quint32" right="" name="creatorId" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="creatorId" fullname="QObexHeader::creatorId" href="qobexheader.html#creatorId" location="qobexheader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint32" signature="creatorId() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setWanUuid" fullname="QObexHeader::setWanUuid" href="qobexheader.html#setWanUuid" location="qobexheader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setWanUuid(QUuid uuid)">
                <parameter left="QUuid" right="" name="uuid" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="wanUuid" fullname="QObexHeader::wanUuid" href="qobexheader.html#wanUuid" location="qobexheader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUuid" signature="wanUuid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setObjectClass" fullname="QObexHeader::setObjectClass" href="qobexheader.html#setObjectClass" location="qobexheader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setObjectClass(const QByteArray &amp; objectClass)">
                <parameter left="const QByteArray &amp;" right="" name="objectClass" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="objectClass" fullname="QObexHeader::objectClass" href="qobexheader.html#objectClass" location="qobexheader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="objectClass() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSessionParameters" fullname="QObexHeader::setSessionParameters" href="qobexheader.html#setSessionParameters" location="qobexheader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSessionParameters(const QByteArray &amp; params)">
                <parameter left="const QByteArray &amp;" right="" name="params" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sessionParameters" fullname="QObexHeader::sessionParameters" href="qobexheader.html#sessionParameters" location="qobexheader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="sessionParameters() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSessionSequenceNumber" fullname="QObexHeader::setSessionSequenceNumber" href="qobexheader.html#setSessionSequenceNumber" location="qobexheader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSessionSequenceNumber(quint8 num)">
                <parameter left="quint8" right="" name="num" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sessionSequenceNumber" fullname="QObexHeader::sessionSequenceNumber" href="qobexheader.html#sessionSequenceNumber" location="qobexheader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint8" signature="sessionSequenceNumber() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAuthenticationChallenge" fullname="QObexHeader::setAuthenticationChallenge" href="qobexheader.html#setAuthenticationChallenge" location="qobexheader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAuthenticationChallenge(QFlags&lt;QObex::AuthChallengeOption&gt; options, const QString &amp; realm)">
                <parameter left="QFlags&lt;QObex::AuthChallengeOption&gt;" right="" name="options" default="0"></parameter>
                <parameter left="const QString &amp;" right="" name="realm" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setValue" fullname="QObexHeader::setValue" href="qobexheader.html#setValue" location="qobexheader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setValue(int headerId, const QVariant &amp; variant)">
                <parameter left="int" right="" name="headerId" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="variant" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QObexHeader::value" href="qobexheader.html#value" location="qobexheader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="value(int headerId) const">
                <parameter left="int" right="" name="headerId" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remove" fullname="QObexHeader::remove" href="qobexheader.html#remove" location="qobexheader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="remove(int headerId)">
                <parameter left="int" right="" name="headerId" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QObexHeader::clear" href="qobexheader.html#clear" location="qobexheader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemCall" href="qmodemcall.html" location="qmodemcall.h" bases="QPhoneCallImpl" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemCall" fullname="QModemCall::QModemCall" href="qmodemcall.html#QModemCall" location="qmodemcall.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemCall(QModemCallProvider * provider, const QString &amp; identifier, const QString &amp; callType)">
                <parameter left="QModemCallProvider *" right="" name="provider" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="identifier" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="callType" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemCall" fullname="QModemCall::~QModemCall" href="qmodemcall.html#dtor.QModemCall" location="qmodemcall.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemCall()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="modemIdentifier" fullname="QModemCall::modemIdentifier" href="qmodemcall.html#modemIdentifier" location="qmodemcall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="modemIdentifier() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setModemIdentifier" fullname="QModemCall::setModemIdentifier" href="qmodemcall.html#setModemIdentifier" location="qmodemcall.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setModemIdentifier(uint id)">
                <parameter left="uint" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="provider" fullname="QModemCall::provider" href="qmodemcall.html#provider" location="qmodemcall.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QModemCallProvider *" signature="provider() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setConnected" fullname="QModemCall::setConnected" href="qmodemcall.html#setConnected" location="qmodemcall.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setConnected()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemDataCall" href="qmodemdatacall.html" location="qmodemcall.h" bases="QModemCall" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemDataCall" fullname="QModemDataCall::QModemDataCall" href="qmodemdatacall.html#QModemDataCall" location="qmodemcall.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemDataCall(QModemCallProvider * provider, const QString &amp; identifier, const QString &amp; callType)">
                <parameter left="QModemCallProvider *" right="" name="provider" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="identifier" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="callType" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemDataCall" fullname="QModemDataCall::~QModemDataCall" href="qmodemdatacall.html#dtor.QModemDataCall" location="qmodemcall.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemDataCall()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemSMSSender" href="qmodemsmssender.html" location="qmodemsmssender.h" bases="QSMSSender" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemSMSSender" fullname="QModemSMSSender::QModemSMSSender" href="qmodemsmssender.html#QModemSMSSender" location="qmodemsmssender.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemSMSSender(QModemService * service)">
                <parameter left="QModemService *" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemSMSSender" fullname="QModemSMSSender::~QModemSMSSender" href="qmodemsmssender.html#dtor.QModemSMSSender" location="qmodemsmssender.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemSMSSender()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QTerminationHandler" href="qterminationhandler.html" location="qterminationhandler.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QTerminationHandler" fullname="QTerminationHandler::QTerminationHandler" href="qterminationhandler.html#QTerminationHandler" location="qterminationhandler.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QTerminationHandler(const QString &amp; text, const QString &amp; buttonText, const QString &amp; buttonIcon, const QtopiaServiceRequest &amp; action, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="buttonText" default="QString()"></parameter>
                <parameter left="const QString &amp;" right="" name="buttonIcon" default="QString()"></parameter>
                <parameter left="const QtopiaServiceRequest &amp;" right="" name="action" default="QtopiaServiceRequest()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QTerminationHandler" fullname="QTerminationHandler::QTerminationHandler" href="qterminationhandler.html#QTerminationHandler-2" location="qterminationhandler.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QTerminationHandler(const QtopiaServiceRequest &amp; action, QObject * parent)">
                <parameter left="const QtopiaServiceRequest &amp;" right="" name="action" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QTerminationHandler" fullname="QTerminationHandler::~QTerminationHandler" href="qterminationhandler.html#dtor.QTerminationHandler" location="qterminationhandler.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QTerminationHandler()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QAppointmentModel" href="qappointmentmodel.html" location="qappointmentmodel.h" bases="QPimModel" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAppointmentModel" fullname="QAppointmentModel::QAppointmentModel" href="qappointmentmodel.html#QAppointmentModel" location="qappointmentmodel.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAppointmentModel(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAppointmentModel" fullname="QAppointmentModel::~QAppointmentModel" href="qappointmentmodel.html#dtor.QAppointmentModel" location="qappointmentmodel.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAppointmentModel()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Field" fullname="QAppointmentModel::Field" href="qappointmentmodel.html#Field-enum" location="qappointmentmodel.h">
                <value name="Invalid" value="-1"></value>
                <value name="Description" value="0"></value>
                <value name="Location" value="1"></value>
                <value name="Start" value="2"></value>
                <value name="End" value="3"></value>
                <value name="AllDay" value="4"></value>
                <value name="TimeZone" value="5"></value>
                <value name="Notes" value="6"></value>
                <value name="Alarm" value="7"></value>
                <value name="RepeatRule" value="8"></value>
                <value name="RepeatFrequency" value="9"></value>
                <value name="RepeatEndDate" value="10"></value>
                <value name="RepeatWeekFlags" value="11"></value>
                <value name="Identifier" value="12"></value>
                <value name="Categories" value="13"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="QAppointmentModelRole" fullname="QAppointmentModel::QAppointmentModelRole" href="qappointmentmodel.html#QAppointmentModelRole-enum" location="qappointmentmodel.h">
                <value name="LabelRole" value="Qt::UserRole"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="fieldLabel" fullname="QAppointmentModel::fieldLabel" href="qappointmentmodel.html#fieldLabel" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="fieldLabel(Field field)">
                <parameter left="Field" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fieldIcon" fullname="QAppointmentModel::fieldIcon" href="qappointmentmodel.html#fieldIcon" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QIcon" signature="fieldIcon(Field field)">
                <parameter left="Field" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fieldIdentifier" fullname="QAppointmentModel::fieldIdentifier" href="qappointmentmodel.html#fieldIdentifier" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="fieldIdentifier(Field field)">
                <parameter left="Field" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="identifierField" fullname="QAppointmentModel::identifierField" href="qappointmentmodel.html#identifierField" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="Field" signature="identifierField(const QString &amp; identifier)">
                <parameter left="const QString &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="data" fullname="QAppointmentModel::data" href="qappointmentmodel.html#data" location="qappointmentmodel.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="data(const QModelIndex &amp; index, int role) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
                <parameter left="int" right="" name="role" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setData" fullname="QAppointmentModel::setData" href="qappointmentmodel.html#setData" location="qappointmentmodel.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="setData(const QModelIndex &amp; index, const QVariant &amp; value, int role)">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
                <parameter left="int" right="" name="role" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="appointment" fullname="QAppointmentModel::appointment" href="qappointmentmodel.html#appointment" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAppointment" signature="appointment(const QModelIndex &amp; index) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="appointment" fullname="QAppointmentModel::appointment" href="qappointmentmodel.html#appointment-2" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QAppointment" signature="appointment(const QUniqueId &amp; identifier) const">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="appointment" fullname="QAppointmentModel::appointment" href="qappointmentmodel.html#appointment-3" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="3" type="QAppointment" signature="appointment(int row) const">
                <parameter left="int" right="" name="row" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="appointmentField" fullname="QAppointmentModel::appointmentField" href="qappointmentmodel.html#appointmentField" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QVariant" signature="appointmentField(const QAppointment &amp; appointment, QAppointmentModel::Field field)">
                <parameter left="const QAppointment &amp;" right="" name="appointment" default=""></parameter>
                <parameter left="QAppointmentModel::Field" right="" name="field" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAppointmentField" fullname="QAppointmentModel::setAppointmentField" href="qappointmentmodel.html#setAppointmentField" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="setAppointmentField(QAppointment &amp; appointment, QAppointmentModel::Field field, const QVariant &amp; value)">
                <parameter left="QAppointment &amp;" right="" name="appointment" default=""></parameter>
                <parameter left="QAppointmentModel::Field" right="" name="field" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateAppointment" fullname="QAppointmentModel::updateAppointment" href="qappointmentmodel.html#updateAppointment" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="updateAppointment(const QAppointment &amp; appointment)">
                <parameter left="const QAppointment &amp;" right="" name="appointment" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeAppointment" fullname="QAppointmentModel::removeAppointment" href="qappointmentmodel.html#removeAppointment" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeAppointment(const QAppointment &amp; appointment)">
                <parameter left="const QAppointment &amp;" right="" name="appointment" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeAppointment" fullname="QAppointmentModel::removeAppointment" href="qappointmentmodel.html#removeAppointment-2" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="removeAppointment(const QUniqueId &amp; identifier)">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addAppointment" fullname="QAppointmentModel::addAppointment" href="qappointmentmodel.html#addAppointment" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QUniqueId" signature="addAppointment(const QAppointment &amp; appointment, const QPimSource &amp; source)">
                <parameter left="const QAppointment &amp;" right="" name="appointment" default=""></parameter>
                <parameter left="const QPimSource &amp;" right="" name="source" default="QPimSource()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeOccurrence" fullname="QAppointmentModel::removeOccurrence" href="qappointmentmodel.html#removeOccurrence" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeOccurrence(const QOccurrence &amp; occurrence)">
                <parameter left="const QOccurrence &amp;" right="" name="occurrence" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeOccurrence" fullname="QAppointmentModel::removeOccurrence" href="qappointmentmodel.html#removeOccurrence-2" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="removeOccurrence(const QAppointment &amp; appointment, const QDate &amp; date)">
                <parameter left="const QAppointment &amp;" right="" name="appointment" default=""></parameter>
                <parameter left="const QDate &amp;" right="" name="date" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="restoreOccurrence" fullname="QAppointmentModel::restoreOccurrence" href="qappointmentmodel.html#restoreOccurrence" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="restoreOccurrence(const QUniqueId &amp; identifier, const QDate &amp; date)">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
                <parameter left="const QDate &amp;" right="" name="date" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeOccurrence" fullname="QAppointmentModel::removeOccurrence" href="qappointmentmodel.html#removeOccurrence-3" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="bool" signature="removeOccurrence(const QUniqueId &amp; identifier, const QDate &amp; date)">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
                <parameter left="const QDate &amp;" right="" name="date" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="replaceOccurrence" fullname="QAppointmentModel::replaceOccurrence" href="qappointmentmodel.html#replaceOccurrence" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QUniqueId" signature="replaceOccurrence(const QAppointment &amp; appointment, const QOccurrence &amp; occurrence, const QDate &amp; date)">
                <parameter left="const QAppointment &amp;" right="" name="appointment" default=""></parameter>
                <parameter left="const QOccurrence &amp;" right="" name="occurrence" default=""></parameter>
                <parameter left="const QDate &amp;" right="" name="date" default="QDate()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="replaceRemaining" fullname="QAppointmentModel::replaceRemaining" href="qappointmentmodel.html#replaceRemaining" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QUniqueId" signature="replaceRemaining(const QAppointment &amp; appointment, const QAppointment &amp; replacement, const QDate &amp; date)">
                <parameter left="const QAppointment &amp;" right="" name="appointment" default=""></parameter>
                <parameter left="const QAppointment &amp;" right="" name="replacement" default=""></parameter>
                <parameter left="const QDate &amp;" right="" name="date" default="QDate()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeList" fullname="QAppointmentModel::removeList" href="qappointmentmodel.html#removeList" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeList(const QList&lt;QUniqueId&gt; &amp; identifiers)">
                <parameter left="const QList&lt;QUniqueId&gt; &amp;" right="" name="identifiers" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addRecord" fullname="QAppointmentModel::addRecord" href="qappointmentmodel.html#addRecord" location="qappointmentmodel.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QUniqueId" signature="addRecord(const QByteArray &amp; bytes, const QPimSource &amp; source, const QString &amp; format)">
                <parameter left="const QByteArray &amp;" right="" name="bytes" default=""></parameter>
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="format" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateRecord" fullname="QAppointmentModel::updateRecord" href="qappointmentmodel.html#updateRecord" location="qappointmentmodel.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="updateRecord(const QUniqueId &amp; id, const QByteArray &amp; bytes, const QString &amp; format)">
                <parameter left="const QUniqueId &amp;" right="" name="id" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="bytes" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="format" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="record" fullname="QAppointmentModel::record" href="qappointmentmodel.html#record" location="qappointmentmodel.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="record(const QUniqueId &amp; identifier, const QString &amp; format) const">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="format" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeRecord" fullname="QAppointmentModel::removeRecord" href="qappointmentmodel.html#removeRecord" location="qappointmentmodel.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeRecord(const QUniqueId &amp; identifier)">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRange" fullname="QAppointmentModel::setRange" href="qappointmentmodel.html#setRange" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRange(const QDateTime &amp; start, const QDateTime &amp; end)">
                <parameter left="const QDateTime &amp;" right="" name="start" default=""></parameter>
                <parameter left="const QDateTime &amp;" right="" name="end" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rangeStart" fullname="QAppointmentModel::rangeStart" href="qappointmentmodel.html#rangeStart" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="rangeStart() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rangeEnd" fullname="QAppointmentModel::rangeEnd" href="qappointmentmodel.html#rangeEnd" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="rangeEnd() const"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="DurationType" fullname="QAppointmentModel::DurationType" href="qappointmentmodel.html#DurationType-enum" location="qappointmentmodel.h">
                <value name="TimedDuration" value="0x01"></value>
                <value name="AllDayDuration" value="0x2"></value>
                <value name="AnyDuration" value="TimedDuration | AllDayDuration"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDurationType" fullname="QAppointmentModel::setDurationType" href="qappointmentmodel.html#setDurationType" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDurationType(DurationType type)">
                <parameter left="DurationType" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="durationType" fullname="QAppointmentModel::durationType" href="qappointmentmodel.html#durationType" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="DurationType" signature="durationType() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QOccurrenceModel" href="qoccurrencemodel.html" location="qappointmentmodel.h" bases="QAbstractItemModel" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOccurrenceModel" fullname="QOccurrenceModel::QOccurrenceModel" href="qoccurrencemodel.html#QOccurrenceModel" location="qappointmentmodel.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOccurrenceModel(const QDateTime &amp; start, const QDateTime &amp; end, QObject * parent)">
                <parameter left="const QDateTime &amp;" right="" name="start" default=""></parameter>
                <parameter left="const QDateTime &amp;" right="" name="end" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOccurrenceModel" fullname="QOccurrenceModel::QOccurrenceModel" href="qoccurrencemodel.html#QOccurrenceModel-2" location="qappointmentmodel.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QOccurrenceModel(const QDateTime &amp; start, int count, QObject * parent)">
                <parameter left="const QDateTime &amp;" right="" name="start" default=""></parameter>
                <parameter left="int" right="" name="count" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QOccurrenceModel" fullname="QOccurrenceModel::~QOccurrenceModel" href="qoccurrencemodel.html#dtor.QOccurrenceModel" location="qappointmentmodel.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QOccurrenceModel()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rowCount" fullname="QOccurrenceModel::rowCount" href="qoccurrencemodel.html#rowCount" location="qappointmentmodel.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="int" signature="rowCount(const QModelIndex &amp; parent) const">
                <parameter left="const QModelIndex &amp;" right="" name="parent" default="QModelIndex()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="data" fullname="QOccurrenceModel::data" href="qoccurrencemodel.html#data" location="qappointmentmodel.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="data(const QModelIndex &amp; index, int role) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
                <parameter left="int" right="" name="role" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setData" fullname="QOccurrenceModel::setData" href="qoccurrencemodel.html#setData" location="qappointmentmodel.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="setData(const QModelIndex &amp; index, const QVariant &amp; value, int role)">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
                <parameter left="int" right="" name="role" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setItemData" fullname="QOccurrenceModel::setItemData" href="qoccurrencemodel.html#setItemData" location="qappointmentmodel.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="setItemData(const QModelIndex &amp; index, const QMap&lt;int, QVariant&gt; &amp; values)">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
                <parameter left="const QMap&lt;int, QVariant&gt; &amp;" right="" name="values" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemData" fullname="QOccurrenceModel::itemData" href="qoccurrencemodel.html#itemData" location="qappointmentmodel.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QMap&lt;int, QVariant&gt;" signature="itemData(const QModelIndex &amp; index) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="count" fullname="QOccurrenceModel::count" href="qoccurrencemodel.html#count" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="count() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contains" fullname="QOccurrenceModel::contains" href="qoccurrencemodel.html#contains" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="contains(const QModelIndex &amp; index) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contains" fullname="QOccurrenceModel::contains" href="qoccurrencemodel.html#contains-2" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="bool" signature="contains(const QUniqueId &amp; identifier) const">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="index" fullname="QOccurrenceModel::index" href="qoccurrencemodel.html#index" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QModelIndex" signature="index(const QUniqueId &amp; identifier) const">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="index" fullname="QOccurrenceModel::index" href="qoccurrencemodel.html#index-3" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="3" type="QModelIndex" signature="index(const QOccurrence &amp; occurrence) const">
                <parameter left="const QOccurrence &amp;" right="" name="occurrence" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QOccurrenceModel::id" href="qoccurrencemodel.html#id" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUniqueId" signature="id(const QModelIndex &amp; index) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="occurrence" fullname="QOccurrenceModel::occurrence" href="qoccurrencemodel.html#occurrence" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QOccurrence" signature="occurrence(const QModelIndex &amp; index) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="occurrence" fullname="QOccurrenceModel::occurrence" href="qoccurrencemodel.html#occurrence-2" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QOccurrence" signature="occurrence(const QUniqueId &amp; identifier, const QDate &amp; date) const">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
                <parameter left="const QDate &amp;" right="" name="date" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="occurrence" fullname="QOccurrenceModel::occurrence" href="qoccurrencemodel.html#occurrence-3" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="3" type="QOccurrence" signature="occurrence(int row) const">
                <parameter left="int" right="" name="row" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="appointment" fullname="QOccurrenceModel::appointment" href="qoccurrencemodel.html#appointment" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAppointment" signature="appointment(const QUniqueId &amp; identifier) const">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="appointment" fullname="QOccurrenceModel::appointment" href="qoccurrencemodel.html#appointment-2" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QAppointment" signature="appointment(const QModelIndex &amp; index) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="appointment" fullname="QOccurrenceModel::appointment" href="qoccurrencemodel.html#appointment-3" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="3" type="QAppointment" signature="appointment(int row) const">
                <parameter left="int" right="" name="row" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRange" fullname="QOccurrenceModel::setRange" href="qoccurrencemodel.html#setRange" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRange(const QDateTime &amp; start, int count)">
                <parameter left="const QDateTime &amp;" right="" name="start" default=""></parameter>
                <parameter left="int" right="" name="count" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRange" fullname="QOccurrenceModel::setRange" href="qoccurrencemodel.html#setRange-2" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setRange(const QDateTime &amp; start, const QDateTime &amp; end)">
                <parameter left="const QDateTime &amp;" right="" name="start" default=""></parameter>
                <parameter left="const QDateTime &amp;" right="" name="end" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDurationType" fullname="QOccurrenceModel::setDurationType" href="qoccurrencemodel.html#setDurationType" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDurationType(QAppointmentModel::DurationType type)">
                <parameter left="QAppointmentModel::DurationType" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="durationType" fullname="QOccurrenceModel::durationType" href="qoccurrencemodel.html#durationType" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAppointmentModel::DurationType" signature="durationType() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rangeStart" fullname="QOccurrenceModel::rangeStart" href="qoccurrencemodel.html#rangeStart" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="rangeStart() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rangeEnd" fullname="QOccurrenceModel::rangeEnd" href="qoccurrencemodel.html#rangeEnd" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="rangeEnd() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCategoryFilter" fullname="QOccurrenceModel::setCategoryFilter" href="qoccurrencemodel.html#setCategoryFilter" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCategoryFilter(const QCategoryFilter &amp; filter)">
                <parameter left="const QCategoryFilter &amp;" right="" name="filter" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="categoryFilter" fullname="QOccurrenceModel::categoryFilter" href="qoccurrencemodel.html#categoryFilter" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QCategoryFilter" signature="categoryFilter() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="visibleSources" fullname="QOccurrenceModel::visibleSources" href="qoccurrencemodel.html#visibleSources" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSet&lt;QPimSource&gt;" signature="visibleSources() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVisibleSources" fullname="QOccurrenceModel::setVisibleSources" href="qoccurrencemodel.html#setVisibleSources" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setVisibleSources(const QSet&lt;QPimSource&gt; &amp; list)">
                <parameter left="const QSet&lt;QPimSource&gt; &amp;" right="" name="list" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableSources" fullname="QOccurrenceModel::availableSources" href="qoccurrencemodel.html#availableSources" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSet&lt;QPimSource&gt;" signature="availableSources() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sourceExists" fullname="QOccurrenceModel::sourceExists" href="qoccurrencemodel.html#sourceExists" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="sourceExists(const QPimSource &amp; source, const QUniqueId &amp; identifier) const">
                <parameter left="const QPimSource &amp;" right="" name="source" default=""></parameter>
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="editable" fullname="QOccurrenceModel::editable" href="qoccurrencemodel.html#editable" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="editable(const QModelIndex &amp; index) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="editable" fullname="QOccurrenceModel::editable" href="qoccurrencemodel.html#editable-2" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="bool" signature="editable(const QUniqueId &amp; identifier) const">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="refresh" fullname="QOccurrenceModel::refresh" href="qoccurrencemodel.html#refresh" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="refresh()"></function>
            <function access="public" threadsafety="unspecified" status="obsolete" name="fetching" fullname="QOccurrenceModel::fetching" href="qoccurrencemodel-obsolete.html#fetching" location="qappointmentmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="fetching() const"></function>
            <function access="public" threadsafety="unspecified" status="obsolete" name="completeFetch" fullname="QOccurrenceModel::completeFetch" href="qoccurrencemodel-obsolete.html#completeFetch" location="qappointmentmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="completeFetch()"></function>
            <function access="public" threadsafety="unspecified" status="obsolete" name="fetchCompleted" fullname="QOccurrenceModel::fetchCompleted" href="qoccurrencemodel-obsolete.html#fetchCompleted" location="qappointmentmodel.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="fetchCompleted()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rebuildCache" fullname="QOccurrenceModel::rebuildCache" href="qoccurrencemodel.html#rebuildCache" location="qappointmentmodel.h" virtual="non" meta="slot" const="true" static="false" overload="false" type="void" signature="rebuildCache() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QCategoryFilter" href="qcategoryfilter.html" location="qcategorymanager.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="FilterType" fullname="QCategoryFilter::FilterType" href="qcategoryfilter.html#FilterType-enum" location="qcategorymanager.h">
                <value name="List" value="0"></value>
                <value name="Unfiled" value="1"></value>
                <value name="All" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QCategoryFilter" fullname="QCategoryFilter::QCategoryFilter" href="qcategoryfilter.html#QCategoryFilter" location="qcategorymanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCategoryFilter()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QCategoryFilter" fullname="QCategoryFilter::QCategoryFilter" href="qcategoryfilter.html#QCategoryFilter-2" location="qcategorymanager.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QCategoryFilter(FilterType t)">
                <parameter left="FilterType" right="" name="t" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QCategoryFilter" fullname="QCategoryFilter::QCategoryFilter" href="qcategoryfilter.html#QCategoryFilter-3" location="qcategorymanager.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QCategoryFilter(const QList&lt;QString&gt; &amp; set)">
                <parameter left="const QList&lt;QString&gt; &amp;" right="" name="set" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QCategoryFilter" fullname="QCategoryFilter::QCategoryFilter" href="qcategoryfilter.html#QCategoryFilter-4" location="qcategorymanager.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QCategoryFilter(const QString &amp; c)">
                <parameter left="const QString &amp;" right="" name="c" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QCategoryFilter" fullname="QCategoryFilter::QCategoryFilter" href="qcategoryfilter.html#QCategoryFilter-5" location="qcategorymanager.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="5" type="" signature="QCategoryFilter(const QCategoryFilter &amp; other)">
                <parameter left="const QCategoryFilter &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCategoryFilter" fullname="QCategoryFilter::~QCategoryFilter" href="qcategoryfilter.html#dtor.QCategoryFilter" location="qcategorymanager.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCategoryFilter()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QCategoryFilter::operator=" href="qcategoryfilter.html#operator=" location="qcategorymanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QCategoryFilter &amp;" signature="operator=(const QCategoryFilter &amp; other)">
                <parameter left="const QCategoryFilter &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QCategoryFilter::operator==" href="qcategoryfilter.html#operator==" location="qcategorymanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QCategoryFilter &amp; other) const">
                <parameter left="const QCategoryFilter &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QCategoryFilter::operator!=" href="qcategoryfilter.html#operator!=" location="qcategorymanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QCategoryFilter &amp; other) const">
                <parameter left="const QCategoryFilter &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="accepted" fullname="QCategoryFilter::accepted" href="qcategoryfilter.html#accepted" location="qcategorymanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="accepted(const QList&lt;QString&gt; &amp; list) const">
                <parameter left="const QList&lt;QString&gt; &amp;" right="" name="list" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="acceptAll" fullname="QCategoryFilter::acceptAll" href="qcategoryfilter.html#acceptAll" location="qcategorymanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="acceptAll() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="acceptUnfiledOnly" fullname="QCategoryFilter::acceptUnfiledOnly" href="qcategoryfilter.html#acceptUnfiledOnly" location="qcategorymanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="acceptUnfiledOnly() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requiredCategories" fullname="QCategoryFilter::requiredCategories" href="qcategoryfilter.html#requiredCategories" location="qcategorymanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QString&gt;" signature="requiredCategories() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="label" fullname="QCategoryFilter::label" href="qcategoryfilter.html#label" location="qcategorymanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="label(const QString &amp; scope) const">
                <parameter left="const QString &amp;" right="" name="scope" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="writeConfig" fullname="QCategoryFilter::writeConfig" href="qcategoryfilter.html#writeConfig" location="qcategorymanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="writeConfig(QSettings &amp; c, const QString &amp; key) const">
                <parameter left="QSettings &amp;" right="" name="c" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readConfig" fullname="QCategoryFilter::readConfig" href="qcategoryfilter.html#readConfig" location="qcategorymanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="readConfig(const QSettings &amp; c, const QString &amp; key)">
                <parameter left="const QSettings &amp;" right="" name="c" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QCategoryManager" href="qcategorymanager.html" location="qcategorymanager.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QCategoryManager" fullname="QCategoryManager::QCategoryManager" href="qcategorymanager.html#QCategoryManager" location="qcategorymanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCategoryManager(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QCategoryManager" fullname="QCategoryManager::QCategoryManager" href="qcategorymanager.html#QCategoryManager-2" location="qcategorymanager.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QCategoryManager(const QString &amp; scope, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="scope" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCategoryManager" fullname="QCategoryManager::~QCategoryManager" href="qcategorymanager.html#dtor.QCategoryManager" location="qcategorymanager.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCategoryManager()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="label" fullname="QCategoryManager::label" href="qcategorymanager.html#label" location="qcategorymanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="label(const QString &amp; id) const">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="labels" fullname="QCategoryManager::labels" href="qcategorymanager.html#labels" location="qcategorymanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QString&gt;" signature="labels(const QList&lt;QString&gt; &amp; l) const">
                <parameter left="const QList&lt;QString&gt; &amp;" right="" name="l" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="icon" fullname="QCategoryManager::icon" href="qcategorymanager.html#icon" location="qcategorymanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QIcon" signature="icon(const QString &amp; id) const">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="iconFile" fullname="QCategoryManager::iconFile" href="qcategorymanager.html#iconFile" location="qcategorymanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="iconFile(const QString &amp; id) const">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="ringTone" fullname="QCategoryManager::ringTone" href="qcategorymanager.html#ringTone" location="qcategorymanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="ringTone(const QString &amp; id) const">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unfiledLabel" fullname="QCategoryManager::unfiledLabel" href="qcategorymanager.html#unfiledLabel" location="qcategorymanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="unfiledLabel()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="allLabel" fullname="QCategoryManager::allLabel" href="qcategorymanager.html#allLabel" location="qcategorymanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="allLabel()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="multiLabel" fullname="QCategoryManager::multiLabel" href="qcategorymanager.html#multiLabel" location="qcategorymanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="multiLabel()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSystem" fullname="QCategoryManager::isSystem" href="qcategorymanager.html#isSystem" location="qcategorymanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSystem(const QString &amp; id) const">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="obsolete" name="setSystem" fullname="QCategoryManager::setSystem" href="qcategorymanager-obsolete.html#setSystem" location="qcategorymanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setSystem(const QString &amp; id)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isGlobal" fullname="QCategoryManager::isGlobal" href="qcategorymanager.html#isGlobal" location="qcategorymanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isGlobal(const QString &amp; id) const">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setGlobal" fullname="QCategoryManager::setGlobal" href="qcategorymanager.html#setGlobal" location="qcategorymanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setGlobal(const QString &amp; id, bool global)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
                <parameter left="bool" right="" name="global" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="add" fullname="QCategoryManager::add" href="qcategorymanager.html#add" location="qcategorymanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="add(const QString &amp; trLabel, const QString &amp; icon, bool forceGlobal)">
                <parameter left="const QString &amp;" right="" name="trLabel" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="icon" default="QString()"></parameter>
                <parameter left="bool" right="" name="forceGlobal" default="false"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="obsolete" name="addCategory" fullname="QCategoryManager::addCategory" href="qcategorymanager-obsolete.html#addCategory" location="qcategorymanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="addCategory(const QString &amp; id, const QString &amp; trLabel, const QString &amp; icon, bool forceGlobal, bool isSystem)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="trLabel" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="icon" default="QString()"></parameter>
                <parameter left="bool" right="" name="forceGlobal" default="false"></parameter>
                <parameter left="bool" right="" name="isSystem" default="false"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="ensureSystemCategory" fullname="QCategoryManager::ensureSystemCategory" href="qcategorymanager.html#ensureSystemCategory" location="qcategorymanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="ensureSystemCategory(const QString &amp; id, const QString &amp; trLabel, const QString &amp; icon, bool forceGlobal)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="trLabel" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="icon" default="QString()"></parameter>
                <parameter left="bool" right="" name="forceGlobal" default="false"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remove" fullname="QCategoryManager::remove" href="qcategorymanager.html#remove" location="qcategorymanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="remove(const QString &amp; id)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLabel" fullname="QCategoryManager::setLabel" href="qcategorymanager.html#setLabel" location="qcategorymanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setLabel(const QString &amp; id, const QString &amp; trLabel)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="trLabel" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIcon" fullname="QCategoryManager::setIcon" href="qcategorymanager.html#setIcon" location="qcategorymanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setIcon(const QString &amp; id, const QString &amp; icon)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="icon" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRingTone" fullname="QCategoryManager::setRingTone" href="qcategorymanager.html#setRingTone" location="qcategorymanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setRingTone(const QString &amp; id, const QString &amp; fileName)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contains" fullname="QCategoryManager::contains" href="qcategorymanager.html#contains" location="qcategorymanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="contains(const QString &amp; id) const">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="containsLabel" fullname="QCategoryManager::containsLabel" href="qcategorymanager.html#containsLabel" location="qcategorymanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="containsLabel(const QString &amp; label, bool forceGlobal) const">
                <parameter left="const QString &amp;" right="" name="label" default=""></parameter>
                <parameter left="bool" right="" name="forceGlobal" default="false"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="idForLabel" fullname="QCategoryManager::idForLabel" href="qcategorymanager.html#idForLabel" location="qcategorymanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="idForLabel(const QString &amp; label) const">
                <parameter left="const QString &amp;" right="" name="label" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="categoryIds" fullname="QCategoryManager::categoryIds" href="qcategorymanager.html#categoryIds" location="qcategorymanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QString&gt;" signature="categoryIds() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exists" fullname="QCategoryManager::exists" href="qcategorymanager.html#exists" location="qcategorymanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="exists(const QString &amp; id) const">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="categoriesChanged" fullname="QCategoryManager::categoriesChanged" href="qcategorymanager.html#categoriesChanged" location="qcategorymanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="categoriesChanged()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QAbstractIpcInterfaceGroupManager" href="qabstractipcinterfacegroupmanager.html" location="qabstractipcinterfacegroupmanager.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAbstractIpcInterfaceGroupManager" fullname="QAbstractIpcInterfaceGroupManager::QAbstractIpcInterfaceGroupManager" href="qabstractipcinterfacegroupmanager.html#QAbstractIpcInterfaceGroupManager" location="qabstractipcinterfacegroupmanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAbstractIpcInterfaceGroupManager(const QString &amp; valueSpaceLocation, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="valueSpaceLocation" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAbstractIpcInterfaceGroupManager" fullname="QAbstractIpcInterfaceGroupManager::QAbstractIpcInterfaceGroupManager" href="qabstractipcinterfacegroupmanager.html#QAbstractIpcInterfaceGroupManager-2" location="qabstractipcinterfacegroupmanager.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QAbstractIpcInterfaceGroupManager(const QString &amp; valueSpaceLocation, const QString &amp; interface, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="valueSpaceLocation" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="interface" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAbstractIpcInterfaceGroupManager" fullname="QAbstractIpcInterfaceGroupManager::~QAbstractIpcInterfaceGroupManager" href="qabstractipcinterfacegroupmanager.html#dtor.QAbstractIpcInterfaceGroupManager" location="qabstractipcinterfacegroupmanager.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAbstractIpcInterfaceGroupManager()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="groups" fullname="QAbstractIpcInterfaceGroupManager::groups" href="qabstractipcinterfacegroupmanager.html#groups" location="qabstractipcinterfacegroupmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="groups() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="interfaces" fullname="QAbstractIpcInterfaceGroupManager::interfaces" href="qabstractipcinterfacegroupmanager.html#interfaces" location="qabstractipcinterfacegroupmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="interfaces(const QString &amp; group) const">
                <parameter left="const QString &amp;" right="" name="group" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supports" fullname="QAbstractIpcInterfaceGroupManager::supports" href="qabstractipcinterfacegroupmanager.html#supports" location="qabstractipcinterfacegroupmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="supports() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supports" fullname="QAbstractIpcInterfaceGroupManager::supports" href="qabstractipcinterfacegroupmanager.html#supports-2" location="qabstractipcinterfacegroupmanager.cpp" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="bool" signature="supports(const QString &amp; group) const">
                <parameter left="const QString &amp;" right="" name="group" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="priority" fullname="QAbstractIpcInterfaceGroupManager::priority" href="qabstractipcinterfacegroupmanager.html#priority" location="qabstractipcinterfacegroupmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="priority(const QString &amp; group) const">
                <parameter left="const QString &amp;" right="" name="group" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="groupsChanged" fullname="QAbstractIpcInterfaceGroupManager::groupsChanged" href="qabstractipcinterfacegroupmanager.html#groupsChanged" location="qabstractipcinterfacegroupmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="groupsChanged()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="groupAdded" fullname="QAbstractIpcInterfaceGroupManager::groupAdded" href="qabstractipcinterfacegroupmanager.html#groupAdded" location="qabstractipcinterfacegroupmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="groupAdded(const QString &amp; group)">
                <parameter left="const QString &amp;" right="" name="group" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="groupRemoved" fullname="QAbstractIpcInterfaceGroupManager::groupRemoved" href="qabstractipcinterfacegroupmanager.html#groupRemoved" location="qabstractipcinterfacegroupmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="groupRemoved(const QString &amp; group)">
                <parameter left="const QString &amp;" right="" name="group" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QAudioInput" href="qaudioinput.html" location="qaudioinput.h" bases="QIODevice" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioInput" fullname="QAudioInput::QAudioInput" href="qaudioinput.html#QAudioInput" location="qaudioinput_alsa.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAudioInput(const QByteArray &amp; device, QObject * parent)">
                <parameter left="const QByteArray &amp;" right="" name="device" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioInput" fullname="QAudioInput::QAudioInput" href="qaudioinput.html#QAudioInput-2" location="qaudioinput_alsa.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QAudioInput(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAudioInput" fullname="QAudioInput::~QAudioInput" href="qaudioinput.html#dtor.QAudioInput" location="qaudioinput_alsa.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAudioInput()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frequency" fullname="QAudioInput::frequency" href="qaudioinput.html#frequency" location="qaudioinput_alsa.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="frequency() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFrequency" fullname="QAudioInput::setFrequency" href="qaudioinput.html#setFrequency" location="qaudioinput_alsa.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFrequency(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="channels" fullname="QAudioInput::channels" href="qaudioinput.html#channels" location="qaudioinput_alsa.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="channels() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setChannels" fullname="QAudioInput::setChannels" href="qaudioinput.html#setChannels" location="qaudioinput_alsa.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setChannels(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="samplesPerBlock" fullname="QAudioInput::samplesPerBlock" href="qaudioinput.html#samplesPerBlock" location="qaudioinput_alsa.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="samplesPerBlock() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSamplesPerBlock" fullname="QAudioInput::setSamplesPerBlock" href="qaudioinput.html#setSamplesPerBlock" location="qaudioinput_alsa.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSamplesPerBlock(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="open" fullname="QAudioInput::open" href="qaudioinput.html#open" location="qaudioinput_alsa.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="open(QIODevice::OpenMode mode)">
                <parameter left="QIODevice::OpenMode" right="" name="mode" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="close" fullname="QAudioInput::close" href="qaudioinput.html#close" location="qaudioinput_alsa.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="close()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSequential" fullname="QAudioInput::isSequential" href="qaudioinput.html#isSequential" location="qaudioinput_alsa.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSequential() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bytesAvailable" fullname="QAudioInput::bytesAvailable" href="qaudioinput.html#bytesAvailable" location="qaudioinput_alsa.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" type="qint64" signature="bytesAvailable() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="readData" fullname="QAudioInput::readData" href="qaudioinput.html#readData" location="qaudioinput_alsa.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="qint64" signature="readData(char * data, qint64 maxlen)">
                <parameter left="char *" right="" name="data" default=""></parameter>
                <parameter left="qint64" right="" name="maxlen" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="writeData" fullname="QAudioInput::writeData" href="qaudioinput.html#writeData" location="qaudioinput_alsa.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="qint64" signature="writeData(const char * data, qint64 len)">
                <parameter left="const char *" right="" name="data" default=""></parameter>
                <parameter left="qint64" right="" name="len" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QAnalogClock" href="qanalogclock.html" location="qanalogclock.h" bases="QFrame" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAnalogClock" fullname="QAnalogClock::QAnalogClock" href="qanalogclock.html#QAnalogClock" location="qanalogclock.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAnalogClock(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAnalogClock" fullname="QAnalogClock::~QAnalogClock" href="qanalogclock.html#dtor.QAnalogClock" location="qanalogclock.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAnalogClock()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="display" fullname="QAnalogClock::display" href="qanalogclock.html#display" location="qanalogclock.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="display(const QTime &amp; time)">
                <parameter left="const QTime &amp;" right="" name="time" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFace" fullname="QAnalogClock::setFace" href="qanalogclock.html#setFace" location="qanalogclock.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFace(const QPixmap &amp; face)">
                <parameter left="const QPixmap &amp;" right="" name="face" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothSdpUuid" href="qbluetoothsdpuuid.html" location="qbluetoothsdpuuid.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="QBluetoothSdpUuid::Type" href="qbluetoothsdpuuid.html#Type-enum" location="qbluetoothsdpuuid.h">
                <value name="UUID16" value="0"></value>
                <value name="UUID32" value="1"></value>
                <value name="UUID128" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothSdpUuid" fullname="QBluetoothSdpUuid::QBluetoothSdpUuid" href="qbluetoothsdpuuid.html#QBluetoothSdpUuid" location="qbluetoothsdpuuid.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothSdpUuid()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothSdpUuid" fullname="QBluetoothSdpUuid::QBluetoothSdpUuid" href="qbluetoothsdpuuid.html#QBluetoothSdpUuid-2" location="qbluetoothsdpuuid.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QBluetoothSdpUuid(quint16 data)">
                <parameter left="quint16" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothSdpUuid" fullname="QBluetoothSdpUuid::QBluetoothSdpUuid" href="qbluetoothsdpuuid.html#QBluetoothSdpUuid-3" location="qbluetoothsdpuuid.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QBluetoothSdpUuid(quint32 data)">
                <parameter left="quint32" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothSdpUuid" fullname="QBluetoothSdpUuid::QBluetoothSdpUuid" href="qbluetoothsdpuuid.html#QBluetoothSdpUuid-4" location="qbluetoothsdpuuid.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QBluetoothSdpUuid(quint128 data)">
                <parameter left="quint128" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothSdpUuid" fullname="QBluetoothSdpUuid::QBluetoothSdpUuid" href="qbluetoothsdpuuid.html#QBluetoothSdpUuid-5" location="qbluetoothsdpuuid.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="5" type="" signature="QBluetoothSdpUuid(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothSdpUuid" fullname="QBluetoothSdpUuid::QBluetoothSdpUuid" href="qbluetoothsdpuuid.html#QBluetoothSdpUuid-6" location="qbluetoothsdpuuid.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="6" type="" signature="QBluetoothSdpUuid(const QBluetoothSdpUuid &amp; other)">
                <parameter left="const QBluetoothSdpUuid &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QBluetoothSdpUuid::operator=" href="qbluetoothsdpuuid.html#operator=" location="qbluetoothsdpuuid.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QBluetoothSdpUuid &amp;" signature="operator=(const QBluetoothSdpUuid &amp; other)">
                <parameter left="const QBluetoothSdpUuid &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothSdpUuid" fullname="QBluetoothSdpUuid::~QBluetoothSdpUuid" href="qbluetoothsdpuuid.html#dtor.QBluetoothSdpUuid" location="qbluetoothsdpuuid.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothSdpUuid()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QBluetoothSdpUuid::operator==" href="qbluetoothsdpuuid.html#operator==" location="qbluetoothsdpuuid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QBluetoothSdpUuid &amp; other) const">
                <parameter left="const QBluetoothSdpUuid &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QBluetoothSdpUuid::operator!=" href="qbluetoothsdpuuid.html#operator!=" location="qbluetoothsdpuuid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QBluetoothSdpUuid &amp; other) const">
                <parameter left="const QBluetoothSdpUuid &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toString" fullname="QBluetoothSdpUuid::toString" href="qbluetoothsdpuuid.html#toString" location="qbluetoothsdpuuid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="toString() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QBluetoothSdpUuid::type" href="qbluetoothsdpuuid.html#type" location="qbluetoothsdpuuid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothSdpUuid::Type" signature="type() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="uuid" fullname="QBluetoothSdpUuid::uuid" href="qbluetoothsdpuuid.html#uuid" location="qbluetoothsdpuuid.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QVariant" signature="uuid()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QBluetoothSdpUuid::isValid" href="qbluetoothsdpuuid.html#isValid" location="qbluetoothsdpuuid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toUuid128" fullname="QBluetoothSdpUuid::toUuid128" href="qbluetoothsdpuuid.html#toUuid128" location="qbluetoothsdpuuid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothSdpUuid" signature="toUuid128() const"></function>
            <variable access="public" threadsafety="unspecified" status="commendable" name="PublicBrowseGroup" fullname="QBluetoothSdpUuid::PublicBrowseGroup" href="qbluetoothsdpuuid.html#PublicBrowseGroup-var" location="qbluetoothsdpuuid.h" type="QBluetoothSdpUuid" static="true"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="L2cap" fullname="QBluetoothSdpUuid::L2cap" href="qbluetoothsdpuuid.html#L2cap-var" location="qbluetoothsdpuuid.h" type="QBluetoothSdpUuid" static="true"></variable>
            <function access="public" threadsafety="unspecified" status="commendable" name="create16Bit" fullname="QBluetoothSdpUuid::create16Bit" href="qbluetoothsdpuuid.html#create16Bit" location="qbluetoothsdpuuid.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QBluetoothSdpUuid" signature="create16Bit(quint16 id)">
                <parameter left="quint16" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="create32Bit" fullname="QBluetoothSdpUuid::create32Bit" href="qbluetoothsdpuuid.html#create32Bit" location="qbluetoothsdpuuid.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QBluetoothSdpUuid" signature="create32Bit(quint32 id)">
                <parameter left="quint32" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="create128Bit" fullname="QBluetoothSdpUuid::create128Bit" href="qbluetoothsdpuuid.html#create128Bit" location="qbluetoothsdpuuid.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QBluetoothSdpUuid" signature="create128Bit(quint128 id)">
                <parameter left="quint128" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromProfile" fullname="QBluetoothSdpUuid::fromProfile" href="qbluetoothsdpuuid.html#fromProfile" location="qbluetoothsdpuuid.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QBluetoothSdpUuid" signature="fromProfile(QBluetooth::SDPProfile profile)">
                <parameter left="QBluetooth::SDPProfile" right="" name="profile" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemCallProvider" href="qmodemcallprovider.html" location="qmodemcallprovider.h" bases="QPhoneCallProvider" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemCallProvider" fullname="QModemCallProvider::QModemCallProvider" href="qmodemcallprovider.html#QModemCallProvider" location="qmodemcallprovider.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemCallProvider(QModemService * service)">
                <parameter left="QModemService *" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemCallProvider" fullname="QModemCallProvider::~QModemCallProvider" href="qmodemcallprovider.html#dtor.QModemCallProvider" location="qmodemcallprovider.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemCallProvider()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="AtdBehavior" fullname="QModemCallProvider::AtdBehavior" href="qmodemcallprovider.html#AtdBehavior-enum" location="qmodemcallprovider.h">
                <value name="AtdOkIsConnect" value="0"></value>
                <value name="AtdOkIsDialing" value="1"></value>
                <value name="AtdOkIsDialingWithStatus" value="2"></value>
                <value name="AtdUnknown" value="3"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="service" fullname="QModemCallProvider::service" href="qmodemcallprovider.html#service" location="qmodemcallprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QModemService *" signature="service() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="atchat" fullname="QModemCallProvider::atchat" href="qmodemcallprovider.html#atchat" location="qmodemcallprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAtChat *" signature="atchat() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="multiplexer" fullname="QModemCallProvider::multiplexer" href="qmodemcallprovider.html#multiplexer" location="qmodemcallprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSerialIODeviceMultiplexer *" signature="multiplexer() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="incomingCall" fullname="QModemCallProvider::incomingCall" href="qmodemcallprovider.html#incomingCall" location="qmodemcallprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QModemCall *" signature="incomingCall() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dialingCall" fullname="QModemCallProvider::dialingCall" href="qmodemcallprovider.html#dialingCall" location="qmodemcallprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QModemCall *" signature="dialingCall() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callForIdentifier" fullname="QModemCallProvider::callForIdentifier" href="qmodemcallprovider.html#callForIdentifier" location="qmodemcallprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QModemCall *" signature="callForIdentifier(uint id) const">
                <parameter left="uint" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="nextModemIdentifier" fullname="QModemCallProvider::nextModemIdentifier" href="qmodemcallprovider.html#nextModemIdentifier" location="qmodemcallprovider.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="uint" signature="nextModemIdentifier()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="ringing" fullname="QModemCallProvider::ringing" href="qmodemcallprovider.html#ringing" location="qmodemcallprovider.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="ringing(const QString &amp; number, const QString &amp; callType, uint modemIdentifier)">
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="callType" default=""></parameter>
                <parameter left="uint" right="" name="modemIdentifier" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hangupRemote" fullname="QModemCallProvider::hangupRemote" href="qmodemcallprovider.html#hangupRemote" location="qmodemcallprovider.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="hangupRemote(QModemCall * call)">
                <parameter left="QModemCall *" right="" name="call" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="resolveRingType" fullname="QModemCallProvider::resolveRingType" href="qmodemcallprovider.html#resolveRingType" location="qmodemcallprovider.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="resolveRingType(const QString &amp; type) const">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="resolveCallMode" fullname="QModemCallProvider::resolveCallMode" href="qmodemcallprovider.html#resolveCallMode" location="qmodemcallprovider.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="resolveCallMode(int mode) const">
                <parameter left="int" right="" name="mode" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="hasRepeatingRings" fullname="QModemCallProvider::hasRepeatingRings" href="qmodemcallprovider.html#hasRepeatingRings" location="qmodemcallprovider.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasRepeatingRings() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="atdBehavior" fullname="QModemCallProvider::atdBehavior" href="qmodemcallprovider.html#atdBehavior" location="qmodemcallprovider.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QModemCallProvider::AtdBehavior" signature="atdBehavior() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="abortDial" fullname="QModemCallProvider::abortDial" href="qmodemcallprovider.html#abortDial" location="qmodemcallprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="abortDial(uint modemIdentifier, QPhoneCall::Scope scope)">
                <parameter left="uint" right="" name="modemIdentifier" default=""></parameter>
                <parameter left="QPhoneCall::Scope" right="" name="scope" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="partOfHoldGroup" fullname="QModemCallProvider::partOfHoldGroup" href="qmodemcallprovider.html#partOfHoldGroup" location="qmodemcallprovider.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="partOfHoldGroup(const QString &amp; type) const">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="dialServiceCommand" fullname="QModemCallProvider::dialServiceCommand" href="qmodemcallprovider.html#dialServiceCommand" location="qmodemcallprovider.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="dialServiceCommand(const QDialOptions &amp; options) const">
                <parameter left="const QDialOptions &amp;" right="" name="options" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="dialVoiceCommand" fullname="QModemCallProvider::dialVoiceCommand" href="qmodemcallprovider.html#dialVoiceCommand" location="qmodemcallprovider.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="dialVoiceCommand(const QDialOptions &amp; options) const">
                <parameter left="const QDialOptions &amp;" right="" name="options" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="releaseCallCommand" fullname="QModemCallProvider::releaseCallCommand" href="qmodemcallprovider.html#releaseCallCommand" location="qmodemcallprovider.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="releaseCallCommand(uint modemIdentifier) const">
                <parameter left="uint" right="" name="modemIdentifier" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="releaseActiveCallsCommand" fullname="QModemCallProvider::releaseActiveCallsCommand" href="qmodemcallprovider.html#releaseActiveCallsCommand" location="qmodemcallprovider.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="releaseActiveCallsCommand() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="releaseHeldCallsCommand" fullname="QModemCallProvider::releaseHeldCallsCommand" href="qmodemcallprovider.html#releaseHeldCallsCommand" location="qmodemcallprovider.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="releaseHeldCallsCommand() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="putOnHoldCommand" fullname="QModemCallProvider::putOnHoldCommand" href="qmodemcallprovider.html#putOnHoldCommand" location="qmodemcallprovider.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="putOnHoldCommand() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setBusyCommand" fullname="QModemCallProvider::setBusyCommand" href="qmodemcallprovider.html#setBusyCommand" location="qmodemcallprovider.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="setBusyCommand() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="acceptCallCommand" fullname="QModemCallProvider::acceptCallCommand" href="qmodemcallprovider.html#acceptCallCommand" location="qmodemcallprovider.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="acceptCallCommand(bool otherActiveCalls) const">
                <parameter left="bool" right="" name="otherActiveCalls" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="activateCallCommand" fullname="QModemCallProvider::activateCallCommand" href="qmodemcallprovider.html#activateCallCommand" location="qmodemcallprovider.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="activateCallCommand(uint modemIdentifier, bool otherActiveCalls) const">
                <parameter left="uint" right="" name="modemIdentifier" default=""></parameter>
                <parameter left="bool" right="" name="otherActiveCalls" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="activateHeldCallsCommand" fullname="QModemCallProvider::activateHeldCallsCommand" href="qmodemcallprovider.html#activateHeldCallsCommand" location="qmodemcallprovider.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="activateHeldCallsCommand() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="joinCallsCommand" fullname="QModemCallProvider::joinCallsCommand" href="qmodemcallprovider.html#joinCallsCommand" location="qmodemcallprovider.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="joinCallsCommand(bool detachSubscriber) const">
                <parameter left="bool" right="" name="detachSubscriber" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="deflectCallCommand" fullname="QModemCallProvider::deflectCallCommand" href="qmodemcallprovider.html#deflectCallCommand" location="qmodemcallprovider.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="deflectCallCommand(const QString &amp; number) const">
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="gprsSetupCommands" fullname="QModemCallProvider::gprsSetupCommands" href="qmodemcallprovider.html#gprsSetupCommands" location="qmodemcallprovider.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="gprsSetupCommands() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="resetModem" fullname="QModemCallProvider::resetModem" href="qmodemcallprovider.html#resetModem" location="qmodemcallprovider.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="resetModem()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QMediaContentContext" href="qmediacontentcontext.html" location="qmediatools.h" bases="QObject" module="">
            <keyword name="player-object"></keyword>
            <contents name="player-objects" title="Player Objects" level="1"></contents>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaContentContext" fullname="QMediaContentContext::QMediaContentContext" href="qmediacontentcontext.html#QMediaContentContext" location="qmediatools.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaContentContext(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaContentContext" fullname="QMediaContentContext::~QMediaContentContext" href="qmediacontentcontext.html#dtor.QMediaContentContext" location="qmediatools.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaContentContext()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addObject" fullname="QMediaContentContext::addObject" href="qmediacontentcontext.html#addObject" location="qmediatools.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addObject(QObject * object)">
                <parameter left="QObject *" right="" name="object" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeObject" fullname="QMediaContentContext::removeObject" href="qmediacontentcontext.html#removeObject" location="qmediatools.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeObject(QObject * object)">
                <parameter left="QObject *" right="" name="object" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="content" fullname="QMediaContentContext::content" href="qmediacontentcontext.html#content" location="qmediatools.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMediaContent *" signature="content() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentChanged" fullname="QMediaContentContext::contentChanged" href="qmediacontentcontext.html#contentChanged" location="qmediatools.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="contentChanged(QMediaContent * content)">
                <parameter left="QMediaContent *" right="" name="content" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMediaContent" fullname="QMediaContentContext::setMediaContent" href="qmediacontentcontext.html#setMediaContent" location="qmediatools.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setMediaContent(QMediaContent * content)">
                <parameter left="QMediaContent *" right="" name="content" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QMediaControlNotifier" href="qmediacontrolnotifier.html" location="qmediatools.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaControlNotifier" fullname="QMediaControlNotifier::QMediaControlNotifier" href="qmediacontrolnotifier.html#QMediaControlNotifier" location="qmediatools.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaControlNotifier(const QString &amp; control, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="control" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaControlNotifier" fullname="QMediaControlNotifier::~QMediaControlNotifier" href="qmediacontrolnotifier.html#dtor.QMediaControlNotifier" location="qmediatools.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaControlNotifier()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="content" fullname="QMediaControlNotifier::content" href="qmediacontrolnotifier.html#content" location="qmediatools.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMediaContent *" signature="content() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="valid" fullname="QMediaControlNotifier::valid" href="qmediacontrolnotifier.html#valid" location="qmediatools.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="valid()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="invalid" fullname="QMediaControlNotifier::invalid" href="qmediacontrolnotifier.html#invalid" location="qmediatools.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="invalid()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMediaContent" fullname="QMediaControlNotifier::setMediaContent" href="qmediacontrolnotifier.html#setMediaContent" location="qmediatools.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setMediaContent(QMediaContent * content)">
                <parameter left="QMediaContent *" right="" name="content" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QDSActionRequest" href="qdsactionrequest.html" location="qdsactionrequest.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QDSActionRequest" fullname="QDSActionRequest::QDSActionRequest" href="qdsactionrequest.html#QDSActionRequest" location="qdsactionrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDSActionRequest(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDSActionRequest" fullname="QDSActionRequest::QDSActionRequest" href="qdsactionrequest.html#QDSActionRequest-2" location="qdsactionrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QDSActionRequest(const QDSActionRequest &amp; other)">
                <parameter left="const QDSActionRequest &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDSActionRequest" fullname="QDSActionRequest::QDSActionRequest" href="qdsactionrequest.html#QDSActionRequest-3" location="qdsactionrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QDSActionRequest(const QDSServiceInfo &amp; serviceInfo, const QString &amp; channel, QObject * parent)">
                <parameter left="const QDSServiceInfo &amp;" right="" name="serviceInfo" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="channel" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDSActionRequest" fullname="QDSActionRequest::QDSActionRequest" href="qdsactionrequest.html#QDSActionRequest-4" location="qdsactionrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QDSActionRequest(const QDSServiceInfo &amp; serviceInfo, const QDSData &amp; requestData, const QString &amp; channel, const QByteArray &amp; auxiliary, QObject * parent)">
                <parameter left="const QDSServiceInfo &amp;" right="" name="serviceInfo" default=""></parameter>
                <parameter left="const QDSData &amp;" right="" name="requestData" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="channel" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="auxiliary" default="QByteArray()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDSActionRequest" fullname="QDSActionRequest::~QDSActionRequest" href="qdsactionrequest.html#dtor.QDSActionRequest" location="qdsactionrequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDSActionRequest()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QDSActionRequest::operator=" href="qdsactionrequest.html#operator=" location="qdsactionrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="const QDSActionRequest &amp;" signature="operator=(const QDSActionRequest &amp; other)">
                <parameter left="const QDSActionRequest &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serviceInfo" fullname="QDSActionRequest::serviceInfo" href="qdsactionrequest.html#serviceInfo" location="qdsactionrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QDSServiceInfo &amp;" signature="serviceInfo() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QDSActionRequest::isValid" href="qdsactionrequest.html#isValid" location="qdsactionrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isComplete" fullname="QDSActionRequest::isComplete" href="qdsactionrequest.html#isComplete" location="qdsactionrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isComplete() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestData" fullname="QDSActionRequest::requestData" href="qdsactionrequest.html#requestData" location="qdsactionrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QDSData &amp;" signature="requestData() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="responseData" fullname="QDSActionRequest::responseData" href="qdsactionrequest.html#responseData" location="qdsactionrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QDSData &amp;" signature="responseData() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="auxiliaryData" fullname="QDSActionRequest::auxiliaryData" href="qdsactionrequest.html#auxiliaryData" location="qdsactionrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QByteArray &amp;" signature="auxiliaryData() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorMessage" fullname="QDSActionRequest::errorMessage" href="qdsactionrequest.html#errorMessage" location="qdsactionrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorMessage() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="respond" fullname="QDSActionRequest::respond" href="qdsactionrequest.html#respond" location="qdsactionrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="respond()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="respond" fullname="QDSActionRequest::respond" href="qdsactionrequest.html#respond-2" location="qdsactionrequest.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="respond(const QDSData &amp; responseData)">
                <parameter left="const QDSData &amp;" right="" name="responseData" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="respond" fullname="QDSActionRequest::respond" href="qdsactionrequest.html#respond-3" location="qdsactionrequest.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="bool" signature="respond(const QString &amp; message)">
                <parameter left="const QString &amp;" right="" name="message" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemPreferredNetworkOperators" href="qmodempreferrednetworkoperators.html" location="qmodempreferrednetworkoperators.h" bases="QPreferredNetworkOperators" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemPreferredNetworkOperators" fullname="QModemPreferredNetworkOperators::QModemPreferredNetworkOperators" href="qmodempreferrednetworkoperators.html#QModemPreferredNetworkOperators" location="qmodempreferrednetworkoperators.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemPreferredNetworkOperators(QModemService * service)">
                <parameter left="QModemService *" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemPreferredNetworkOperators" fullname="QModemPreferredNetworkOperators::~QModemPreferredNetworkOperators" href="qmodempreferrednetworkoperators.html#dtor.QModemPreferredNetworkOperators" location="qmodempreferrednetworkoperators.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemPreferredNetworkOperators()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="deleteBeforeUpdate" fullname="QModemPreferredNetworkOperators::deleteBeforeUpdate" href="qmodempreferrednetworkoperators.html#deleteBeforeUpdate" location="qmodempreferrednetworkoperators.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="deleteBeforeUpdate() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setDeleteBeforeUpdate" fullname="QModemPreferredNetworkOperators::setDeleteBeforeUpdate" href="qmodempreferrednetworkoperators.html#setDeleteBeforeUpdate" location="qmodempreferrednetworkoperators.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDeleteBeforeUpdate(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="quoteOperatorNumber" fullname="QModemPreferredNetworkOperators::quoteOperatorNumber" href="qmodempreferrednetworkoperators.html#quoteOperatorNumber" location="qmodempreferrednetworkoperators.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="quoteOperatorNumber() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setQuoteOperatorNumber" fullname="QModemPreferredNetworkOperators::setQuoteOperatorNumber" href="qmodempreferrednetworkoperators.html#setQuoteOperatorNumber" location="qmodempreferrednetworkoperators.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setQuoteOperatorNumber(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="SystemSuspendHandler" href="systemsuspendhandler.html" location="systemsuspend.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="SystemSuspendHandler" fullname="SystemSuspendHandler::SystemSuspendHandler" href="systemsuspendhandler.html#SystemSuspendHandler" location="systemsuspend.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="SystemSuspendHandler(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="canSuspend" fullname="SystemSuspendHandler::canSuspend" href="systemsuspendhandler.html#canSuspend" location="systemsuspend.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="canSuspend() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="suspend" fullname="SystemSuspendHandler::suspend" href="systemsuspendhandler.html#suspend" location="systemsuspend.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="suspend()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="wake" fullname="SystemSuspendHandler::wake" href="systemsuspendhandler.html#wake" location="systemsuspend.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="wake()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operationCompleted" fullname="SystemSuspendHandler::operationCompleted" href="systemsuspendhandler.html#operationCompleted" location="systemsuspend.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="operationCompleted()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="SystemSuspend" href="systemsuspend.html" location="systemsuspend.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="suspendSystem" fullname="SystemSuspend::suspendSystem" href="systemsuspend.html#suspendSystem" location="systemsuspend.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="bool" signature="suspendSystem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="systemSuspending" fullname="SystemSuspend::systemSuspending" href="systemsuspend.html#systemSuspending" location="systemsuspend.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="systemSuspending()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="systemWaking" fullname="SystemSuspend::systemWaking" href="systemsuspend.html#systemWaking" location="systemsuspend.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="systemWaking()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="systemActive" fullname="SystemSuspend::systemActive" href="systemsuspend.html#systemActive" location="systemsuspend.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="systemActive()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="systemSuspendCanceled" fullname="SystemSuspend::systemSuspendCanceled" href="systemsuspend.html#systemSuspendCanceled" location="systemsuspend.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="systemSuspendCanceled()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="SuspendService" href="suspendservice.html" location="systemsuspend.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="suspend" fullname="SuspendService::suspend" href="suspendservice.html#suspend" location="systemsuspend.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="suspend()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaEngineFactory" href="qmediaenginefactory.html" location="qmediaenginefactory.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaEngineFactory" fullname="QMediaEngineFactory::~QMediaEngineFactory" href="qmediaenginefactory.html#dtor.QMediaEngineFactory" location="qmediaenginefactory.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaEngineFactory()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="create" fullname="QMediaEngineFactory::create" href="qmediaenginefactory.html#create" location="qmediaenginefactory.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QMediaEngine *" signature="create()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QStorageMetaInfo" href="qstoragemetainfo.html" location="qstorage.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QStorageMetaInfo" fullname="QStorageMetaInfo::QStorageMetaInfo" href="qstoragemetainfo.html#QStorageMetaInfo" location="qstorage.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QStorageMetaInfo(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QStorageMetaInfo" fullname="QStorageMetaInfo::~QStorageMetaInfo" href="qstoragemetainfo.html#dtor.QStorageMetaInfo" location="qstorage.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QStorageMetaInfo()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fileSystems" fullname="QStorageMetaInfo::fileSystems" href="qstoragemetainfo.html#fileSystems" location="qstorage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QList&lt;QFileSystem *&gt;" signature="fileSystems(QFileSystemFilter * filter, bool connectedOnly)">
                <parameter left="QFileSystemFilter *" right="" name="filter" default=""></parameter>
                <parameter left="bool" right="" name="connectedOnly" default="true"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fileSystemOf" fullname="QStorageMetaInfo::fileSystemOf" href="qstoragemetainfo.html#fileSystemOf" location="qstorage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="const QFileSystem *" signature="fileSystemOf(const QString &amp; filename, bool connectedOnly)">
                <parameter left="const QString &amp;" right="" name="filename" default=""></parameter>
                <parameter left="bool" right="" name="connectedOnly" default="true"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="applicationsFileSystem" fullname="QStorageMetaInfo::applicationsFileSystem" href="qstoragemetainfo.html#applicationsFileSystem" location="qstorage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="const QFileSystem *" signature="applicationsFileSystem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="documentsFileSystem" fullname="QStorageMetaInfo::documentsFileSystem" href="qstoragemetainfo.html#documentsFileSystem" location="qstorage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="const QFileSystem *" signature="documentsFileSystem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fileSystemNames" fullname="QStorageMetaInfo::fileSystemNames" href="qstoragemetainfo.html#fileSystemNames" location="qstorage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QStringList" signature="fileSystemNames(QFileSystemFilter * filter, bool connectedOnly)">
                <parameter left="QFileSystemFilter *" right="" name="filter" default=""></parameter>
                <parameter left="bool" right="" name="connectedOnly" default="true"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cardInfoString" fullname="QStorageMetaInfo::cardInfoString" href="qstoragemetainfo.html#cardInfoString" location="qstorage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="cardInfoString()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="installLocationsString" fullname="QStorageMetaInfo::installLocationsString" href="qstoragemetainfo.html#installLocationsString" location="qstorage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="installLocationsString()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="instance" fullname="QStorageMetaInfo::instance" href="qstoragemetainfo.html#instance" location="qstorage.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStorageMetaInfo *" signature="instance()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disksChanged" fullname="QStorageMetaInfo::disksChanged" href="qstoragemetainfo.html#disksChanged" location="qstorage.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="disksChanged()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="update" fullname="QStorageMetaInfo::update" href="qstoragemetainfo.html#update" location="qstorage.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="update()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="update" fullname="QStorageMetaInfo::update" href="qstoragemetainfo.html#update-2" location="qstorage.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="update(QString &amp; mountpoint, bool connected)">
                <parameter left="QString &amp;" right="" name="mountpoint" default=""></parameter>
                <parameter left="bool" right="" name="connected" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QFileSystem" href="qfilesystem.html" location="qstorage.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QFileSystem" fullname="QFileSystem::QFileSystem" href="qfilesystem.html#QFileSystem" location="qstorage.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QFileSystem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QFileSystem" fullname="QFileSystem::QFileSystem" href="qfilesystem.html#QFileSystem-2" location="qstorage.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QFileSystem(const QFileSystem &amp; other)">
                <parameter left="const QFileSystem &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QFileSystem" fullname="QFileSystem::~QFileSystem" href="qfilesystem.html#dtor.QFileSystem" location="qstorage.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QFileSystem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QFileSystem::operator=" href="qfilesystem.html#operator=" location="qstorage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QFileSystem &amp;" signature="operator=(const QFileSystem &amp; other)">
                <parameter left="const QFileSystem &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QFileSystem::isNull" href="qfilesystem.html#isNull" location="qstorage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disk" fullname="QFileSystem::disk" href="qfilesystem.html#disk" location="qstorage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QString &amp;" signature="disk() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="path" fullname="QFileSystem::path" href="qfilesystem.html#path" location="qstorage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QString &amp;" signature="path() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="prevPath" fullname="QFileSystem::prevPath" href="qfilesystem.html#prevPath" location="qstorage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QString &amp;" signature="prevPath() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="options" fullname="QFileSystem::options" href="qfilesystem.html#options" location="qstorage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QString &amp;" signature="options() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QFileSystem::name" href="qfilesystem.html#name" location="qstorage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QString &amp;" signature="name() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="documentsPath" fullname="QFileSystem::documentsPath" href="qfilesystem.html#documentsPath" location="qstorage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QString &amp;" signature="documentsPath() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="applicationsPath" fullname="QFileSystem::applicationsPath" href="qfilesystem.html#applicationsPath" location="qstorage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QString &amp;" signature="applicationsPath() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isRemovable" fullname="QFileSystem::isRemovable" href="qfilesystem.html#isRemovable" location="qstorage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isRemovable() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="applications" fullname="QFileSystem::applications" href="qfilesystem.html#applications" location="qstorage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="applications() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="documents" fullname="QFileSystem::documents" href="qfilesystem.html#documents" location="qstorage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="documents() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentDatabase" fullname="QFileSystem::contentDatabase" href="qfilesystem.html#contentDatabase" location="qstorage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="contentDatabase() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isConnected" fullname="QFileSystem::isConnected" href="qfilesystem.html#isConnected" location="qstorage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isConnected() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="blockSize" fullname="QFileSystem::blockSize" href="qfilesystem.html#blockSize" location="qstorage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="long" signature="blockSize() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="totalBlocks" fullname="QFileSystem::totalBlocks" href="qfilesystem.html#totalBlocks" location="qstorage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="long" signature="totalBlocks() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availBlocks" fullname="QFileSystem::availBlocks" href="qfilesystem.html#availBlocks" location="qstorage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="long" signature="availBlocks() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isWritable" fullname="QFileSystem::isWritable" href="qfilesystem.html#isWritable" location="qstorage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isWritable() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromFileName" fullname="QFileSystem::fromFileName" href="qfilesystem.html#fromFileName" location="qstorage.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QFileSystem" signature="fromFileName(const QString &amp; fileName, bool connectedOnly)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
                <parameter left="bool" right="" name="connectedOnly" default="true"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="documentsFileSystem" fullname="QFileSystem::documentsFileSystem" href="qfilesystem.html#documentsFileSystem" location="qstorage.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QFileSystem" signature="documentsFileSystem()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="applicationsFileSystem" fullname="QFileSystem::applicationsFileSystem" href="qfilesystem.html#applicationsFileSystem" location="qstorage.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QFileSystem" signature="applicationsFileSystem()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QFileSystemFilter" href="qfilesystemfilter.html" location="qstorage.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="FilterOption" fullname="QFileSystemFilter::FilterOption" href="qfilesystemfilter.html#FilterOption-enum" location="qstorage.h">
                <value name="Either" value="0"></value>
                <value name="Set" value="1"></value>
                <value name="NotSet" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QFileSystemFilter" fullname="QFileSystemFilter::QFileSystemFilter" href="qfilesystemfilter.html#QFileSystemFilter" location="qstorage.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QFileSystemFilter()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QFileSystemFilter" fullname="QFileSystemFilter::~QFileSystemFilter" href="qfilesystemfilter.html#dtor.QFileSystemFilter" location="qstorage.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QFileSystemFilter()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QFileSystemFilter::filter" href="qfilesystemfilter.html#filter" location="qstorage.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="filter(QFileSystem * fs)">
                <parameter left="QFileSystem *" right="" name="fs" default=""></parameter>
            </function>
            <variable access="public" threadsafety="unspecified" status="commendable" name="documents" fullname="QFileSystemFilter::documents" href="qfilesystemfilter.html#documents-var" location="qstorage.h" type="FilterOption" static="false"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="applications" fullname="QFileSystemFilter::applications" href="qfilesystemfilter.html#applications-var" location="qstorage.h" type="FilterOption" static="false"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="removable" fullname="QFileSystemFilter::removable" href="qfilesystemfilter.html#removable-var" location="qstorage.h" type="FilterOption" static="false"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="content" fullname="QFileSystemFilter::content" href="qfilesystemfilter.html#content-var" location="qstorage.h" type="FilterOption" static="false"></variable>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QAtUtils" href="qatutils.html" location="qatutils.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="quote" fullname="QAtUtils::quote" href="qatutils.html#quote" location="qatutils.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="quote(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="quote" fullname="QAtUtils::quote" href="qatutils.html#quote-2" location="qatutils.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QString" signature="quote(const QString &amp; str, QTextCodec * codec)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
                <parameter left="QTextCodec *" right="" name="codec" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decode" fullname="QAtUtils::decode" href="qatutils.html#decode" location="qatutils.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="decode(const QString &amp; str, QTextCodec * codec)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
                <parameter left="QTextCodec *" right="" name="codec" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="codec" fullname="QAtUtils::codec" href="qatutils.html#codec" location="qatutils.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QTextCodec *" signature="codec(const QString &amp; gsmCharset)">
                <parameter left="const QString &amp;" right="" name="gsmCharset" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toHex" fullname="QAtUtils::toHex" href="qatutils.html#toHex" location="qatutils.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="toHex(const QByteArray &amp; binary)">
                <parameter left="const QByteArray &amp;" right="" name="binary" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromHex" fullname="QAtUtils::fromHex" href="qatutils.html#fromHex" location="qatutils.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QByteArray" signature="fromHex(const QString &amp; hex)">
                <parameter left="const QString &amp;" right="" name="hex" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodeNumber" fullname="QAtUtils::decodeNumber" href="qatutils.html#decodeNumber" location="qatutils.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="decodeNumber(const QString &amp; value, uint type)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
                <parameter left="uint" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decodeNumber" fullname="QAtUtils::decodeNumber" href="qatutils.html#decodeNumber-2" location="qatutils.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QString" signature="decodeNumber(QAtResultParser &amp; parser)">
                <parameter left="QAtResultParser &amp;" right="" name="parser" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodeNumber" fullname="QAtUtils::encodeNumber" href="qatutils.html#encodeNumber" location="qatutils.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="encodeNumber(const QString &amp; value, bool keepPlus)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
                <parameter left="bool" right="" name="keepPlus" default="false"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="nextString" fullname="QAtUtils::nextString" href="qatutils.html#nextString" location="qatutils.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="nextString(const QString &amp; buf, uint &amp; posn)">
                <parameter left="const QString &amp;" right="" name="buf" default=""></parameter>
                <parameter left="uint &amp;" right="" name="posn" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parseNumber" fullname="QAtUtils::parseNumber" href="qatutils.html#parseNumber" location="qatutils.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="uint" signature="parseNumber(const QString &amp; str, uint &amp; posn)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
                <parameter left="uint &amp;" right="" name="posn" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="skipField" fullname="QAtUtils::skipField" href="qatutils.html#skipField" location="qatutils.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="skipField(const QString &amp; str, uint &amp; posn)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
                <parameter left="uint &amp;" right="" name="posn" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stripNumber" fullname="QAtUtils::stripNumber" href="qatutils.html#stripNumber" location="qatutils.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="stripNumber(const QString &amp; number)">
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="octalEscapes" fullname="QAtUtils::octalEscapes" href="qatutils.html#octalEscapes" location="qatutils.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="octalEscapes()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOctalEscapes" fullname="QAtUtils::setOctalEscapes" href="qatutils.html#setOctalEscapes" location="qatutils.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setOctalEscapes(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QIrSocket" href="qirsocket.html" location="qirsocket.h" bases="QIODevice" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="SocketState" fullname="QIrSocket::SocketState" href="qirsocket.html#SocketState-enum" location="qirsocket.h">
                <value name="UnconnectedState" value="0"></value>
                <value name="ConnectingState" value="1"></value>
                <value name="ConnectedState" value="2"></value>
                <value name="BoundState" value="3"></value>
                <value name="ClosingState" value="4"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SocketError" fullname="QIrSocket::SocketError" href="qirsocket.html#SocketError-enum" location="qirsocket.h">
                <value name="NoError" value="0"></value>
                <value name="AccessError" value="1"></value>
                <value name="ResourceError" value="2"></value>
                <value name="BusyError" value="3"></value>
                <value name="HostUnreachableError" value="4"></value>
                <value name="ServiceUnavailableError" value="5"></value>
                <value name="ConnectionRefused" value="6"></value>
                <value name="NetworkError" value="7"></value>
                <value name="TimeoutError" value="8"></value>
                <value name="RemoteHostClosedError" value="9"></value>
                <value name="UnsupportedOperationError" value="10"></value>
                <value name="AddressInUseError" value="11"></value>
                <value name="AddressNotAvailableError" value="12"></value>
                <value name="UnknownError" value="13"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QIrSocket" fullname="QIrSocket::QIrSocket" href="qirsocket.html#QIrSocket" location="qirsocket.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QIrSocket(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QIrSocket" fullname="QIrSocket::~QIrSocket" href="qirsocket.html#dtor.QIrSocket" location="qirsocket.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QIrSocket()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connect" fullname="QIrSocket::connect" href="qirsocket.html#connect" location="qirsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="connect(const QByteArray &amp; service, quint32 remote)">
                <parameter left="const QByteArray &amp;" right="" name="service" default=""></parameter>
                <parameter left="quint32" right="" name="remote" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remoteAddress" fullname="QIrSocket::remoteAddress" href="qirsocket.html#remoteAddress" location="qirsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint32" signature="remoteAddress() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="abort" fullname="QIrSocket::abort" href="qirsocket.html#abort" location="qirsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="abort()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disconnect" fullname="QIrSocket::disconnect" href="qirsocket.html#disconnect" location="qirsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="disconnect()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="socketDescriptor" fullname="QIrSocket::socketDescriptor" href="qirsocket.html#socketDescriptor" location="qirsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="socketDescriptor() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSocketDescriptor" fullname="QIrSocket::setSocketDescriptor" href="qirsocket.html#setSocketDescriptor" location="qirsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setSocketDescriptor(int socketDescriptor, QIrSocket::SocketState state, QIODevice::OpenMode openMode)">
                <parameter left="int" right="" name="socketDescriptor" default=""></parameter>
                <parameter left="QIrSocket::SocketState" right="" name="state" default=""></parameter>
                <parameter left="QIODevice::OpenMode" right="" name="openMode" default="QIODevice::ReadWrite"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QIrSocket::error" href="qirsocket.html#error" location="qirsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="SocketError" signature="error() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QIrSocket::state" href="qirsocket.html#state" location="qirsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="SocketState" signature="state() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readBufferSize" fullname="QIrSocket::readBufferSize" href="qirsocket.html#readBufferSize" location="qirsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="readBufferSize() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setReadBufferSize" fullname="QIrSocket::setReadBufferSize" href="qirsocket.html#setReadBufferSize" location="qirsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setReadBufferSize(qint64 size)">
                <parameter left="qint64" right="" name="size" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForConnected" fullname="QIrSocket::waitForConnected" href="qirsocket.html#waitForConnected" location="qirsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForConnected(int msecs)">
                <parameter left="int" right="" name="msecs" default="30000"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForDisconnected" fullname="QIrSocket::waitForDisconnected" href="qirsocket.html#waitForDisconnected" location="qirsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForDisconnected(int msecs)">
                <parameter left="int" right="" name="msecs" default="30000"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="close" fullname="QIrSocket::close" href="qirsocket.html#close" location="qirsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="close()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="flush" fullname="QIrSocket::flush" href="qirsocket.html#flush" location="qirsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="flush()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bytesAvailable" fullname="QIrSocket::bytesAvailable" href="qirsocket.html#bytesAvailable" location="qirsocket.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="qint64" signature="bytesAvailable() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bytesToWrite" fullname="QIrSocket::bytesToWrite" href="qirsocket.html#bytesToWrite" location="qirsocket.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="qint64" signature="bytesToWrite() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="canReadLine" fullname="QIrSocket::canReadLine" href="qirsocket.html#canReadLine" location="qirsocket.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="canReadLine() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connected" fullname="QIrSocket::connected" href="qirsocket.html#connected" location="qirsocket.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="connected()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QIrSocket::stateChanged" href="qirsocket.html#stateChanged" location="qirsocket.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QIrSocket::SocketState socketState)">
                <parameter left="QIrSocket::SocketState" right="" name="socketState" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QIrSocket::error" href="qirsocket.html#error-2" location="qirsocket.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="error(QIrSocket::SocketError socketError)">
                <parameter left="QIrSocket::SocketError" right="" name="socketError" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disconnected" fullname="QIrSocket::disconnected" href="qirsocket.html#disconnected" location="qirsocket.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="disconnected()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QTerminationHandlerProvider" href="qterminationhandlerprovider.html" location="qterminationhandlerprovider.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QTerminationHandlerProvider" fullname="QTerminationHandlerProvider::QTerminationHandlerProvider" href="qterminationhandlerprovider.html#QTerminationHandlerProvider" location="qterminationhandlerprovider.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QTerminationHandlerProvider(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QTerminationHandlerProvider" fullname="QTerminationHandlerProvider::~QTerminationHandlerProvider" href="qterminationhandlerprovider.html#dtor.QTerminationHandlerProvider" location="qterminationhandlerprovider.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QTerminationHandlerProvider()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="applicationTerminated" fullname="QTerminationHandlerProvider::applicationTerminated" href="qterminationhandlerprovider.html#applicationTerminated" location="qterminationhandlerprovider.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="applicationTerminated(const QString &amp; name, const QString &amp; text, const QPixmap &amp; icon, const QString &amp; buttonText, QtopiaServiceRequest &amp; buttonAction)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
                <parameter left="const QPixmap &amp;" right="" name="icon" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="buttonText" default=""></parameter>
                <parameter left="QtopiaServiceRequest &amp;" right="" name="buttonAction" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaItemDelegate" href="qtopiaitemdelegate.html" location="qtopiaitemdelegate.h" bases="QItemDelegate" module="">
            <contents name="standard-roles-and-data-types" title="Standard Roles and Data Types" level="1"></contents>
            <contents name="subclassing" title="Subclassing" level="1"></contents>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaItemDelegate" fullname="QtopiaItemDelegate::QtopiaItemDelegate" href="qtopiaitemdelegate.html#QtopiaItemDelegate" location="qtopiaitemdelegate.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtopiaItemDelegate(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtopiaItemDelegate" fullname="QtopiaItemDelegate::~QtopiaItemDelegate" href="qtopiaitemdelegate.html#dtor.QtopiaItemDelegate" location="qtopiaitemdelegate.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtopiaItemDelegate()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="paint" fullname="QtopiaItemDelegate::paint" href="qtopiaitemdelegate.html#paint" location="qtopiaitemdelegate.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="void" signature="paint(QPainter * painter, const QStyleOptionViewItem &amp; option, const QModelIndex &amp; index) const">
                <parameter left="QPainter *" right="" name="painter" default=""></parameter>
                <parameter left="const QStyleOptionViewItem &amp;" right="" name="option" default=""></parameter>
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sizeHint" fullname="QtopiaItemDelegate::sizeHint" href="qtopiaitemdelegate.html#sizeHint" location="qtopiaitemdelegate.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QSize" signature="sizeHint(const QStyleOptionViewItem &amp; option, const QModelIndex &amp; index) const">
                <parameter left="const QStyleOptionViewItem &amp;" right="" name="option" default=""></parameter>
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="drawDisplay" fullname="QtopiaItemDelegate::drawDisplay" href="qtopiaitemdelegate.html#drawDisplay" location="qtopiaitemdelegate.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="void" signature="drawDisplay(QPainter * painter, const QStyleOptionViewItem &amp; option, const QRect &amp; rect, const QString &amp; text) const">
                <parameter left="QPainter *" right="" name="painter" default=""></parameter>
                <parameter left="const QStyleOptionViewItem &amp;" right="" name="option" default=""></parameter>
                <parameter left="const QRect &amp;" right="" name="rect" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="drawDecoration" fullname="QtopiaItemDelegate::drawDecoration" href="qtopiaitemdelegate.html#drawDecoration" location="qtopiaitemdelegate.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="void" signature="drawDecoration(QPainter * painter, const QStyleOptionViewItem &amp; option, const QRect &amp; rect, const QPixmap &amp; pixmap) const">
                <parameter left="QPainter *" right="" name="painter" default=""></parameter>
                <parameter left="const QStyleOptionViewItem &amp;" right="" name="option" default=""></parameter>
                <parameter left="const QRect &amp;" right="" name="rect" default=""></parameter>
                <parameter left="const QPixmap &amp;" right="" name="pixmap" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="drawDecoration" fullname="QtopiaItemDelegate::drawDecoration" href="qtopiaitemdelegate.html#drawDecoration-2" location="qtopiaitemdelegate.h" virtual="impure" meta="plain" const="true" static="false" overload="true" overload-number="2" type="void" signature="drawDecoration(QPainter * painter, const QStyleOptionViewItem &amp; option, const QRect &amp; rect, const QVariant &amp; decoration) const">
                <parameter left="QPainter *" right="" name="painter" default=""></parameter>
                <parameter left="const QStyleOptionViewItem &amp;" right="" name="option" default=""></parameter>
                <parameter left="const QRect &amp;" right="" name="rect" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="decoration" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="drawAdditionalDecoration" fullname="QtopiaItemDelegate::drawAdditionalDecoration" href="qtopiaitemdelegate.html#drawAdditionalDecoration" location="qtopiaitemdelegate.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="void" signature="drawAdditionalDecoration(QPainter * painter, const QStyleOptionViewItem &amp; option, const QRect &amp; rect, const QVariant &amp; decoration) const">
                <parameter left="QPainter *" right="" name="painter" default=""></parameter>
                <parameter left="const QStyleOptionViewItem &amp;" right="" name="option" default=""></parameter>
                <parameter left="const QRect &amp;" right="" name="rect" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="decoration" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="drawFocus" fullname="QtopiaItemDelegate::drawFocus" href="qtopiaitemdelegate.html#drawFocus" location="qtopiaitemdelegate.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="void" signature="drawFocus(QPainter * painter, const QStyleOptionViewItem &amp; option, const QRect &amp; rect) const">
                <parameter left="QPainter *" right="" name="painter" default=""></parameter>
                <parameter left="const QStyleOptionViewItem &amp;" right="" name="option" default=""></parameter>
                <parameter left="const QRect &amp;" right="" name="rect" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="drawCheck" fullname="QtopiaItemDelegate::drawCheck" href="qtopiaitemdelegate.html#drawCheck" location="qtopiaitemdelegate.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="void" signature="drawCheck(QPainter * painter, const QStyleOptionViewItem &amp; option, const QRect &amp; rect, Qt::CheckState state) const">
                <parameter left="QPainter *" right="" name="painter" default=""></parameter>
                <parameter left="const QStyleOptionViewItem &amp;" right="" name="option" default=""></parameter>
                <parameter left="const QRect &amp;" right="" name="rect" default=""></parameter>
                <parameter left="Qt::CheckState" right="" name="state" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="drawBackground" fullname="QtopiaItemDelegate::drawBackground" href="qtopiaitemdelegate.html#drawBackground" location="qtopiaitemdelegate.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="void" signature="drawBackground(QPainter * painter, const QStyleOptionViewItem &amp; option, const QModelIndex &amp; index) const">
                <parameter left="QPainter *" right="" name="painter" default=""></parameter>
                <parameter left="const QStyleOptionViewItem &amp;" right="" name="option" default=""></parameter>
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="eventFilter" fullname="QtopiaItemDelegate::eventFilter" href="qtopiaitemdelegate.html#eventFilter" location="qtopiaitemdelegate.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="eventFilter(QObject * editor, QEvent * event)">
                <parameter left="QObject *" right="" name="editor" default=""></parameter>
                <parameter left="QEvent *" right="" name="event" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QAtResult" href="qatresult.html" location="qatresult.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="ResultCode" fullname="QAtResult::ResultCode" href="qatresult.html#ResultCode-enum" location="qatresult.h">
                <value name="OK" value="-1"></value>
                <value name="Connect" value="-2"></value>
                <value name="NoCarrier" value="-3"></value>
                <value name="Error" value="-4"></value>
                <value name="NoDialtone" value="-5"></value>
                <value name="Busy" value="-6"></value>
                <value name="NoAnswer" value="-7"></value>
                <value name="Dead" value="-8"></value>
                <value name="PhoneFailure" value="0"></value>
                <value name="NoConnectionToPhone" value="1"></value>
                <value name="PhoneAdapterLinkReserved" value="2"></value>
                <value name="OperationNotAllowed" value="3"></value>
                <value name="OperationNotSupported" value="4"></value>
                <value name="PhSimPinRequired" value="5"></value>
                <value name="PhFSimPinRequired" value="6"></value>
                <value name="PhFSimPukRequired" value="7"></value>
                <value name="SimNotInserted" value="10"></value>
                <value name="SimPinRequired" value="11"></value>
                <value name="SimPukRequired" value="12"></value>
                <value name="SimFailure" value="13"></value>
                <value name="SimBusy" value="14"></value>
                <value name="SimWrong" value="15"></value>
                <value name="IncorrectPassword" value="16"></value>
                <value name="SimPin2Required" value="17"></value>
                <value name="SimPuk2Required" value="18"></value>
                <value name="MemoryFull" value="20"></value>
                <value name="InvalidIndex" value="21"></value>
                <value name="NotFound" value="22"></value>
                <value name="MemoryFailure" value="23"></value>
                <value name="TextStringTooLong" value="24"></value>
                <value name="InvalidCharsInTextString" value="25"></value>
                <value name="DialStringTooLong" value="26"></value>
                <value name="InvalidCharsInDialString" value="27"></value>
                <value name="NoNetworkService" value="30"></value>
                <value name="NetworkTimeout" value="31"></value>
                <value name="NetworkNotAllowed" value="32"></value>
                <value name="NetPersPinRequired" value="40"></value>
                <value name="NetPersPukRequired" value="41"></value>
                <value name="NetSubsetPersPinRequired" value="42"></value>
                <value name="NetSubsetPersPukRequired" value="43"></value>
                <value name="ServProvPersPinRequired" value="44"></value>
                <value name="ServProvPersPukRequired" value="45"></value>
                <value name="CorpPersPinRequired" value="46"></value>
                <value name="CorpPersPukRequired" value="47"></value>
                <value name="HiddenKeyRequired" value="48"></value>
                <value name="Unknown" value="100"></value>
                <value name="IllegalMS" value="103"></value>
                <value name="IllegalME" value="106"></value>
                <value name="GPRSServicesNotAllowed" value="107"></value>
                <value name="PLMNNotAllowed" value="111"></value>
                <value name="LocationAreaNotAllowed" value="112"></value>
                <value name="RoamingNotAllowed" value="113"></value>
                <value name="ServiceOptionNotSupported" value="132"></value>
                <value name="ServiceOptionNotSubscribed" value="133"></value>
                <value name="ServiceOptionOutOfOrder" value="134"></value>
                <value name="UnspecifiedGPRSError" value="148"></value>
                <value name="PDPAuthenticationFailure" value="149"></value>
                <value name="InvalidMobileClass" value="150"></value>
                <value name="VBSVGCSNotSupported" value="151"></value>
                <value name="NoServiceSubscriptionOnSim" value="152"></value>
                <value name="NoSubscriptionForGroupId" value="153"></value>
                <value name="GroupIdNotActivatedOnSim" value="154"></value>
                <value name="NoMatchingNotification" value="155"></value>
                <value name="VBSVGCSCallAlreadyPresent" value="156"></value>
                <value name="Congestion" value="157"></value>
                <value name="NetworkFailure" value="158"></value>
                <value name="UplinkBusy" value="159"></value>
                <value name="NoAccessRightsForSimFile" value="160"></value>
                <value name="NoSubscriptionForPriority" value="161"></value>
                <value name="OperationNotApplicable" value="162"></value>
                <value name="MEFailure" value="300"></value>
                <value name="SMSServiceOfMEReserved" value="301"></value>
                <value name="SMSOperationNotAllowed" value="302"></value>
                <value name="SMSOperationNotSupported" value="303"></value>
                <value name="InvalidPDUModeParameter" value="304"></value>
                <value name="InvalidTextModeParameter" value="305"></value>
                <value name="USimNotInserted" value="310"></value>
                <value name="USimPinRequired" value="311"></value>
                <value name="PHUSimPinRequired" value="312"></value>
                <value name="USimFailure" value="313"></value>
                <value name="USimBusy" value="314"></value>
                <value name="USimWrong" value="315"></value>
                <value name="USimPukRequired" value="316"></value>
                <value name="USimPin2Required" value="317"></value>
                <value name="USimPuk2Required" value="318"></value>
                <value name="SMSMemoryFailure" value="320"></value>
                <value name="InvalidMemoryIndex" value="321"></value>
                <value name="SMSMemoryFull" value="322"></value>
                <value name="SMSCAddressUnknown" value="330"></value>
                <value name="SMSNoNetworkService" value="331"></value>
                <value name="SMSNetworkTimeout" value="332"></value>
                <value name="NoCNMAAckExpected" value="340"></value>
                <value name="UnknownError" value="500"></value>
            </enum>
            <class access="public" threadsafety="unspecified" status="main" name="UserData" fullname="QAtResult::UserData" href="qatresult-userdata.html" location="qatresult.h" bases="" module="">
                <function access="public" threadsafety="unspecified" status="commendable" name="~UserData" fullname="QAtResult::UserData::~UserData" href="qatresult-userdata.html#dtor.UserData" location="qatresult.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~UserData()"></function>
            </class>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAtResult" fullname="QAtResult::QAtResult" href="qatresult.html#QAtResult" location="qatresult.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAtResult()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAtResult" fullname="QAtResult::QAtResult" href="qatresult.html#QAtResult-2" location="qatresult.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QAtResult(const QAtResult &amp; other)">
                <parameter left="const QAtResult &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAtResult" fullname="QAtResult::~QAtResult" href="qatresult.html#dtor.QAtResult" location="qatresult.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAtResult()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QAtResult::operator=" href="qatresult.html#operator=" location="qatresult.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QAtResult &amp;" signature="operator=(const QAtResult &amp; other)">
                <parameter left="const QAtResult &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="result" fullname="QAtResult::result" href="qatresult.html#result" location="qatresult.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="result() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setResult" fullname="QAtResult::setResult" href="qatresult.html#setResult" location="qatresult.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setResult(const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="content" fullname="QAtResult::content" href="qatresult.html#content" location="qatresult.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="content() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContent" fullname="QAtResult::setContent" href="qatresult.html#setContent" location="qatresult.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setContent(const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="append" fullname="QAtResult::append" href="qatresult.html#append" location="qatresult.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="append(const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resultCode" fullname="QAtResult::resultCode" href="qatresult.html#resultCode" location="qatresult.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAtResult::ResultCode" signature="resultCode() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setResultCode" fullname="QAtResult::setResultCode" href="qatresult.html#setResultCode" location="qatresult.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setResultCode(QAtResult::ResultCode value)">
                <parameter left="QAtResult::ResultCode" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="ok" fullname="QAtResult::ok" href="qatresult.html#ok" location="qatresult.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="ok() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="verboseResult" fullname="QAtResult::verboseResult" href="qatresult.html#verboseResult" location="qatresult.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="verboseResult() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="userData" fullname="QAtResult::userData" href="qatresult.html#userData" location="qatresult.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAtResult::UserData *" signature="userData() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUserData" fullname="QAtResult::setUserData" href="qatresult.html#setUserData" location="qatresult.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setUserData(QAtResult::UserData * value)">
                <parameter left="QAtResult::UserData *" right="" name="value" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="PkIM" href="pkim.html" location="pkim.h" bases="QWSInputMethod" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="isFiltering" fullname="PkIM::isFiltering" href="pkim.html#isFiltering" location="pkim.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFiltering() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMicroFocus" fullname="PkIM::setMicroFocus" href="pkim.html#setMicroFocus" location="pkim.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMicroFocus(int x, int y)">
                <parameter left="int" right="" name="x" default=""></parameter>
                <parameter left="int" right="" name="y" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHint" fullname="PkIM::setHint" href="pkim.html#setHint" location="pkim.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHint(const QString &amp; s)">
                <parameter left="const QString &amp;" right="" name="s" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStatusWidget" fullname="PkIM::setStatusWidget" href="pkim.html#setStatusWidget" location="pkim.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setStatusWidget(QLabel * l)">
                <parameter left="QLabel *" right="" name="l" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isActive" fullname="PkIM::isActive" href="pkim.html#isActive" location="pkim.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isActive() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="restrictToHint" fullname="PkIM::restrictToHint" href="pkim.html#restrictToHint" location="pkim.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="restrictToHint() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRestrictToHint" fullname="PkIM::setRestrictToHint" href="pkim.html#setRestrictToHint" location="pkim.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRestrictToHint(bool b)">
                <parameter left="bool" right="" name="b" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="passwordHint" fullname="PkIM::passwordHint" href="pkim.html#passwordHint" location="pkim.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="passwordHint() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPasswordHint" fullname="PkIM::setPasswordHint" href="pkim.html#setPasswordHint" location="pkim.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPasswordHint(bool password)">
                <parameter left="bool" right="" name="password" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="PkIM::stateChanged" href="pkim.html#stateChanged" location="pkim.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(int state)">
                <parameter left="int" right="" name="state" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="sendMatchedCharacters" fullname="PkIM::sendMatchedCharacters" href="pkim.html#sendMatchedCharacters" location="pkim.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="sendMatchedCharacters(const QList&lt;QFSPenMatch::Guess&gt; &amp; cl)">
                <parameter left="const QList&lt;QFSPenMatch::Guess&gt; &amp;" right="" name="cl" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="updateHandler" fullname="PkIM::updateHandler" href="pkim.html#updateHandler" location="pkim.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="updateHandler(int type)">
                <parameter left="int" right="" name="type" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="processAuxiliaryHints" fullname="PkIM::processAuxiliaryHints" href="pkim.html#processAuxiliaryHints" location="pkim.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="processAuxiliaryHints(QStringList inputHint)">
                <parameter left="QStringList" right="" name="inputHint" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QTranslatableSettings" href="qtranslatablesettings.html" location="qtranslatablesettings.h" bases="QSettings" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QTranslatableSettings" fullname="QTranslatableSettings::QTranslatableSettings" href="qtranslatablesettings.html#QTranslatableSettings" location="qtranslatablesettings.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QTranslatableSettings(const QString &amp; organization, const QString &amp; application, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="organization" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="application" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QTranslatableSettings" fullname="QTranslatableSettings::QTranslatableSettings" href="qtranslatablesettings.html#QTranslatableSettings-2" location="qtranslatablesettings.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QTranslatableSettings(Scope scope, const QString &amp; organization, const QString &amp; application, QObject * parent)">
                <parameter left="Scope" right="" name="scope" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="organization" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="application" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QTranslatableSettings" fullname="QTranslatableSettings::QTranslatableSettings" href="qtranslatablesettings.html#QTranslatableSettings-3" location="qtranslatablesettings.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QTranslatableSettings(Format format, Scope scope, const QString &amp; organization, const QString &amp; application, QObject * parent)">
                <parameter left="Format" right="" name="format" default=""></parameter>
                <parameter left="Scope" right="" name="scope" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="organization" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="application" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QTranslatableSettings" fullname="QTranslatableSettings::QTranslatableSettings" href="qtranslatablesettings.html#QTranslatableSettings-4" location="qtranslatablesettings.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QTranslatableSettings(const QString &amp; fileName, Format format, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
                <parameter left="Format" right="" name="format" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QTranslatableSettings" fullname="QTranslatableSettings::QTranslatableSettings" href="qtranslatablesettings.html#QTranslatableSettings-5" location="qtranslatablesettings.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="5" type="" signature="QTranslatableSettings(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QTranslatableSettings" fullname="QTranslatableSettings::~QTranslatableSettings" href="qtranslatablesettings.html#dtor.QTranslatableSettings" location="qtranslatablesettings.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QTranslatableSettings()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QTranslatableSettings::value" href="qtranslatablesettings.html#value" location="qtranslatablesettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="value(const QString &amp; key, const QVariant &amp; defaultValue) const">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="defaultValue" default="QVariant()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="allKeys" fullname="QTranslatableSettings::allKeys" href="qtranslatablesettings.html#allKeys" location="qtranslatablesettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="allKeys() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="childKeys" fullname="QTranslatableSettings::childKeys" href="qtranslatablesettings.html#childKeys" location="qtranslatablesettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="childKeys() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contains" fullname="QTranslatableSettings::contains" href="qtranslatablesettings.html#contains" location="qtranslatablesettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="contains(const QString &amp; key) const">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="ThemedHomeScreen" href="themedhomescreen.html" location="themedhomescreen.h" bases="QAbstractHomeScreen" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ThemedHomeScreen" fullname="ThemedHomeScreen::ThemedHomeScreen" href="themedhomescreen.html#ThemedHomeScreen" location="themedhomescreen.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ThemedHomeScreen(QWidget * parent, Qt::WFlags flags)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
                <parameter left="Qt::WFlags" right="" name="flags" default="0"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QObex" href="qobex.html" location="qobexnamespace.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Request" fullname="QObex::Request" href="qobex.html#Request-enum" location="qobexnamespace.h">
                <value name="Connect" value="0"></value>
                <value name="Disconnect" value="1"></value>
                <value name="Put" value="2"></value>
                <value name="PutDelete" value="3"></value>
                <value name="Get" value="4"></value>
                <value name="SetPath" value="5"></value>
                <value name="NoRequest" value="100"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ResponseCode" fullname="QObex::ResponseCode" href="qobex.html#ResponseCode-enum" location="qobexnamespace.h">
                <value name="Success" value="0x20"></value>
                <value name="Created" value="0x21"></value>
                <value name="Accepted" value="0x22"></value>
                <value name="NonAuthoritative" value="0x23"></value>
                <value name="NoContent" value="0x24"></value>
                <value name="ResetContent" value="0x25"></value>
                <value name="PartialContent" value="0x26"></value>
                <value name="MultipleChoices" value="0x30"></value>
                <value name="MovedPermanently" value="0x31"></value>
                <value name="MovedTemporarily" value="0x32"></value>
                <value name="SeeOther" value="0x33"></value>
                <value name="NotModified" value="0x34"></value>
                <value name="UseProxy" value="0x35"></value>
                <value name="BadRequest" value="0x40"></value>
                <value name="Unauthorized" value="0x41"></value>
                <value name="PaymentRequired" value="0x42"></value>
                <value name="Forbidden" value="0x43"></value>
                <value name="NotFound" value="0x44"></value>
                <value name="MethodNotAllowed" value="0x45"></value>
                <value name="NotAcceptable" value="0x46"></value>
                <value name="ProxyAuthenticationRequired" value="0x47"></value>
                <value name="RequestTimeOut" value="0x48"></value>
                <value name="Conflict" value="0x49"></value>
                <value name="Gone" value="0x4a"></value>
                <value name="LengthRequired" value="0x4b"></value>
                <value name="PreconditionFailed" value="0x4c"></value>
                <value name="RequestedEntityTooLarge" value="0x4d"></value>
                <value name="RequestedUrlTooLarge" value="0x4e"></value>
                <value name="UnsupportedMediaType" value="0x4f"></value>
                <value name="InternalServerError" value="0x50"></value>
                <value name="NotImplemented" value="0x51"></value>
                <value name="BadGateway" value="0x52"></value>
                <value name="ServiceUnavailable" value="0x53"></value>
                <value name="GatewayTimeout" value="0x54"></value>
                <value name="HttpVersionNotSupported" value="0x55"></value>
                <value name="DatabaseFull" value="0x60"></value>
                <value name="DatabaseLocked" value="061"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SetPathFlag" fullname="QObex::SetPathFlag" href="qobex.html#SetPathFlag-enum" location="qobexnamespace.h" typedef="QObex::SetPathFlags">
                <value name="BackUpOneLevel" value="0x1"></value>
                <value name="NoPathCreation" value="0x2"></value>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="SetPathFlags" fullname="QObex::SetPathFlags" href="qobex.html#SetPathFlags-typedef" location="qobexnamespace.h" enum="QObex::SetPathFlag"></typedef>
            <enum access="public" threadsafety="unspecified" status="commendable" name="AuthChallengeOption" fullname="QObex::AuthChallengeOption" href="qobex.html#AuthChallengeOption-enum" location="qobexnamespace.h" typedef="QObex::AuthChallengeOptions">
                <value name="UserIdRequired" value="0x01"></value>
                <value name="ReadOnlyAccess" value="0x2"></value>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="AuthChallengeOptions" fullname="QObex::AuthChallengeOptions" href="qobex.html#AuthChallengeOptions-typedef" location="qobexnamespace.h" enum="QObex::AuthChallengeOption"></typedef>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemCallBarring" href="qmodemcallbarring.html" location="qmodemcallbarring.h" bases="QCallBarring" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemCallBarring" fullname="QModemCallBarring::QModemCallBarring" href="qmodemcallbarring.html#QModemCallBarring" location="qmodemcallbarring.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemCallBarring(QModemService * service)">
                <parameter left="QModemService *" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemCallBarring" fullname="QModemCallBarring::~QModemCallBarring" href="qmodemcallbarring.html#dtor.QModemCallBarring" location="qmodemcallbarring.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemCallBarring()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="typeToString" fullname="QModemCallBarring::typeToString" href="qmodemcallbarring.html#typeToString" location="qmodemcallbarring.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="typeToString(QCallBarring::BarringType type) const">
                <parameter left="QCallBarring::BarringType" right="" name="type" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="AlarmServerService" href="alarmserverservice.html" location="qalarmserver_p.h" bases="QtopiaIpcAdaptor" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="AlarmServerService" fullname="AlarmServerService::AlarmServerService" href="alarmserverservice.html#AlarmServerService" location="qalarmserver_p.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="AlarmServerService(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~AlarmServerService" fullname="AlarmServerService::~AlarmServerService" href="alarmserverservice.html#dtor.AlarmServerService" location="qalarmserver_p.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~AlarmServerService()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addAlarm" fullname="AlarmServerService::addAlarm" href="alarmserverservice.html#addAlarm" location="qalarmserver_p.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="addAlarm(QDateTime when, const QString &amp; channel, const QString &amp; msg, int data)">
                <parameter left="QDateTime" right="" name="when" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="channel" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="msg" default=""></parameter>
                <parameter left="int" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deleteAlarm" fullname="AlarmServerService::deleteAlarm" href="alarmserverservice.html#deleteAlarm" location="qalarmserver_p.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="deleteAlarm(QDateTime when, const QString &amp; channel, const QString &amp; msg, int data)">
                <parameter left="QDateTime" right="" name="when" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="channel" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="msg" default=""></parameter>
                <parameter left="int" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dailyAlarmEnabled" fullname="AlarmServerService::dailyAlarmEnabled" href="alarmserverservice.html#dailyAlarmEnabled" location="qalarmserver_p.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="dailyAlarmEnabled(bool flag)">
                <parameter left="bool" right="" name="flag" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothL2CapServer" href="qbluetoothl2capserver.html" location="qbluetoothl2capserver.h" bases="QBluetoothAbstractServer" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothL2CapServer" fullname="QBluetoothL2CapServer::QBluetoothL2CapServer" href="qbluetoothl2capserver.html#QBluetoothL2CapServer" location="qbluetoothl2capserver.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothL2CapServer(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothL2CapServer" fullname="QBluetoothL2CapServer::~QBluetoothL2CapServer" href="qbluetoothl2capserver.html#dtor.QBluetoothL2CapServer" location="qbluetoothl2capserver.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothL2CapServer()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="listen" fullname="QBluetoothL2CapServer::listen" href="qbluetoothl2capserver.html#listen" location="qbluetoothl2capserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="listen(const QBluetoothAddress &amp; local, int psm, int mtu)">
                <parameter left="const QBluetoothAddress &amp;" right="" name="local" default=""></parameter>
                <parameter left="int" right="" name="psm" default=""></parameter>
                <parameter left="int" right="" name="mtu" default="672"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serverPsm" fullname="QBluetoothL2CapServer::serverPsm" href="qbluetoothl2capserver.html#serverPsm" location="qbluetoothl2capserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="serverPsm() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serverAddress" fullname="QBluetoothL2CapServer::serverAddress" href="qbluetoothl2capserver.html#serverAddress" location="qbluetoothl2capserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothAddress" signature="serverAddress() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEncrypted" fullname="QBluetoothL2CapServer::isEncrypted" href="qbluetoothl2capserver.html#isEncrypted" location="qbluetoothl2capserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEncrypted() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAuthenticated" fullname="QBluetoothL2CapServer::isAuthenticated" href="qbluetoothl2capserver.html#isAuthenticated" location="qbluetoothl2capserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isAuthenticated() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="securityOptions" fullname="QBluetoothL2CapServer::securityOptions" href="qbluetoothl2capserver.html#securityOptions" location="qbluetoothl2capserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetooth::SecurityOptions" signature="securityOptions() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSecurityOptions" fullname="QBluetoothL2CapServer::setSecurityOptions" href="qbluetoothl2capserver.html#setSecurityOptions" location="qbluetoothl2capserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setSecurityOptions(QFlags&lt;QBluetooth::SecurityOption&gt; options)">
                <parameter left="QFlags&lt;QBluetooth::SecurityOption&gt;" right="" name="options" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mtu" fullname="QBluetoothL2CapServer::mtu" href="qbluetoothl2capserver.html#mtu" location="qbluetoothl2capserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="mtu() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QGsmCodec" href="qgsmcodec.html" location="qgsmcodec.h" bases="QTextCodec" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QGsmCodec" fullname="QGsmCodec::QGsmCodec" href="qgsmcodec.html#QGsmCodec" location="qgsmcodec.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGsmCodec(bool noLoss)">
                <parameter left="bool" right="" name="noLoss" default="false"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGsmCodec" fullname="QGsmCodec::~QGsmCodec" href="qgsmcodec.html#dtor.QGsmCodec" location="qgsmcodec.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGsmCodec()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QGsmCodec::name" href="qgsmcodec.html#name" location="qgsmcodec.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="name() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mibEnum" fullname="QGsmCodec::mibEnum" href="qgsmcodec.html#mibEnum" location="qgsmcodec.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="int" signature="mibEnum() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="singleFromUnicode" fullname="QGsmCodec::singleFromUnicode" href="qgsmcodec.html#singleFromUnicode" location="qgsmcodec.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="char" signature="singleFromUnicode(QChar c)">
                <parameter left="QChar" right="" name="c" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="singleToUnicode" fullname="QGsmCodec::singleToUnicode" href="qgsmcodec.html#singleToUnicode" location="qgsmcodec.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QChar" signature="singleToUnicode(char ch)">
                <parameter left="char" right="" name="ch" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="twoByteFromUnicode" fullname="QGsmCodec::twoByteFromUnicode" href="qgsmcodec.html#twoByteFromUnicode" location="qgsmcodec.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="unsigned short" signature="twoByteFromUnicode(QChar ch)">
                <parameter left="QChar" right="" name="ch" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="twoByteToUnicode" fullname="QGsmCodec::twoByteToUnicode" href="qgsmcodec.html#twoByteToUnicode" location="qgsmcodec.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QChar" signature="twoByteToUnicode(unsigned short ch)">
                <parameter left="unsigned short" right="" name="ch" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="convertToUnicode" fullname="QGsmCodec::convertToUnicode" href="qgsmcodec.html#convertToUnicode" location="qgsmcodec.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="convertToUnicode(const char * in, int length, ConverterState * state) const">
                <parameter left="const char *" right="" name="in" default=""></parameter>
                <parameter left="int" right="" name="length" default=""></parameter>
                <parameter left="ConverterState *" right="" name="state" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="convertFromUnicode" fullname="QGsmCodec::convertFromUnicode" href="qgsmcodec.html#convertFromUnicode" location="qgsmcodec.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="convertFromUnicode(const QChar * in, int length, ConverterState * state) const">
                <parameter left="const QChar *" right="" name="in" default=""></parameter>
                <parameter left="int" right="" name="length" default=""></parameter>
                <parameter left="ConverterState *" right="" name="state" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothRemoteDeviceDialogFilter" href="qbluetoothremotedevicedialogfilter.html" location="qbluetoothremotedevicedialog.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothRemoteDeviceDialogFilter" fullname="QBluetoothRemoteDeviceDialogFilter::QBluetoothRemoteDeviceDialogFilter" href="qbluetoothremotedevicedialogfilter.html#QBluetoothRemoteDeviceDialogFilter" location="qbluetoothremotedevicedialog.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothRemoteDeviceDialogFilter()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothRemoteDeviceDialogFilter" fullname="QBluetoothRemoteDeviceDialogFilter::~QBluetoothRemoteDeviceDialogFilter" href="qbluetoothremotedevicedialogfilter.html#dtor.QBluetoothRemoteDeviceDialogFilter" location="qbluetoothremotedevicedialog.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothRemoteDeviceDialogFilter()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAcceptedDeviceMajors" fullname="QBluetoothRemoteDeviceDialogFilter::setAcceptedDeviceMajors" href="qbluetoothremotedevicedialogfilter.html#setAcceptedDeviceMajors" location="qbluetoothremotedevicedialog.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAcceptedDeviceMajors(const QSet&lt;QBluetooth::DeviceMajor&gt; &amp; deviceMajors)">
                <parameter left="const QSet&lt;QBluetooth::DeviceMajor&gt; &amp;" right="" name="deviceMajors" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="acceptedDeviceMajors" fullname="QBluetoothRemoteDeviceDialogFilter::acceptedDeviceMajors" href="qbluetoothremotedevicedialogfilter.html#acceptedDeviceMajors" location="qbluetoothremotedevicedialog.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSet&lt;QBluetooth::DeviceMajor&gt;" signature="acceptedDeviceMajors() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAcceptedServiceClasses" fullname="QBluetoothRemoteDeviceDialogFilter::setAcceptedServiceClasses" href="qbluetoothremotedevicedialogfilter.html#setAcceptedServiceClasses" location="qbluetoothremotedevicedialog.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAcceptedServiceClasses(QFlags&lt;QBluetooth::ServiceClass&gt; serviceClasses)">
                <parameter left="QFlags&lt;QBluetooth::ServiceClass&gt;" right="" name="serviceClasses" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="acceptedServiceClasses" fullname="QBluetoothRemoteDeviceDialogFilter::acceptedServiceClasses" href="qbluetoothremotedevicedialogfilter.html#acceptedServiceClasses" location="qbluetoothremotedevicedialog.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetooth::ServiceClasses" signature="acceptedServiceClasses() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filterAcceptsDevice" fullname="QBluetoothRemoteDeviceDialogFilter::filterAcceptsDevice" href="qbluetoothremotedevicedialogfilter.html#filterAcceptsDevice" location="qbluetoothremotedevicedialog.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="filterAcceptsDevice(const QBluetoothRemoteDevice &amp; device)">
                <parameter left="const QBluetoothRemoteDevice &amp;" right="" name="device" default=""></parameter>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="m_deviceMajors" fullname="QBluetoothRemoteDeviceDialogFilter::m_deviceMajors" href="qbluetoothremotedevicedialogfilter.html#m_deviceMajors-var" location="qbluetoothremotedevicedialog.h" type="QSet&lt;QBluetooth::DeviceMajor&gt;" static="false"></variable>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="m_serviceClasses" fullname="QBluetoothRemoteDeviceDialogFilter::m_serviceClasses" href="qbluetoothremotedevicedialogfilter.html#m_serviceClasses-var" location="qbluetoothremotedevicedialog.h" type="QBluetooth::ServiceClasses" static="false"></variable>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothRemoteDeviceDialog" href="qbluetoothremotedevicedialog.html" location="qbluetoothremotedevicedialog.h" bases="QDialog" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothRemoteDeviceDialog" fullname="QBluetoothRemoteDeviceDialog::QBluetoothRemoteDeviceDialog" href="qbluetoothremotedevicedialog.html#QBluetoothRemoteDeviceDialog" location="qbluetoothremotedevicedialog.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothRemoteDeviceDialog(QWidget * parent, Qt::WFlags flags)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
                <parameter left="Qt::WFlags" right="" name="flags" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothRemoteDeviceDialog" fullname="QBluetoothRemoteDeviceDialog::QBluetoothRemoteDeviceDialog" href="qbluetoothremotedevicedialog.html#QBluetoothRemoteDeviceDialog-2" location="qbluetoothremotedevicedialog.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QBluetoothRemoteDeviceDialog(QBluetoothLocalDevice * local, QWidget * parent, Qt::WFlags flags)">
                <parameter left="QBluetoothLocalDevice *" right="" name="local" default="0"></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
                <parameter left="Qt::WFlags" right="" name="flags" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothRemoteDeviceDialog" fullname="QBluetoothRemoteDeviceDialog::~QBluetoothRemoteDeviceDialog" href="qbluetoothremotedevicedialog.html#dtor.QBluetoothRemoteDeviceDialog" location="qbluetoothremotedevicedialog.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothRemoteDeviceDialog()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="getRemoteDevice" fullname="QBluetoothRemoteDeviceDialog::getRemoteDevice" href="qbluetoothremotedevicedialog.html#getRemoteDevice" location="qbluetoothremotedevicedialog.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QBluetoothAddress" signature="getRemoteDevice(QWidget * parent, QSet&lt;QBluetooth::SDPProfile&gt; profiles, QBluetoothRemoteDeviceDialogFilter * filter)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
                <parameter left="QSet&lt;QBluetooth::SDPProfile&gt;" right="" name="profiles" default="QSet&lt;QBluetooth::SDPProfile&gt; ()"></parameter>
                <parameter left="QBluetoothRemoteDeviceDialogFilter *" right="" name="filter" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setValidationProfiles" fullname="QBluetoothRemoteDeviceDialog::setValidationProfiles" href="qbluetoothremotedevicedialog.html#setValidationProfiles" location="qbluetoothremotedevicedialog.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setValidationProfiles(QSet&lt;QBluetooth::SDPProfile&gt; profiles)">
                <parameter left="QSet&lt;QBluetooth::SDPProfile&gt;" right="" name="profiles" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="validationProfiles" fullname="QBluetoothRemoteDeviceDialog::validationProfiles" href="qbluetoothremotedevicedialog.html#validationProfiles" location="qbluetoothremotedevicedialog.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSet&lt;QBluetooth::SDPProfile&gt;" signature="validationProfiles() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilter" fullname="QBluetoothRemoteDeviceDialog::setFilter" href="qbluetoothremotedevicedialog.html#setFilter" location="qbluetoothremotedevicedialog.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilter(QBluetoothRemoteDeviceDialogFilter * filter)">
                <parameter left="QBluetoothRemoteDeviceDialogFilter *" right="" name="filter" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QBluetoothRemoteDeviceDialog::filter" href="qbluetoothremotedevicedialog.html#filter" location="qbluetoothremotedevicedialog.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothRemoteDeviceDialogFilter *" signature="filter() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedDevice" fullname="QBluetoothRemoteDeviceDialog::selectedDevice" href="qbluetoothremotedevicedialog.html#selectedDevice" location="qbluetoothremotedevicedialog.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothAddress" signature="selectedDevice() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaAbstractService" href="qtopiaabstractservice.html" location="qtopiaabstractservice.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaAbstractService" fullname="QtopiaAbstractService::QtopiaAbstractService" href="qtopiaabstractservice.html#QtopiaAbstractService" location="qtopiaabstractservice.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtopiaAbstractService(const QString &amp; service, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtopiaAbstractService" fullname="QtopiaAbstractService::~QtopiaAbstractService" href="qtopiaabstractservice.html#dtor.QtopiaAbstractService" location="qtopiaabstractservice.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtopiaAbstractService()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="publishAll" fullname="QtopiaAbstractService::publishAll" href="qtopiaabstractservice.html#publishAll" location="qtopiaabstractservice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="publishAll()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QImageDocumentSelector" href="qimagedocumentselector.html" location="qimagedocumentselector.h" bases="QWidget" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QImageDocumentSelector" fullname="QImageDocumentSelector::QImageDocumentSelector" href="qimagedocumentselector.html#QImageDocumentSelector" location="qimagedocumentselector.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QImageDocumentSelector(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QImageDocumentSelector" fullname="QImageDocumentSelector::~QImageDocumentSelector" href="qimagedocumentselector.html#dtor.QImageDocumentSelector" location="qimagedocumentselector.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QImageDocumentSelector()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ViewMode" fullname="QImageDocumentSelector::ViewMode" href="qimagedocumentselector.html#ViewMode-enum" location="qimagedocumentselector.h">
                <value name="Single" value="0"></value>
                <value name="Thumbnail" value="1"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="setViewMode" fullname="QImageDocumentSelector::setViewMode" href="qimagedocumentselector.html#setViewMode" location="qimagedocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setViewMode(ViewMode mode)">
                <parameter left="ViewMode" right="" name="mode" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="viewMode" fullname="QImageDocumentSelector::viewMode" href="qimagedocumentselector.html#viewMode" location="qimagedocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="ViewMode" signature="viewMode() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setThumbnailSize" fullname="QImageDocumentSelector::setThumbnailSize" href="qimagedocumentselector.html#setThumbnailSize" location="qimagedocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setThumbnailSize(const QSize &amp; size)">
                <parameter left="const QSize &amp;" right="" name="size" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="thumbnailSize" fullname="QImageDocumentSelector::thumbnailSize" href="qimagedocumentselector.html#thumbnailSize" location="qimagedocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSize" signature="thumbnailSize() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QImageDocumentSelector::filter" href="qimagedocumentselector.html#filter" location="qimagedocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentFilter" signature="filter() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilter" fullname="QImageDocumentSelector::setFilter" href="qimagedocumentselector.html#setFilter" location="qimagedocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilter(const QContentFilter &amp; filter)">
                <parameter left="const QContentFilter &amp;" right="" name="filter" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sortMode" fullname="QImageDocumentSelector::sortMode" href="qimagedocumentselector.html#sortMode" location="qimagedocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDocumentSelector::SortMode" signature="sortMode() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSortMode" fullname="QImageDocumentSelector::setSortMode" href="qimagedocumentselector.html#setSortMode" location="qimagedocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSortMode(QDocumentSelector::SortMode sortMode)">
                <parameter left="QDocumentSelector::SortMode" right="" name="sortMode" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSortCriteria" fullname="QImageDocumentSelector::setSortCriteria" href="qimagedocumentselector.html#setSortCriteria" location="qimagedocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSortCriteria(const QContentSortCriteria &amp; sort)">
                <parameter left="const QContentSortCriteria &amp;" right="" name="sort" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sortCriteria" fullname="QImageDocumentSelector::sortCriteria" href="qimagedocumentselector.html#sortCriteria" location="qimagedocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentSortCriteria" signature="sortCriteria() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentDocument" fullname="QImageDocumentSelector::currentDocument" href="qimagedocumentselector.html#currentDocument" location="qimagedocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContent" signature="currentDocument() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="documents" fullname="QImageDocumentSelector::documents" href="qimagedocumentselector.html#documents" location="qimagedocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QContentSet &amp;" signature="documents() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultCategories" fullname="QImageDocumentSelector::setDefaultCategories" href="qimagedocumentselector.html#setDefaultCategories" location="qimagedocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefaultCategories(const QStringList &amp; categories)">
                <parameter left="const QStringList &amp;" right="" name="categories" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultCategories" fullname="QImageDocumentSelector::defaultCategories" href="qimagedocumentselector.html#defaultCategories" location="qimagedocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="defaultCategories() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSelectPermission" fullname="QImageDocumentSelector::setSelectPermission" href="qimagedocumentselector.html#setSelectPermission" location="qimagedocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSelectPermission(QDrmRights::Permission permission)">
                <parameter left="QDrmRights::Permission" right="" name="permission" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectPermission" fullname="QImageDocumentSelector::selectPermission" href="qimagedocumentselector.html#selectPermission" location="qimagedocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDrmRights::Permission" signature="selectPermission() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMandatoryPermissions" fullname="QImageDocumentSelector::setMandatoryPermissions" href="qimagedocumentselector.html#setMandatoryPermissions" location="qimagedocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMandatoryPermissions(QFlags&lt;QDrmRights::Permission&gt; permissions)">
                <parameter left="QFlags&lt;QDrmRights::Permission&gt;" right="" name="permissions" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mandatoryPermissions" fullname="QImageDocumentSelector::mandatoryPermissions" href="qimagedocumentselector.html#mandatoryPermissions" location="qimagedocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDrmRights::Permissions" signature="mandatoryPermissions() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFocus" fullname="QImageDocumentSelector::setFocus" href="qimagedocumentselector.html#setFocus" location="qimagedocumentselector.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setFocus()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="documentSelected" fullname="QImageDocumentSelector::documentSelected" href="qimagedocumentselector.html#documentSelected" location="qimagedocumentselector.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="documentSelected(const QContent &amp; image)">
                <parameter left="const QContent &amp;" right="" name="image" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="documentsChanged" fullname="QImageDocumentSelector::documentsChanged" href="qimagedocumentselector.html#documentsChanged" location="qimagedocumentselector.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="documentsChanged()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QImageDocumentSelectorDialog" href="qimagedocumentselectordialog.html" location="qimagedocumentselector.h" bases="QDialog" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QImageDocumentSelectorDialog" fullname="QImageDocumentSelectorDialog::QImageDocumentSelectorDialog" href="qimagedocumentselectordialog.html#QImageDocumentSelectorDialog" location="qimagedocumentselector.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QImageDocumentSelectorDialog(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QImageDocumentSelectorDialog" fullname="QImageDocumentSelectorDialog::~QImageDocumentSelectorDialog" href="qimagedocumentselectordialog.html#dtor.QImageDocumentSelectorDialog" location="qimagedocumentselector.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QImageDocumentSelectorDialog()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setThumbnailSize" fullname="QImageDocumentSelectorDialog::setThumbnailSize" href="qimagedocumentselectordialog.html#setThumbnailSize" location="qimagedocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setThumbnailSize(const QSize &amp; size)">
                <parameter left="const QSize &amp;" right="" name="size" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="thumbnailSize" fullname="QImageDocumentSelectorDialog::thumbnailSize" href="qimagedocumentselectordialog.html#thumbnailSize" location="qimagedocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSize" signature="thumbnailSize() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QImageDocumentSelectorDialog::filter" href="qimagedocumentselectordialog.html#filter" location="qimagedocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentFilter" signature="filter() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilter" fullname="QImageDocumentSelectorDialog::setFilter" href="qimagedocumentselectordialog.html#setFilter" location="qimagedocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilter(const QContentFilter &amp; filter)">
                <parameter left="const QContentFilter &amp;" right="" name="filter" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sortMode" fullname="QImageDocumentSelectorDialog::sortMode" href="qimagedocumentselectordialog.html#sortMode" location="qimagedocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDocumentSelector::SortMode" signature="sortMode() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSortMode" fullname="QImageDocumentSelectorDialog::setSortMode" href="qimagedocumentselectordialog.html#setSortMode" location="qimagedocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSortMode(QDocumentSelector::SortMode sortMode)">
                <parameter left="QDocumentSelector::SortMode" right="" name="sortMode" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSortCriteria" fullname="QImageDocumentSelectorDialog::setSortCriteria" href="qimagedocumentselectordialog.html#setSortCriteria" location="qimagedocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSortCriteria(const QContentSortCriteria &amp; sort)">
                <parameter left="const QContentSortCriteria &amp;" right="" name="sort" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sortCriteria" fullname="QImageDocumentSelectorDialog::sortCriteria" href="qimagedocumentselectordialog.html#sortCriteria" location="qimagedocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContentSortCriteria" signature="sortCriteria() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedDocument" fullname="QImageDocumentSelectorDialog::selectedDocument" href="qimagedocumentselectordialog.html#selectedDocument" location="qimagedocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContent" signature="selectedDocument() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="documents" fullname="QImageDocumentSelectorDialog::documents" href="qimagedocumentselectordialog.html#documents" location="qimagedocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QContentSet &amp;" signature="documents() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultCategories" fullname="QImageDocumentSelectorDialog::setDefaultCategories" href="qimagedocumentselectordialog.html#setDefaultCategories" location="qimagedocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefaultCategories(const QStringList &amp; categories)">
                <parameter left="const QStringList &amp;" right="" name="categories" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultCategories" fullname="QImageDocumentSelectorDialog::defaultCategories" href="qimagedocumentselectordialog.html#defaultCategories" location="qimagedocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="defaultCategories() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSelectPermission" fullname="QImageDocumentSelectorDialog::setSelectPermission" href="qimagedocumentselectordialog.html#setSelectPermission" location="qimagedocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSelectPermission(QDrmRights::Permission permission)">
                <parameter left="QDrmRights::Permission" right="" name="permission" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectPermission" fullname="QImageDocumentSelectorDialog::selectPermission" href="qimagedocumentselectordialog.html#selectPermission" location="qimagedocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDrmRights::Permission" signature="selectPermission() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMandatoryPermissions" fullname="QImageDocumentSelectorDialog::setMandatoryPermissions" href="qimagedocumentselectordialog.html#setMandatoryPermissions" location="qimagedocumentselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMandatoryPermissions(QFlags&lt;QDrmRights::Permission&gt; permissions)">
                <parameter left="QFlags&lt;QDrmRights::Permission&gt;" right="" name="permissions" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mandatoryPermissions" fullname="QImageDocumentSelectorDialog::mandatoryPermissions" href="qimagedocumentselectordialog.html#mandatoryPermissions" location="qimagedocumentselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDrmRights::Permissions" signature="mandatoryPermissions() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QCategorySelector" href="qcategoryselector.html" location="qcategoryselector.h" bases="QWidget" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="ContentFlag" fullname="QCategorySelector::ContentFlag" href="qcategoryselector.html#ContentFlag-enum" location="qcategoryselector.h" typedef="QCategorySelector::ContentFlags">
                <value name="IncludeAll" value="0x04"></value>
                <value name="IncludeUnfiled" value="0x08"></value>
                <value name="ListView" value="0x10"></value>
                <value name="ComboView" value="0x20"></value>
                <value name="DialogView" value="0x40"></value>
                <value name="SingleSelection" value="0x80"></value>
                <value name="Filter" value="IncludeAll | IncludeUnfiled"></value>
                <value name="Editor" value="IncludeUnfiled"></value>
                <value name="ViewMask" value="ListView | ComboView | DialogView"></value>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="ContentFlags" fullname="QCategorySelector::ContentFlags" href="qcategoryselector.html#ContentFlags-typedef" location="qcategoryselector.h" enum="QCategorySelector::ContentFlag"></typedef>
            <function access="public" threadsafety="unspecified" status="commendable" name="QCategorySelector" fullname="QCategorySelector::QCategorySelector" href="qcategoryselector.html#QCategorySelector" location="qcategoryselector.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCategorySelector(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QCategorySelector" fullname="QCategorySelector::QCategorySelector" href="qcategoryselector.html#QCategorySelector-2" location="qcategoryselector.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QCategorySelector(const QString &amp; scope, QFlags&lt;QCategorySelector::ContentFlag&gt; f, QWidget * parent)">
                <parameter left="const QString &amp;" right="" name="scope" default=""></parameter>
                <parameter left="QFlags&lt;QCategorySelector::ContentFlag&gt;" right="" name="f" default="Editor"></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCategorySelector" fullname="QCategorySelector::~QCategorySelector" href="qcategoryselector.html#dtor.QCategorySelector" location="qcategoryselector.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCategorySelector()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedCategories" fullname="QCategorySelector::selectedCategories" href="qcategoryselector.html#selectedCategories" location="qcategoryselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="selectedCategories() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedFilter" fullname="QCategorySelector::selectedFilter" href="qcategoryselector.html#selectedFilter" location="qcategoryselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QCategoryFilter" signature="selectedFilter() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectCategories" fullname="QCategorySelector::selectCategories" href="qcategoryselector.html#selectCategories" location="qcategoryselector.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="selectCategories(const QString &amp; categoryids)">
                <parameter left="const QString &amp;" right="" name="categoryids" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectCategories" fullname="QCategorySelector::selectCategories" href="qcategoryselector.html#selectCategories-2" location="qcategoryselector.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="selectCategories(const QStringList &amp; categoryids)">
                <parameter left="const QStringList &amp;" right="" name="categoryids" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectFilter" fullname="QCategorySelector::selectFilter" href="qcategoryselector.html#selectFilter" location="qcategoryselector.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="selectFilter(const QCategoryFilter &amp; filter)">
                <parameter left="const QCategoryFilter &amp;" right="" name="filter" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectAll" fullname="QCategorySelector::selectAll" href="qcategoryselector.html#selectAll" location="qcategoryselector.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="selectAll()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectUnfiled" fullname="QCategorySelector::selectUnfiled" href="qcategoryselector.html#selectUnfiled" location="qcategoryselector.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="selectUnfiled()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="categoriesSelected" fullname="QCategorySelector::categoriesSelected" href="qcategoryselector.html#categoriesSelected" location="qcategoryselector.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="categoriesSelected(const QList&lt;QString&gt; &amp; list)">
                <parameter left="const QList&lt;QString&gt; &amp;" right="" name="list" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filterSelected" fullname="QCategorySelector::filterSelected" href="qcategoryselector.html#filterSelected" location="qcategoryselector.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="filterSelected(const QCategoryFilter &amp; filter)">
                <parameter left="const QCategoryFilter &amp;" right="" name="filter" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QCategoryDialog" href="qcategorydialog.html" location="qcategoryselector.h" bases="QDialog" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="ContentFlag" fullname="QCategoryDialog::ContentFlag" href="qcategorydialog.html#ContentFlag-enum" location="qcategoryselector.h" typedef="QCategoryDialog::ContentFlags">
                <value name="IncludeAll" value="0x04"></value>
                <value name="IncludeUnfiled" value="0x08"></value>
                <value name="SingleSelection" value="0x80"></value>
                <value name="Filter" value="IncludeAll | IncludeUnfiled"></value>
                <value name="Editor" value="IncludeUnfiled"></value>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="ContentFlags" fullname="QCategoryDialog::ContentFlags" href="qcategorydialog.html#ContentFlags-typedef" location="qcategoryselector.h" enum="QCategoryDialog::ContentFlag"></typedef>
            <function access="public" threadsafety="unspecified" status="commendable" name="QCategoryDialog" fullname="QCategoryDialog::QCategoryDialog" href="qcategorydialog.html#QCategoryDialog" location="qcategoryselector.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCategoryDialog(const QString &amp; scope, QFlags&lt;QCategoryDialog::ContentFlag&gt; f, QWidget * parent)">
                <parameter left="const QString &amp;" right="" name="scope" default=""></parameter>
                <parameter left="QFlags&lt;QCategoryDialog::ContentFlag&gt;" right="" name="f" default="Filter"></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCategoryDialog" fullname="QCategoryDialog::~QCategoryDialog" href="qcategorydialog.html#dtor.QCategoryDialog" location="qcategoryselector.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCategoryDialog()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setText" fullname="QCategoryDialog::setText" href="qcategorydialog.html#setText" location="qcategoryselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setText(const QString &amp; text)">
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="text" fullname="QCategoryDialog::text" href="qcategorydialog.html#text" location="qcategoryselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="text() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedCategories" fullname="QCategoryDialog::selectedCategories" href="qcategorydialog.html#selectedCategories" location="qcategoryselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QString&gt;" signature="selectedCategories() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedFilter" fullname="QCategoryDialog::selectedFilter" href="qcategorydialog.html#selectedFilter" location="qcategoryselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QCategoryFilter" signature="selectedFilter() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectCategories" fullname="QCategoryDialog::selectCategories" href="qcategorydialog.html#selectCategories" location="qcategoryselector.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="selectCategories(const QString &amp; id)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectCategories" fullname="QCategoryDialog::selectCategories" href="qcategorydialog.html#selectCategories-2" location="qcategoryselector.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="selectCategories(const QList&lt;QString&gt; &amp; categoryids)">
                <parameter left="const QList&lt;QString&gt; &amp;" right="" name="categoryids" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectFilter" fullname="QCategoryDialog::selectFilter" href="qcategorydialog.html#selectFilter" location="qcategoryselector.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="selectFilter(const QCategoryFilter &amp; filter)">
                <parameter left="const QCategoryFilter &amp;" right="" name="filter" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectAll" fullname="QCategoryDialog::selectAll" href="qcategorydialog.html#selectAll" location="qcategoryselector.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="selectAll()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectUnfiled" fullname="QCategoryDialog::selectUnfiled" href="qcategorydialog.html#selectUnfiled" location="qcategoryselector.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="selectUnfiled()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QMailComposerInterface" href="qmailcomposerinterface.html" location="qmailcomposer.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailComposerInterface" fullname="QMailComposerInterface::QMailComposerInterface" href="qmailcomposerinterface.html#QMailComposerInterface" location="qmailcomposer.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMailComposerInterface(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMailComposerInterface" fullname="QMailComposerInterface::~QMailComposerInterface" href="qmailcomposerinterface.html#dtor.QMailComposerInterface" location="qmailcomposer.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMailComposerInterface()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="key" fullname="QMailComposerInterface::key" href="qmailcomposerinterface.html#key" location="qmailcomposer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="key() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="messageType" fullname="QMailComposerInterface::messageType" href="qmailcomposerinterface.html#messageType" location="qmailcomposer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailMessage::MessageType" signature="messageType() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QMailComposerInterface::name" href="qmailcomposerinterface.html#name" location="qmailcomposer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="displayName" fullname="QMailComposerInterface::displayName" href="qmailcomposerinterface.html#displayName" location="qmailcomposer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="displayName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="displayIcon" fullname="QMailComposerInterface::displayIcon" href="qmailcomposerinterface.html#displayIcon" location="qmailcomposer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QIcon" signature="displayIcon() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QMailComposerInterface::isEmpty" href="qmailcomposerinterface.html#isEmpty" location="qmailcomposer.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="message" fullname="QMailComposerInterface::message" href="qmailcomposerinterface.html#message" location="qmailcomposer.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMailMessage" signature="message() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="widget" fullname="QMailComposerInterface::widget" href="qmailcomposerinterface.html#widget" location="qmailcomposer.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QWidget *" signature="widget() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addActions" fullname="QMailComposerInterface::addActions" href="qmailcomposerinterface.html#addActions" location="qmailcomposer.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="void" signature="addActions(QMenu * menu) const">
                <parameter left="QMenu *" right="" name="menu" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMessage" fullname="QMailComposerInterface::setMessage" href="qmailcomposerinterface.html#setMessage" location="qmailcomposer.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="setMessage(const QMailMessage &amp; mail)">
                <parameter left="const QMailMessage &amp;" right="" name="mail" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QMailComposerInterface::clear" href="qmailcomposerinterface.html#clear" location="qmailcomposer.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="clear()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setText" fullname="QMailComposerInterface::setText" href="qmailcomposerinterface.html#setText" location="qmailcomposer.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setText(const QString &amp; text, const QString &amp; type)">
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attach" fullname="QMailComposerInterface::attach" href="qmailcomposerinterface.html#attach" location="qmailcomposer.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="attach(const QContent &amp; item, QMailMessage::AttachmentsAction action)">
                <parameter left="const QContent &amp;" right="" name="item" default=""></parameter>
                <parameter left="QMailMessage::AttachmentsAction" right="" name="action" default="QMailMessage::LinkToAttachments"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSignature" fullname="QMailComposerInterface::setSignature" href="qmailcomposerinterface.html#setSignature" location="qmailcomposer.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setSignature(const QString &amp; signature)">
                <parameter left="const QString &amp;" right="" name="signature" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentChanged" fullname="QMailComposerInterface::contentChanged" href="qmailcomposerinterface.html#contentChanged" location="qmailcomposer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="contentChanged()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="finished" fullname="QMailComposerInterface::finished" href="qmailcomposerinterface.html#finished" location="qmailcomposer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="finished()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QMailComposerFactory" href="qmailcomposerfactory.html" location="qmailcomposer.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="keys" fullname="QMailComposerFactory::keys" href="qmailcomposerfactory.html#keys" location="qmailcomposer.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStringList" signature="keys(QMailMessage::MessageType type)">
                <parameter left="QMailMessage::MessageType" right="" name="type" default="QMailMessage::AnyType"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultKey" fullname="QMailComposerFactory::defaultKey" href="qmailcomposerfactory.html#defaultKey" location="qmailcomposer.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="defaultKey(QMailMessage::MessageType type)">
                <parameter left="QMailMessage::MessageType" right="" name="type" default="QMailMessage::AnyType"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="messageType" fullname="QMailComposerFactory::messageType" href="qmailcomposerfactory.html#messageType" location="qmailcomposer.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMailMessage::MessageType" signature="messageType(const QString &amp; key)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QMailComposerFactory::name" href="qmailcomposerfactory.html#name" location="qmailcomposer.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="name(const QString &amp; key)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="displayName" fullname="QMailComposerFactory::displayName" href="qmailcomposerfactory.html#displayName" location="qmailcomposer.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="displayName(const QString &amp; key)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="displayIcon" fullname="QMailComposerFactory::displayIcon" href="qmailcomposerfactory.html#displayIcon" location="qmailcomposer.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QIcon" signature="displayIcon(const QString &amp; key)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="create" fullname="QMailComposerFactory::create" href="qmailcomposerfactory.html#create" location="qmailcomposer.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMailComposerInterface *" signature="create(const QString &amp; key, QWidget * parent)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QGsm0710Multiplexer" href="qgsm0710multiplexer.html" location="qgsm0710multiplexer.h" bases="QSerialIODeviceMultiplexer" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QGsm0710Multiplexer" fullname="QGsm0710Multiplexer::QGsm0710Multiplexer" href="qgsm0710multiplexer.html#QGsm0710Multiplexer" location="qgsm0710multiplexer.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGsm0710Multiplexer(QSerialIODevice * device, int frameSize, bool advanced, QObject * parent)">
                <parameter left="QSerialIODevice *" right="" name="device" default=""></parameter>
                <parameter left="int" right="" name="frameSize" default="31"></parameter>
                <parameter left="bool" right="" name="advanced" default="false"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGsm0710Multiplexer" fullname="QGsm0710Multiplexer::~QGsm0710Multiplexer" href="qgsm0710multiplexer.html#dtor.QGsm0710Multiplexer" location="qgsm0710multiplexer.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGsm0710Multiplexer()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cmuxChat" fullname="QGsm0710Multiplexer::cmuxChat" href="qgsm0710multiplexer.html#cmuxChat" location="qgsm0710multiplexer.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="cmuxChat(QSerialIODevice * device, int frameSize, bool advanced)">
                <parameter left="QSerialIODevice *" right="" name="device" default=""></parameter>
                <parameter left="int" right="" name="frameSize" default="31"></parameter>
                <parameter left="bool" right="" name="advanced" default="false"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="channelNumber" fullname="QGsm0710Multiplexer::channelNumber" href="qgsm0710multiplexer.html#channelNumber" location="qgsm0710multiplexer.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="int" signature="channelNumber(const QString &amp; name) const">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="reinit" fullname="QGsm0710Multiplexer::reinit" href="qgsm0710multiplexer.html#reinit" location="qgsm0710multiplexer.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="reinit()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QGsm0710MultiplexerServer" href="qgsm0710multiplexerserver.html" location="qgsm0710multiplexer.h" bases="QGsm0710Multiplexer" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QGsm0710MultiplexerServer" fullname="QGsm0710MultiplexerServer::QGsm0710MultiplexerServer" href="qgsm0710multiplexerserver.html#QGsm0710MultiplexerServer" location="qgsm0710multiplexer.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGsm0710MultiplexerServer(QSerialIODevice * device, int frameSize, bool advanced, QObject * parent)">
                <parameter left="QSerialIODevice *" right="" name="device" default=""></parameter>
                <parameter left="int" right="" name="frameSize" default="31"></parameter>
                <parameter left="bool" right="" name="advanced" default="false"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGsm0710MultiplexerServer" fullname="QGsm0710MultiplexerServer::~QGsm0710MultiplexerServer" href="qgsm0710multiplexerserver.html#dtor.QGsm0710MultiplexerServer" location="qgsm0710multiplexer.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGsm0710MultiplexerServer()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="opened" fullname="QGsm0710MultiplexerServer::opened" href="qgsm0710multiplexerserver.html#opened" location="qgsm0710multiplexer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="opened(int channel, QSerialIODevice * device)">
                <parameter left="int" right="" name="channel" default=""></parameter>
                <parameter left="QSerialIODevice *" right="" name="device" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="closed" fullname="QGsm0710MultiplexerServer::closed" href="qgsm0710multiplexerserver.html#closed" location="qgsm0710multiplexer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="closed(int channel, QSerialIODevice * device)">
                <parameter left="int" right="" name="channel" default=""></parameter>
                <parameter left="QSerialIODevice *" right="" name="device" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="terminated" fullname="QGsm0710MultiplexerServer::terminated" href="qgsm0710multiplexerserver.html#terminated" location="qgsm0710multiplexer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="terminated()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothSdpAlternative" href="qbluetoothsdpalternative.html" location="qbluetoothsdprecord.h" bases="QList" module=""></class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothSdpSequence" href="qbluetoothsdpsequence.html" location="qbluetoothsdprecord.h" bases="QList" module=""></class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetoothSdpRecord" href="qbluetoothsdprecord.html" location="qbluetoothsdprecord.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="rfcommChannel" fullname="QBluetoothSdpRecord::rfcommChannel" href="qbluetoothsdprecord.html#rfcommChannel" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="rfcommChannel(const QBluetoothSdpRecord &amp; service)">
                <parameter left="const QBluetoothSdpRecord &amp;" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromDevice" fullname="QBluetoothSdpRecord::fromDevice" href="qbluetoothsdprecord.html#fromDevice" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QBluetoothSdpRecord" signature="fromDevice(QIODevice * device)">
                <parameter left="QIODevice *" right="" name="device" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromData" fullname="QBluetoothSdpRecord::fromData" href="qbluetoothsdprecord.html#fromData" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QBluetoothSdpRecord" signature="fromData(const QByteArray &amp; data)">
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothSdpRecord" fullname="QBluetoothSdpRecord::QBluetoothSdpRecord" href="qbluetoothsdprecord.html#QBluetoothSdpRecord" location="qbluetoothsdprecord.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QBluetoothSdpRecord()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QBluetoothSdpRecord" fullname="QBluetoothSdpRecord::~QBluetoothSdpRecord" href="qbluetoothsdprecord.html#dtor.QBluetoothSdpRecord" location="qbluetoothsdprecord.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QBluetoothSdpRecord()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QBluetoothSdpRecord::isNull" href="qbluetoothsdprecord.html#isNull" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QBluetoothSdpRecord" fullname="QBluetoothSdpRecord::QBluetoothSdpRecord" href="qbluetoothsdprecord.html#QBluetoothSdpRecord-2" location="qbluetoothsdprecord.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QBluetoothSdpRecord(const QBluetoothSdpRecord &amp; other)">
                <parameter left="const QBluetoothSdpRecord &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QBluetoothSdpRecord::operator=" href="qbluetoothsdprecord.html#operator=" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QBluetoothSdpRecord &amp;" signature="operator=(const QBluetoothSdpRecord &amp; other)">
                <parameter left="const QBluetoothSdpRecord &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QBluetoothSdpRecord::operator==" href="qbluetoothsdprecord.html#operator==" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QBluetoothSdpRecord &amp; other) const">
                <parameter left="const QBluetoothSdpRecord &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isInstance" fullname="QBluetoothSdpRecord::isInstance" href="qbluetoothsdprecord.html#isInstance" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isInstance(QBluetooth::SDPProfile profile) const">
                <parameter left="QBluetooth::SDPProfile" right="" name="profile" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isInstance" fullname="QBluetoothSdpRecord::isInstance" href="qbluetoothsdprecord.html#isInstance-2" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="bool" signature="isInstance(const QBluetoothSdpUuid &amp; serviceUuid) const">
                <parameter left="const QBluetoothSdpUuid &amp;" right="" name="serviceUuid" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serviceName" fullname="QBluetoothSdpRecord::serviceName" href="qbluetoothsdprecord.html#serviceName" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="serviceName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setServiceName" fullname="QBluetoothSdpRecord::setServiceName" href="qbluetoothsdprecord.html#setServiceName" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setServiceName(const QString &amp; serviceName)">
                <parameter left="const QString &amp;" right="" name="serviceName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serviceDescription" fullname="QBluetoothSdpRecord::serviceDescription" href="qbluetoothsdprecord.html#serviceDescription" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="serviceDescription() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setServiceDescription" fullname="QBluetoothSdpRecord::setServiceDescription" href="qbluetoothsdprecord.html#setServiceDescription" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setServiceDescription(const QString &amp; serviceDesc)">
                <parameter left="const QString &amp;" right="" name="serviceDesc" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="providerName" fullname="QBluetoothSdpRecord::providerName" href="qbluetoothsdprecord.html#providerName" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="providerName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setProviderName" fullname="QBluetoothSdpRecord::setProviderName" href="qbluetoothsdprecord.html#setProviderName" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setProviderName(const QString &amp; providerName)">
                <parameter left="const QString &amp;" right="" name="providerName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="docUrl" fullname="QBluetoothSdpRecord::docUrl" href="qbluetoothsdprecord.html#docUrl" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUrl" signature="docUrl() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDocUrl" fullname="QBluetoothSdpRecord::setDocUrl" href="qbluetoothsdprecord.html#setDocUrl" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDocUrl(const QUrl &amp; docUrl)">
                <parameter left="const QUrl &amp;" right="" name="docUrl" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="execUrl" fullname="QBluetoothSdpRecord::execUrl" href="qbluetoothsdprecord.html#execUrl" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUrl" signature="execUrl() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExecUrl" fullname="QBluetoothSdpRecord::setExecUrl" href="qbluetoothsdprecord.html#setExecUrl" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setExecUrl(const QUrl &amp; execUrl)">
                <parameter left="const QUrl &amp;" right="" name="execUrl" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="iconUrl" fullname="QBluetoothSdpRecord::iconUrl" href="qbluetoothsdprecord.html#iconUrl" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUrl" signature="iconUrl() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIconUrl" fullname="QBluetoothSdpRecord::setIconUrl" href="qbluetoothsdprecord.html#setIconUrl" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIconUrl(const QUrl &amp; iconUrl)">
                <parameter left="const QUrl &amp;" right="" name="iconUrl" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QBluetoothSdpRecord::id" href="qbluetoothsdprecord.html#id" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothSdpUuid" signature="id() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setId" fullname="QBluetoothSdpRecord::setId" href="qbluetoothsdprecord.html#setId" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setId(const QBluetoothSdpUuid &amp; id)">
                <parameter left="const QBluetoothSdpUuid &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="browseGroups" fullname="QBluetoothSdpRecord::browseGroups" href="qbluetoothsdprecord.html#browseGroups" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QBluetoothSdpUuid&gt;" signature="browseGroups() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBrowseGroups" fullname="QBluetoothSdpRecord::setBrowseGroups" href="qbluetoothsdprecord.html#setBrowseGroups" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBrowseGroups(const QList&lt;QBluetoothSdpUuid&gt; &amp; groups)">
                <parameter left="const QList&lt;QBluetoothSdpUuid&gt; &amp;" right="" name="groups" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="group" fullname="QBluetoothSdpRecord::group" href="qbluetoothsdprecord.html#group" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QBluetoothSdpUuid" signature="group() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setGroup" fullname="QBluetoothSdpRecord::setGroup" href="qbluetoothsdprecord.html#setGroup" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setGroup(const QBluetoothSdpUuid &amp; group)">
                <parameter left="const QBluetoothSdpUuid &amp;" right="" name="group" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="recordHandle" fullname="QBluetoothSdpRecord::recordHandle" href="qbluetoothsdprecord.html#recordHandle" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint32" signature="recordHandle() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRecordHandle" fullname="QBluetoothSdpRecord::setRecordHandle" href="qbluetoothsdprecord.html#setRecordHandle" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRecordHandle(quint32 handle)">
                <parameter left="quint32" right="" name="handle" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attributeIds" fullname="QBluetoothSdpRecord::attributeIds" href="qbluetoothsdprecord.html#attributeIds" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;quint16&gt;" signature="attributeIds() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addAttribute" fullname="QBluetoothSdpRecord::addAttribute" href="qbluetoothsdprecord.html#addAttribute" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="addAttribute(quint16 id, const QVariant &amp; attr)">
                <parameter left="quint16" right="" name="id" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="attr" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeAttribute" fullname="QBluetoothSdpRecord::removeAttribute" href="qbluetoothsdprecord.html#removeAttribute" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeAttribute(quint16 id)">
                <parameter left="quint16" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attribute" fullname="QBluetoothSdpRecord::attribute" href="qbluetoothsdprecord.html#attribute" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="attribute(quint16 id, bool * ok) const">
                <parameter left="quint16" right="" name="id" default=""></parameter>
                <parameter left="bool *" right="" name="ok" default="NULL"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearAttributes" fullname="QBluetoothSdpRecord::clearAttributes" href="qbluetoothsdprecord.html#clearAttributes" location="qbluetoothsdprecord.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearAttributes()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="BluetoothServiceManager" href="bluetoothservicemanager.html" location="bluetoothservicemanager.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="BluetoothServiceManager" fullname="BluetoothServiceManager::BluetoothServiceManager" href="bluetoothservicemanager.html#BluetoothServiceManager" location="bluetoothservicemanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="BluetoothServiceManager(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~BluetoothServiceManager" fullname="BluetoothServiceManager::~BluetoothServiceManager" href="bluetoothservicemanager.html#dtor.BluetoothServiceManager" location="bluetoothservicemanager.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~BluetoothServiceManager()"></function>
            <variable access="public" threadsafety="unspecified" status="commendable" name="m_settings" fullname="BluetoothServiceManager::m_settings" href="bluetoothservicemanager.html#m_settings-var" location="bluetoothservicemanager.h" type="BluetoothServiceSettings *" static="false"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="m_serviceIpc" fullname="BluetoothServiceManager::m_serviceIpc" href="bluetoothservicemanager.html#m_serviceIpc-var" location="bluetoothservicemanager.h" type="ServiceMessenger *" static="false"></variable>
            <variable access="public" threadsafety="unspecified" status="commendable" name="m_serviceUserIpc" fullname="BluetoothServiceManager::m_serviceUserIpc" href="bluetoothservicemanager.html#m_serviceUserIpc-var" location="bluetoothservicemanager.h" type="ServiceUserMessenger *" static="false"></variable>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaChannel" href="qtopiachannel.html" location="qtopiachannel.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaChannel" fullname="QtopiaChannel::QtopiaChannel" href="qtopiachannel.html#QtopiaChannel" location="qtopiachannel.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtopiaChannel(const QString &amp; channel, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="channel" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtopiaChannel" fullname="QtopiaChannel::~QtopiaChannel" href="qtopiachannel.html#dtor.QtopiaChannel" location="qtopiachannel.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtopiaChannel()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="channel" fullname="QtopiaChannel::channel" href="qtopiachannel.html#channel" location="qtopiachannel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="channel() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isRegistered" fullname="QtopiaChannel::isRegistered" href="qtopiachannel.html#isRegistered" location="qtopiachannel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="isRegistered(const QString &amp; channel)">
                <parameter left="const QString &amp;" right="" name="channel" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="send" fullname="QtopiaChannel::send" href="qtopiachannel.html#send" location="qtopiachannel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="send(const QString &amp; channel, const QString &amp; msg)">
                <parameter left="const QString &amp;" right="" name="channel" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="msg" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="send" fullname="QtopiaChannel::send" href="qtopiachannel.html#send-2" location="qtopiachannel.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="bool" signature="send(const QString &amp; channel, const QString &amp; msg, const QByteArray &amp; data)">
                <parameter left="const QString &amp;" right="" name="channel" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="msg" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="flush" fullname="QtopiaChannel::flush" href="qtopiachannel.html#flush" location="qtopiachannel.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="flush()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="received" fullname="QtopiaChannel::received" href="qtopiachannel.html#received" location="qtopiachannel.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="received(const QString &amp; message, const QByteArray &amp; data)">
                <parameter left="const QString &amp;" right="" name="message" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="ContentServerTask" href="contentservertask.html" location="contentserver.h" bases="SystemShutdownHandler" module=""></class>
        <class access="public" threadsafety="unspecified" status="commendable" name="DocumentServerTask" href="documentservertask.html" location="contentserver.h" bases="SystemShutdownHandler" module=""></class>
        <class access="public" threadsafety="unspecified" status="commendable" name="ArchiveViewer" href="archiveviewer.html" location="archiveviewer.h" bases="QWidget" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ArchiveViewer" fullname="ArchiveViewer::ArchiveViewer" href="archiveviewer.html#ArchiveViewer" location="archiveviewer.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ArchiveViewer(QWidget * parent, Qt::WFlags flags)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
                <parameter left="Qt::WFlags" right="" name="flags" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDocument" fullname="ArchiveViewer::setDocument" href="archiveviewer.html#setDocument" location="archiveviewer.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setDocument(const QString &amp; document)">
                <parameter left="const QString &amp;" right="" name="document" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QMediaContent" href="qmediacontent.html" location="qmediacontent.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaContent" fullname="QMediaContent::QMediaContent" href="qmediacontent.html#QMediaContent" location="qmediacontent.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaContent(QUrl const &amp; url, QString const &amp; domain, QObject * parent)">
                <parameter left="QUrl const &amp;" right="" name="url" default=""></parameter>
                <parameter left="QString const &amp;" right="" name="domain" default="QLatin1String( &quot;Media&quot; )"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaContent" fullname="QMediaContent::QMediaContent" href="qmediacontent.html#QMediaContent-2" location="qmediacontent.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMediaContent(QContent const &amp; content, QString const &amp; domain, QObject * parent)">
                <parameter left="QContent const &amp;" right="" name="content" default=""></parameter>
                <parameter left="QString const &amp;" right="" name="domain" default="QLatin1String( &quot;Media&quot; )"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaContent" fullname="QMediaContent::~QMediaContent" href="qmediacontent.html#dtor.QMediaContent" location="qmediacontent.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaContent()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="controls" fullname="QMediaContent::controls" href="qmediacontent.html#controls" location="qmediacontent.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="controls() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedMimeTypes" fullname="QMediaContent::supportedMimeTypes" href="qmediacontent.html#supportedMimeTypes" location="qmediacontent.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStringList" signature="supportedMimeTypes()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedUriSchemes" fullname="QMediaContent::supportedUriSchemes" href="qmediacontent.html#supportedUriSchemes" location="qmediacontent.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStringList" signature="supportedUriSchemes(QString const &amp; mimeType)">
                <parameter left="QString const &amp;" right="" name="mimeType" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playContent" fullname="QMediaContent::playContent" href="qmediacontent.html#playContent" location="qmediacontent.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="playContent(QUrl const &amp; url, QString const &amp; domain)">
                <parameter left="QUrl const &amp;" right="" name="url" default=""></parameter>
                <parameter left="QString const &amp;" right="" name="domain" default="&quot;Media&quot;"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playContent" fullname="QMediaContent::playContent" href="qmediacontent.html#playContent-2" location="qmediacontent.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="void" signature="playContent(QContent const &amp; content, QString const &amp; domain)">
                <parameter left="QContent const &amp;" right="" name="content" default=""></parameter>
                <parameter left="QString const &amp;" right="" name="domain" default="&quot;Media&quot;"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="controlAvailable" fullname="QMediaContent::controlAvailable" href="qmediacontent.html#controlAvailable" location="qmediacontent.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="controlAvailable(const QString &amp; id)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="controlUnavailable" fullname="QMediaContent::controlUnavailable" href="qmediacontent.html#controlUnavailable" location="qmediacontent.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="controlUnavailable(const QString &amp; id)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaError" fullname="QMediaContent::mediaError" href="qmediacontent.html#mediaError" location="qmediacontent.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mediaError(const QString &amp; mediaError)">
                <parameter left="const QString &amp;" right="" name="mediaError" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QIrServer" href="qirserver.html" location="qirserver.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QIrServer" fullname="QIrServer::QIrServer" href="qirserver.html#QIrServer" location="qirserver.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QIrServer(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QIrServer" fullname="QIrServer::~QIrServer" href="qirserver.html#dtor.QIrServer" location="qirserver.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QIrServer()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="close" fullname="QIrServer::close" href="qirserver.html#close" location="qirserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="close()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="listen" fullname="QIrServer::listen" href="qirserver.html#listen" location="qirserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="listen(const QByteArray &amp; service, QFlags&lt;QIr::DeviceClass&gt; classes)">
                <parameter left="const QByteArray &amp;" right="" name="service" default=""></parameter>
                <parameter left="QFlags&lt;QIr::DeviceClass&gt;" right="" name="classes" default="QIr::OBEX"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serverService" fullname="QIrServer::serverService" href="qirserver.html#serverService" location="qirserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="serverService() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serverDeviceClasses" fullname="QIrServer::serverDeviceClasses" href="qirserver.html#serverDeviceClasses" location="qirserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QIr::DeviceClasses" signature="serverDeviceClasses() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isListening" fullname="QIrServer::isListening" href="qirserver.html#isListening" location="qirserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isListening() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serverError" fullname="QIrServer::serverError" href="qirserver.html#serverError" location="qirserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QIrSocket::SocketError" signature="serverError() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QIrServer::errorString" href="qirserver.html#errorString" location="qirserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="maxPendingConnections" fullname="QIrServer::maxPendingConnections" href="qirserver.html#maxPendingConnections" location="qirserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="maxPendingConnections() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMaxPendingConnections" fullname="QIrServer::setMaxPendingConnections" href="qirserver.html#setMaxPendingConnections" location="qirserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMaxPendingConnections(int numConnections)">
                <parameter left="int" right="" name="numConnections" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForNewConnection" fullname="QIrServer::waitForNewConnection" href="qirserver.html#waitForNewConnection" location="qirserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForNewConnection(int msecs, bool * timedOut)">
                <parameter left="int" right="" name="msecs" default="0"></parameter>
                <parameter left="bool *" right="" name="timedOut" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasPendingConnections" fullname="QIrServer::hasPendingConnections" href="qirserver.html#hasPendingConnections" location="qirserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasPendingConnections() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="nextPendingConnection" fullname="QIrServer::nextPendingConnection" href="qirserver.html#nextPendingConnection" location="qirserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QIrSocket *" signature="nextPendingConnection()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="socketDescriptor" fullname="QIrServer::socketDescriptor" href="qirserver.html#socketDescriptor" location="qirserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="socketDescriptor() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="newConnection" fullname="QIrServer::newConnection" href="qirserver.html#newConnection" location="qirserver.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="newConnection()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAudioStatePlugin" href="qaudiostateplugin.html" location="qaudiostateplugin.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioStatePlugin" fullname="QAudioStatePlugin::QAudioStatePlugin" href="qaudiostateplugin.html#QAudioStatePlugin" location="qaudiostateplugin.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAudioStatePlugin(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAudioStatePlugin" fullname="QAudioStatePlugin::~QAudioStatePlugin" href="qaudiostateplugin.html#dtor.QAudioStatePlugin" location="qaudiostateplugin.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAudioStatePlugin()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="statesProvided" fullname="QAudioStatePlugin::statesProvided" href="qaudiostateplugin.html#statesProvided" location="qaudiostateplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QAudioState *&gt;" signature="statesProvided() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemCallSettings" href="qmodemcallsettings.html" location="qmodemcallsettings.h" bases="QCallSettings" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemCallSettings" fullname="QModemCallSettings::QModemCallSettings" href="qmodemcallsettings.html#QModemCallSettings" location="qmodemcallsettings.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemCallSettings(QModemService * service)">
                <parameter left="QModemService *" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemCallSettings" fullname="QModemCallSettings::~QModemCallSettings" href="qmodemcallsettings.html#dtor.QModemCallSettings" location="qmodemcallsettings.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemCallSettings()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSupplementaryServices" href="qsupplementaryservices.html" location="qsupplementaryservices.h" bases="QCommInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSupplementaryServices" fullname="QSupplementaryServices::QSupplementaryServices" href="qsupplementaryservices.html#QSupplementaryServices" location="qsupplementaryservices.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSupplementaryServices(const QString &amp; service, QObject * parent, QCommInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="service" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QCommInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSupplementaryServices" fullname="QSupplementaryServices::~QSupplementaryServices" href="qsupplementaryservices.html#dtor.QSupplementaryServices" location="qsupplementaryservices.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSupplementaryServices()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="OutgoingNotification" fullname="QSupplementaryServices::OutgoingNotification" href="qsupplementaryservices.html#OutgoingNotification-enum" location="qsupplementaryservices.h">
                <value name="MO_UnconditionalForwardingActive" value="0"></value>
                <value name="MO_ConditionalForwardingActive" value="1"></value>
                <value name="MO_Forwarded" value="2"></value>
                <value name="MO_Waiting" value="3"></value>
                <value name="MO_ClosedUserGroup" value="4"></value>
                <value name="MO_OutgoingCallsBarred" value="5"></value>
                <value name="MO_IncomingCallsBarred" value="6"></value>
                <value name="MO_CallerIdSuppressionRejected" value="7"></value>
                <value name="MO_Deflected" value="8"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="IncomingNotification" fullname="QSupplementaryServices::IncomingNotification" href="qsupplementaryservices.html#IncomingNotification-enum" location="qsupplementaryservices.h">
                <value name="MT_Forwarded" value="0"></value>
                <value name="MT_ClosedUserGroup" value="1"></value>
                <value name="MT_Hold" value="2"></value>
                <value name="MT_Retrieved" value="3"></value>
                <value name="MT_MultipartyEntered" value="4"></value>
                <value name="MT_HoldReleased" value="5"></value>
                <value name="MT_ForwardCheck" value="6"></value>
                <value name="MT_Alerting" value="7"></value>
                <value name="MT_ExplicitTransfer" value="8"></value>
                <value name="MT_Deflected" value="9"></value>
                <value name="MT_AdditionalIncomingForwarded" value="10"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="UnstructuredAction" fullname="QSupplementaryServices::UnstructuredAction" href="qsupplementaryservices.html#UnstructuredAction-enum" location="qsupplementaryservices.h">
                <value name="NoFurtherActionRequired" value="0"></value>
                <value name="FurtherActionRequired" value="1"></value>
                <value name="TerminatedByNetwork" value="2"></value>
                <value name="OtherLocalClientResponded" value="3"></value>
                <value name="OperationNotSupported" value="4"></value>
                <value name="NetworkTimeout" value="5"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancelUnstructuredSession" fullname="QSupplementaryServices::cancelUnstructuredSession" href="qsupplementaryservices.html#cancelUnstructuredSession" location="qsupplementaryservices.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="cancelUnstructuredSession()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sendUnstructuredData" fullname="QSupplementaryServices::sendUnstructuredData" href="qsupplementaryservices.html#sendUnstructuredData" location="qsupplementaryservices.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="sendUnstructuredData(const QString &amp; data)">
                <parameter left="const QString &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sendSupplementaryServiceData" fullname="QSupplementaryServices::sendSupplementaryServiceData" href="qsupplementaryservices.html#sendSupplementaryServiceData" location="qsupplementaryservices.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="sendSupplementaryServiceData(const QString &amp; data)">
                <parameter left="const QString &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="outgoingNotification" fullname="QSupplementaryServices::outgoingNotification" href="qsupplementaryservices.html#outgoingNotification" location="qsupplementaryservices.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="outgoingNotification(QSupplementaryServices::OutgoingNotification type, int groupIndex)">
                <parameter left="QSupplementaryServices::OutgoingNotification" right="" name="type" default=""></parameter>
                <parameter left="int" right="" name="groupIndex" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="incomingNotification" fullname="QSupplementaryServices::incomingNotification" href="qsupplementaryservices.html#incomingNotification" location="qsupplementaryservices.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="incomingNotification(QSupplementaryServices::IncomingNotification type, int groupIndex, const QString &amp; number)">
                <parameter left="QSupplementaryServices::IncomingNotification" right="" name="type" default=""></parameter>
                <parameter left="int" right="" name="groupIndex" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unstructuredNotification" fullname="QSupplementaryServices::unstructuredNotification" href="qsupplementaryservices.html#unstructuredNotification" location="qsupplementaryservices.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="unstructuredNotification(QSupplementaryServices::UnstructuredAction action, const QString &amp; data)">
                <parameter left="QSupplementaryServices::UnstructuredAction" right="" name="action" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unstructuredResult" fullname="QSupplementaryServices::unstructuredResult" href="qsupplementaryservices.html#unstructuredResult" location="qsupplementaryservices.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="unstructuredResult(QTelephony::Result result)">
                <parameter left="QTelephony::Result" right="" name="result" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supplementaryServiceResult" fullname="QSupplementaryServices::supplementaryServiceResult" href="qsupplementaryservices.html#supplementaryServiceResult" location="qsupplementaryservices.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="supplementaryServiceResult(QTelephony::Result result)">
                <parameter left="QTelephony::Result" right="" name="result" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaApplication" href="qtopiaapplication.html" location="qtopiaapplication.h" bases="QApplication" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaApplication" fullname="QtopiaApplication::QtopiaApplication" href="qtopiaapplication.html#QtopiaApplication" location="qtopiaapplication.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtopiaApplication(int &amp; argc, char ** argv)">
                <parameter left="int &amp;" right="" name="argc" default=""></parameter>
                <parameter left="char **" right="" name="argv" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtopiaApplication" fullname="QtopiaApplication::~QtopiaApplication" href="qtopiaapplication.html#dtor.QtopiaApplication" location="qtopiaapplication.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtopiaApplication()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="instance" fullname="QtopiaApplication::instance" href="qtopiaapplication.html#instance" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QtopiaApplication *" signature="instance()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="willKeepRunning" fullname="QtopiaApplication::willKeepRunning" href="qtopiaapplication.html#willKeepRunning" location="qtopiaapplication.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="willKeepRunning() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="registerRunningTask" fullname="QtopiaApplication::registerRunningTask" href="qtopiaapplication.html#registerRunningTask" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="registerRunningTask(const QString &amp; name, QObject * taskObj)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="QObject *" right="" name="taskObj" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unregisterRunningTask" fullname="QtopiaApplication::unregisterRunningTask" href="qtopiaapplication.html#unregisterRunningTask" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="unregisterRunningTask(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unregisterRunningTask" fullname="QtopiaApplication::unregisterRunningTask" href="qtopiaapplication.html#unregisterRunningTask-2" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="unregisterRunningTask(QObject * taskObj)">
                <parameter left="QObject *" right="" name="taskObj" default=""></parameter>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SxeAuthorizerRole" fullname="QtopiaApplication::SxeAuthorizerRole" href="qtopiaapplication.html#SxeAuthorizerRole-enum" location="qtopiaapplication.h">
                <value name="SxeAuthorizerClientOnly" value="0x01"></value>
                <value name="SxeAuthorizerServerOnly" value="0x02"></value>
                <value name="SxeAuthorizerServerAndClient" value="SxeAuthorizerClientOnly | SxeAuthorizerServerOnly"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="sxeAuthorizerRole" fullname="QtopiaApplication::sxeAuthorizerRole" href="qtopiaapplication.html#sxeAuthorizerRole" location="qtopiaapplication.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="SxeAuthorizerRole" signature="sxeAuthorizerRole() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSxeAuthorizerRole" fullname="QtopiaApplication::setSxeAuthorizerRole" href="qtopiaapplication.html#setSxeAuthorizerRole" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSxeAuthorizerRole(SxeAuthorizerRole role)">
                <parameter left="SxeAuthorizerRole" right="" name="role" default=""></parameter>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="StylusMode" fullname="QtopiaApplication::StylusMode" href="qtopiaapplication.html#StylusMode-enum" location="qtopiaapplication.h">
                <value name="LeftOnly" value="0"></value>
                <value name="RightOnHold" value="1"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStylusOperation" fullname="QtopiaApplication::setStylusOperation" href="qtopiaapplication.html#setStylusOperation" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setStylusOperation(QWidget * widget, StylusMode mode)">
                <parameter left="QWidget *" right="" name="widget" default=""></parameter>
                <parameter left="StylusMode" right="" name="mode" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stylusOperation" fullname="QtopiaApplication::stylusOperation" href="qtopiaapplication.html#stylusOperation" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="StylusMode" signature="stylusOperation(QWidget * w)">
                <parameter left="QWidget *" right="" name="w" default=""></parameter>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="InputMethodHint" fullname="QtopiaApplication::InputMethodHint" href="qtopiaapplication.html#InputMethodHint-enum" location="qtopiaapplication.h">
                <value name="Normal" value="0"></value>
                <value name="AlwaysOff" value="1"></value>
                <value name="AlwaysOn" value="2"></value>
                <value name="Number" value="3"></value>
                <value name="PhoneNumber" value="4"></value>
                <value name="Words" value="5"></value>
                <value name="Text" value="6"></value>
                <value name="Named" value="7"></value>
                <value name="ProperNouns" value="8"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="PowerConstraint" fullname="QtopiaApplication::PowerConstraint" href="qtopiaapplication.html#PowerConstraint-enum" location="qtopiaapplication.h">
                <value name="Disable" value="0"></value>
                <value name="DisableLightOff" value="50"></value>
                <value name="DisableSuspend" value="900"></value>
                <value name="Enable" value="1000"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="setInputMethodHint" fullname="QtopiaApplication::setInputMethodHint" href="qtopiaapplication.html#setInputMethodHint" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setInputMethodHint(QWidget * widget, InputMethodHint mode, const QString &amp; param)">
                <parameter left="QWidget *" right="" name="widget" default=""></parameter>
                <parameter left="InputMethodHint" right="" name="mode" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="param" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setInputMethodHint" fullname="QtopiaApplication::setInputMethodHint" href="qtopiaapplication.html#setInputMethodHint-2" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="void" signature="setInputMethodHint(QWidget * widget, const QString &amp; named)">
                <parameter left="QWidget *" right="" name="widget" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="named" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="inputMethodHint" fullname="QtopiaApplication::inputMethodHint" href="qtopiaapplication.html#inputMethodHint" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="InputMethodHint" signature="inputMethodHint(QWidget * widget)">
                <parameter left="QWidget *" right="" name="widget" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="inputMethodHintParam" fullname="QtopiaApplication::inputMethodHintParam" href="qtopiaapplication.html#inputMethodHintParam" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="inputMethodHintParam(QWidget * widget)">
                <parameter left="QWidget *" right="" name="widget" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hideInputMethod" fullname="QtopiaApplication::hideInputMethod" href="qtopiaapplication.html#hideInputMethod" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="hideInputMethod()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="showInputMethod" fullname="QtopiaApplication::showInputMethod" href="qtopiaapplication.html#showInputMethod" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="showInputMethod()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mainWidget" fullname="QtopiaApplication::mainWidget" href="qtopiaapplication.html#mainWidget" location="qtopiaapplication.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QWidget *" signature="mainWidget() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMainWidget" fullname="QtopiaApplication::setMainWidget" href="qtopiaapplication.html#setMainWidget" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMainWidget(QWidget * widget, bool noMaximize)">
                <parameter left="QWidget *" right="" name="widget" default=""></parameter>
                <parameter left="bool" right="" name="noMaximize" default="false"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="showMainWidget" fullname="QtopiaApplication::showMainWidget" href="qtopiaapplication.html#showMainWidget" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="showMainWidget()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="showMainDocumentWidget" fullname="QtopiaApplication::showMainDocumentWidget" href="qtopiaapplication.html#showMainDocumentWidget" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="showMainDocumentWidget()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="showMainWidget" fullname="QtopiaApplication::showMainWidget" href="qtopiaapplication.html#showMainWidget-2" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="showMainWidget(QWidget * widget, bool noMaximize)">
                <parameter left="QWidget *" right="" name="widget" default=""></parameter>
                <parameter left="bool" right="" name="noMaximize" default="false"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="showMainDocumentWidget" fullname="QtopiaApplication::showMainDocumentWidget" href="qtopiaapplication.html#showMainDocumentWidget-2" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="showMainDocumentWidget(QWidget * widget, bool noMaximize)">
                <parameter left="QWidget *" right="" name="widget" default=""></parameter>
                <parameter left="bool" right="" name="noMaximize" default="false"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="showDialog" fullname="QtopiaApplication::showDialog" href="qtopiaapplication.html#showDialog" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="showDialog(QDialog * dialog, bool noMaximize)">
                <parameter left="QDialog *" right="" name="dialog" default=""></parameter>
                <parameter left="bool" right="" name="noMaximize" default="false"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="execDialog" fullname="QtopiaApplication::execDialog" href="qtopiaapplication.html#execDialog" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="execDialog(QDialog * dialog, bool noMaximize)">
                <parameter left="QDialog *" right="" name="dialog" default=""></parameter>
                <parameter left="bool" right="" name="noMaximize" default="false"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMenuLike" fullname="QtopiaApplication::setMenuLike" href="qtopiaapplication.html#setMenuLike" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setMenuLike(QDialog * dialog, bool menuLike)">
                <parameter left="QDialog *" right="" name="dialog" default=""></parameter>
                <parameter left="bool" right="" name="menuLike" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMenuLike" fullname="QtopiaApplication::isMenuLike" href="qtopiaapplication.html#isMenuLike" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="isMenuLike(const QDialog * dialog)">
                <parameter left="const QDialog *" right="" name="dialog" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPowerConstraint" fullname="QtopiaApplication::setPowerConstraint" href="qtopiaapplication.html#setPowerConstraint" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setPowerConstraint(PowerConstraint constraint)">
                <parameter left="PowerConstraint" right="" name="constraint" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exec" fullname="QtopiaApplication::exec" href="qtopiaapplication.html#exec" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="exec()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="loadTranslations" fullname="QtopiaApplication::loadTranslations" href="qtopiaapplication.html#loadTranslations" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="loadTranslations(const QString &amp; qms)">
                <parameter left="const QString &amp;" right="" name="qms" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="loadTranslations" fullname="QtopiaApplication::loadTranslations" href="qtopiaapplication.html#loadTranslations-2" location="qtopiaapplication.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="void" signature="loadTranslations(const QStringList &amp; qms)">
                <parameter left="const QStringList &amp;" right="" name="qms" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="timeChanged" fullname="QtopiaApplication::timeChanged" href="qtopiaapplication.html#timeChanged" location="qtopiaapplication.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="timeChanged()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="categoriesChanged" fullname="QtopiaApplication::categoriesChanged" href="qtopiaapplication.html#categoriesChanged" location="qtopiaapplication.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="categoriesChanged()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clockChanged" fullname="QtopiaApplication::clockChanged" href="qtopiaapplication.html#clockChanged" location="qtopiaapplication.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="clockChanged(bool ampm)">
                <parameter left="bool" right="" name="ampm" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volumeChanged" fullname="QtopiaApplication::volumeChanged" href="qtopiaapplication.html#volumeChanged" location="qtopiaapplication.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="volumeChanged(bool muted)">
                <parameter left="bool" right="" name="muted" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="appMessage" fullname="QtopiaApplication::appMessage" href="qtopiaapplication.html#appMessage" location="qtopiaapplication.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="appMessage(const QString &amp; msg, const QByteArray &amp; data)">
                <parameter left="const QString &amp;" right="" name="msg" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="weekChanged" fullname="QtopiaApplication::weekChanged" href="qtopiaapplication.html#weekChanged" location="qtopiaapplication.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="weekChanged(bool startOnMonday)">
                <parameter left="bool" right="" name="startOnMonday" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dateFormatChanged" fullname="QtopiaApplication::dateFormatChanged" href="qtopiaapplication.html#dateFormatChanged" location="qtopiaapplication.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="dateFormatChanged()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentChanged" fullname="QtopiaApplication::contentChanged" href="qtopiaapplication.html#contentChanged" location="qtopiaapplication.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="contentChanged(const QContentIdList &amp; ids, QContent::ChangeType type)">
                <parameter left="const QContentIdList &amp;" right="" name="ids" default=""></parameter>
                <parameter left="QContent::ChangeType" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resetContent" fullname="QtopiaApplication::resetContent" href="qtopiaapplication.html#resetContent" location="qtopiaapplication.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="resetContent()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="DialerService" href="dialerservice.html" location="dialerservice.h" bases="QtopiaAbstractService" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="dialVoiceMail" fullname="DialerService::dialVoiceMail" href="dialerservice.html#dialVoiceMail" location="dialerservice.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="dialVoiceMail()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dial" fullname="DialerService::dial" href="dialerservice.html#dial" location="dialerservice.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="dial(const QString &amp; name, const QString &amp; number)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dial" fullname="DialerService::dial" href="dialerservice.html#dial-2" location="dialerservice.h" virtual="pure" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="dial(const QString &amp; number, const QUniqueId &amp; contact)">
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
                <parameter left="const QUniqueId &amp;" right="" name="contact" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="showDialer" fullname="DialerService::showDialer" href="dialerservice.html#showDialer" location="dialerservice.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="showDialer(const QString &amp; digits)">
                <parameter left="const QString &amp;" right="" name="digits" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPasswordDialog" href="qpassworddialog.html" location="qpassworddialog.h" bases="QDialog" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="InputMode" fullname="QPasswordDialog::InputMode" href="qpassworddialog.html#InputMode-enum" location="qpassworddialog.h">
                <value name="Crypted" value="0"></value>
                <value name="Plain" value="1"></value>
                <value name="Pin" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QPasswordDialog" fullname="QPasswordDialog::QPasswordDialog" href="qpassworddialog.html#QPasswordDialog" location="qpassworddialog.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPasswordDialog(QWidget * parent, Qt::WFlags flags)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
                <parameter left="Qt::WFlags" right="" name="flags" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPasswordDialog" fullname="QPasswordDialog::~QPasswordDialog" href="qpassworddialog.html#dtor.QPasswordDialog" location="qpassworddialog.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPasswordDialog()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPrompt" fullname="QPasswordDialog::setPrompt" href="qpassworddialog.html#setPrompt" location="qpassworddialog.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPrompt(const QString &amp; prompt)">
                <parameter left="const QString &amp;" right="" name="prompt" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="prompt" fullname="QPasswordDialog::prompt" href="qpassworddialog.html#prompt" location="qpassworddialog.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="prompt() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setInputMode" fullname="QPasswordDialog::setInputMode" href="qpassworddialog.html#setInputMode" location="qpassworddialog.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setInputMode(QPasswordDialog::InputMode mode)">
                <parameter left="QPasswordDialog::InputMode" right="" name="mode" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="inputMode" fullname="QPasswordDialog::inputMode" href="qpassworddialog.html#inputMode" location="qpassworddialog.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPasswordDialog::InputMode" signature="inputMode() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="reset" fullname="QPasswordDialog::reset" href="qpassworddialog.html#reset" location="qpassworddialog.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="reset()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="password" fullname="QPasswordDialog::password" href="qpassworddialog.html#password" location="qpassworddialog.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="password() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="getPassword" fullname="QPasswordDialog::getPassword" href="qpassworddialog.html#getPassword" location="qpassworddialog.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="getPassword(QWidget * parent, const QString &amp; prompt, InputMode mode, bool last)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="prompt" default=""></parameter>
                <parameter left="InputMode" right="" name="mode" default="QPasswordDialog::Crypted"></parameter>
                <parameter left="bool" right="" name="last" default="true"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="obsolete" name="authenticateUser" fullname="QPasswordDialog::authenticateUser" href="qpassworddialog-obsolete.html#authenticateUser" location="qpassworddialog.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="authenticateUser(QWidget * parent, bool atPowerOn)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
                <parameter left="bool" right="" name="atPowerOn" default="false"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="obsolete" name="authenticateUser" fullname="QPasswordDialog::authenticateUser" href="qpassworddialog-obsolete.html#authenticateUser-2" location="qpassworddialog.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="bool" signature="authenticateUser(const QString &amp; text)">
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaMedia" href="qtopiamedia.html" location="media.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QtopiaMedia::State" href="qtopiamedia.html#State-enum" location="media.h">
                <value name="Playing" value="0"></value>
                <value name="Paused" value="1"></value>
                <value name="Stopped" value="2"></value>
                <value name="Buffering" value="3"></value>
                <value name="Error" value="4"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Offset" fullname="QtopiaMedia::Offset" href="qtopiamedia.html#Offset-enum" location="media.h">
                <value name="Beginning" value="0"></value>
                <value name="Current" value="1"></value>
                <value name="End" value="2"></value>
            </enum>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QPerformanceLog" href="qperformancelog.html" location="qperformancelog.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="EventType" fullname="QPerformanceLog::EventType" href="qperformancelog.html#EventType-enum" location="qperformancelog.h" typedef="QPerformanceLog::Event">
                <value name="NoEvent" value="0x00"></value>
                <value name="Begin" value="0x01"></value>
                <value name="End" value="0x02"></value>
                <value name="LibraryLoading" value="0x04"></value>
                <value name="EventLoop" value="0x08"></value>
                <value name="MainWindow" value="0x10"></value>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="Event" fullname="QPerformanceLog::Event" href="qperformancelog.html#Event-typedef" location="qperformancelog.h" enum="QPerformanceLog::EventType"></typedef>
            <function access="public" threadsafety="unspecified" status="commendable" name="QPerformanceLog" fullname="QPerformanceLog::QPerformanceLog" href="qperformancelog.html#QPerformanceLog" location="qperformancelog.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPerformanceLog(QString const &amp; applicationName)">
                <parameter left="QString const &amp;" right="" name="applicationName" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPerformanceLog" fullname="QPerformanceLog::~QPerformanceLog" href="qperformancelog.html#dtor.QPerformanceLog" location="qperformancelog.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPerformanceLog()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;&lt;" fullname="QPerformanceLog::operator&lt;&lt;" href="qperformancelog.html#operator&lt;&lt;" location="qperformancelog.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QPerformanceLog &amp;" signature="operator&lt;&lt;(QString const &amp; string)">
                <parameter left="QString const &amp;" right="" name="string" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;&lt;" fullname="QPerformanceLog::operator&lt;&lt;" href="qperformancelog.html#operator&lt;&lt;-2" location="qperformancelog.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="QPerformanceLog &amp;" signature="operator&lt;&lt;(Event const &amp; event)">
                <parameter left="Event const &amp;" right="" name="event" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="enabled" fullname="QPerformanceLog::enabled" href="qperformancelog.html#enabled" location="qperformancelog.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="enabled()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stringFromEvent" fullname="QPerformanceLog::stringFromEvent" href="qperformancelog.html#stringFromEvent" location="qperformancelog.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="stringFromEvent(Event const &amp; event)">
                <parameter left="Event const &amp;" right="" name="event" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QImageSourceSelectorDialog" href="qimagesourceselectordialog.html" location="qimagesourceselector.h" bases="QDialog" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QImageSourceSelectorDialog" fullname="QImageSourceSelectorDialog::QImageSourceSelectorDialog" href="qimagesourceselectordialog.html#QImageSourceSelectorDialog" location="qimagesourceselector.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QImageSourceSelectorDialog(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QImageSourceSelectorDialog" fullname="QImageSourceSelectorDialog::~QImageSourceSelectorDialog" href="qimagesourceselectordialog.html#dtor.QImageSourceSelectorDialog" location="qimagesourceselector.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QImageSourceSelectorDialog()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMaximumImageSize" fullname="QImageSourceSelectorDialog::setMaximumImageSize" href="qimagesourceselectordialog.html#setMaximumImageSize" location="qimagesourceselector.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMaximumImageSize(const QSize &amp; size)">
                <parameter left="const QSize &amp;" right="" name="size" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumImageSize" fullname="QImageSourceSelectorDialog::maximumImageSize" href="qimagesourceselectordialog.html#maximumImageSize" location="qimagesourceselector.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSize" signature="maximumImageSize() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContent" fullname="QImageSourceSelectorDialog::setContent" href="qimagesourceselectordialog.html#setContent" location="qimagesourceselector.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setContent(const QContent &amp; image)">
                <parameter left="const QContent &amp;" right="" name="image" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="content" fullname="QImageSourceSelectorDialog::content" href="qimagesourceselectordialog.html#content" location="qimagesourceselector.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QContent" signature="content() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="TaskManagerEntry" href="taskmanagerentry.html" location="taskmanagerentry.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="TaskManagerEntry" fullname="TaskManagerEntry::TaskManagerEntry" href="taskmanagerentry.html#TaskManagerEntry" location="taskmanagerentry.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="TaskManagerEntry(const QString &amp; description, const QString &amp; iconPath, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="description" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="iconPath" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="show" fullname="TaskManagerEntry::show" href="taskmanagerentry.html#show" location="taskmanagerentry.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="show()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hide" fullname="TaskManagerEntry::hide" href="taskmanagerentry.html#hide" location="taskmanagerentry.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="hide()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activated" fullname="TaskManagerEntry::activated" href="taskmanagerentry.html#activated" location="taskmanagerentry.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="activated()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="InputMethodSelector" href="inputmethodselector.html" location="inputmethods.h" bases="QWidget" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="InputMethodSelector" fullname="InputMethodSelector::InputMethodSelector" href="inputmethodselector.html#InputMethodSelector" location="inputmethods.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="InputMethodSelector(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~InputMethodSelector" fullname="InputMethodSelector::~InputMethodSelector" href="inputmethodselector.html#dtor.InputMethodSelector" location="inputmethods.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~InputMethodSelector()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="add" fullname="InputMethodSelector::add" href="inputmethodselector.html#add" location="inputmethods.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="add(QtopiaInputMethod * im)">
                <parameter left="QtopiaInputMethod *" right="" name="im" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="InputMethodSelector::clear" href="inputmethodselector.html#clear" location="inputmethods.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setInputMethod" fullname="InputMethodSelector::setInputMethod" href="inputmethodselector.html#setInputMethod" location="inputmethods.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setInputMethod(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setInputMethod" fullname="InputMethodSelector::setInputMethod" href="inputmethodselector.html#setInputMethod-2" location="inputmethods.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setInputMethod(QtopiaInputMethod * method)">
                <parameter left="QtopiaInputMethod *" right="" name="method" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNextInputMethod" fullname="InputMethodSelector::setNextInputMethod" href="inputmethodselector.html#setNextInputMethod" location="inputmethods.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setNextInputMethod()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHint" fullname="InputMethodSelector::setHint" href="inputmethodselector.html#setHint" location="inputmethods.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHint(const QString &amp; hint, bool restricted)">
                <parameter left="const QString &amp;" right="" name="hint" default=""></parameter>
                <parameter left="bool" right="" name="restricted" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sort" fullname="InputMethodSelector::sort" href="inputmethodselector.html#sort" location="inputmethods.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="sort()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="count" fullname="InputMethodSelector::count" href="inputmethodselector.html#count" location="inputmethods.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="count() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="current" fullname="InputMethodSelector::current" href="inputmethodselector.html#current" location="inputmethods.h" virtual="non" meta="slot" const="true" static="false" overload="false" type="QtopiaInputMethod *" signature="current() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activateCurrent" fullname="InputMethodSelector::activateCurrent" href="inputmethodselector.html#activateCurrent" location="inputmethods.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="activateCurrent(bool on)">
                <parameter left="bool" right="" name="on" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateIMMenuAction" fullname="InputMethodSelector::updateIMMenuAction" href="inputmethodselector.html#updateIMMenuAction" location="inputmethods.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="updateIMMenuAction(bool addToMenu)">
                <parameter left="bool" right="" name="addToMenu" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="refreshIMMenuAction" fullname="InputMethodSelector::refreshIMMenuAction" href="inputmethodselector.html#refreshIMMenuAction" location="inputmethods.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="refreshIMMenuAction()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="showChoice" fullname="InputMethodSelector::showChoice" href="inputmethodselector.html#showChoice" location="inputmethods.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="showChoice(bool on)">
                <parameter left="bool" right="" name="on" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="showList" fullname="InputMethodSelector::showList" href="inputmethodselector.html#showList" location="inputmethods.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="showList()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activated" fullname="InputMethodSelector::activated" href="inputmethodselector.html#activated" location="inputmethods.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="activated(QtopiaInputMethod * im)">
                <parameter left="QtopiaInputMethod *" right="" name="im" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="inputWidgetShown" fullname="InputMethodSelector::inputWidgetShown" href="inputmethodselector.html#inputWidgetShown" location="inputmethods.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="inputWidgetShown(bool shown)">
                <parameter left="bool" right="" name="shown" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="InputMethods" href="inputmethods.html" location="inputmethods.h" bases="QWidget" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="IMType" fullname="InputMethods::IMType" href="inputmethods.html#IMType-enum" location="inputmethods.h">
                <value name="Any" value="0"></value>
                <value name="Mouse" value="1"></value>
                <value name="Keypad" value="2"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SystemMenuItemId" fullname="InputMethods::SystemMenuItemId" href="inputmethods.html#SystemMenuItemId-enum" location="inputmethods.h">
                <value name="NextInputMethod" value="-2"></value>
                <value name="ChangeInputMethod" value="-3"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="InputMethods" fullname="InputMethods::InputMethods" href="inputmethods.html#InputMethods" location="inputmethods.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="InputMethods(QWidget * parent, IMType t)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
                <parameter left="IMType" right="" name="t" default="Any"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~InputMethods" fullname="InputMethods::~InputMethods" href="inputmethods.html#dtor.InputMethods" location="inputmethods.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~InputMethods()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="instance" fullname="InputMethods::instance" href="inputmethods.html#instance" location="inputmethods.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="InputMethods *" signature="instance()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="inputRect" fullname="InputMethods::inputRect" href="inputmethods.html#inputRect" location="inputmethods.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QRect" signature="inputRect() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="shown" fullname="InputMethods::shown" href="inputmethods.html#shown" location="inputmethods.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="shown() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectorShown" fullname="InputMethods::selectorShown" href="inputmethods.html#selectorShown" location="inputmethods.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="selectorShown() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unloadInputMethods" fullname="InputMethods::unloadInputMethods" href="inputmethods.html#unloadInputMethods" location="inputmethods.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="unloadInputMethods()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="loadInputMethods" fullname="InputMethods::loadInputMethods" href="inputmethods.html#loadInputMethods" location="inputmethods.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="loadInputMethods()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activateMenuItem" fullname="InputMethods::activateMenuItem" href="inputmethods.html#activateMenuItem" location="inputmethods.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="activateMenuItem(int v)">
                <parameter left="int" right="" name="v" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentShown" fullname="InputMethods::currentShown" href="inputmethods.html#currentShown" location="inputmethods.h" virtual="non" meta="slot" const="true" static="false" overload="false" type="QString" signature="currentShown() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="inputMethodHint" fullname="InputMethods::inputMethodHint" href="inputmethods.html#inputMethodHint" location="inputmethods.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="inputMethodHint(int h, int wid, bool password)">
                <parameter left="int" right="" name="h" default=""></parameter>
                <parameter left="int" right="" name="wid" default=""></parameter>
                <parameter left="bool" right="" name="password" default="false"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="inputMethodHint" fullname="InputMethods::inputMethodHint" href="inputmethods.html#inputMethodHint-2" location="inputmethods.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="inputMethodHint(const QString &amp; h, int wid)">
                <parameter left="const QString &amp;" right="" name="h" default=""></parameter>
                <parameter left="int" right="" name="wid" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="inputMethodPasswordHint" fullname="InputMethods::inputMethodPasswordHint" href="inputmethods.html#inputMethodPasswordHint" location="inputmethods.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="inputMethodPasswordHint(bool passwordFlag, int wid)">
                <parameter left="bool" right="" name="passwordFlag" default=""></parameter>
                <parameter left="int" right="" name="wid" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="showInputMethod" fullname="InputMethods::showInputMethod" href="inputmethods.html#showInputMethod" location="inputmethods.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="showInputMethod(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="showInputMethod" fullname="InputMethods::showInputMethod" href="inputmethods.html#showInputMethod-2" location="inputmethods.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="showInputMethod()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hideInputMethod" fullname="InputMethods::hideInputMethod" href="inputmethods.html#hideInputMethod" location="inputmethods.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="hideInputMethod()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNextInputMethod" fullname="InputMethods::setNextInputMethod" href="inputmethods.html#setNextInputMethod" location="inputmethods.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setNextInputMethod()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="changeInputMethod" fullname="InputMethods::changeInputMethod" href="inputmethods.html#changeInputMethod" location="inputmethods.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="changeInputMethod()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setType" fullname="InputMethods::setType" href="inputmethods.html#setType" location="inputmethods.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setType(IMType type)">
                <parameter left="IMType" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="inputToggled" fullname="InputMethods::inputToggled" href="inputmethods.html#inputToggled" location="inputmethods.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="inputToggled(bool on)">
                <parameter left="bool" right="" name="on" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="visibilityChanged" fullname="InputMethods::visibilityChanged" href="inputmethods.html#visibilityChanged" location="inputmethods.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="visibilityChanged(bool visible)">
                <parameter left="bool" right="" name="visible" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="InputMethodService" href="inputmethodservice.html" location="inputmethods.h" bases="QtopiaIpcAdaptor" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="inputMethodHint" fullname="InputMethodService::inputMethodHint" href="inputmethodservice.html#inputMethodHint" location="inputmethods.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="inputMethodHint(int hint, int windowId)">
                <parameter left="int" right="" name="hint" default=""></parameter>
                <parameter left="int" right="" name="windowId" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="inputMethodHint" fullname="InputMethodService::inputMethodHint" href="inputmethodservice.html#inputMethodHint-2" location="inputmethods.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="inputMethodHint(const QString &amp; hint, int windowId)">
                <parameter left="const QString &amp;" right="" name="hint" default=""></parameter>
                <parameter left="int" right="" name="windowId" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="inputMethodPasswordHint" fullname="InputMethodService::inputMethodPasswordHint" href="inputmethodservice.html#inputMethodPasswordHint" location="inputmethods.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="inputMethodPasswordHint(bool passwordFlag, int windowId)">
                <parameter left="bool" right="" name="passwordFlag" default=""></parameter>
                <parameter left="int" right="" name="windowId" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hideInputMethod" fullname="InputMethodService::hideInputMethod" href="inputmethodservice.html#hideInputMethod" location="inputmethods.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="hideInputMethod()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="showInputMethod" fullname="InputMethodService::showInputMethod" href="inputmethodservice.html#showInputMethod" location="inputmethods.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="showInputMethod()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setInputMethod" fullname="InputMethodService::setInputMethod" href="inputmethodservice.html#setInputMethod" location="inputmethods.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setInputMethod(const QString &amp; inputMethodName)">
                <parameter left="const QString &amp;" right="" name="inputMethodName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNextInputMethod" fullname="InputMethodService::setNextInputMethod" href="inputmethodservice.html#setNextInputMethod" location="inputmethods.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setNextInputMethod()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="changeInputMethod" fullname="InputMethodService::changeInputMethod" href="inputmethodservice.html#changeInputMethod" location="inputmethods.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="changeInputMethod()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QPhoneProfileProvider" href="qphoneprofileprovider.html" location="qphoneprofileprovider.h" bases="QObject" module=""></class>
        <class access="public" threadsafety="unspecified" status="main" name="QWaitWidget" href="qwaitwidget.html" location="qwaitwidget.h" bases="QDialog" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="wasCancelled" fullname="QWaitWidget::wasCancelled" href="qwaitwidget.html#wasCancelled-prop" location="qwaitwidget.h" type="bool">
                <getter name="wasCancelled"></getter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="cancelEnabled" fullname="QWaitWidget::cancelEnabled" href="qwaitwidget.html#cancelEnabled-prop" location="qwaitwidget.h" type="bool">
                <setter name="setCancelEnabled"></setter>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QWaitWidget" fullname="QWaitWidget::QWaitWidget" href="qwaitwidget.html#QWaitWidget" location="qwaitwidget.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QWaitWidget(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QWaitWidget" fullname="QWaitWidget::~QWaitWidget" href="qwaitwidget.html#dtor.QWaitWidget" location="qwaitwidget.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QWaitWidget()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="wasCancelled" fullname="QWaitWidget::wasCancelled" href="qwaitwidget.html#wasCancelled-prop" location="qwaitwidget.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="wasCancelled" type="bool" signature="wasCancelled() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="show" fullname="QWaitWidget::show" href="qwaitwidget.html#show" location="qwaitwidget.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="show()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hide" fullname="QWaitWidget::hide" href="qwaitwidget.html#hide" location="qwaitwidget.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="hide()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setText" fullname="QWaitWidget::setText" href="qwaitwidget.html#setText" location="qwaitwidget.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setText(const QString &amp; label)">
                <parameter left="const QString &amp;" right="" name="label" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setColor" fullname="QWaitWidget::setColor" href="qwaitwidget.html#setColor" location="qwaitwidget.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setColor(const QColor &amp; col)">
                <parameter left="const QColor &amp;" right="" name="col" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExpiryTime" fullname="QWaitWidget::setExpiryTime" href="qwaitwidget.html#setExpiryTime" location="qwaitwidget.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setExpiryTime(int msec)">
                <parameter left="int" right="" name="msec" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCancelEnabled" fullname="QWaitWidget::setCancelEnabled" href="qwaitwidget.html#cancelEnabled-prop" location="qwaitwidget.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="cancelEnabled" type="void" signature="setCancelEnabled(bool enabled)">
                <parameter left="bool" right="" name="enabled" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancelled" fullname="QWaitWidget::cancelled" href="qwaitwidget.html#cancelled" location="qwaitwidget.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="cancelled()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QAudioOutput" href="qaudiooutput.html" location="qaudiooutput.h" bases="QIODevice" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioOutput" fullname="QAudioOutput::QAudioOutput" href="qaudiooutput.html#QAudioOutput" location="qaudiooutput_alsa.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAudioOutput(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioOutput" fullname="QAudioOutput::QAudioOutput" href="qaudiooutput.html#QAudioOutput-2" location="qaudiooutput_alsa.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QAudioOutput(const QByteArray &amp; device, QObject * parent)">
                <parameter left="const QByteArray &amp;" right="" name="device" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAudioOutput" fullname="QAudioOutput::~QAudioOutput" href="qaudiooutput.html#dtor.QAudioOutput" location="qaudiooutput_alsa.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAudioOutput()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frequency" fullname="QAudioOutput::frequency" href="qaudiooutput.html#frequency" location="qaudiooutput_alsa.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="frequency() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFrequency" fullname="QAudioOutput::setFrequency" href="qaudiooutput.html#setFrequency" location="qaudiooutput_alsa.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFrequency(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="channels" fullname="QAudioOutput::channels" href="qaudiooutput.html#channels" location="qaudiooutput_alsa.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="channels() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setChannels" fullname="QAudioOutput::setChannels" href="qaudiooutput.html#setChannels" location="qaudiooutput_alsa.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setChannels(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bitsPerSample" fullname="QAudioOutput::bitsPerSample" href="qaudiooutput.html#bitsPerSample" location="qaudiooutput_alsa.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="bitsPerSample() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBitsPerSample" fullname="QAudioOutput::setBitsPerSample" href="qaudiooutput.html#setBitsPerSample" location="qaudiooutput_alsa.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBitsPerSample(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="open" fullname="QAudioOutput::open" href="qaudiooutput.html#open" location="qaudiooutput_alsa.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="open(QIODevice::OpenMode mode)">
                <parameter left="QIODevice::OpenMode" right="" name="mode" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="close" fullname="QAudioOutput::close" href="qaudiooutput.html#close" location="qaudiooutput_alsa.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="close()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSequential" fullname="QAudioOutput::isSequential" href="qaudiooutput.html#isSequential" location="qaudiooutput_alsa.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSequential() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="readData" fullname="QAudioOutput::readData" href="qaudiooutput.html#readData" location="qaudiooutput_alsa.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="qint64" signature="readData(char * data, qint64 maxlen)">
                <parameter left="char *" right="" name="data" default=""></parameter>
                <parameter left="qint64" right="" name="maxlen" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="writeData" fullname="QAudioOutput::writeData" href="qaudiooutput.html#writeData" location="qaudiooutput_alsa.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="qint64" signature="writeData(const char * data, qint64 len)">
                <parameter left="const char *" right="" name="data" default=""></parameter>
                <parameter left="qint64" right="" name="len" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPluginManager" href="qpluginmanager.html" location="qpluginmanager.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QPluginManager" fullname="QPluginManager::QPluginManager" href="qpluginmanager.html#QPluginManager" location="qpluginmanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPluginManager(const QString &amp; type, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPluginManager" fullname="QPluginManager::~QPluginManager" href="qpluginmanager.html#dtor.QPluginManager" location="qpluginmanager.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPluginManager()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QPluginManager::clear" href="qpluginmanager.html#clear" location="qpluginmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="list" fullname="QPluginManager::list" href="qpluginmanager.html#list" location="qpluginmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QStringList &amp;" signature="list() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disabledList" fullname="QPluginManager::disabledList" href="qpluginmanager.html#disabledList" location="qpluginmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QStringList &amp;" signature="disabledList() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="instance" fullname="QPluginManager::instance" href="qpluginmanager.html#instance" location="qpluginmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QObject *" signature="instance(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEnabled" fullname="QPluginManager::setEnabled" href="qpluginmanager.html#setEnabled" location="qpluginmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setEnabled(const QString &amp; name, bool enabled)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="bool" right="" name="enabled" default="true"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEnabled" fullname="QPluginManager::isEnabled" href="qpluginmanager.html#isEnabled" location="qpluginmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEnabled(const QString &amp; name) const">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="inSafeMode" fullname="QPluginManager::inSafeMode" href="qpluginmanager.html#inSafeMode" location="qpluginmanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="inSafeMode()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMailId" href="qmailid.html" location="qmailid.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailId" fullname="QMailId::QMailId" href="qmailid.html#QMailId" location="qmailid.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMailId()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailId" fullname="QMailId::QMailId" href="qmailid.html#QMailId-2" location="qmailid.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMailId(const quint64 &amp; id)">
                <parameter left="const quint64 &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailId" fullname="QMailId::QMailId" href="qmailid.html#QMailId-3" location="qmailid.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMailId(const QMailId &amp; other)">
                <parameter left="const QMailId &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMailId" fullname="QMailId::~QMailId" href="qmailid.html#dtor.QMailId" location="qmailid.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMailId()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QMailId::isValid" href="qmailid.html#isValid" location="qmailid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator QVariant" fullname="QMailId::operator QVariant" href="qmailid.html#operator QVariant" location="qmailid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="" signature="operator QVariant() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QMailId::operator!=" href="qmailid.html#operator!=" location="qmailid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QMailId &amp; other) const">
                <parameter left="const QMailId &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QMailId::operator==" href="qmailid.html#operator==" location="qmailid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QMailId &amp; other) const">
                <parameter left="const QMailId &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QMailId::operator=" href="qmailid.html#operator=" location="qmailid.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMailId &amp;" signature="operator=(const QMailId &amp; other)">
                <parameter left="const QMailId &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;" fullname="QMailId::operator&lt;" href="qmailid.html#operator&lt;" location="qmailid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator&lt;(const QMailId &amp; other) const">
                <parameter left="const QMailId &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serialize" fullname="QMailId::serialize" href="qmailid.html#serialize" location="qmailid.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="serialize(Stream &amp; stream) const">
                <parameter left="Stream &amp;" right="" name="stream" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deserialize" fullname="QMailId::deserialize" href="qmailid.html#deserialize" location="qmailid.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="deserialize(Stream &amp; stream)">
                <parameter left="Stream &amp;" right="" name="stream" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toULongLong" fullname="QMailId::toULongLong" href="qmailid.html#toULongLong" location="qmailid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint64" signature="toULongLong() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QExportedBackground" href="qexportedbackground.html" location="qexportedbackground.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QExportedBackground" fullname="QExportedBackground::QExportedBackground" href="qexportedbackground.html#QExportedBackground" location="qexportedbackground_x11.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QExportedBackground(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QExportedBackground" fullname="QExportedBackground::QExportedBackground" href="qexportedbackground.html#QExportedBackground-2" location="qexportedbackground_x11.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QExportedBackground(int screen, QObject * parent)">
                <parameter left="int" right="" name="screen" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QExportedBackground" fullname="QExportedBackground::~QExportedBackground" href="qexportedbackground.html#dtor.QExportedBackground" location="qexportedbackground_x11.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QExportedBackground()"></function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="wallpaper" fullname="QExportedBackground::wallpaper" href="qexportedbackground.html#wallpaper" location="qexportedbackground_x11.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPixmap" signature="wallpaper() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="background" fullname="QExportedBackground::background" href="qexportedbackground.html#background" location="qexportedbackground_x11.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QPixmap &amp;" signature="background() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAvailable" fullname="QExportedBackground::isAvailable" href="qexportedbackground.html#isAvailable" location="qexportedbackground_x11.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isAvailable() const"></function>
            <function access="public" threadsafety="unspecified" status="deprecated" name="wallpaperChanged" fullname="QExportedBackground::wallpaperChanged" href="qexportedbackground.html#wallpaperChanged" location="qexportedbackground.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="wallpaperChanged()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="changed" fullname="QExportedBackground::changed" href="qexportedbackground.html#changed" location="qexportedbackground.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="changed()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="changed" fullname="QExportedBackground::changed" href="qexportedbackground.html#changed-2" location="qexportedbackground.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="changed(const QPixmap &amp; background)">
                <parameter left="const QPixmap &amp;" right="" name="background" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QCommInterface" href="qcomminterface.html" location="qcomminterface.h" bases="QAbstractIpcInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QCommInterface" fullname="QCommInterface::QCommInterface" href="qcomminterface.html#QCommInterface" location="qcomminterface.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCommInterface(const QString &amp; interfaceName, const QString &amp; service, QObject * parent, QAbstractIpcInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="interfaceName" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="service" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QAbstractIpcInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCommInterface" fullname="QCommInterface::~QCommInterface" href="qcomminterface.html#dtor.QCommInterface" location="qcomminterface.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCommInterface()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="service" fullname="QCommInterface::service" href="qcomminterface.html#service" location="qcomminterface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="service() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaNetworkProperties" href="qtopianetworkproperties.html" location="qtopianetworkinterface.h" bases="QMap" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaNetworkProperties" fullname="QtopiaNetworkProperties::QtopiaNetworkProperties" href="qtopianetworkproperties.html#QtopiaNetworkProperties" location="qtopianetworkinterfaceimpl.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtopiaNetworkProperties()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaNetworkProperties" fullname="QtopiaNetworkProperties::QtopiaNetworkProperties" href="qtopianetworkproperties.html#QtopiaNetworkProperties-2" location="qtopianetworkinterfaceimpl.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QtopiaNetworkProperties(const QtopiaNetworkProperties &amp; other)">
                <parameter left="const QtopiaNetworkProperties &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtopiaNetworkProperties" fullname="QtopiaNetworkProperties::~QtopiaNetworkProperties" href="qtopianetworkproperties.html#dtor.QtopiaNetworkProperties" location="qtopianetworkinterfaceimpl.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtopiaNetworkProperties()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="debugDump" fullname="QtopiaNetworkProperties::debugDump" href="qtopianetworkproperties.html#debugDump" location="qtopianetworkinterface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="debugDump() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaNetworkInterface" href="qtopianetworkinterface.html" location="qtopianetworkinterface.h" bases="QObject" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Status" fullname="QtopiaNetworkInterface::Status" href="qtopianetworkinterface.html#Status-enum" location="qtopianetworkinterface.h">
                <value name="Unknown" value="0"></value>
                <value name="Down" value="1"></value>
                <value name="Up" value="2"></value>
                <value name="Pending" value="3"></value>
                <value name="Demand" value="4"></value>
                <value name="Unavailable" value="100"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QtopiaNetworkInterface::Error" href="qtopianetworkinterface.html#Error-enum" location="qtopianetworkinterface.h">
                <value name="NoError" value="0"></value>
                <value name="NotConnected" value="1"></value>
                <value name="NotInitialized" value="2"></value>
                <value name="NotAvailable" value="3"></value>
                <value name="UnknownError" value="100"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtopiaNetworkInterface" fullname="QtopiaNetworkInterface::~QtopiaNetworkInterface" href="qtopianetworkinterface.html#dtor.QtopiaNetworkInterface" location="qtopianetworkinterface.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtopiaNetworkInterface()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="status" fullname="QtopiaNetworkInterface::status" href="qtopianetworkinterface.html#status" location="qtopianetworkinterface.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="Status" signature="status()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="initialize" fullname="QtopiaNetworkInterface::initialize" href="qtopianetworkinterface.html#initialize" location="qtopianetworkinterface.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="initialize()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QtopiaNetworkInterface::start" href="qtopianetworkinterface.html#start" location="qtopianetworkinterface.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="start(const QVariant options)">
                <parameter left="const QVariant" right="" name="options" default="QVariant()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QtopiaNetworkInterface::stop" href="qtopianetworkinterface.html#stop" location="qtopianetworkinterface.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="stop()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="device" fullname="QtopiaNetworkInterface::device" href="qtopianetworkinterface.html#device" location="qtopianetworkinterface.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="device() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cleanup" fullname="QtopiaNetworkInterface::cleanup" href="qtopianetworkinterface.html#cleanup" location="qtopianetworkinterface.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="cleanup()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QtopiaNetworkInterface::type" href="qtopianetworkinterface.html#type" location="qtopianetworkinterface.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QtopiaNetwork::Type" signature="type() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultGateway" fullname="QtopiaNetworkInterface::setDefaultGateway" href="qtopianetworkinterface.html#setDefaultGateway" location="qtopianetworkinterface.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="setDefaultGateway()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="configuration" fullname="QtopiaNetworkInterface::configuration" href="qtopianetworkinterface.html#configuration" location="qtopianetworkinterface.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QtopiaNetworkConfiguration *" signature="configuration()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setProperties" fullname="QtopiaNetworkInterface::setProperties" href="qtopianetworkinterface.html#setProperties" location="qtopianetworkinterface.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setProperties(const QtopiaNetworkProperties &amp; properties)">
                <parameter left="const QtopiaNetworkProperties &amp;" right="" name="properties" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaNetworkConfiguration" href="qtopianetworkconfiguration.html" location="qtopianetworkinterface.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtopiaNetworkConfiguration" fullname="QtopiaNetworkConfiguration::~QtopiaNetworkConfiguration" href="qtopianetworkconfiguration.html#dtor.QtopiaNetworkConfiguration" location="qtopianetworkinterface.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtopiaNetworkConfiguration()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="configFile" fullname="QtopiaNetworkConfiguration::configFile" href="qtopianetworkconfiguration.html#configFile" location="qtopianetworkinterface.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="configFile() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="types" fullname="QtopiaNetworkConfiguration::types" href="qtopianetworkconfiguration.html#types" location="qtopianetworkinterface.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="types() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="configure" fullname="QtopiaNetworkConfiguration::configure" href="qtopianetworkconfiguration.html#configure" location="qtopianetworkinterface.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QDialog *" signature="configure(QWidget * parent, const QString &amp; type)">
                <parameter left="QWidget *" right="" name="parent" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="type" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="property" fullname="QtopiaNetworkConfiguration::property" href="qtopianetworkconfiguration.html#property" location="qtopianetworkinterface.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="property(const QString &amp; key) const">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="getProperties" fullname="QtopiaNetworkConfiguration::getProperties" href="qtopianetworkconfiguration.html#getProperties" location="qtopianetworkinterface.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QtopiaNetworkProperties" signature="getProperties() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="writeProperties" fullname="QtopiaNetworkConfiguration::writeProperties" href="qtopianetworkconfiguration.html#writeProperties" location="qtopianetworkinterface.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="writeProperties(const QtopiaNetworkProperties &amp; properties)">
                <parameter left="const QtopiaNetworkProperties &amp;" right="" name="properties" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaNetworkFactoryIface" href="qtopianetworkfactoryiface.html" location="qtopianetworkinterface.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="network" fullname="QtopiaNetworkFactoryIface::network" href="qtopianetworkfactoryiface.html#network" location="qtopianetworkinterface.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QPointer&lt;QtopiaNetworkInterface&gt;" signature="network(const QString &amp; handle)">
                <parameter left="const QString &amp;" right="" name="handle" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QtopiaNetworkFactoryIface::type" href="qtopianetworkfactoryiface.html#type" location="qtopianetworkinterface.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QtopiaNetwork::Type" signature="type() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="customID" fullname="QtopiaNetworkFactoryIface::customID" href="qtopianetworkfactoryiface.html#customID" location="qtopianetworkinterface.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="customID() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaNetworkPlugin" href="qtopianetworkplugin.html" location="qtopianetworkinterface.h" bases="QObject,QtopiaNetworkFactoryIface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QtopiaNetworkPlugin" fullname="QtopiaNetworkPlugin::QtopiaNetworkPlugin" href="qtopianetworkplugin.html#QtopiaNetworkPlugin" location="qtopianetworkinterface.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtopiaNetworkPlugin(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtopiaNetworkPlugin" fullname="QtopiaNetworkPlugin::~QtopiaNetworkPlugin" href="qtopianetworkplugin.html#dtor.QtopiaNetworkPlugin" location="qtopianetworkinterface.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtopiaNetworkPlugin()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QtopiaFeatures" href="qtopiafeatures.html" location="qtopiafeatures.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="setFeature" fullname="QtopiaFeatures::setFeature" href="qtopiafeatures.html#setFeature" location="qtopiafeatures.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setFeature(const QString &amp; feature)">
                <parameter left="const QString &amp;" right="" name="feature" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeFeature" fullname="QtopiaFeatures::removeFeature" href="qtopiafeatures.html#removeFeature" location="qtopiafeatures.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="removeFeature(const QString &amp; feature)">
                <parameter left="const QString &amp;" right="" name="feature" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasFeature" fullname="QtopiaFeatures::hasFeature" href="qtopiafeatures.html#hasFeature" location="qtopiafeatures.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="hasFeature(const QString &amp; feature)">
                <parameter left="const QString &amp;" right="" name="feature" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QAdviceOfCharge" href="qadviceofcharge.html" location="qadviceofcharge.h" bases="QCommInterface" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAdviceOfCharge" fullname="QAdviceOfCharge::QAdviceOfCharge" href="qadviceofcharge.html#QAdviceOfCharge" location="qadviceofcharge.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAdviceOfCharge(const QString &amp; service, QObject * parent, QCommInterface::Mode mode)">
                <parameter left="const QString &amp;" right="" name="service" default="QString()"></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
                <parameter left="QCommInterface::Mode" right="" name="mode" default="Client"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAdviceOfCharge" fullname="QAdviceOfCharge::~QAdviceOfCharge" href="qadviceofcharge.html#dtor.QAdviceOfCharge" location="qadviceofcharge.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAdviceOfCharge()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestCurrentCallMeter" fullname="QAdviceOfCharge::requestCurrentCallMeter" href="qadviceofcharge.html#requestCurrentCallMeter" location="qadviceofcharge.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="requestCurrentCallMeter()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestAccumulatedCallMeter" fullname="QAdviceOfCharge::requestAccumulatedCallMeter" href="qadviceofcharge.html#requestAccumulatedCallMeter" location="qadviceofcharge.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="requestAccumulatedCallMeter()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestAccumulatedCallMeterMaximum" fullname="QAdviceOfCharge::requestAccumulatedCallMeterMaximum" href="qadviceofcharge.html#requestAccumulatedCallMeterMaximum" location="qadviceofcharge.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="requestAccumulatedCallMeterMaximum()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestPricePerUnit" fullname="QAdviceOfCharge::requestPricePerUnit" href="qadviceofcharge.html#requestPricePerUnit" location="qadviceofcharge.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="requestPricePerUnit()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resetAccumulatedCallMeter" fullname="QAdviceOfCharge::resetAccumulatedCallMeter" href="qadviceofcharge.html#resetAccumulatedCallMeter" location="qadviceofcharge.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="resetAccumulatedCallMeter(const QString &amp; password)">
                <parameter left="const QString &amp;" right="" name="password" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAccumulatedCallMeterMaximum" fullname="QAdviceOfCharge::setAccumulatedCallMeterMaximum" href="qadviceofcharge.html#setAccumulatedCallMeterMaximum" location="qadviceofcharge.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setAccumulatedCallMeterMaximum(int value, const QString &amp; password)">
                <parameter left="int" right="" name="value" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="password" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPricePerUnit" fullname="QAdviceOfCharge::setPricePerUnit" href="qadviceofcharge.html#setPricePerUnit" location="qadviceofcharge.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setPricePerUnit(const QString &amp; currency, const QString &amp; unitPrice, const QString &amp; password)">
                <parameter left="const QString &amp;" right="" name="currency" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="unitPrice" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="password" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentCallMeter" fullname="QAdviceOfCharge::currentCallMeter" href="qadviceofcharge.html#currentCallMeter" location="qadviceofcharge.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="currentCallMeter(int value, bool explicitRequest)">
                <parameter left="int" right="" name="value" default=""></parameter>
                <parameter left="bool" right="" name="explicitRequest" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="accumulatedCallMeter" fullname="QAdviceOfCharge::accumulatedCallMeter" href="qadviceofcharge.html#accumulatedCallMeter" location="qadviceofcharge.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="accumulatedCallMeter(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="accumulatedCallMeterMaximum" fullname="QAdviceOfCharge::accumulatedCallMeterMaximum" href="qadviceofcharge.html#accumulatedCallMeterMaximum" location="qadviceofcharge.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="accumulatedCallMeterMaximum(int value)">
                <parameter left="int" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callMeterMaximumWarning" fullname="QAdviceOfCharge::callMeterMaximumWarning" href="qadviceofcharge.html#callMeterMaximumWarning" location="qadviceofcharge.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="callMeterMaximumWarning()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pricePerUnit" fullname="QAdviceOfCharge::pricePerUnit" href="qadviceofcharge.html#pricePerUnit" location="qadviceofcharge.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="pricePerUnit(const QString &amp; currency, const QString &amp; unitPrice)">
                <parameter left="const QString &amp;" right="" name="currency" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="unitPrice" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resetAccumulatedCallMeterResult" fullname="QAdviceOfCharge::resetAccumulatedCallMeterResult" href="qadviceofcharge.html#resetAccumulatedCallMeterResult" location="qadviceofcharge.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="resetAccumulatedCallMeterResult(QTelephony::Result result)">
                <parameter left="QTelephony::Result" right="" name="result" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAccumulatedCallMeterMaximumResult" fullname="QAdviceOfCharge::setAccumulatedCallMeterMaximumResult" href="qadviceofcharge.html#setAccumulatedCallMeterMaximumResult" location="qadviceofcharge.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="setAccumulatedCallMeterMaximumResult(QTelephony::Result result)">
                <parameter left="QTelephony::Result" right="" name="result" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPricePerUnitResult" fullname="QAdviceOfCharge::setPricePerUnitResult" href="qadviceofcharge.html#setPricePerUnitResult" location="qadviceofcharge.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="setPricePerUnitResult(QTelephony::Result result)">
                <parameter left="QTelephony::Result" right="" name="result" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemVibrateAccessory" href="qmodemvibrateaccessory.html" location="qmodemvibrateaccessory.h" bases="QVibrateAccessoryProvider" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemVibrateAccessory" fullname="QModemVibrateAccessory::QModemVibrateAccessory" href="qmodemvibrateaccessory.html#QModemVibrateAccessory" location="qmodemvibrateaccessory.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemVibrateAccessory(QModemService * service)">
                <parameter left="QModemService *" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemVibrateAccessory" fullname="QModemVibrateAccessory::~QModemVibrateAccessory" href="qmodemvibrateaccessory.html#dtor.QModemVibrateAccessory" location="qmodemvibrateaccessory.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemVibrateAccessory()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVibrateNow" fullname="QModemVibrateAccessory::setVibrateNow" href="qmodemvibrateaccessory.html#setVibrateNow" location="qmodemvibrateaccessory.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setVibrateNow(const bool value)">
                <parameter left="const bool" right="" name="value" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="TestMemoryMonitor" href="testmemorymonitor.html" location="testmemorymonitor.h" bases="MemoryMonitor" module=""></class>
        <class access="public" threadsafety="unspecified" status="main" name="QPhoneProfile" href="qphoneprofile.html" location="qphoneprofile.h" bases="" module="">
            <contents name="activation" title="Activation" level="1"></contents>
            <contents name="associated-settings" title="Associated Settings" level="1"></contents>
            <class access="public" threadsafety="unspecified" status="main" name="Setting" fullname="QPhoneProfile::Setting" href="qphoneprofile-setting.html" location="qphoneprofile.h" bases="" module="">
                <function access="public" threadsafety="unspecified" status="commendable" name="Setting" fullname="QPhoneProfile::Setting::Setting" href="qphoneprofile-setting.html#Setting" location="qphoneprofile.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="Setting()"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="Setting" fullname="QPhoneProfile::Setting::Setting" href="qphoneprofile-setting.html#Setting-2" location="qphoneprofile.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="Setting(const QString &amp; application)">
                    <parameter left="const QString &amp;" right="" name="application" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="Setting" fullname="QPhoneProfile::Setting::Setting" href="qphoneprofile-setting.html#Setting-3" location="qphoneprofile.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="Setting(const Setting &amp; other)">
                    <parameter left="const Setting &amp;" right="" name="other" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QPhoneProfile::Setting::operator=" href="qphoneprofile-setting.html#operator=" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="Setting &amp;" signature="operator=(const Setting &amp; other)">
                    <parameter left="const Setting &amp;" right="" name="other" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QPhoneProfile::Setting::isNull" href="qphoneprofile-setting.html#isNull" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QPhoneProfile::Setting::operator==" href="qphoneprofile-setting.html#operator==" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const Setting &amp; other) const">
                    <parameter left="const Setting &amp;" right="" name="other" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QPhoneProfile::Setting::operator!=" href="qphoneprofile-setting.html#operator!=" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const Setting &amp; other) const">
                    <parameter left="const Setting &amp;" right="" name="other" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="applicationName" fullname="QPhoneProfile::Setting::applicationName" href="qphoneprofile-setting.html#applicationName" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="applicationName() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="description" fullname="QPhoneProfile::Setting::description" href="qphoneprofile-setting.html#description" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="description() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="data" fullname="QPhoneProfile::Setting::data" href="qphoneprofile-setting.html#data" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="data() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="notifyOnChange" fullname="QPhoneProfile::Setting::notifyOnChange" href="qphoneprofile-setting.html#notifyOnChange" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="notifyOnChange() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="setApplicationName" fullname="QPhoneProfile::Setting::setApplicationName" href="qphoneprofile-setting.html#setApplicationName" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setApplicationName(const QString &amp; name)">
                    <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="setDescription" fullname="QPhoneProfile::Setting::setDescription" href="qphoneprofile-setting.html#setDescription" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDescription(const QString &amp; description)">
                    <parameter left="const QString &amp;" right="" name="description" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="setData" fullname="QPhoneProfile::Setting::setData" href="qphoneprofile-setting.html#setData" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setData(const QString &amp; data)">
                    <parameter left="const QString &amp;" right="" name="data" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="setNotifyOnChange" fullname="QPhoneProfile::Setting::setNotifyOnChange" href="qphoneprofile-setting.html#setNotifyOnChange" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setNotifyOnChange(bool notifyOnChange)">
                    <parameter left="bool" right="" name="notifyOnChange" default=""></parameter>
                </function>
            </class>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="Settings" fullname="QPhoneProfile::Settings" href="qphoneprofile.html#Settings-typedef" location="qphoneprofile.h"></typedef>
            <class access="public" threadsafety="unspecified" status="main" name="Schedule" fullname="QPhoneProfile::Schedule" href="qphoneprofile-schedule.html" location="qphoneprofile.h" bases="" module="">
                <function access="public" threadsafety="unspecified" status="commendable" name="Schedule" fullname="QPhoneProfile::Schedule::Schedule" href="qphoneprofile-schedule.html#Schedule" location="qphoneprofile.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="Schedule()"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="Schedule" fullname="QPhoneProfile::Schedule::Schedule" href="qphoneprofile-schedule.html#Schedule-3" location="qphoneprofile.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="Schedule(const Schedule &amp; other)">
                    <parameter left="const Schedule &amp;" right="" name="other" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QPhoneProfile::Schedule::operator=" href="qphoneprofile-schedule.html#operator=" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="Schedule &amp;" signature="operator=(const Schedule &amp; other)">
                    <parameter left="const Schedule &amp;" right="" name="other" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QPhoneProfile::Schedule::operator==" href="qphoneprofile-schedule.html#operator==" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const Schedule &amp; other) const">
                    <parameter left="const Schedule &amp;" right="" name="other" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QPhoneProfile::Schedule::operator!=" href="qphoneprofile-schedule.html#operator!=" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const Schedule &amp; other) const">
                    <parameter left="const Schedule &amp;" right="" name="other" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="isActive" fullname="QPhoneProfile::Schedule::isActive" href="qphoneprofile-schedule.html#isActive" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isActive() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="setActive" fullname="QPhoneProfile::Schedule::setActive" href="qphoneprofile-schedule.html#setActive" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setActive(bool active)">
                    <parameter left="bool" right="" name="active" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="time" fullname="QPhoneProfile::Schedule::time" href="qphoneprofile-schedule.html#time" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QTime" signature="time() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="setTime" fullname="QPhoneProfile::Schedule::setTime" href="qphoneprofile-schedule.html#setTime" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTime(const QTime &amp; time)">
                    <parameter left="const QTime &amp;" right="" name="time" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="scheduledOnDays" fullname="QPhoneProfile::Schedule::scheduledOnDays" href="qphoneprofile-schedule.html#scheduledOnDays" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;Qt::DayOfWeek&gt;" signature="scheduledOnDays() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="scheduledOnDay" fullname="QPhoneProfile::Schedule::scheduledOnDay" href="qphoneprofile-schedule.html#scheduledOnDay" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="scheduledOnDay(Qt::DayOfWeek day) const">
                    <parameter left="Qt::DayOfWeek" right="" name="day" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="setScheduledDay" fullname="QPhoneProfile::Schedule::setScheduledDay" href="qphoneprofile-schedule.html#setScheduledDay" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setScheduledDay(Qt::DayOfWeek day)">
                    <parameter left="Qt::DayOfWeek" right="" name="day" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="unsetScheduledDay" fullname="QPhoneProfile::Schedule::unsetScheduledDay" href="qphoneprofile-schedule.html#unsetScheduledDay" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="unsetScheduledDay(Qt::DayOfWeek day)">
                    <parameter left="Qt::DayOfWeek" right="" name="day" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="clearScheduledDays" fullname="QPhoneProfile::Schedule::clearScheduledDays" href="qphoneprofile-schedule.html#clearScheduledDays" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearScheduledDays()"></function>
            </class>
            <enum access="public" threadsafety="unspecified" status="commendable" name="AlertType" fullname="QPhoneProfile::AlertType" href="qphoneprofile.html#AlertType-enum" location="qphoneprofile.h">
                <value name="Off" value="0"></value>
                <value name="Once" value="1"></value>
                <value name="Continuous" value="2"></value>
                <value name="Ascending" value="3"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QPhoneProfile" fullname="QPhoneProfile::QPhoneProfile" href="qphoneprofile.html#QPhoneProfile" location="qphoneprofile.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPhoneProfile()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QPhoneProfile" fullname="QPhoneProfile::QPhoneProfile" href="qphoneprofile.html#QPhoneProfile-2" location="qphoneprofile.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QPhoneProfile(int id)">
                <parameter left="int" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QPhoneProfile" fullname="QPhoneProfile::QPhoneProfile" href="qphoneprofile.html#QPhoneProfile-3" location="qphoneprofile.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QPhoneProfile(const QPhoneProfile &amp; other)">
                <parameter left="const QPhoneProfile &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QPhoneProfile::operator=" href="qphoneprofile.html#operator=" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QPhoneProfile &amp;" signature="operator=(const QPhoneProfile &amp; other)">
                <parameter left="const QPhoneProfile &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPhoneProfile" fullname="QPhoneProfile::~QPhoneProfile" href="qphoneprofile.html#dtor.QPhoneProfile" location="qphoneprofile.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPhoneProfile()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QPhoneProfile::operator==" href="qphoneprofile.html#operator==" location="qphoneprofile.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QPhoneProfile &amp; other) const">
                <parameter left="const QPhoneProfile &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QPhoneProfile::operator!=" href="qphoneprofile.html#operator!=" location="qphoneprofile.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QPhoneProfile &amp; other) const">
                <parameter left="const QPhoneProfile &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QPhoneProfile::isNull" href="qphoneprofile.html#isNull" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QPhoneProfile::name" href="qphoneprofile.html#name" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSystemProfile" fullname="QPhoneProfile::isSystemProfile" href="qphoneprofile.html#isSystemProfile" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSystemProfile() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="QPhoneProfile::volume" href="qphoneprofile.html#volume" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="volume() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="vibrate" fullname="QPhoneProfile::vibrate" href="qphoneprofile.html#vibrate" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="vibrate() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callAlert" fullname="QPhoneProfile::callAlert" href="qphoneprofile.html#callAlert" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="AlertType" signature="callAlert() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="msgAlert" fullname="QPhoneProfile::msgAlert" href="qphoneprofile.html#msgAlert" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="AlertType" signature="msgAlert() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="msgAlertDuration" fullname="QPhoneProfile::msgAlertDuration" href="qphoneprofile.html#msgAlertDuration" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="msgAlertDuration() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="autoAnswer" fullname="QPhoneProfile::autoAnswer" href="qphoneprofile.html#autoAnswer" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="autoAnswer() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="callTone" fullname="QPhoneProfile::callTone" href="qphoneprofile.html#callTone" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContent" signature="callTone() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoTone" fullname="QPhoneProfile::videoTone" href="qphoneprofile.html#videoTone" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContent" signature="videoTone() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="systemCallTone" fullname="QPhoneProfile::systemCallTone" href="qphoneprofile.html#systemCallTone" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContent" signature="systemCallTone() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="messageTone" fullname="QPhoneProfile::messageTone" href="qphoneprofile.html#messageTone" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContent" signature="messageTone() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="systemMessageTone" fullname="QPhoneProfile::systemMessageTone" href="qphoneprofile.html#systemMessageTone" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContent" signature="systemMessageTone() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="planeMode" fullname="QPhoneProfile::planeMode" href="qphoneprofile.html#planeMode" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="planeMode() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="applicationSettings" fullname="QPhoneProfile::applicationSettings" href="qphoneprofile.html#applicationSettings" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Settings" signature="applicationSettings() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="applicationSetting" fullname="QPhoneProfile::applicationSetting" href="qphoneprofile.html#applicationSetting" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Setting" signature="applicationSetting(const QString &amp; application) const">
                <parameter left="const QString &amp;" right="" name="application" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="icon" fullname="QPhoneProfile::icon" href="qphoneprofile.html#icon" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="icon() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="schedule" fullname="QPhoneProfile::schedule" href="qphoneprofile.html#schedule" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Schedule" signature="schedule() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QPhoneProfile::id" href="qphoneprofile.html#id" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="id() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="audioProfile" fullname="QPhoneProfile::audioProfile" href="qphoneprofile.html#audioProfile" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="audioProfile() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="speedDialInput" fullname="QPhoneProfile::speedDialInput" href="qphoneprofile.html#speedDialInput" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="speedDialInput() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setId" fullname="QPhoneProfile::setId" href="qphoneprofile.html#setId" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setId(int id)">
                <parameter left="int" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIcon" fullname="QPhoneProfile::setIcon" href="qphoneprofile.html#setIcon" location="qphoneprofile.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIcon(const QString &amp; fileName)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setName" fullname="QPhoneProfile::setName" href="qphoneprofile.html#setName" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setName(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIsSystemProfile" fullname="QPhoneProfile::setIsSystemProfile" href="qphoneprofile.html#setIsSystemProfile" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIsSystemProfile(bool isSystemProfile)">
                <parameter left="bool" right="" name="isSystemProfile" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVolume" fullname="QPhoneProfile::setVolume" href="qphoneprofile.html#setVolume" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVibrate" fullname="QPhoneProfile::setVibrate" href="qphoneprofile.html#setVibrate" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setVibrate(bool vibrate)">
                <parameter left="bool" right="" name="vibrate" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCallAlert" fullname="QPhoneProfile::setCallAlert" href="qphoneprofile.html#setCallAlert" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCallAlert(AlertType type)">
                <parameter left="AlertType" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMsgAlert" fullname="QPhoneProfile::setMsgAlert" href="qphoneprofile.html#setMsgAlert" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMsgAlert(AlertType type)">
                <parameter left="AlertType" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMsgAlertDuration" fullname="QPhoneProfile::setMsgAlertDuration" href="qphoneprofile.html#setMsgAlertDuration" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMsgAlertDuration(int ms)">
                <parameter left="int" right="" name="ms" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAutoAnswer" fullname="QPhoneProfile::setAutoAnswer" href="qphoneprofile.html#setAutoAnswer" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAutoAnswer(bool autoAnswer)">
                <parameter left="bool" right="" name="autoAnswer" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlaneMode" fullname="QPhoneProfile::setPlaneMode" href="qphoneprofile.html#setPlaneMode" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPlaneMode(bool planeMode)">
                <parameter left="bool" right="" name="planeMode" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setApplicationSettings" fullname="QPhoneProfile::setApplicationSettings" href="qphoneprofile.html#setApplicationSettings" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setApplicationSettings(const Settings &amp; settings)">
                <parameter left="const Settings &amp;" right="" name="settings" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setApplicationSetting" fullname="QPhoneProfile::setApplicationSetting" href="qphoneprofile.html#setApplicationSetting" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setApplicationSetting(const Setting &amp; setting)">
                <parameter left="const Setting &amp;" right="" name="setting" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSchedule" fullname="QPhoneProfile::setSchedule" href="qphoneprofile.html#setSchedule" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSchedule(const Schedule &amp; schedule)">
                <parameter left="const Schedule &amp;" right="" name="schedule" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCallTone" fullname="QPhoneProfile::setCallTone" href="qphoneprofile.html#setCallTone" location="qphoneprofile.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCallTone(const QContent &amp; tone)">
                <parameter left="const QContent &amp;" right="" name="tone" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVideoTone" fullname="QPhoneProfile::setVideoTone" href="qphoneprofile.html#setVideoTone" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setVideoTone(const QContent &amp; tone)">
                <parameter left="const QContent &amp;" right="" name="tone" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMessageTone" fullname="QPhoneProfile::setMessageTone" href="qphoneprofile.html#setMessageTone" location="qphoneprofile.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMessageTone(const QContent &amp; tone)">
                <parameter left="const QContent &amp;" right="" name="tone" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAudioProfile" fullname="QPhoneProfile::setAudioProfile" href="qphoneprofile.html#setAudioProfile" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAudioProfile(const QString &amp; audioProfile)">
                <parameter left="const QString &amp;" right="" name="audioProfile" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSpeedDialInput" fullname="QPhoneProfile::setSpeedDialInput" href="qphoneprofile.html#setSpeedDialInput" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSpeedDialInput(const QString &amp; input)">
                <parameter left="const QString &amp;" right="" name="input" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPhoneProfileManager" href="qphoneprofilemanager.html" location="qphoneprofile.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QPhoneProfileManager" fullname="QPhoneProfileManager::QPhoneProfileManager" href="qphoneprofilemanager.html#QPhoneProfileManager" location="qphoneprofile.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QPhoneProfileManager(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPhoneProfileManager" fullname="QPhoneProfileManager::~QPhoneProfileManager" href="qphoneprofilemanager.html#dtor.QPhoneProfileManager" location="qphoneprofile.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPhoneProfileManager()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activeProfile" fullname="QPhoneProfileManager::activeProfile" href="qphoneprofilemanager.html#activeProfile" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPhoneProfile" signature="activeProfile() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activateProfile" fullname="QPhoneProfileManager::activateProfile" href="qphoneprofilemanager.html#activateProfile-3" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="bool" signature="activateProfile(const QPhoneProfile &amp; profile)">
                <parameter left="const QPhoneProfile &amp;" right="" name="profile" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activateProfile" fullname="QPhoneProfileManager::activateProfile" href="qphoneprofilemanager.html#activateProfile" location="qphoneprofile.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="activateProfile(int profile)">
                <parameter left="int" right="" name="profile" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="planeMode" fullname="QPhoneProfileManager::planeMode" href="qphoneprofilemanager.html#planeMode" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="planeMode() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="planeModeOverride" fullname="QPhoneProfileManager::planeModeOverride" href="qphoneprofilemanager.html#planeModeOverride" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="planeModeOverride() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlaneModeOverride" fullname="QPhoneProfileManager::setPlaneModeOverride" href="qphoneprofilemanager.html#setPlaneModeOverride" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPlaneModeOverride(bool mode)">
                <parameter left="bool" right="" name="mode" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="planeModeAvailable" fullname="QPhoneProfileManager::planeModeAvailable" href="qphoneprofilemanager.html#planeModeAvailable" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="planeModeAvailable() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="profiles" fullname="QPhoneProfileManager::profiles" href="qphoneprofilemanager.html#profiles" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QPhoneProfile&gt;" signature="profiles() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="profileIds" fullname="QPhoneProfileManager::profileIds" href="qphoneprofilemanager.html#profileIds" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;int&gt;" signature="profileIds() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="profile" fullname="QPhoneProfileManager::profile" href="qphoneprofilemanager.html#profile" location="qphoneprofile.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPhoneProfile" signature="profile(int id) const">
                <parameter left="int" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveProfile" fullname="QPhoneProfileManager::saveProfile" href="qphoneprofilemanager.html#saveProfile" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="saveProfile(const QPhoneProfile &amp; profile)">
                <parameter left="const QPhoneProfile &amp;" right="" name="profile" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeProfile" fullname="QPhoneProfileManager::removeProfile" href="qphoneprofilemanager.html#removeProfile" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeProfile(const QPhoneProfile &amp; profile)">
                <parameter left="const QPhoneProfile &amp;" right="" name="profile" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="newProfile" fullname="QPhoneProfileManager::newProfile" href="qphoneprofilemanager.html#newProfile" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QPhoneProfile" signature="newProfile()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sync" fullname="QPhoneProfileManager::sync" href="qphoneprofilemanager.html#sync" location="qphoneprofile.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="sync()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="planeModeChanged" fullname="QPhoneProfileManager::planeModeChanged" href="qphoneprofilemanager.html#planeModeChanged" location="qphoneprofile.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="planeModeChanged(bool enabled)">
                <parameter left="bool" right="" name="enabled" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activeProfileChanged" fullname="QPhoneProfileManager::activeProfileChanged" href="qphoneprofilemanager.html#activeProfileChanged" location="qphoneprofile.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="activeProfileChanged(const QPhoneProfile &amp; profile)">
                <parameter left="const QPhoneProfile &amp;" right="" name="profile" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="profileUpdated" fullname="QPhoneProfileManager::profileUpdated" href="qphoneprofilemanager.html#profileUpdated" location="qphoneprofile.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="profileUpdated(const QPhoneProfile &amp; profile)">
                <parameter left="const QPhoneProfile &amp;" right="" name="profile" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="profileAdded" fullname="QPhoneProfileManager::profileAdded" href="qphoneprofilemanager.html#profileAdded" location="qphoneprofile.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="profileAdded(const QPhoneProfile &amp; profile)">
                <parameter left="const QPhoneProfile &amp;" right="" name="profile" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="profileRemoved" fullname="QPhoneProfileManager::profileRemoved" href="qphoneprofilemanager.html#profileRemoved" location="qphoneprofile.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="profileRemoved(const QPhoneProfile &amp; profile)">
                <parameter left="const QPhoneProfile &amp;" right="" name="profile" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QDrmContentLicense" href="qdrmcontentlicense.html" location="qdrmcontentplugin.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QDrmContentLicense" fullname="QDrmContentLicense::QDrmContentLicense" href="qdrmcontentlicense.html#QDrmContentLicense" location="qdrmcontentplugin.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDrmContentLicense()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDrmContentLicense" fullname="QDrmContentLicense::~QDrmContentLicense" href="qdrmcontentlicense.html#dtor.QDrmContentLicense" location="qdrmcontentplugin.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDrmContentLicense()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="content" fullname="QDrmContentLicense::content" href="qdrmcontentlicense.html#content" location="qdrmcontentplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QContent" signature="content() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="permission" fullname="QDrmContentLicense::permission" href="qdrmcontentlicense.html#permission" location="qdrmcontentplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QDrmRights::Permission" signature="permission() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="renderState" fullname="QDrmContentLicense::renderState" href="qdrmcontentlicense.html#renderState" location="qdrmcontentplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QDrmContent::RenderState" signature="renderState() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="renderStateChanged" fullname="QDrmContentLicense::renderStateChanged" href="qdrmcontentlicense.html#renderStateChanged" location="qdrmcontentplugin.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="renderStateChanged(const QContent &amp; content, QDrmContent::RenderState state)">
                <parameter left="const QContent &amp;" right="" name="content" default=""></parameter>
                <parameter left="QDrmContent::RenderState" right="" name="state" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rightsExpired" fullname="QDrmContentLicense::rightsExpired" href="qdrmcontentlicense.html#rightsExpired" location="qdrmcontentplugin.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="rightsExpired(const QContent &amp; content, QDrmRights::Permission permission)">
                <parameter left="const QContent &amp;" right="" name="content" default=""></parameter>
                <parameter left="QDrmRights::Permission" right="" name="permission" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QDrmContentPlugin" href="qdrmcontentplugin.html" location="qdrmcontentplugin.h" bases="QObject,QAbstractFileEngineHandler" module="">
            <contents name="drm-content-recognition-and-installation" title="DRM Content Recognition and Installation" level="1"></contents>
            <contents name="drm-file-access" title="DRM File Access" level="1"></contents>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDrmContentPlugin" fullname="QDrmContentPlugin::QDrmContentPlugin" href="qdrmcontentplugin.html#QDrmContentPlugin" location="qdrmcontentplugin.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDrmContentPlugin(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDrmContentPlugin" fullname="QDrmContentPlugin::~QDrmContentPlugin" href="qdrmcontentplugin.html#dtor.QDrmContentPlugin" location="qdrmcontentplugin.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDrmContentPlugin()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="keys" fullname="QDrmContentPlugin::keys" href="qdrmcontentplugin.html#keys" location="qdrmcontentplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="keys() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="types" fullname="QDrmContentPlugin::types" href="qdrmcontentplugin.html#types" location="qdrmcontentplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="types() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="httpHeaders" fullname="QDrmContentPlugin::httpHeaders" href="qdrmcontentplugin.html#httpHeaders" location="qdrmcontentplugin.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QPair&lt;QString, QString&gt; &gt;" signature="httpHeaders() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isProtected" fullname="QDrmContentPlugin::isProtected" href="qdrmcontentplugin.html#isProtected" location="qdrmcontentplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isProtected(const QString &amp; fileName) const">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="permissions" fullname="QDrmContentPlugin::permissions" href="qdrmcontentplugin.html#permissions" location="qdrmcontentplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QDrmRights::Permissions" signature="permissions(const QString &amp; fileName)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="getRights" fullname="QDrmContentPlugin::getRights" href="qdrmcontentplugin.html#getRights" location="qdrmcontentplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QDrmRights" signature="getRights(const QString &amp; fileName, QDrmRights::Permission permission)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
                <parameter left="QDrmRights::Permission" right="" name="permission" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestContentLicense" fullname="QDrmContentPlugin::requestContentLicense" href="qdrmcontentplugin.html#requestContentLicense" location="qdrmcontentplugin.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QDrmContentLicense *" signature="requestContentLicense(const QContent &amp; content, QDrmRights::Permission permission, QFlags&lt;QDrmContent::LicenseOption&gt; options)">
                <parameter left="const QContent &amp;" right="" name="content" default=""></parameter>
                <parameter left="QDrmRights::Permission" right="" name="permission" default=""></parameter>
                <parameter left="QFlags&lt;QDrmContent::LicenseOption&gt;" right="" name="options" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="createDecoder" fullname="QDrmContentPlugin::createDecoder" href="qdrmcontentplugin.html#createDecoder" location="qdrmcontentplugin.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QIODevice *" signature="createDecoder(const QString &amp; fileName, QDrmRights::Permission permission)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
                <parameter left="QDrmRights::Permission" right="" name="permission" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="canActivate" fullname="QDrmContentPlugin::canActivate" href="qdrmcontentplugin.html#canActivate" location="qdrmcontentplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="canActivate(const QString &amp; fileName)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activate" fullname="QDrmContentPlugin::activate" href="qdrmcontentplugin.html#activate" location="qdrmcontentplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="activate(const QContent &amp; content, QDrmRights::Permission permission, QWidget * focus)">
                <parameter left="const QContent &amp;" right="" name="content" default=""></parameter>
                <parameter left="QDrmRights::Permission" right="" name="permission" default=""></parameter>
                <parameter left="QWidget *" right="" name="focus" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activate" fullname="QDrmContentPlugin::activate" href="qdrmcontentplugin.html#activate-2" location="qdrmcontentplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="activate(const QContent &amp; content, QWidget * focus)">
                <parameter left="const QContent &amp;" right="" name="content" default=""></parameter>
                <parameter left="QWidget *" right="" name="focus" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="reactivate" fullname="QDrmContentPlugin::reactivate" href="qdrmcontentplugin.html#reactivate" location="qdrmcontentplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="reactivate(const QContent &amp; content, QDrmRights::Permission permission, QWidget * focus)">
                <parameter left="const QContent &amp;" right="" name="content" default=""></parameter>
                <parameter left="QDrmRights::Permission" right="" name="permission" default=""></parameter>
                <parameter left="QWidget *" right="" name="focus" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deleteFile" fullname="QDrmContentPlugin::deleteFile" href="qdrmcontentplugin.html#deleteFile" location="qdrmcontentplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="deleteFile(const QString &amp; fileName)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unencryptedSize" fullname="QDrmContentPlugin::unencryptedSize" href="qdrmcontentplugin.html#unencryptedSize" location="qdrmcontentplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="qint64" signature="unencryptedSize(const QString &amp; fileName)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="installContent" fullname="QDrmContentPlugin::installContent" href="qdrmcontentplugin.html#installContent" location="qdrmcontentplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="installContent(const QString &amp; fileName, QContent * content)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
                <parameter left="QContent *" right="" name="content" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateContent" fullname="QDrmContentPlugin::updateContent" href="qdrmcontentplugin.html#updateContent" location="qdrmcontentplugin.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="updateContent(QContent * content)">
                <parameter left="QContent *" right="" name="content" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="thumbnail" fullname="QDrmContentPlugin::thumbnail" href="qdrmcontentplugin.html#thumbnail" location="qdrmcontentplugin.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QPixmap" signature="thumbnail(const QString &amp; fileName, const QSize &amp; size, Qt::AspectRatioMode mode)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
                <parameter left="const QSize &amp;" right="" name="size" default=""></parameter>
                <parameter left="Qt::AspectRatioMode" right="" name="mode" default="Qt::KeepAspectRatio"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="license" fullname="QDrmContentPlugin::license" href="qdrmcontentplugin.html#license" location="qdrmcontentplugin.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDrmContentLicense *" signature="license(const QString &amp; fileName) const">
                <parameter left="const QString &amp;" right="" name="fileName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="initialize" fullname="QDrmContentPlugin::initialize" href="qdrmcontentplugin.html#initialize" location="qdrmcontentplugin.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="initialize()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="registerLicense" fullname="QDrmContentPlugin::registerLicense" href="qdrmcontentplugin.html#registerLicense" location="qdrmcontentplugin.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="registerLicense(QDrmContentLicense * license)">
                <parameter left="QDrmContentLicense *" right="" name="license" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QDrmAgentPlugin" href="qdrmagentplugin.html" location="qdrmcontentplugin.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="createDrmContentPlugin" fullname="QDrmAgentPlugin::createDrmContentPlugin" href="qdrmagentplugin.html#createDrmContentPlugin" location="qdrmcontentplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QDrmContentPlugin *" signature="createDrmContentPlugin()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="createService" fullname="QDrmAgentPlugin::createService" href="qdrmagentplugin.html#createService" location="qdrmcontentplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="createService(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="createManagerWidgets" fullname="QDrmAgentPlugin::createManagerWidgets" href="qdrmagentplugin.html#createManagerWidgets" location="qdrmcontentplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QList&lt;QWidget *&gt;" signature="createManagerWidgets(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QuickExeApplicationLauncher" href="quickexeapplicationlauncher.html" location="quickexeapplicationlauncher.h" bases="ExeApplicationLauncher" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QuickExeApplicationLauncher" fullname="QuickExeApplicationLauncher::QuickExeApplicationLauncher" href="quickexeapplicationlauncher.html#QuickExeApplicationLauncher" location="quickexeapplicationlauncher.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QuickExeApplicationLauncher()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QuickExeApplicationLauncher" fullname="QuickExeApplicationLauncher::~QuickExeApplicationLauncher" href="quickexeapplicationlauncher.html#dtor.QuickExeApplicationLauncher" location="quickexeapplicationlauncher.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QuickExeApplicationLauncher()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QBluetooth" href="qbluetooth.html" location="qbluetoothnamespace.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="DeviceMajor" fullname="QBluetooth::DeviceMajor" href="qbluetooth.html#DeviceMajor-enum" location="qbluetoothnamespace.h">
                <value name="Miscellaneous" value="0"></value>
                <value name="Computer" value="1"></value>
                <value name="Phone" value="2"></value>
                <value name="LANAccess" value="3"></value>
                <value name="AudioVideo" value="4"></value>
                <value name="Peripheral" value="5"></value>
                <value name="Imaging" value="6"></value>
                <value name="Wearable" value="7"></value>
                <value name="Toy" value="8"></value>
                <value name="Uncategorized" value="9"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SDPProfile" fullname="QBluetooth::SDPProfile" href="qbluetooth.html#SDPProfile-enum" location="qbluetoothnamespace.h">
                <value name="SerialPortProfile" value="0"></value>
                <value name="DialupNetworkingProfile" value="1"></value>
                <value name="LanAccessProfile" value="2"></value>
                <value name="FaxProfile" value="3"></value>
                <value name="ObjectPushProfile" value="4"></value>
                <value name="FileTransferProfile" value="5"></value>
                <value name="DirectPrintingProfile" value="6"></value>
                <value name="HeadsetProfile" value="7"></value>
                <value name="HeadsetAudioGatewayProfile" value="8"></value>
                <value name="HandsFreeProfile" value="9"></value>
                <value name="HandsFreeAudioGatewayProfile" value="10"></value>
                <value name="SimAccessProfile" value="11"></value>
                <value name="NetworkAccessPointProfile" value="12"></value>
                <value name="GroupAdHocNetworkProfile" value="13"></value>
                <value name="PersonalAreaNetworkUserProfile" value="14"></value>
                <value name="HardCopyReplacementProfile" value="15"></value>
                <value name="AdvancedAudioSourceProfile" value="16"></value>
                <value name="AdvancedAudioSinkProfile" value="17"></value>
                <value name="AudioVideoRemoteControlProfile" value="18"></value>
                <value name="AudioVideoTargetProfile" value="19"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ServiceClass" fullname="QBluetooth::ServiceClass" href="qbluetooth.html#ServiceClass-enum" location="qbluetoothnamespace.h" typedef="QBluetooth::ServiceClasses">
                <value name="Positioning" value="0x1"></value>
                <value name="Networking" value="0x2"></value>
                <value name="Rendering" value="0x4"></value>
                <value name="Capturing" value="0x8"></value>
                <value name="ObjectTransfer" value="0x10"></value>
                <value name="Audio" value="0x20"></value>
                <value name="Telephony" value="0x40"></value>
                <value name="Information" value="0x80"></value>
                <value name="AllServiceClasses" value="0xffff"></value>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="ServiceClasses" fullname="QBluetooth::ServiceClasses" href="qbluetooth.html#ServiceClasses-typedef" location="qbluetoothnamespace.h" enum="QBluetooth::ServiceClass"></typedef>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SecurityOption" fullname="QBluetooth::SecurityOption" href="qbluetooth.html#SecurityOption-enum" location="qbluetoothnamespace.h" typedef="QBluetooth::SecurityOptions">
                <value name="Authenticated" value="0x1"></value>
                <value name="Encrypted" value="0x2"></value>
                <value name="Secure" value="0x4"></value>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="SecurityOptions" fullname="QBluetooth::SecurityOptions" href="qbluetooth.html#SecurityOptions-typedef" location="qbluetoothnamespace.h" enum="QBluetooth::SecurityOption"></typedef>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="ContextLabel" href="contextlabel.html" location="contextlabel.h" bases="ThemedView" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ContextLabel" fullname="ContextLabel::ContextLabel" href="contextlabel.html#ContextLabel" location="contextlabel.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ContextLabel(QWidget * parent, Qt::WFlags flags)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
                <parameter left="Qt::WFlags" right="" name="flags" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ContextLabel" fullname="ContextLabel::~ContextLabel" href="contextlabel.html#dtor.ContextLabel" location="contextlabel.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~ContextLabel()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="reservedSize" fullname="ContextLabel::reservedSize" href="contextlabel.html#reservedSize" location="contextlabel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSize" signature="reservedSize() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAbstractBrowserScreen" href="qabstractbrowserscreen.html" location="qabstractbrowserscreen.h" bases="QWidget" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAbstractBrowserScreen" fullname="QAbstractBrowserScreen::QAbstractBrowserScreen" href="qabstractbrowserscreen.html#QAbstractBrowserScreen" location="qabstractbrowserscreen.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAbstractBrowserScreen(QWidget * parent, Qt::WFlags flags)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
                <parameter left="Qt::WFlags" right="" name="flags" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentView" fullname="QAbstractBrowserScreen::currentView" href="qabstractbrowserscreen.html#currentView" location="qabstractbrowserscreen.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="currentView() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="viewAvailable" fullname="QAbstractBrowserScreen::viewAvailable" href="qabstractbrowserscreen.html#viewAvailable" location="qabstractbrowserscreen.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="viewAvailable(const QString &amp; view) const">
                <parameter left="const QString &amp;" right="" name="view" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resetToView" fullname="QAbstractBrowserScreen::resetToView" href="qabstractbrowserscreen.html#resetToView" location="qabstractbrowserscreen.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="resetToView(const QString &amp; view)">
                <parameter left="const QString &amp;" right="" name="view" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="moveToView" fullname="QAbstractBrowserScreen::moveToView" href="qabstractbrowserscreen.html#moveToView" location="qabstractbrowserscreen.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="moveToView(const QString &amp; view)">
                <parameter left="const QString &amp;" right="" name="view" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentViewChanged" fullname="QAbstractBrowserScreen::currentViewChanged" href="qabstractbrowserscreen.html#currentViewChanged" location="qabstractbrowserscreen.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="currentViewChanged(const QString &amp; view)">
                <parameter left="const QString &amp;" right="" name="view" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="applicationLaunched" fullname="QAbstractBrowserScreen::applicationLaunched" href="qabstractbrowserscreen.html#applicationLaunched" location="qabstractbrowserscreen.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="applicationLaunched(const QString &amp; application)">
                <parameter left="const QString &amp;" right="" name="application" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="BtFtpServiceTask" href="btftpservicetask.html" location="btftpservice.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="BtFtpServiceTask" fullname="BtFtpServiceTask::BtFtpServiceTask" href="btftpservicetask.html#BtFtpServiceTask" location="btftpservice.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="BtFtpServiceTask(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~BtFtpServiceTask" fullname="BtFtpServiceTask::~BtFtpServiceTask" href="btftpservicetask.html#dtor.BtFtpServiceTask" location="btftpservice.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~BtFtpServiceTask()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QObexPushService" href="qobexpushservice.html" location="qobexpushservice.h" bases="QObject" module="">
            <contents name="handling-socket-disconnections" title="Handling socket disconnections" level="1"></contents>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QObexPushService::State" href="qobexpushservice.html#State-enum" location="qobexpushservice.h">
                <value name="Ready" value="0"></value>
                <value name="Connecting" value="1"></value>
                <value name="Disconnecting" value="2"></value>
                <value name="Streaming" value="3"></value>
                <value name="Closed" value="100"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QObexPushService::Error" href="qobexpushservice.html#Error-enum" location="qobexpushservice.h">
                <value name="NoError" value="0"></value>
                <value name="ConnectionError" value="1"></value>
                <value name="Aborted" value="2"></value>
                <value name="UnknownError" value="100"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QObexPushService" fullname="QObexPushService::QObexPushService" href="qobexpushservice.html#QObexPushService" location="qobexpushservice.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QObexPushService(QIODevice * device, QObject * parent)">
                <parameter left="QIODevice *" right="" name="device" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QObexPushService" fullname="QObexPushService::~QObexPushService" href="qobexpushservice.html#dtor.QObexPushService" location="qobexpushservice.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QObexPushService()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QObexPushService::state" href="qobexpushservice.html#state" location="qobexpushservice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="State" signature="state() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QObexPushService::error" href="qobexpushservice.html#error" location="qobexpushservice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Error" signature="error() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sessionDevice" fullname="QObexPushService::sessionDevice" href="qobexpushservice.html#sessionDevice" location="qobexpushservice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QIODevice *" signature="sessionDevice() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBusinessCard" fullname="QObexPushService::setBusinessCard" href="qobexpushservice.html#setBusinessCard" location="qobexpushservice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBusinessCard(const QByteArray &amp; vCard)">
                <parameter left="const QByteArray &amp;" right="" name="vCard" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="businessCard" fullname="QObexPushService::businessCard" href="qobexpushservice.html#businessCard" location="qobexpushservice.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="businessCard() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentDevice" fullname="QObexPushService::currentDevice" href="qobexpushservice.html#currentDevice" location="qobexpushservice.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QIODevice *" signature="currentDevice() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="abort" fullname="QObexPushService::abort" href="qobexpushservice.html#abort" location="qobexpushservice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="abort()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="acceptFile" fullname="QObexPushService::acceptFile" href="qobexpushservice.html#acceptFile" location="qobexpushservice.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QIODevice *" signature="acceptFile(const QString &amp; name, const QString &amp; type, qint64 size, const QString &amp; description)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
                <parameter left="qint64" right="" name="size" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="description" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="putRequested" fullname="QObexPushService::putRequested" href="qobexpushservice.html#putRequested" location="qobexpushservice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="putRequested(const QString &amp; name, const QString &amp; type, qint64 size, const QString &amp; description)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
                <parameter left="qint64" right="" name="size" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="description" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="businessCardRequested" fullname="QObexPushService::businessCardRequested" href="qobexpushservice.html#businessCardRequested" location="qobexpushservice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="businessCardRequested()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QObexPushService::stateChanged" href="qobexpushservice.html#stateChanged" location="qobexpushservice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QObexPushService::State state)">
                <parameter left="QObexPushService::State" right="" name="state" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dataTransferProgress" fullname="QObexPushService::dataTransferProgress" href="qobexpushservice.html#dataTransferProgress" location="qobexpushservice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="dataTransferProgress(qint64 done, qint64 total)">
                <parameter left="qint64" right="" name="done" default=""></parameter>
                <parameter left="qint64" right="" name="total" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestFinished" fullname="QObexPushService::requestFinished" href="qobexpushservice.html#requestFinished" location="qobexpushservice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="requestFinished(bool error)">
                <parameter left="bool" right="" name="error" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="done" fullname="QObexPushService::done" href="qobexpushservice.html#done" location="qobexpushservice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="done(bool error)">
                <parameter left="bool" right="" name="error" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QModemCallForwarding" href="qmodemcallforwarding.html" location="qmodemcallforwarding.h" bases="QCallForwarding" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QModemCallForwarding" fullname="QModemCallForwarding::QModemCallForwarding" href="qmodemcallforwarding.html#QModemCallForwarding" location="qmodemcallforwarding.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QModemCallForwarding(QModemService * service)">
                <parameter left="QModemService *" right="" name="service" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QModemCallForwarding" fullname="QModemCallForwarding::~QModemCallForwarding" href="qmodemcallforwarding.html#dtor.QModemCallForwarding" location="qmodemcallforwarding.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QModemCallForwarding()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="BluetoothPasskeyAgentTask" href="bluetoothpasskeyagenttask.html" location="btpinhelper.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="BluetoothPasskeyAgentTask" fullname="BluetoothPasskeyAgentTask::BluetoothPasskeyAgentTask" href="bluetoothpasskeyagenttask.html#BluetoothPasskeyAgentTask" location="btpinhelper.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="BluetoothPasskeyAgentTask(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QAtResultParser" href="qatresultparser.html" location="qatresultparser.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAtResultParser" fullname="QAtResultParser::QAtResultParser" href="qatresultparser.html#QAtResultParser" location="qatresultparser.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAtResultParser(const QAtResult &amp; result)">
                <parameter left="const QAtResult &amp;" right="" name="result" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAtResultParser" fullname="QAtResultParser::QAtResultParser" href="qatresultparser.html#QAtResultParser-2" location="qatresultparser.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QAtResultParser(const QString &amp; notification)">
                <parameter left="const QString &amp;" right="" name="notification" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAtResultParser" fullname="QAtResultParser::~QAtResultParser" href="qatresultparser.html#dtor.QAtResultParser" location="qatresultparser.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAtResultParser()"></function>
            <class access="public" threadsafety="unspecified" status="main" name="Node" fullname="QAtResultParser::Node" href="qatresultparser-node.html" location="qatresultparser.h" bases="" module="">
                <function access="public" threadsafety="unspecified" status="commendable" name="Node" fullname="QAtResultParser::Node::Node" href="qatresultparser-node.html#Node" location="qatresultparser.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="Node(const Node &amp; other)">
                    <parameter left="const Node &amp;" right="" name="other" default=""></parameter>
                </function>
                <function access="public" threadsafety="unspecified" status="commendable" name="~Node" fullname="QAtResultParser::Node::~Node" href="qatresultparser-node.html#dtor.Node" location="qatresultparser.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~Node()"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="isNumber" fullname="QAtResultParser::Node::isNumber" href="qatresultparser-node.html#isNumber" location="qatresultparser.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNumber() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="isRange" fullname="QAtResultParser::Node::isRange" href="qatresultparser-node.html#isRange" location="qatresultparser.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isRange() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="isString" fullname="QAtResultParser::Node::isString" href="qatresultparser-node.html#isString" location="qatresultparser.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isString() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="isList" fullname="QAtResultParser::Node::isList" href="qatresultparser-node.html#isList" location="qatresultparser.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isList() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="asNumber" fullname="QAtResultParser::Node::asNumber" href="qatresultparser-node.html#asNumber" location="qatresultparser.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="asNumber() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="asFirst" fullname="QAtResultParser::Node::asFirst" href="qatresultparser-node.html#asFirst" location="qatresultparser.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="asFirst() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="asLast" fullname="QAtResultParser::Node::asLast" href="qatresultparser-node.html#asLast" location="qatresultparser.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="asLast() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="asString" fullname="QAtResultParser::Node::asString" href="qatresultparser-node.html#asString" location="qatresultparser.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="asString() const"></function>
                <function access="public" threadsafety="unspecified" status="commendable" name="asList" fullname="QAtResultParser::Node::asList" href="qatresultparser-node.html#asList" location="qatresultparser.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QAtResultParser::Node&gt;" signature="asList() const"></function>
            </class>
            <function access="public" threadsafety="unspecified" status="commendable" name="reset" fullname="QAtResultParser::reset" href="qatresultparser.html#reset" location="qatresultparser.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="reset()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="next" fullname="QAtResultParser::next" href="qatresultparser.html#next" location="qatresultparser.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="next(const QString &amp; prefix)">
                <parameter left="const QString &amp;" right="" name="prefix" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="line" fullname="QAtResultParser::line" href="qatresultparser.html#line" location="qatresultparser.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="line()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readNumeric" fullname="QAtResultParser::readNumeric" href="qatresultparser.html#readNumeric" location="qatresultparser.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="uint" signature="readNumeric()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readString" fullname="QAtResultParser::readString" href="qatresultparser.html#readString" location="qatresultparser.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="readString()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="skip" fullname="QAtResultParser::skip" href="qatresultparser.html#skip" location="qatresultparser.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="skip()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readNextLine" fullname="QAtResultParser::readNextLine" href="qatresultparser.html#readNextLine" location="qatresultparser.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="readNextLine()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lines" fullname="QAtResultParser::lines" href="qatresultparser.html#lines" location="qatresultparser.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QStringList" signature="lines(const QString &amp; prefix)">
                <parameter left="const QString &amp;" right="" name="prefix" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readList" fullname="QAtResultParser::readList" href="qatresultparser.html#readList" location="qatresultparser.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QList&lt;QAtResultParser::Node&gt;" signature="readList()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="GsmKeyFilter" href="gsmkeyfilter.html" location="gsmkeyfilter.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="GsmKeyFilter" fullname="GsmKeyFilter::GsmKeyFilter" href="gsmkeyfilter.html#GsmKeyFilter" location="gsmkeyfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="GsmKeyFilter(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~GsmKeyFilter" fullname="GsmKeyFilter::~GsmKeyFilter" href="gsmkeyfilter.html#dtor.GsmKeyFilter" location="gsmkeyfilter.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~GsmKeyFilter()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Flag" fullname="GsmKeyFilter::Flag" href="gsmkeyfilter.html#Flag-enum" location="gsmkeyfilter.h" typedef="GsmKeyFilter::Flags">
                <value name="Send" value="( 1&lt;&lt;0 )"></value>
                <value name="Immediate" value="( 1&lt;&lt;1 )"></value>
                <value name="OnCall" value="( 1&lt;&lt;2 )"></value>
                <value name="Incoming" value="( 1&lt;&lt;3 )"></value>
                <value name="BeforeDial" value="( 1&lt;&lt;4 )"></value>
                <value name="TestOnly" value="( 1&lt;&lt;5 )"></value>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="Flags" fullname="GsmKeyFilter::Flags" href="gsmkeyfilter.html#Flags-typedef" location="gsmkeyfilter.h" enum="GsmKeyFilter::Flag"></typedef>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ServiceAction" fullname="GsmKeyFilter::ServiceAction" href="gsmkeyfilter.html#ServiceAction-enum" location="gsmkeyfilter.h">
                <value name="Activate" value="0"></value>
                <value name="Deactivate" value="1"></value>
                <value name="Interrogate" value="2"></value>
                <value name="Registration" value="3"></value>
                <value name="Erasure" value="4"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="GsmKeyFilter::filter" href="gsmkeyfilter.html#filter" location="gsmkeyfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="filter(const QString &amp; digits, QFlags&lt;GsmKeyFilter::Flag&gt; flags)">
                <parameter left="const QString &amp;" right="" name="digits" default=""></parameter>
                <parameter left="QFlags&lt;GsmKeyFilter::Flag&gt;" right="" name="flags" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addAction" fullname="GsmKeyFilter::addAction" href="gsmkeyfilter.html#addAction" location="gsmkeyfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addAction(const QString &amp; digits, QObject * target, const char * slot, QFlags&lt;GsmKeyFilter::Flag&gt; flags)">
                <parameter left="const QString &amp;" right="" name="digits" default=""></parameter>
                <parameter left="QObject *" right="" name="target" default=""></parameter>
                <parameter left="const char *" right="" name="slot" default=""></parameter>
                <parameter left="QFlags&lt;GsmKeyFilter::Flag&gt;" right="" name="flags" default="GsmKeyFilter::Immediate"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addAction" fullname="GsmKeyFilter::addAction" href="gsmkeyfilter.html#addAction-2" location="gsmkeyfilter.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="addAction(const QRegExp &amp; regex, QObject * target, const char * slot, QFlags&lt;GsmKeyFilter::Flag&gt; flags)">
                <parameter left="const QRegExp &amp;" right="" name="regex" default=""></parameter>
                <parameter left="QObject *" right="" name="target" default=""></parameter>
                <parameter left="const char *" right="" name="slot" default=""></parameter>
                <parameter left="QFlags&lt;GsmKeyFilter::Flag&gt;" right="" name="flags" default="GsmKeyFilter::Immediate"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addService" fullname="GsmKeyFilter::addService" href="gsmkeyfilter.html#addService" location="gsmkeyfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addService(const QString &amp; code, QObject * target, const char * slot, QFlags&lt;GsmKeyFilter::Flag&gt; flags)">
                <parameter left="const QString &amp;" right="" name="code" default=""></parameter>
                <parameter left="QObject *" right="" name="target" default=""></parameter>
                <parameter left="const char *" right="" name="slot" default=""></parameter>
                <parameter left="QFlags&lt;GsmKeyFilter::Flag&gt;" right="" name="flags" default="GsmKeyFilter::Send"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBusy" fullname="GsmKeyFilter::setBusy" href="gsmkeyfilter.html#setBusy" location="gsmkeyfilter.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="setBusy()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="releaseHeld" fullname="GsmKeyFilter::releaseHeld" href="gsmkeyfilter.html#releaseHeld" location="gsmkeyfilter.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="releaseHeld()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="releaseActive" fullname="GsmKeyFilter::releaseActive" href="gsmkeyfilter.html#releaseActive" location="gsmkeyfilter.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="releaseActive()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="releaseAllAcceptIncoming" fullname="GsmKeyFilter::releaseAllAcceptIncoming" href="gsmkeyfilter.html#releaseAllAcceptIncoming" location="gsmkeyfilter.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="releaseAllAcceptIncoming()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="release" fullname="GsmKeyFilter::release" href="gsmkeyfilter.html#release" location="gsmkeyfilter.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="release(int call)">
                <parameter left="int" right="" name="call" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activate" fullname="GsmKeyFilter::activate" href="gsmkeyfilter.html#activate" location="gsmkeyfilter.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="activate(int call)">
                <parameter left="int" right="" name="call" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="swap" fullname="GsmKeyFilter::swap" href="gsmkeyfilter.html#swap" location="gsmkeyfilter.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="swap()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="join" fullname="GsmKeyFilter::join" href="gsmkeyfilter.html#join" location="gsmkeyfilter.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="join()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="transfer" fullname="GsmKeyFilter::transfer" href="gsmkeyfilter.html#transfer" location="gsmkeyfilter.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="transfer()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deflect" fullname="GsmKeyFilter::deflect" href="gsmkeyfilter.html#deflect" location="gsmkeyfilter.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="deflect(const QString &amp; number)">
                <parameter left="const QString &amp;" right="" name="number" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaDecoder" href="qmediadecoder.html" location="qmediadecoder.h" bases="QMediaDevice" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaDecoder" fullname="QMediaDecoder::~QMediaDecoder" href="qmediadecoder.html#dtor.QMediaDecoder" location="qmediadecoder.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaDecoder()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QMediaDecoder::start" href="qmediadecoder.html#start" location="qmediadecoder.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="start()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QMediaDecoder::stop" href="qmediadecoder.html#stop" location="qmediadecoder.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="stop()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pause" fullname="QMediaDecoder::pause" href="qmediadecoder.html#pause" location="qmediadecoder.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="pause()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="length" fullname="QMediaDecoder::length" href="qmediadecoder.html#length" location="qmediadecoder.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="quint64" signature="length()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="seek" fullname="QMediaDecoder::seek" href="qmediadecoder.html#seek" location="qmediadecoder.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="seek(qint64 ms)">
                <parameter left="qint64" right="" name="ms" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVolume" fullname="QMediaDecoder::setVolume" href="qmediadecoder.html#setVolume" location="qmediadecoder.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="QMediaDecoder::volume" href="qmediadecoder.html#volume" location="qmediadecoder.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="int" signature="volume()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMuted" fullname="QMediaDecoder::setMuted" href="qmediadecoder.html#setMuted" location="qmediadecoder.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setMuted(bool mute)">
                <parameter left="bool" right="" name="mute" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMuted" fullname="QMediaDecoder::isMuted" href="qmediadecoder.html#isMuted" location="qmediadecoder.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="isMuted()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playerStateChanged" fullname="QMediaDecoder::playerStateChanged" href="qmediadecoder.html#playerStateChanged" location="qmediadecoder.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="playerStateChanged(QtopiaMedia::State state)">
                <parameter left="QtopiaMedia::State" right="" name="state" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="positionChanged" fullname="QMediaDecoder::positionChanged" href="qmediadecoder.html#positionChanged" location="qmediadecoder.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="positionChanged(quint32 ms)">
                <parameter left="quint32" right="" name="ms" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lengthChanged" fullname="QMediaDecoder::lengthChanged" href="qmediadecoder.html#lengthChanged" location="qmediadecoder.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="lengthChanged(quint32 ms)">
                <parameter left="quint32" right="" name="ms" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volumeChanged" fullname="QMediaDecoder::volumeChanged" href="qmediadecoder.html#volumeChanged" location="qmediadecoder.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="volumeChanged(int volume)">
                <parameter left="int" right="" name="volume" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volumeMuted" fullname="QMediaDecoder::volumeMuted" href="qmediadecoder.html#volumeMuted" location="qmediadecoder.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="volumeMuted(bool muted)">
                <parameter left="bool" right="" name="muted" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="VoIPManager" href="voipmanager.html" location="voipmanager.h" bases="QAbstractCallPolicyManager" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="VoIPManager" fullname="VoIPManager::VoIPManager" href="voipmanager.html#VoIPManager" location="voipmanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="VoIPManager(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="instance" fullname="VoIPManager::instance" href="voipmanager.html#instance" location="voipmanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="VoIPManager *" signature="instance()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localPresence" fullname="VoIPManager::localPresence" href="voipmanager.html#localPresence" location="voipmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPresence::Status" signature="localPresence() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="startMonitoring" fullname="VoIPManager::startMonitoring" href="voipmanager.html#startMonitoring" location="voipmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="startMonitoring()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAvailable" fullname="VoIPManager::isAvailable" href="voipmanager.html#isAvailable" location="voipmanager.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="isAvailable(const QString &amp; uri)">
                <parameter left="const QString &amp;" right="" name="uri" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localPresenceChanged" fullname="VoIPManager::localPresenceChanged" href="voipmanager.html#localPresenceChanged" location="voipmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="localPresenceChanged(QPresence::Status status)">
                <parameter left="QPresence::Status" right="" name="status" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="monitoredPresenceChanged" fullname="VoIPManager::monitoredPresenceChanged" href="voipmanager.html#monitoredPresenceChanged" location="voipmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="monitoredPresenceChanged(const QString &amp; uri, bool available)">
                <parameter left="const QString &amp;" right="" name="uri" default=""></parameter>
                <parameter left="bool" right="" name="available" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMailCodec" href="qmailcodec.html" location="qmailcodec.h" bases="" module="">
            <variable access="public" threadsafety="unspecified" status="commendable" name="ChunkCharacters" fullname="QMailCodec::ChunkCharacters" href="qmailcodec.html#ChunkCharacters-var" location="qmailcodec.h" type="const int" static="true"></variable>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMailCodec" fullname="QMailCodec::~QMailCodec" href="qmailcodec.html#dtor.QMailCodec" location="qmailcodec.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMailCodec()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encode" fullname="QMailCodec::encode" href="qmailcodec.html#encode" location="qmailcodec.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="encode(QDataStream &amp; out, QTextStream &amp; in, const QString &amp; charset)">
                <parameter left="QDataStream &amp;" right="" name="out" default=""></parameter>
                <parameter left="QTextStream &amp;" right="" name="in" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="charset" default="&quot;UTF-8&quot;"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decode" fullname="QMailCodec::decode" href="qmailcodec.html#decode" location="qmailcodec.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="decode(QTextStream &amp; out, QDataStream &amp; in, const QString &amp; charset)">
                <parameter left="QTextStream &amp;" right="" name="out" default=""></parameter>
                <parameter left="QDataStream &amp;" right="" name="in" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="charset" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encode" fullname="QMailCodec::encode" href="qmailcodec.html#encode-2" location="qmailcodec.h" virtual="impure" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="encode(QDataStream &amp; out, QDataStream &amp; in)">
                <parameter left="QDataStream &amp;" right="" name="out" default=""></parameter>
                <parameter left="QDataStream &amp;" right="" name="in" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decode" fullname="QMailCodec::decode" href="qmailcodec.html#decode-2" location="qmailcodec.h" virtual="impure" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="decode(QDataStream &amp; out, QDataStream &amp; in)">
                <parameter left="QDataStream &amp;" right="" name="out" default=""></parameter>
                <parameter left="QDataStream &amp;" right="" name="in" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encode" fullname="QMailCodec::encode" href="qmailcodec.html#encode-3" location="qmailcodec.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="QByteArray" signature="encode(const QString &amp; input, const QString &amp; charset)">
                <parameter left="const QString &amp;" right="" name="input" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="charset" default="&quot;UTF-8&quot;"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decode" fullname="QMailCodec::decode" href="qmailcodec.html#decode-3" location="qmailcodec.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="QString" signature="decode(const QByteArray &amp; input, const QString &amp; charset)">
                <parameter left="const QByteArray &amp;" right="" name="input" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="charset" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encode" fullname="QMailCodec::encode" href="qmailcodec.html#encode-4" location="qmailcodec.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="4" type="QByteArray" signature="encode(const QByteArray &amp; input)">
                <parameter left="const QByteArray &amp;" right="" name="input" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="decode" fullname="QMailCodec::decode" href="qmailcodec.html#decode-4" location="qmailcodec.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="4" type="QByteArray" signature="decode(const QByteArray &amp; input)">
                <parameter left="const QByteArray &amp;" right="" name="input" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="copy" fullname="QMailCodec::copy" href="qmailcodec.html#copy" location="qmailcodec.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="copy(QDataStream &amp; out, QDataStream &amp; in)">
                <parameter left="QDataStream &amp;" right="" name="out" default=""></parameter>
                <parameter left="QDataStream &amp;" right="" name="in" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="copy" fullname="QMailCodec::copy" href="qmailcodec.html#copy-2" location="qmailcodec.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="void" signature="copy(QTextStream &amp; out, QTextStream &amp; in)">
                <parameter left="QTextStream &amp;" right="" name="out" default=""></parameter>
                <parameter left="QTextStream &amp;" right="" name="in" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="encodeChunk" fullname="QMailCodec::encodeChunk" href="qmailcodec.html#encodeChunk" location="qmailcodec.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="encodeChunk(QDataStream &amp; out, const unsigned char * input, int length, bool finalChunk)">
                <parameter left="QDataStream &amp;" right="" name="out" default=""></parameter>
                <parameter left="const unsigned char *" right="" name="input" default=""></parameter>
                <parameter left="int" right="" name="length" default=""></parameter>
                <parameter left="bool" right="" name="finalChunk" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="decodeChunk" fullname="QMailCodec::decodeChunk" href="qmailcodec.html#decodeChunk" location="qmailcodec.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="decodeChunk(QDataStream &amp; out, const char * input, int length, bool finalChunk)">
                <parameter left="QDataStream &amp;" right="" name="out" default=""></parameter>
                <parameter left="const char *" right="" name="input" default=""></parameter>
                <parameter left="int" right="" name="length" default=""></parameter>
                <parameter left="bool" right="" name="finalChunk" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMailBase64Codec" href="qmailbase64codec.html" location="qmailcodec.h" bases="QMailCodec" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="ContentType" fullname="QMailBase64Codec::ContentType" href="qmailbase64codec.html#ContentType-enum" location="qmailcodec.h">
                <value name="Text" value="0"></value>
                <value name="Binary" value="1"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailBase64Codec" fullname="QMailBase64Codec::QMailBase64Codec" href="qmailbase64codec.html#QMailBase64Codec" location="qmailcodec.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMailBase64Codec(ContentType content, int maximumLineLength)">
                <parameter left="ContentType" right="" name="content" default=""></parameter>
                <parameter left="int" right="" name="maximumLineLength" default="-1"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMailQuotedPrintableCodec" href="qmailquotedprintablecodec.html" location="qmailcodec.h" bases="QMailCodec" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="ContentType" fullname="QMailQuotedPrintableCodec::ContentType" href="qmailquotedprintablecodec.html#ContentType-enum" location="qmailcodec.h">
                <value name="Text" value="0"></value>
                <value name="Binary" value="1"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ConformanceType" fullname="QMailQuotedPrintableCodec::ConformanceType" href="qmailquotedprintablecodec.html#ConformanceType-enum" location="qmailcodec.h">
                <value name="Rfc2045" value="0"></value>
                <value name="Rfc2047" value="1"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailQuotedPrintableCodec" fullname="QMailQuotedPrintableCodec::QMailQuotedPrintableCodec" href="qmailquotedprintablecodec.html#QMailQuotedPrintableCodec" location="qmailcodec.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMailQuotedPrintableCodec(ContentType content, ConformanceType conformance, int maximumLineLength)">
                <parameter left="ContentType" right="" name="content" default=""></parameter>
                <parameter left="ConformanceType" right="" name="conformance" default=""></parameter>
                <parameter left="int" right="" name="maximumLineLength" default="-1"></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMailPassThroughCodec" href="qmailpassthroughcodec.html" location="qmailcodec.h" bases="QMailCodec" module=""></class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMailLineEndingCodec" href="qmaillineendingcodec.html" location="qmailcodec.h" bases="QMailCodec" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailLineEndingCodec" fullname="QMailLineEndingCodec::QMailLineEndingCodec" href="qmaillineendingcodec.html#QMailLineEndingCodec" location="qmailcodec.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMailLineEndingCodec()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QPimRecord" href="qpimrecord.html" location="qpimrecord.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QPimRecord" fullname="QPimRecord::~QPimRecord" href="qpimrecord.html#dtor.QPimRecord" location="qpimrecord.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QPimRecord()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QPimRecord::operator==" href="qpimrecord.html#operator==" location="qpimrecord.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QPimRecord &amp; other) const">
                <parameter left="const QPimRecord &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QPimRecord::operator!=" href="qpimrecord.html#operator!=" location="qpimrecord.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QPimRecord &amp; other) const">
                <parameter left="const QPimRecord &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCategories" fullname="QPimRecord::setCategories" href="qpimrecord.html#setCategories" location="qpimrecord.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCategories(const QList&lt;QString&gt; &amp; categories)">
                <parameter left="const QList&lt;QString&gt; &amp;" right="" name="categories" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCategories" fullname="QPimRecord::setCategories" href="qpimrecord.html#setCategories-2" location="qpimrecord.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setCategories(const QString &amp; identifier)">
                <parameter left="const QString &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="reassignCategoryId" fullname="QPimRecord::reassignCategoryId" href="qpimrecord.html#reassignCategoryId" location="qpimrecord.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="reassignCategoryId(const QString &amp; oldId, const QString &amp; newId)">
                <parameter left="const QString &amp;" right="" name="oldId" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="newId" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pruneDeadCategories" fullname="QPimRecord::pruneDeadCategories" href="qpimrecord.html#pruneDeadCategories" location="qpimrecord.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="pruneDeadCategories(const QList&lt;QString&gt; &amp; categories)">
                <parameter left="const QList&lt;QString&gt; &amp;" right="" name="categories" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="categories" fullname="QPimRecord::categories" href="qpimrecord.html#categories" location="qpimrecord.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QString&gt;" signature="categories() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="customField" fullname="QPimRecord::customField" href="qpimrecord.html#customField" location="qpimrecord.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="customField(const QString &amp; key) const">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCustomField" fullname="QPimRecord::setCustomField" href="qpimrecord.html#setCustomField" location="qpimrecord.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setCustomField(const QString &amp; key, const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeCustomField" fullname="QPimRecord::removeCustomField" href="qpimrecord.html#removeCustomField" location="qpimrecord.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="removeCustomField(const QString &amp; key)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="customFields" fullname="QPimRecord::customFields" href="qpimrecord.html#customFields" location="qpimrecord.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QString&gt;" signature="customFields() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCustomFields" fullname="QPimRecord::setCustomFields" href="qpimrecord.html#setCustomFields" location="qpimrecord.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCustomFields(const QMap&lt;QString, QString&gt; &amp; fields)">
                <parameter left="const QMap&lt;QString, QString&gt; &amp;" right="" name="fields" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="uid" fullname="QPimRecord::uid" href="qpimrecord.html#uid" location="qpimrecord.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUniqueId" signature="uid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUid" fullname="QPimRecord::setUid" href="qpimrecord.html#setUid" location="qpimrecord.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setUid(const QUniqueId &amp; identifier)">
                <parameter left="const QUniqueId &amp;" right="" name="identifier" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNotes" fullname="QPimRecord::setNotes" href="qpimrecord.html#setNotes" location="qpimrecord.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setNotes(const QString &amp; text)">
                <parameter left="const QString &amp;" right="" name="text" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="notes" fullname="QPimRecord::notes" href="qpimrecord.html#notes" location="qpimrecord.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="notes() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parentDependency" fullname="QPimRecord::parentDependency" href="qpimrecord.html#parentDependency" location="qpimrecord.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUniqueId" signature="parentDependency() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parentDependencyType" fullname="QPimRecord::parentDependencyType" href="qpimrecord.html#parentDependencyType" location="qpimrecord.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="parentDependencyType() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dependentChildrenOfType" fullname="QPimRecord::dependentChildrenOfType" href="qpimrecord.html#dependentChildrenOfType" location="qpimrecord.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QUniqueId&gt;" signature="dependentChildrenOfType(const QString &amp; type) const">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dependentChildren" fullname="QPimRecord::dependentChildren" href="qpimrecord.html#dependentChildren" location="qpimrecord.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QUniqueId&gt;" signature="dependentChildren() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="uidRef" fullname="QPimRecord::uidRef" href="qpimrecord.html#uidRef" location="qpimrecord.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QUniqueId &amp;" signature="uidRef()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="uidRef" fullname="QPimRecord::uidRef" href="qpimrecord.html#uidRef-2" location="qpimrecord.h" virtual="pure" meta="plain" const="true" static="false" overload="true" overload-number="2" type="const QUniqueId &amp;" signature="uidRef() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="categoriesRef" fullname="QPimRecord::categoriesRef" href="qpimrecord.html#categoriesRef" location="qpimrecord.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QList&lt;QString&gt; &amp;" signature="categoriesRef()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="categoriesRef" fullname="QPimRecord::categoriesRef" href="qpimrecord.html#categoriesRef-2" location="qpimrecord.h" virtual="pure" meta="plain" const="true" static="false" overload="true" overload-number="2" type="const QList&lt;QString&gt; &amp;" signature="categoriesRef() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="customFieldsRef" fullname="QPimRecord::customFieldsRef" href="qpimrecord.html#customFieldsRef" location="qpimrecord.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QMap&lt;QString, QString&gt; &amp;" signature="customFieldsRef()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="customFieldsRef" fullname="QPimRecord::customFieldsRef" href="qpimrecord.html#customFieldsRef-2" location="qpimrecord.h" virtual="pure" meta="plain" const="true" static="false" overload="true" overload-number="2" type="const QMap&lt;QString, QString&gt; &amp;" signature="customFieldsRef() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="ThemedSecondaryDisplay" href="themedsecondarydisplay.html" location="secondarythemeddisplay.h" bases="QAbstractSecondaryDisplay" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ThemedSecondaryDisplay" fullname="ThemedSecondaryDisplay::ThemedSecondaryDisplay" href="themedsecondarydisplay.html#ThemedSecondaryDisplay" location="secondarythemeddisplay.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ThemedSecondaryDisplay(QWidget * parent, Qt::WFlags f)">
                <parameter left="QWidget *" right="" name="parent" default="0"></parameter>
                <parameter left="Qt::WFlags" right="" name="f" default="0"></parameter>
            </function>
        </class>
        <function access="public" threadsafety="unspecified" status="commendable" name="qpe_sysBrightnessSteps" href="custom-h.html#qpe_sysBrightnessSteps" location="custom-linux-generic-g++.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" relates="&lt;custom.h&gt;" type="int" signature="qpe_sysBrightnessSteps()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="qpe_setBrightness" href="custom-h.html#qpe_setBrightness" location="custom-linux-generic-g++.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" relates="&lt;custom.h&gt;" type="void" signature="qpe_setBrightness(int bright)">
            <parameter left="int" right="" name="bright" default=""></parameter>
        </function>
        <class access="public" threadsafety="unspecified" status="main" name="QSerialIODevice" href="qserialiodevice.html" location="qserialiodevice.h" bases="QIODevice" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSerialIODevice" fullname="QSerialIODevice::QSerialIODevice" href="qserialiodevice.html#QSerialIODevice" location="qserialiodevice.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSerialIODevice(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSerialIODevice" fullname="QSerialIODevice::~QSerialIODevice" href="qserialiodevice.html#dtor.QSerialIODevice" location="qserialiodevice.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSerialIODevice()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSequential" fullname="QSerialIODevice::isSequential" href="qserialiodevice.html#isSequential" location="qserialiodevice.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSequential() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rate" fullname="QSerialIODevice::rate" href="qserialiodevice.html#rate" location="qserialiodevice.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="int" signature="rate() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dtr" fullname="QSerialIODevice::dtr" href="qserialiodevice.html#dtr" location="qserialiodevice.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="dtr() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDtr" fullname="QSerialIODevice::setDtr" href="qserialiodevice.html#setDtr" location="qserialiodevice.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setDtr(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dsr" fullname="QSerialIODevice::dsr" href="qserialiodevice.html#dsr" location="qserialiodevice.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="dsr() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="carrier" fullname="QSerialIODevice::carrier" href="qserialiodevice.html#carrier" location="qserialiodevice.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="carrier() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCarrier" fullname="QSerialIODevice::setCarrier" href="qserialiodevice.html#setCarrier" location="qserialiodevice.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="setCarrier(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rts" fullname="QSerialIODevice::rts" href="qserialiodevice.html#rts" location="qserialiodevice.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="rts() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRts" fullname="QSerialIODevice::setRts" href="qserialiodevice.html#setRts" location="qserialiodevice.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setRts(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cts" fullname="QSerialIODevice::cts" href="qserialiodevice.html#cts" location="qserialiodevice.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="cts() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="discard" fullname="QSerialIODevice::discard" href="qserialiodevice.html#discard" location="qserialiodevice.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="discard()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForReady" fullname="QSerialIODevice::waitForReady" href="qserialiodevice.html#waitForReady" location="qserialiodevice.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="waitForReady() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="run" fullname="QSerialIODevice::run" href="qserialiodevice.html#run" location="qserialiodevice.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QProcess *" signature="run(const QStringList &amp; arguments, bool addPPPdOptions)">
                <parameter left="const QStringList &amp;" right="" name="arguments" default=""></parameter>
                <parameter left="bool" right="" name="addPPPdOptions" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="atchat" fullname="QSerialIODevice::atchat" href="qserialiodevice.html#atchat" location="qserialiodevice.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QAtChat *" signature="atchat()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="abortDial" fullname="QSerialIODevice::abortDial" href="qserialiodevice.html#abortDial" location="qserialiodevice.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="abortDial()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QSerialIODevice::isValid" href="qserialiodevice.html#isValid" location="qserialiodevice.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dsrChanged" fullname="QSerialIODevice::dsrChanged" href="qserialiodevice.html#dsrChanged" location="qserialiodevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="dsrChanged(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="carrierChanged" fullname="QSerialIODevice::carrierChanged" href="qserialiodevice.html#carrierChanged" location="qserialiodevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="carrierChanged(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="ctsChanged" fullname="QSerialIODevice::ctsChanged" href="qserialiodevice.html#ctsChanged" location="qserialiodevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="ctsChanged(bool value)">
                <parameter left="bool" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="ready" fullname="QSerialIODevice::ready" href="qserialiodevice.html#ready" location="qserialiodevice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="ready()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="internalReadyRead" fullname="QSerialIODevice::internalReadyRead" href="qserialiodevice.html#internalReadyRead" location="qserialiodevice.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="internalReadyRead()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QNullSerialIODevice" href="qnullserialiodevice.html" location="qserialiodevice.h" bases="QSerialIODevice" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QNullSerialIODevice" fullname="QNullSerialIODevice::QNullSerialIODevice" href="qnullserialiodevice.html#QNullSerialIODevice" location="qserialiodevice.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNullSerialIODevice(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNullSerialIODevice" fullname="QNullSerialIODevice::~QNullSerialIODevice" href="qnullserialiodevice.html#dtor.QNullSerialIODevice" location="qserialiodevice.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNullSerialIODevice()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="open" fullname="QNullSerialIODevice::open" href="qnullserialiodevice.html#open" location="qserialiodevice.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="open(OpenMode mode)">
                <parameter left="OpenMode" right="" name="mode" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="close" fullname="QNullSerialIODevice::close" href="qnullserialiodevice.html#close" location="qserialiodevice.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="close()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bytesAvailable" fullname="QNullSerialIODevice::bytesAvailable" href="qnullserialiodevice.html#bytesAvailable" location="qserialiodevice.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="qint64" signature="bytesAvailable() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QNullSerialIODevice::isValid" href="qnullserialiodevice.html#isValid" location="qserialiodevice.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="readData" fullname="QNullSerialIODevice::readData" href="qnullserialiodevice.html#readData" location="qserialiodevice.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="qint64" signature="readData(char * data, qint64 maxlen)">
                <parameter left="char *" right="" name="data" default=""></parameter>
                <parameter left="qint64" right="" name="maxlen" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="writeData" fullname="QNullSerialIODevice::writeData" href="qnullserialiodevice.html#writeData" location="qserialiodevice.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="qint64" signature="writeData(const char * data, qint64 len)">
                <parameter left="const char *" right="" name="data" default=""></parameter>
                <parameter left="qint64" right="" name="len" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QMailTimeStamp" href="qmailtimestamp.html" location="qmailtimestamp.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="currentDateTime" fullname="QMailTimeStamp::currentDateTime" href="qmailtimestamp.html#currentDateTime" location="qmailtimestamp.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMailTimeStamp" signature="currentDateTime()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailTimeStamp" fullname="QMailTimeStamp::QMailTimeStamp" href="qmailtimestamp.html#QMailTimeStamp" location="qmailtimestamp.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMailTimeStamp()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailTimeStamp" fullname="QMailTimeStamp::QMailTimeStamp" href="qmailtimestamp.html#QMailTimeStamp-2" location="qmailtimestamp.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMailTimeStamp(const QString &amp; timeText)">
                <parameter left="const QString &amp;" right="" name="timeText" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMailTimeStamp" fullname="QMailTimeStamp::QMailTimeStamp" href="qmailtimestamp.html#QMailTimeStamp-3" location="qmailtimestamp.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMailTimeStamp(const QDateTime &amp; dateTime)">
                <parameter left="const QDateTime &amp;" right="" name="dateTime" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMailTimeStamp" fullname="QMailTimeStamp::~QMailTimeStamp" href="qmailtimestamp.html#dtor.QMailTimeStamp" location="qmailtimestamp.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMailTimeStamp()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toString" fullname="QMailTimeStamp::toString" href="qmailtimestamp.html#toString" location="qmailtimestamp.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="toString() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toLocalTime" fullname="QMailTimeStamp::toLocalTime" href="qmailtimestamp.html#toLocalTime" location="qmailtimestamp.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="toLocalTime() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toUTC" fullname="QMailTimeStamp::toUTC" href="qmailtimestamp.html#toUTC" location="qmailtimestamp.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="toUTC() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QMailTimeStamp::isNull" href="qmailtimestamp.html#isNull" location="qmailtimestamp.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QMailTimeStamp::isValid" href="qmailtimestamp.html#isValid" location="qmailtimestamp.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QMailTimeStamp::operator==" href="qmailtimestamp.html#operator==" location="qmailtimestamp.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QMailTimeStamp &amp; other) const">
                <parameter left="const QMailTimeStamp &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QMailTimeStamp::operator!=" href="qmailtimestamp.html#operator!=" location="qmailtimestamp.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QMailTimeStamp &amp; other) const">
                <parameter left="const QMailTimeStamp &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;" fullname="QMailTimeStamp::operator&lt;" href="qmailtimestamp.html#operator&lt;" location="qmailtimestamp.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator&lt;(const QMailTimeStamp &amp; other) const">
                <parameter left="const QMailTimeStamp &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;=" fullname="QMailTimeStamp::operator&lt;=" href="qmailtimestamp.html#operator&lt;=" location="qmailtimestamp.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator&lt;=(const QMailTimeStamp &amp; other) const">
                <parameter left="const QMailTimeStamp &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&gt;" fullname="QMailTimeStamp::operator&gt;" href="qmailtimestamp.html#operator&gt;" location="qmailtimestamp.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator&gt;(const QMailTimeStamp &amp; other) const">
                <parameter left="const QMailTimeStamp &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&gt;=" fullname="QMailTimeStamp::operator&gt;=" href="qmailtimestamp.html#operator&gt;=" location="qmailtimestamp.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator&gt;=(const QMailTimeStamp &amp; other) const">
                <parameter left="const QMailTimeStamp &amp;" right="" name="other" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QVPNFactory" href="qvpnfactory.html" location="qvpnfactory.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QVPNFactory" fullname="QVPNFactory::QVPNFactory" href="qvpnfactory.html#QVPNFactory" location="qvpnfactory.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVPNFactory()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="instance" fullname="QVPNFactory::instance" href="qvpnfactory.html#instance" location="qvpnfactory.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QVPNClient *" signature="instance(uint vpnID, QObject * parent)">
                <parameter left="uint" right="" name="vpnID" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="create" fullname="QVPNFactory::create" href="qvpnfactory.html#create" location="qvpnfactory.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QVPNClient *" signature="create(QVPNClient::Type type, QObject * parent)">
                <parameter left="QVPNClient::Type" right="" name="type" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="types" fullname="QVPNFactory::types" href="qvpnfactory.html#types" location="qvpnfactory.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QSet&lt;QVPNClient::Type&gt;" signature="types()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QVPNFactory::name" href="qvpnfactory.html#name" location="qvpnfactory.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="name(uint vpnID)">
                <parameter left="uint" right="" name="vpnID" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="vpnIDs" fullname="QVPNFactory::vpnIDs" href="qvpnfactory.html#vpnIDs" location="qvpnfactory.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QSet&lt;uint&gt;" signature="vpnIDs()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QOtaCharacteristic" href="qotacharacteristic.html" location="qotareader.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOtaCharacteristic" fullname="QOtaCharacteristic::QOtaCharacteristic" href="qotacharacteristic.html#QOtaCharacteristic" location="qotareader.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOtaCharacteristic()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOtaCharacteristic" fullname="QOtaCharacteristic::QOtaCharacteristic" href="qotacharacteristic.html#QOtaCharacteristic-2" location="qotareader.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QOtaCharacteristic(const QOtaCharacteristic &amp; c)">
                <parameter left="const QOtaCharacteristic &amp;" right="" name="c" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QOtaCharacteristic" fullname="QOtaCharacteristic::~QOtaCharacteristic" href="qotacharacteristic.html#dtor.QOtaCharacteristic" location="qotareader.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QOtaCharacteristic()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QOtaCharacteristic::clear" href="qotacharacteristic.html#clear" location="qotareader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QOtaCharacteristic::type" href="qotacharacteristic.html#type" location="qotareader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QString &amp;" signature="type() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setType" fullname="QOtaCharacteristic::setType" href="qotacharacteristic.html#setType" location="qotareader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setType(const QString &amp; type)">
                <parameter left="const QString &amp;" right="" name="type" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parms" fullname="QOtaCharacteristic::parms" href="qotacharacteristic.html#parms" location="qotareader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QOtaParameters &amp;" signature="parms() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addParm" fullname="QOtaCharacteristic::addParm" href="qotacharacteristic.html#addParm" location="qotareader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addParm(const QString &amp; name, const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="children" fullname="QOtaCharacteristic::children" href="qotacharacteristic.html#children" location="qotareader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QOtaCharacteristicList &amp;" signature="children() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addChild" fullname="QOtaCharacteristic::addChild" href="qotacharacteristic.html#addChild" location="qotareader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addChild(QOtaCharacteristic &amp; child)">
                <parameter left="QOtaCharacteristic &amp;" right="" name="child" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QOtaCharacteristic::operator=" href="qotacharacteristic.html#operator=" location="qotareader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QOtaCharacteristic &amp;" signature="operator=(const QOtaCharacteristic &amp; c)">
                <parameter left="const QOtaCharacteristic &amp;" right="" name="c" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QOtaCharacteristicList" href="qotacharacteristiclist.html" location="qotareader.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOtaCharacteristicList" fullname="QOtaCharacteristicList::QOtaCharacteristicList" href="qotacharacteristiclist.html#QOtaCharacteristicList" location="qotareader.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOtaCharacteristicList()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOtaCharacteristicList" fullname="QOtaCharacteristicList::QOtaCharacteristicList" href="qotacharacteristiclist.html#QOtaCharacteristicList-2" location="qotareader.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QOtaCharacteristicList(const QOtaCharacteristicList &amp; list)">
                <parameter left="const QOtaCharacteristicList &amp;" right="" name="list" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QOtaCharacteristicList" fullname="QOtaCharacteristicList::~QOtaCharacteristicList" href="qotacharacteristiclist.html#dtor.QOtaCharacteristicList" location="qotareader.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QOtaCharacteristicList()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toConfig" fullname="QOtaCharacteristicList::toConfig" href="qotacharacteristiclist.html#toConfig" location="qotareader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtopiaNetworkProperties" signature="toConfig() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parameter" fullname="QOtaCharacteristicList::parameter" href="qotacharacteristiclist.html#parameter" location="qotareader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="parameter(const QString &amp; name1) const">
                <parameter left="const QString &amp;" right="" name="name1" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parameter" fullname="QOtaCharacteristicList::parameter" href="qotacharacteristiclist.html#parameter-2" location="qotareader.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QString" signature="parameter(const QString &amp; name1, const QString &amp; name2) const">
                <parameter left="const QString &amp;" right="" name="name1" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="name2" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parameter" fullname="QOtaCharacteristicList::parameter" href="qotacharacteristiclist.html#parameter-3" location="qotareader.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="3" type="QString" signature="parameter(const QString &amp; name1, const QString &amp; name2, const QString &amp; name3) const">
                <parameter left="const QString &amp;" right="" name="name1" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="name2" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="name3" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parameter" fullname="QOtaCharacteristicList::parameter" href="qotacharacteristiclist.html#parameter-4" location="qotareader.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="4" type="QString" signature="parameter(const QString &amp; name1, const QString &amp; name2, const QString &amp; name3, const QString &amp; name4) const">
                <parameter left="const QString &amp;" right="" name="name1" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="name2" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="name3" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="name4" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="appParameter" fullname="QOtaCharacteristicList::appParameter" href="qotacharacteristiclist.html#appParameter" location="qotareader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="appParameter(const QString &amp; app, const QString &amp; name1) const">
                <parameter left="const QString &amp;" right="" name="app" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="name1" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="appParameter" fullname="QOtaCharacteristicList::appParameter" href="qotacharacteristiclist.html#appParameter-2" location="qotareader.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QString" signature="appParameter(const QString &amp; app, const QString &amp; name1, const QString &amp; name2) const">
                <parameter left="const QString &amp;" right="" name="app" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="name1" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="name2" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="appParameter" fullname="QOtaCharacteristicList::appParameter" href="qotacharacteristiclist.html#appParameter-3" location="qotareader.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="3" type="QString" signature="appParameter(const QString &amp; app, const QString &amp; name1, const QString &amp; name2, const QString &amp; name3) const">
                <parameter left="const QString &amp;" right="" name="app" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="name1" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="name2" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="name3" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QOtaReader" href="qotareader.html" location="qotareader.h" bases="QWbXmlReader" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="QOtaType" fullname="QOtaReader::QOtaType" href="qotareader.html#QOtaType-enum" location="qotareader.h">
                <value name="Nokia" value="0"></value>
                <value name="Wap" value="1"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOtaReader" fullname="QOtaReader::QOtaReader" href="qotareader.html#QOtaReader" location="qotareader.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOtaReader(QOtaType type)">
                <parameter left="QOtaType" right="" name="type" default="Nokia"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QOtaReader" fullname="QOtaReader::~QOtaReader" href="qotareader.html#dtor.QOtaReader" location="qotareader.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QOtaReader()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parseCharacteristics" fullname="QOtaReader::parseCharacteristics" href="qotareader.html#parseCharacteristics" location="qotareader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QOtaCharacteristicList *" signature="parseCharacteristics(const QByteArray &amp; input)">
                <parameter left="const QByteArray &amp;" right="" name="input" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parseCharacteristics" fullname="QOtaReader::parseCharacteristics" href="qotareader.html#parseCharacteristics-2" location="qotareader.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="QOtaCharacteristicList *" signature="parseCharacteristics(QIODevice &amp; input)">
                <parameter left="QIODevice &amp;" right="" name="input" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parseCharacteristics" fullname="QOtaReader::parseCharacteristics" href="qotareader.html#parseCharacteristics-3" location="qotareader.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="3" type="QOtaCharacteristicList *" signature="parseCharacteristics(QXmlReader * reader, const QXmlInputSource &amp; input)">
                <parameter left="QXmlReader *" right="" name="reader" default=""></parameter>
                <parameter left="const QXmlInputSource &amp;" right="" name="input" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QSlotInvoker" href="qslotinvoker.html" location="qslotinvoker.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSlotInvoker" fullname="QSlotInvoker::QSlotInvoker" href="qslotinvoker.html#QSlotInvoker" location="qslotinvoker.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSlotInvoker(QObject * receiver, const QByteArray &amp; member, QObject * parent)">
                <parameter left="QObject *" right="" name="receiver" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="member" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSlotInvoker" fullname="QSlotInvoker::~QSlotInvoker" href="qslotinvoker.html#dtor.QSlotInvoker" location="qslotinvoker.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSlotInvoker()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="memberPresent" fullname="QSlotInvoker::memberPresent" href="qslotinvoker.html#memberPresent" location="qslotinvoker.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="memberPresent() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="canInvoke" fullname="QSlotInvoker::canInvoke" href="qslotinvoker.html#canInvoke" location="qslotinvoker.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="canInvoke(int numArgs) const">
                <parameter left="int" right="" name="numArgs" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="receiver" fullname="QSlotInvoker::receiver" href="qslotinvoker.html#receiver" location="qslotinvoker.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QObject *" signature="receiver() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="member" fullname="QSlotInvoker::member" href="qslotinvoker.html#member" location="qslotinvoker.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="member() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parameterTypes" fullname="QSlotInvoker::parameterTypes" href="qslotinvoker.html#parameterTypes" location="qslotinvoker.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int *" signature="parameterTypes() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parameterTypesCount" fullname="QSlotInvoker::parameterTypesCount" href="qslotinvoker.html#parameterTypesCount" location="qslotinvoker.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="parameterTypesCount() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="invoke" fullname="QSlotInvoker::invoke" href="qslotinvoker.html#invoke" location="qslotinvoker.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="QVariant" signature="invoke(const QList&lt;QVariant&gt; &amp; args)">
                <parameter left="const QList&lt;QVariant&gt; &amp;" right="" name="args" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="TimeMonitorTask" href="timemonitortask.html" location="timemonitor.h" bases="QObject" module=""></class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaAbstractControlServer" href="qmediaabstractcontrolserver.html" location="qmediaabstractcontrolserver.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaAbstractControlServer" fullname="QMediaAbstractControlServer::QMediaAbstractControlServer" href="qmediaabstractcontrolserver.html#QMediaAbstractControlServer" location="qmediaabstractcontrolserver.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaAbstractControlServer(QMediaHandle const &amp; handle, QString const &amp; name, QObject * parent)">
                <parameter left="QMediaHandle const &amp;" right="" name="handle" default=""></parameter>
                <parameter left="QString const &amp;" right="" name="name" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaAbstractControlServer" fullname="QMediaAbstractControlServer::~QMediaAbstractControlServer" href="qmediaabstractcontrolserver.html#dtor.QMediaAbstractControlServer" location="qmediaabstractcontrolserver.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaAbstractControlServer()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="controlAvailable" fullname="QMediaAbstractControlServer::controlAvailable" href="qmediaabstractcontrolserver.html#controlAvailable" location="qmediaabstractcontrolserver.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="controlAvailable(QString const &amp; name)">
                <parameter left="QString const &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="controlUnavailable" fullname="QMediaAbstractControlServer::controlUnavailable" href="qmediaabstractcontrolserver.html#controlUnavailable" location="qmediaabstractcontrolserver.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="controlUnavailable(QString const &amp; name)">
                <parameter left="QString const &amp;" right="" name="name" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setValue" fullname="QMediaAbstractControlServer::setValue" href="qmediaabstractcontrolserver.html#setValue" location="qmediaabstractcontrolserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setValue(QString const &amp; name, QVariant const &amp; value)">
                <parameter left="QString const &amp;" right="" name="name" default=""></parameter>
                <parameter left="QVariant const &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="proxyAll" fullname="QMediaAbstractControlServer::proxyAll" href="qmediaabstractcontrolserver.html#proxyAll" location="qmediaabstractcontrolserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="proxyAll()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QIrRemoteDeviceWatcher" href="qirremotedevicewatcher.html" location="qirremotedevicewatcher.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QIrRemoteDeviceWatcher" fullname="QIrRemoteDeviceWatcher::QIrRemoteDeviceWatcher" href="qirremotedevicewatcher.html#QIrRemoteDeviceWatcher" location="qirremotedevicewatcher.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QIrRemoteDeviceWatcher(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QIrRemoteDeviceWatcher" fullname="QIrRemoteDeviceWatcher::~QIrRemoteDeviceWatcher" href="qirremotedevicewatcher.html#dtor.QIrRemoteDeviceWatcher" location="qirremotedevicewatcher.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QIrRemoteDeviceWatcher()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="watch" fullname="QIrRemoteDeviceWatcher::watch" href="qirremotedevicewatcher.html#watch" location="qirremotedevicewatcher.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="watch(int ms, QFlags&lt;QIr::DeviceClass&gt; classes)">
                <parameter left="int" right="" name="ms" default=""></parameter>
                <parameter left="QFlags&lt;QIr::DeviceClass&gt;" right="" name="classes" default="QIr::All"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceFound" fullname="QIrRemoteDeviceWatcher::deviceFound" href="qirremotedevicewatcher.html#deviceFound" location="qirremotedevicewatcher.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="deviceFound()"></function>
        </class>
        <namespace access="public" threadsafety="unspecified" status="commendable" name="StandardDeviceFeatures" href="standarddevicefeatures.html" location="standarddevicefeatures.h" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="disableCameraMonitor" fullname="StandardDeviceFeatures::disableCameraMonitor" href="standarddevicefeatures.html#disableCameraMonitor" location="standarddevicefeatures.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="disableCameraMonitor()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disableClamshellMonitor" fullname="StandardDeviceFeatures::disableClamshellMonitor" href="standarddevicefeatures.html#disableClamshellMonitor" location="standarddevicefeatures.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="disableClamshellMonitor()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disableUITimeValues" fullname="StandardDeviceFeatures::disableUITimeValues" href="standarddevicefeatures.html#disableUITimeValues" location="standarddevicefeatures.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="disableUITimeValues()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disableInputFeatures" fullname="StandardDeviceFeatures::disableInputFeatures" href="standarddevicefeatures.html#disableInputFeatures" location="standarddevicefeatures.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="disableInputFeatures()"></function>
        </namespace>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMailStore" href="qmailstore.html" location="qmailstore.h" bases="QObject" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="ReturnOption" fullname="QMailStore::ReturnOption" href="qmailstore.html#ReturnOption-enum" location="qmailstore.h">
                <value name="ReturnAll" value="0"></value>
                <value name="ReturnDistinct" value="1"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMailStore" fullname="QMailStore::~QMailStore" href="qmailstore.html#dtor.QMailStore" location="qmailstore.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMailStore()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addFolder" fullname="QMailStore::addFolder" href="qmailstore.html#addFolder" location="qmailstore.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="addFolder(QMailFolder * a)">
                <parameter left="QMailFolder *" right="" name="a" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addMessage" fullname="QMailStore::addMessage" href="qmailstore.html#addMessage" location="qmailstore.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="addMessage(QMailMessage * m)">
                <parameter left="QMailMessage *" right="" name="m" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeFolder" fullname="QMailStore::removeFolder" href="qmailstore.html#removeFolder" location="qmailstore.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeFolder(const QMailId &amp; id)">
                <parameter left="const QMailId &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeMessage" fullname="QMailStore::removeMessage" href="qmailstore.html#removeMessage" location="qmailstore.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeMessage(const QMailId &amp; id)">
                <parameter left="const QMailId &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateFolder" fullname="QMailStore::updateFolder" href="qmailstore.html#updateFolder" location="qmailstore.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="updateFolder(QMailFolder * f)">
                <parameter left="QMailFolder *" right="" name="f" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateMessage" fullname="QMailStore::updateMessage" href="qmailstore.html#updateMessage" location="qmailstore.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="updateMessage(QMailMessage * m)">
                <parameter left="QMailMessage *" right="" name="m" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateMessages" fullname="QMailStore::updateMessages" href="qmailstore.html#updateMessages" location="qmailstore.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="updateMessages(const QMailMessageKey &amp; key, const QMailMessageKey::Properties &amp; properties, const QMailMessage &amp; data)">
                <parameter left="const QMailMessageKey &amp;" right="" name="key" default=""></parameter>
                <parameter left="const QMailMessageKey::Properties &amp;" right="" name="properties" default=""></parameter>
                <parameter left="const QMailMessage &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateMessages" fullname="QMailStore::updateMessages" href="qmailstore.html#updateMessages-2" location="qmailstore.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="updateMessages(const QMailMessageKey &amp; key, const QMailMessage::Status status, bool set)">
                <parameter left="const QMailMessageKey &amp;" right="" name="key" default=""></parameter>
                <parameter left="const QMailMessage::Status" right="" name="status" default=""></parameter>
                <parameter left="bool" right="" name="set" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="countFolders" fullname="QMailStore::countFolders" href="qmailstore.html#countFolders" location="qmailstore.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="countFolders(const QMailFolderKey &amp; key) const">
                <parameter left="const QMailFolderKey &amp;" right="" name="key" default="QMailFolderKey()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="countMessages" fullname="QMailStore::countMessages" href="qmailstore.html#countMessages" location="qmailstore.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="countMessages(const QMailMessageKey &amp; key) const">
                <parameter left="const QMailMessageKey &amp;" right="" name="key" default="QMailMessageKey()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sizeOfMessages" fullname="QMailStore::sizeOfMessages" href="qmailstore.html#sizeOfMessages" location="qmailstore.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="sizeOfMessages(const QMailMessageKey &amp; key) const">
                <parameter left="const QMailMessageKey &amp;" right="" name="key" default="QMailMessageKey()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="queryFolders" fullname="QMailStore::queryFolders" href="qmailstore.html#queryFolders" location="qmailstore.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailIdList" signature="queryFolders(const QMailFolderKey &amp; key, const QMailFolderSortKey &amp; sortKey) const">
                <parameter left="const QMailFolderKey &amp;" right="" name="key" default="QMailFolderKey()"></parameter>
                <parameter left="const QMailFolderSortKey &amp;" right="" name="sortKey" default="QMailFolderSortKey()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="queryMessages" fullname="QMailStore::queryMessages" href="qmailstore.html#queryMessages" location="qmailstore.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailIdList" signature="queryMessages(const QMailMessageKey &amp; key, const QMailMessageSortKey &amp; sortKey) const">
                <parameter left="const QMailMessageKey &amp;" right="" name="key" default="QMailMessageKey()"></parameter>
                <parameter left="const QMailMessageSortKey &amp;" right="" name="sortKey" default="QMailMessageSortKey()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="folder" fullname="QMailStore::folder" href="qmailstore.html#folder" location="qmailstore.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailFolder" signature="folder(const QMailId &amp; id) const">
                <parameter left="const QMailId &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="message" fullname="QMailStore::message" href="qmailstore.html#message" location="qmailstore.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailMessage" signature="message(const QMailId &amp; id) const">
                <parameter left="const QMailId &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="message" fullname="QMailStore::message" href="qmailstore.html#message-2" location="qmailstore.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QMailMessage" signature="message(const QString &amp; uid, const QString &amp; account) const">
                <parameter left="const QString &amp;" right="" name="uid" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="account" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="messageHeader" fullname="QMailStore::messageHeader" href="qmailstore.html#messageHeader" location="qmailstore.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailMessage" signature="messageHeader(const QMailId &amp; id) const">
                <parameter left="const QMailId &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="messageHeader" fullname="QMailStore::messageHeader" href="qmailstore.html#messageHeader-2" location="qmailstore.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QMailMessage" signature="messageHeader(const QString &amp; uid, const QString &amp; account) const">
                <parameter left="const QString &amp;" right="" name="uid" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="account" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="messageHeaders" fullname="QMailStore::messageHeaders" href="qmailstore.html#messageHeaders" location="qmailstore.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMailMessageList" signature="messageHeaders(const QMailMessageKey &amp; key, const QMailMessageKey::Properties &amp; properties, const ReturnOption &amp; option) const">
                <parameter left="const QMailMessageKey &amp;" right="" name="key" default=""></parameter>
                <parameter left="const QMailMessageKey::Properties &amp;" right="" name="properties" default=""></parameter>
                <parameter left="const ReturnOption &amp;" right="" name="option" default="ReturnAll"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="instance" fullname="QMailStore::instance" href="qmailstore.html#instance" location="qmailstore.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMailStore *" signature="instance()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="messagesAdded" fullname="QMailStore::messagesAdded" href="qmailstore.html#messagesAdded" location="qmailstore.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="messagesAdded(const QMailIdList &amp; ids)">
                <parameter left="const QMailIdList &amp;" right="" name="ids" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="messagesRemoved" fullname="QMailStore::messagesRemoved" href="qmailstore.html#messagesRemoved" location="qmailstore.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="messagesRemoved(const QMailIdList &amp; ids)">
                <parameter left="const QMailIdList &amp;" right="" name="ids" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="messagesUpdated" fullname="QMailStore::messagesUpdated" href="qmailstore.html#messagesUpdated" location="qmailstore.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="messagesUpdated(const QMailIdList &amp; ids)">
                <parameter left="const QMailIdList &amp;" right="" name="ids" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="foldersAdded" fullname="QMailStore::foldersAdded" href="qmailstore.html#foldersAdded" location="qmailstore.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="foldersAdded(const QMailIdList &amp; ids)">
                <parameter left="const QMailIdList &amp;" right="" name="ids" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="foldersRemoved" fullname="QMailStore::foldersRemoved" href="qmailstore.html#foldersRemoved" location="qmailstore.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="foldersRemoved(const QMailIdList &amp; ids)">
                <parameter left="const QMailIdList &amp;" right="" name="ids" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="foldersUpdated" fullname="QMailStore::foldersUpdated" href="qmailstore.html#foldersUpdated" location="qmailstore.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="foldersUpdated(const QMailIdList &amp; ids)">
                <parameter left="const QMailIdList &amp;" right="" name="ids" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QCBSMessage" href="qcbsmessage.html" location="qcbsmessage.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QCBSMessage" fullname="QCBSMessage::QCBSMessage" href="qcbsmessage.html#QCBSMessage" location="qcbsmessage.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCBSMessage()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QCBSMessage" fullname="QCBSMessage::QCBSMessage" href="qcbsmessage.html#QCBSMessage-2" location="qcbsmessage.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QCBSMessage(const QCBSMessage &amp; msg)">
                <parameter left="const QCBSMessage &amp;" right="" name="msg" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCBSMessage" fullname="QCBSMessage::~QCBSMessage" href="qcbsmessage.html#dtor.QCBSMessage" location="qcbsmessage.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCBSMessage()"></function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="GeographicalScope" fullname="QCBSMessage::GeographicalScope" href="qcbsmessage.html#GeographicalScope-enum" location="qcbsmessage.h">
                <value name="CellWide" value="0"></value>
                <value name="PLMNWide" value="1"></value>
                <value name="LocationAreaWide" value="2"></value>
                <value name="CellWide2" value="3"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Language" fullname="QCBSMessage::Language" href="qcbsmessage.html#Language-enum" location="qcbsmessage.h">
                <value name="German" value="0"></value>
                <value name="English" value="1"></value>
                <value name="Italian" value="2"></value>
                <value name="French" value="3"></value>
                <value name="Spanish" value="4"></value>
                <value name="Dutch" value="5"></value>
                <value name="Swedish" value="6"></value>
                <value name="Danish" value="7"></value>
                <value name="Portuguese" value="8"></value>
                <value name="Finnish" value="9"></value>
                <value name="Norwegian" value="10"></value>
                <value name="Greek" value="11"></value>
                <value name="Turkish" value="12"></value>
                <value name="Hungarian" value="13"></value>
                <value name="Polish" value="14"></value>
                <value name="Unspecified" value="15"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QCBSMessage::operator=" href="qcbsmessage.html#operator=" location="qcbsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QCBSMessage &amp;" signature="operator=(const QCBSMessage &amp; msg)">
                <parameter left="const QCBSMessage &amp;" right="" name="msg" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="messageCode" fullname="QCBSMessage::messageCode" href="qcbsmessage.html#messageCode" location="qcbsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="messageCode() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMessageCode" fullname="QCBSMessage::setMessageCode" href="qcbsmessage.html#setMessageCode" location="qcbsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMessageCode(uint num)">
                <parameter left="uint" right="" name="num" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="scope" fullname="QCBSMessage::scope" href="qcbsmessage.html#scope" location="qcbsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QCBSMessage::GeographicalScope" signature="scope() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setScope" fullname="QCBSMessage::setScope" href="qcbsmessage.html#setScope" location="qcbsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setScope(QCBSMessage::GeographicalScope scope)">
                <parameter left="QCBSMessage::GeographicalScope" right="" name="scope" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateNumber" fullname="QCBSMessage::updateNumber" href="qcbsmessage.html#updateNumber" location="qcbsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="updateNumber() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUpdateNumber" fullname="QCBSMessage::setUpdateNumber" href="qcbsmessage.html#setUpdateNumber" location="qcbsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setUpdateNumber(uint num)">
                <parameter left="uint" right="" name="num" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="channel" fullname="QCBSMessage::channel" href="qcbsmessage.html#channel" location="qcbsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="channel() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setChannel" fullname="QCBSMessage::setChannel" href="qcbsmessage.html#setChannel" location="qcbsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setChannel(uint chan)">
                <parameter left="uint" right="" name="chan" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="language" fullname="QCBSMessage::language" href="qcbsmessage.html#language" location="qcbsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QCBSMessage::Language" signature="language() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLanguage" fullname="QCBSMessage::setLanguage" href="qcbsmessage.html#setLanguage" location="qcbsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLanguage(QCBSMessage::Language lang)">
                <parameter left="QCBSMessage::Language" right="" name="lang" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="page" fullname="QCBSMessage::page" href="qcbsmessage.html#page" location="qcbsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="page() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPage" fullname="QCBSMessage::setPage" href="qcbsmessage.html#setPage" location="qcbsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPage(uint page)">
                <parameter left="uint" right="" name="page" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="numPages" fullname="QCBSMessage::numPages" href="qcbsmessage.html#numPages" location="qcbsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="uint" signature="numPages() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNumPages" fullname="QCBSMessage::setNumPages" href="qcbsmessage.html#setNumPages" location="qcbsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setNumPages(uint npages)">
                <parameter left="uint" right="" name="npages" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setText" fullname="QCBSMessage::setText" href="qcbsmessage.html#setText" location="qcbsmessage.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setText(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="text" fullname="QCBSMessage::text" href="qcbsmessage.html#text" location="qcbsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="text() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QCBSMessage::operator==" href="qcbsmessage.html#operator==" location="qcbsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QCBSMessage &amp; other) const">
                <parameter left="const QCBSMessage &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QCBSMessage::operator!=" href="qcbsmessage.html#operator!=" location="qcbsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QCBSMessage &amp; other) const">
                <parameter left="const QCBSMessage &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toPdu" fullname="QCBSMessage::toPdu" href="qcbsmessage.html#toPdu" location="qcbsmessage.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="toPdu() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromPdu" fullname="QCBSMessage::fromPdu" href="qcbsmessage.html#fromPdu" location="qcbsmessage.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QCBSMessage" signature="fromPdu(const QByteArray &amp; pdu)">
                <parameter left="const QByteArray &amp;" right="" name="pdu" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="ExternalAccess" href="externalaccess.html" location="externalaccess.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="ExternalAccess" fullname="ExternalAccess::ExternalAccess" href="externalaccess.html#ExternalAccess" location="externalaccess.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ExternalAccess(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~ExternalAccess" fullname="ExternalAccess::~ExternalAccess" href="externalaccess.html#dtor.ExternalAccess" location="externalaccess.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~ExternalAccess()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="CallForwardingService" href="callforwardingservice.html" location="callforwardingservice.h" bases="QtopiaAbstractService" module=""></class>
        <class access="public" threadsafety="unspecified" status="main" name="QSignalIntercepter" href="qsignalintercepter.html" location="qsignalintercepter.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSignalIntercepter" fullname="QSignalIntercepter::QSignalIntercepter" href="qsignalintercepter.html#QSignalIntercepter" location="qsignalintercepter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSignalIntercepter(QObject * sender, const QByteArray &amp; signal, QObject * parent)">
                <parameter left="QObject *" right="" name="sender" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="signal" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSignalIntercepter" fullname="QSignalIntercepter::~QSignalIntercepter" href="qsignalintercepter.html#dtor.QSignalIntercepter" location="qsignalintercepter.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSignalIntercepter()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sender" fullname="QSignalIntercepter::sender" href="qsignalintercepter.html#sender" location="qsignalintercepter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QObject *" signature="sender() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="signal" fullname="QSignalIntercepter::signal" href="qsignalintercepter.html#signal" location="qsignalintercepter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="signal() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QSignalIntercepter::isValid" href="qsignalintercepter.html#isValid" location="qsignalintercepter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectionTypes" fullname="QSignalIntercepter::connectionTypes" href="qsignalintercepter.html#connectionTypes" location="qsignalintercepter.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="int *" signature="connectionTypes(const QByteArray &amp; member, int &amp; nargs)">
                <parameter left="const QByteArray &amp;" right="" name="member" default=""></parameter>
                <parameter left="int &amp;" right="" name="nargs" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="activated" fullname="QSignalIntercepter::activated" href="qsignalintercepter.html#activated" location="qsignalintercepter.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="activated(const QList&lt;QVariant&gt; &amp; args)">
                <parameter left="const QList&lt;QVariant&gt; &amp;" right="" name="args" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="main" name="QWmlReader" href="qwmlreader.html" location="qwmlreader.h" bases="QWbXmlReader" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QWmlReader" fullname="QWmlReader::QWmlReader" href="qwmlreader.html#QWmlReader" location="qwmlreader.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QWmlReader()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QWmlReader" fullname="QWmlReader::~QWmlReader" href="qwmlreader.html#dtor.QWmlReader" location="qwmlreader.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QWmlReader()"></function>
        </class>
        <page access="public" status="commendable" name="syscust-partitionlayout.html" href="syscust-partitionlayout.html" subtype="page" title="Device Partition Layout" fulltitle="Device Partition Layout" subtitle="" location="syscust-partitionlayout.qdoc">
            <contents name="why-partition-internal-devices" title="Why Partition Internal Devices?" level="1"></contents>
            <contents name="typical-partition-layout" title="Typical Partition Layout" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="ipc/cannonclient" href="ipc-cannonclient.html" subtype="example" title="Tutorial: Qtopia IPC Client" fulltitle="Tutorial: Qtopia IPC Client" subtitle="" location="tut-ipcclient.qdoc">
            <contents name="cannonresultlistener-class-definition" title="CannonResultListener Class Definition" level="1"></contents>
            <contents name="cannonresultlistener-class-implementation" title="CannonResultListener Class Implementation" level="1"></contents>
            <contents name="building-the-cannon-client-application" title="Building the Cannon Client application." level="1"></contents>
            <page access="public" status="commendable" name="ipc/cannonclient/main.cpp" href="ipc-cannonclient-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="ipc/cannonclient/main.cpp" location=""></page>
            <page access="public" status="commendable" name="ipc/cannonclient/cannonclient.pro" href="ipc-cannonclient-cannonclient-pro.html" subtype="file" title="" fulltitle="cannonclient.pro Example File" subtitle="ipc/cannonclient/cannonclient.pro" location=""></page>
        </page>
        <page access="public" status="commendable" name="syscust-hardware.html" href="syscust-hardware.html" subtype="page" title="Hardware Configuration" fulltitle="Hardware Configuration" subtitle="" location="syscust-hardware.qdoc">
            <target name="top"></target>
            <keyword name="devicespecific"></keyword>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="device-specific-code" title="Device-specific Code" level="1"></contents>
            <contents name="removable-media-and-devices" title="Removable Media and Devices" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="sxe-framework.html" href="sxe-framework.html" subtype="page" title="SXE - Framework Overview" fulltitle="SXE - Framework Overview" subtitle="" location="sxe-framework.qdoc"></page>
        <page access="public" status="commendable" name="tut-deviceexample.html" href="tut-deviceexample.html" subtype="page" title="Tutorial: Implementing a Device Plug-in" fulltitle="Tutorial: Implementing a Device Plug-in" subtitle="" location="tut-deviceexample.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="keyboard" title="Keyboard" level="1"></contents>
            <contents name="keyboard-handler" title="Keyboard Handler" level="2"></contents>
            <contents name="keyboard-plug-in" title="Keyboard Plug-in" level="2"></contents>
            <contents name="building-and-testing-the-plug-in" title="Building and testing the plug-in" level="2"></contents>
            <contents name="touchscreen-mouse" title="Touchscreen/Mouse" level="1"></contents>
            <contents name="mouse-handler" title="Mouse Handler" level="2"></contents>
            <contents name="touchscreen-mouse-plug-in" title="Touchscreen/Mouse Plug-in" level="2"></contents>
            <contents name="building-and-testing-the-plug-in" title="Building and testing the plug-in" level="2"></contents>
            <contents name="creating-a-custom-screen-driver" title="Creating a Custom Screen Driver" level="1"></contents>
            <contents name="creating-network-scripts" title="Creating network scripts" level="1"></contents>
            <contents name="running-qtopia-on-the-device-using-qpe-env-and-qpe-sh" title="Running Qtopia on the device using qpe.env and qpe.sh" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="qdawg-node.html" href="qdawg-node.html" subtype="page" title="QDawgNode Class Reference" fulltitle="QDawgNode Class Reference" subtitle="" location="qdawg-node.qdoc">
            <target name="top"></target>
            <target name="letter"></target>
            <target name="isword"></target>
            <target name="islast"></target>
            <target name="next"></target>
            <target name="jump"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="public-members" title="Public Members" level="1"></contents>
            <contents name="detailed-description" title="Detailed Description" level="1"></contents>
            <contents name="member-function-documentation" title="Member Function Documentation" level="1"></contents>
            <contents name="qchar-qdawg-node-letter-const" title="QChar QDawg::Node::letter() const" level="2"></contents>
            <contents name="bool-qdawg-node-isword-const" title="bool QDawg::Node::isWord() const" level="2"></contents>
            <contents name="bool-qdawg-node-islast-const" title="bool QDawg::Node::isLast() const" level="2"></contents>
            <contents name="const-node-qdawg-node-next-const" title="const Node* QDawg::Node::next() const" level="2"></contents>
            <contents name="const-node-qdawg-node-jump-const" title="const Node* QDawg::Node::jump() const" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="modem-simulator.html" href="modem-simulator.html" subtype="page" title="Modem Simulator" fulltitle="Modem Simulator" subtitle="" location="modem-simulator.qdoc">
            <target name="top"></target>
            <keyword name="xml-response-file"></keyword>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="using-the-modem-simulator" title="Using the Modem Simulator" level="1"></contents>
            <contents name="using-the-modem-simulator-on-the-target-device" title="Using the Modem Simulator on the target device" level="1"></contents>
            <contents name="special-phone-numbers" title="Special Phone Numbers" level="1"></contents>
            <contents name="gsm-07-10-multiplexing" title="GSM 07.10 Multiplexing" level="1"></contents>
            <contents name="xml-response-file-format" title="XML Response File Format" level="1"></contents>
            <contents name="sim-application-toolkit-support" title="SIM Application Toolkit Support" level="1"></contents>
            <contents name="sim-file-system-commands" title="SIM File System Commands" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="dissipate2legal.html" href="dissipate2legal.html" subtype="page" title="Dissipate2" fulltitle="Dissipate2" subtitle="" location="dissipate2legal.cpp"></page>
        <page access="public" status="commendable" name="getting-started.html" href="getting-started.html" subtype="page" title="Getting Started" fulltitle="Getting Started" subtitle="" location="getting-started.qdoc">
            <target name="top"></target>
            <contents name="how-to-obtain-qtopia-products" title="How to Obtain Qtopia Products" level="1"></contents>
            <contents name="open-source-editions" title="Open-source Editions" level="2"></contents>
            <contents name="licensed-editions" title="Licensed Editions" level="2"></contents>
            <contents name="package-naming-conventions" title="Package Naming Conventions" level="1"></contents>
            <contents name="installing-and-building-qtopia" title="Installing and Building Qtopia" level="1"></contents>
            <contents name="more-information" title="More information" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="classes.html" href="classes.html" subtype="page" title="Class Index" fulltitle="Class Index" subtitle="" location="api-pages.qdoc">
            <target name="top"></target>
        </page>
        <page access="public" status="commendable" name="annotated.html" href="annotated.html" subtype="page" title="Annotated Class List" fulltitle="Annotated Class List" subtitle="" location="api-pages.qdoc">
            <target name="top"></target>
        </page>
        <page access="public" status="commendable" name="qtopia-classes.html" href="qtopia-classes.html" subtype="page" title="Qtopia Class List" fulltitle="Qtopia Class List" subtitle="" location="api-pages.qdoc">
            <target name="top"></target>
        </page>
        <page access="public" status="commendable" name="datalinking.html" href="datalinking.html" subtype="page" title="Qtopia Data Linking (QDL)" fulltitle="Qtopia Data Linking (QDL)" subtitle="" location="datalinking.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="how-it-works" title="How it Works" level="1"></contents>
            <contents name="qdl-clients" title="QDL Clients" level="2"></contents>
            <contents name="editing" title="Editing" level="3"></contents>
            <contents name="browsing" title="Browsing" level="3"></contents>
            <contents name="security-policy" title="Security Policy" level="3"></contents>
            <contents name="qdl-sources" title="QDL Sources" level="2"></contents>
            <contents name="link-requests" title="Link Requests" level="3"></contents>
            <contents name="link-activation" title="Link Activation" level="3"></contents>
            <contents name="storing-the-link" title="Storing the Link" level="3"></contents>
            <contents name="security-policy" title="Security Policy" level="3"></contents>
        </page>
        <page access="public" status="commendable" name="tut-camera.html" href="tut-camera.html" subtype="page" title="Tutorial: Extending the Camera Device Model" fulltitle="Tutorial: Extending the Camera Device Model" subtitle="" location="tut-camera.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="the-camera-extension-mechanism" title="The camera extension mechanism" level="1"></contents>
            <contents name="custom-drivers" title="Custom drivers" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="sxe-pkgmgr-download.html" href="sxe-pkgmgr-download.html" subtype="page" title="SXE - Package Download Protocols" fulltitle="SXE - Package Download Protocols" subtitle="" location="sxe-pkgmg-download.qdoc"></page>
        <page access="public" status="commendable" name="messageviewer" href="messageviewer.html" subtype="example" title="MessageViewer Example" fulltitle="MessageViewer Example" subtitle="" location="messageviewer.qdoc">
            <page access="public" status="commendable" name="messageviewer/messagedelegate.cpp" href="messageviewer-messagedelegate-cpp.html" subtype="file" title="" fulltitle="messagedelegate.cpp Example File" subtitle="messageviewer/messagedelegate.cpp" location=""></page>
            <page access="public" status="commendable" name="messageviewer/messagedelegate.h" href="messageviewer-messagedelegate-h.html" subtype="file" title="" fulltitle="messagedelegate.h Example File" subtitle="messageviewer/messagedelegate.h" location=""></page>
            <page access="public" status="commendable" name="messageviewer/messagemodel.cpp" href="messageviewer-messagemodel-cpp.html" subtype="file" title="" fulltitle="messagemodel.cpp Example File" subtitle="messageviewer/messagemodel.cpp" location=""></page>
            <page access="public" status="commendable" name="messageviewer/messagemodel.h" href="messageviewer-messagemodel-h.html" subtype="file" title="" fulltitle="messagemodel.h Example File" subtitle="messageviewer/messagemodel.h" location=""></page>
            <page access="public" status="commendable" name="messageviewer/messageviewer.cpp" href="messageviewer-messageviewer-cpp.html" subtype="file" title="" fulltitle="messageviewer.cpp Example File" subtitle="messageviewer/messageviewer.cpp" location=""></page>
            <page access="public" status="commendable" name="messageviewer/messageviewer.h" href="messageviewer-messageviewer-h.html" subtype="file" title="" fulltitle="messageviewer.h Example File" subtitle="messageviewer/messageviewer.h" location=""></page>
            <page access="public" status="commendable" name="messageviewer/messageviewerbase.ui" href="messageviewer-messageviewerbase-ui.html" subtype="file" title="" fulltitle="messageviewerbase.ui Example File" subtitle="messageviewer/messageviewerbase.ui" location=""></page>
            <page access="public" status="commendable" name="messageviewer/pics/MessageViewer.svg" href="messageviewer-pics-messageviewer-svg.html" subtype="file" title="" fulltitle="MessageViewer.svg Example File" subtitle="messageviewer/pics/MessageViewer.svg" location=""></page>
            <page access="public" status="commendable" name="messageviewer/main.cpp" href="messageviewer-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="messageviewer/main.cpp" location=""></page>
            <page access="public" status="commendable" name="messageviewer/messageviewer.pro" href="messageviewer-messageviewer-pro.html" subtype="file" title="" fulltitle="messageviewer.pro Example File" subtitle="messageviewer/messageviewer.pro" location=""></page>
        </page>
        <page access="public" status="commendable" name="qtopia_resource_system.html" href="qtopia-resource-system.html" subtype="page" title="Qtopia Resource System" fulltitle="Qtopia Resource System" subtitle="" location="qtopiaresource.cpp">
            <contents name="images" title="Images" level="1"></contents>
            <contents name="icons" title="Icons" level="1"></contents>
            <contents name="sounds" title="Sounds" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="classeshierarchy.html" href="classeshierarchy.html" subtype="page" title="Qtopia Class Inheritance Hierarchy" fulltitle="Qtopia Class Inheritance Hierarchy" subtitle="" location="classhierarchy.qdoc">
            <target name="top"></target>
        </page>
        <page access="public" status="commendable" name="syscust-volumemanager.html" href="syscust-volumemanager.html" subtype="page" title="Controlling the Volume Widget" fulltitle="Controlling the Volume Widget" subtitle="" location="syscust-volumemanager.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="overview" title="Overview" level="2"></contents>
            <contents name="example" title="Example" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="networkservices.html" href="networkservices.html" subtype="page" title="Network Services" fulltitle="Network Services" subtitle="" location="networkservices.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="how-it-works" title="How it Works" level="1"></contents>
            <contents name="network-configuration-file-format" title="Network configuration file format" level="2"></contents>
            <contents name="distribution-specific-configuration" title="Distribution specific configuration" level="2"></contents>
            <contents name="the-dialup-plug-in" title="The Dialup Plug-in" level="2"></contents>
            <contents name="general-dial-up-configuration" title="General dial-up configuration" level="3"></contents>
            <contents name="gprs" title="GPRS" level="3"></contents>
            <contents name="introduction" title="Introduction" level="4"></contents>
            <contents name="gprs-startup-procedure" title="GPRS startup procedure" level="4"></contents>
            <contents name="gprs-at-dial-string" title="GPRS AT dial string" level="4"></contents>
            <contents name="ppp-network-script" title="PPP network script" level="3"></contents>
            <contents name="the-lan-plug-in" title="The LAN Plug-in" level="2"></contents>
            <contents name="general-lan-configuration" title="General LAN configuration" level="3"></contents>
            <contents name="w-lan-network-script" title="(W)LAN network script" level="3"></contents>
            <contents name="the-bluetooth-dial-up-plug-in" title="The Bluetooth Dial-up Plug-in" level="2"></contents>
            <contents name="general-dun-configuration" title="General DUN configuration" level="3"></contents>
            <contents name="bluetooth-dial-up-network-script" title="Bluetooth dial-up network script" level="3"></contents>
            <contents name="the-proxies-page" title="The Proxies page" level="2"></contents>
            <contents name="connectivity-state-of-the-device" title="Connectivity state of the device" level="1"></contents>
            <contents name="wap" title="WAP" level="1"></contents>
            <contents name="ota-configuration" title="OTA configuration" level="2"></contents>
            <contents name="session-management" title="Session management" level="1"></contents>
            <contents name="troubleshooting" title="Troubleshooting" level="1"></contents>
            <contents name="example-connect-disconnect-scripts" title="Example connect,disconnect scripts" level="2"></contents>
            <contents name="enabling-debugging" title="Enabling Debugging" level="2"></contents>
            <contents name="changing-the-gprs-packet-size-to-compensate-for-poor-signal-quality" title="Changing the GPRS Packet Size to Compensate for Poor Signal Quality" level="2"></contents>
            <contents name="configuration-file-elements-to-check-update" title="Configuration file elements to check/update" level="2"></contents>
            <contents name="dialing-with-the-example-gprs-dial-script" title="Dialing with the example GPRS Dial script" level="2"></contents>
            <contents name="network-testing" title="Network testing" level="2"></contents>
            <contents name="requesting-support" title="Requesting Support" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="tut-iviewer-part4.html" href="tut-iviewer-part4.html" subtype="page" title="Image Viewer Tutorial: Part 4" fulltitle="Image Viewer Tutorial: Part 4" subtitle="" location="tut-iviewer-p4.qdoc">
            <target name="top"></target>
            <contents name="enhancing-the-list-screen" title="Enhancing the list screen" level="0"></contents>
            <contents name="the-rename-action" title="The rename action" level="1"></contents>
            <contents name="enhancing-the-rename-dialog" title="Enhancing the Rename Dialog" level="1"></contents>
            <contents name="the-delete-action" title="The delete action" level="1"></contents>
            <contents name="summary" title="Summary" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="themed-view-elements.html" href="themed-view-elements.html" subtype="page" title="Themed View Elements" fulltitle="Themed View Elements" subtitle="" location="themed-view-elements.qdoc">
            <target name="top"></target>
            <target name="themecommonattributes"></target>
            <target name="themepageelement"></target>
            <target name="themerectelement"></target>
            <target name="themelineelement"></target>
            <target name="themetextelement"></target>
            <target name="themeimageelement"></target>
            <target name="themeanimelement"></target>
            <target name="themestatuselement"></target>
            <target name="themelevelelement"></target>
            <target name="themepluginelement"></target>
            <target name="themelayoutelement"></target>
            <target name="themeexclusiveelement"></target>
            <target name="themegroupelement"></target>
            <target name="themewidgetelement"></target>
            <target name="themelistelement"></target>
            <target name="themetemplateelement"></target>
            <contents name="common-attributes" title="Common attributes" level="1"></contents>
            <contents name="page" title="page" level="1"></contents>
            <contents name="attributes" title="Attributes" level="2"></contents>
            <contents name="rect" title="rect" level="1"></contents>
            <contents name="attributes" title="Attributes" level="2"></contents>
            <contents name="line" title="line" level="1"></contents>
            <contents name="attributes" title="Attributes" level="2"></contents>
            <contents name="text" title="text" level="1"></contents>
            <contents name="attributes" title="Attributes" level="2"></contents>
            <contents name="content" title="Content" level="2"></contents>
            <contents name="image" title="image" level="1"></contents>
            <contents name="attributes" title="Attributes" level="2"></contents>
            <contents name="anim" title="anim" level="1"></contents>
            <contents name="attributes" title="Attributes" level="2"></contents>
            <contents name="status" title="status" level="1"></contents>
            <contents name="attributes" title="Attributes" level="2"></contents>
            <contents name="level" title="level" level="1"></contents>
            <contents name="attributes" title="Attributes" level="2"></contents>
            <contents name="content" title="Content" level="2"></contents>
            <contents name="plugin" title="plugin" level="1"></contents>
            <contents name="layout" title="layout" level="1"></contents>
            <contents name="attributes" title="Attributes" level="2"></contents>
            <contents name="exclusive" title="exclusive" level="1"></contents>
            <contents name="group" title="group" level="1"></contents>
            <contents name="widget" title="widget" level="1"></contents>
            <contents name="list" title="list" level="1"></contents>
            <contents name="template" title="template" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="services.html" href="services.html" subtype="page" title="Services" fulltitle="Services" subtitle="" location="services.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="pre-defined-services" title="Pre-defined Services" level="1"></contents>
            <contents name="requesting-services" title="Requesting Services" level="1"></contents>
            <contents name="responding-to-service-requests" title="Responding to Service Requests" level="1"></contents>
            <contents name="adding-a-new-service" title="Adding a New Service" level="1"></contents>
            <contents name="advanced-service-functionality" title="Advanced Service Functionality" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="inputmethods-description.html" href="inputmethods-description.html" subtype="page" title="Input Methods Documentation" fulltitle="Input Methods Documentation" subtitle="" location="inputmethods.qdoc">
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="phone-keys" title="Phone Keys" level="2"></contents>
            <contents name="full-screen-handwriting" title="Full Screen Handwriting" level="2"></contents>
            <contents name="common-features-for-phone-keys-and-full-screen-handwriting" title="Common Features for Phone Keys and Full Screen Handwriting" level="2"></contents>
            <contents name="virtual-keyboards" title="Virtual Keyboards" level="2"></contents>
            <contents name="the-qtopia-keyboard" title="The Qtopia Keyboard" level="3"></contents>
            <contents name="the-predictive-keyboard" title="The Predictive Keyboard" level="3"></contents>
            <contents name="predictive-keyboard-strokes" title="Predictive Keyboard Strokes" level="4"></contents>
            <contents name="input-hinting" title="Input Hinting" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="installing-an-sdk.html" href="installing-an-sdk.html" subtype="page" title="Installing a Qtopia SDK" fulltitle="Installing a Qtopia SDK" subtitle="" location="installing-an-sdk.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="installing-a-software-development-kit-sdk" title="Installing a Software Development Kit (SDK)" level="1"></contents>
            <contents name="installing-the-sdk-on-windows" title="Installing the SDK on Windows." level="2"></contents>
            <contents name="installing-the-sdk-on-linux" title="Installing the SDK on Linux." level="2"></contents>
            <contents name="using-a-cd-dvd" title="Using a CD/DVD" level="3"></contents>
            <contents name="using-a-loopback-device" title="Using a loopback device" level="3"></contents>
            <contents name="installing-the-sdk-continued" title="Installing the SDK (continued)" level="2"></contents>
            <contents name="running-the-sdk" title="Running the SDK" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="sxe-glossary.html" href="sxe-glossary.html" subtype="page" title="SXE - Glossary of Terms" fulltitle="SXE - Glossary of Terms" subtitle="" location="sxe-glossary.qdoc"></page>
        <page access="public" status="commendable" name="sxe-qpk.html" href="sxe-qpk.html" subtype="page" title="Qpk Packages" fulltitle="Qpk Packages" subtitle="" location="sxe-qpk.qdoc">
            <target name="qpk-settings"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="package-project-elements" title="Package Project Elements" level="1"></contents>
            <contents name="quickstart" title="Quickstart" level="1"></contents>
            <contents name="creating-and-deploying-packages" title="Creating and deploying packages" level="1"></contents>
            <contents name="using-the-resource-system" title="Using the Resource System" level="1"></contents>
            <contents name="using-the-help-system" title="Using the Help System" level="1"></contents>
            <contents name="internationalization" title="Internationalization" level="1"></contents>
            <contents name="settings-files" title="Settings Files" level="1"></contents>
            <contents name="troubleshooting-package-installation" title="Troubleshooting package installation" level="1"></contents>
            <contents name="faq" title="FAQ" level="1"></contents>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_SIMPLE_BUILTIN" href="builtinapplicationlauncher.html#QTOPIA_SIMPLE_BUILTIN" location="archiveviewer.cpp" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" relates="BuiltinApplicationLauncher" type="" signature="QTOPIA_SIMPLE_BUILTIN( ApplicationName,  createFunc)">
            <parameter left="" right="" name="ApplicationName" default=""></parameter>
            <parameter left="" right="" name="createFunc" default=""></parameter>
        </function>
        <page access="public" status="commendable" name="porting.html" href="porting.html" subtype="page" title="Porting Between Qtopia Versions" fulltitle="Porting Between Qtopia Versions" subtitle="" location="porting.qdoc">
            <target name="top"></target>
            <contents name="overview" title="Overview" level="1"></contents>
            <contents name="porting-from-qtopia-2" title="Porting from Qtopia 2" level="1"></contents>
            <contents name="porting-to-qtopia-4-2-0" title="Porting to Qtopia 4.2.0" level="1"></contents>
            <contents name="telephony-api" title="Telephony API" level="2"></contents>
            <contents name="network-api" title="Network API" level="2"></contents>
            <contents name="application-lifecycle" title="Application Lifecycle" level="2"></contents>
            <contents name="ipc" title="IPC" level="2"></contents>
            <contents name="content" title="Content" level="2"></contents>
            <contents name="drm-api" title="DRM API" level="2"></contents>
            <contents name="libqtopiabase" title="libqtopiabase" level="2"></contents>
            <contents name="porting-to-qtopia-4-2-1" title="Porting to Qtopia 4.2.1" level="1"></contents>
            <contents name="porting-to-qtopia-4-2-2" title="Porting to Qtopia 4.2.2" level="1"></contents>
            <contents name="api" title="API" level="2"></contents>
            <contents name="signal-level-api" title="Signal level API" level="2"></contents>
            <contents name="qpk-packages" title="Qpk packages" level="2"></contents>
            <contents name="porting-to-qtopia-4-2-3" title="Porting to Qtopia 4.2.3" level="1"></contents>
            <contents name="telephony-api" title="Telephony API" level="2"></contents>
            <contents name="bluetooth-api" title="Bluetooth API" level="2"></contents>
            <contents name="accessory-api" title="Accessory API" level="2"></contents>
            <contents name="network-configuration-file-format" title="Network configuration file format" level="2"></contents>
            <contents name="porting-to-qtopia-4-2-5" title="Porting to Qtopia 4.2.5" level="1"></contents>
            <contents name="bluetooth-api" title="Bluetooth API" level="2"></contents>
            <contents name="porting-to-qtopia-4-3-0" title="Porting to Qtopia 4.3.0" level="1"></contents>
            <contents name="accessory-api" title="Accessory API" level="2"></contents>
            <contents name="openssl" title="OpenSSL" level="2"></contents>
            <contents name="qwizard" title="QWizard" level="2"></contents>
            <contents name="qoccurrencemodel" title="QOccurrenceModel" level="2"></contents>
            <contents name="qtopia-pim-delegates" title="Qtopia PIM Delegates" level="2"></contents>
            <contents name="qtopiasendvia" title="QtopiaSendVia" level="2"></contents>
            <contents name="qbluetoothaudiogateway" title="QBluetoothAudioGateway" level="2"></contents>
            <contents name="qirserver" title="QIrServer" level="2"></contents>
            <contents name="qtopia-namespace" title="Qtopia Namespace" level="2"></contents>
            <contents name="qbluetoothabstractserver" title="QBluetoothAbstractServer" level="2"></contents>
            <contents name="qbluetoothabstractsocket" title="QBluetoothAbstractSocket" level="2"></contents>
            <contents name="obex-api-and-obex-related-classes-in-bluetooth-and-irda-apis" title="OBEX API and OBEX-related classes in Bluetooth and IrDA APIs" level="2"></contents>
            <contents name="voip-integration" title="VoIP Integration" level="2"></contents>
            <contents name="qdawg-files" title="QDawg files" level="2"></contents>
            <contents name="icons-directory-layout-and-theming" title="Icons Directory Layout and Theming" level="2"></contents>
            <contents name="porting-to-qtopia-4-3-1" title="Porting to Qtopia 4.3.1" level="1"></contents>
            <contents name="server-file-changes" title="Server file changes" level="2"></contents>
            <contents name="qtopiaipcadaptor-changes" title="QtopiaIpcAdaptor changes" level="2"></contents>
            <contents name="names-changes" title="Names changes" level="2"></contents>
            <contents name="voip-integration" title="VoIP Integration" level="2"></contents>
            <contents name="qmailstore-changes" title="QMailStore changes" level="2"></contents>
            <contents name="porting-to-qtopia-4-3-2" title="Porting to Qtopia 4.3.2" level="1"></contents>
            <contents name="server-file-changes" title="Server file changes" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="porting2to4.html" href="porting2to4.html" subtype="page" title="Porting to Qtopia 4" fulltitle="Porting to Qtopia 4" subtitle="" location="porting.qdoc">
            <target name="top"></target>
            <contents name="basic-conversions" title="Basic Conversions" level="1"></contents>
            <contents name="qtopia-4-headers" title="Qtopia 4 Headers" level="1"></contents>
            <contents name="designer-and-uic" title="Designer and UIC" level="1"></contents>
            <contents name="qprocess" title="QProcess" level="1"></contents>
            <contents name="qmenu-and-qactiongroup" title="QMenu and QActionGroup" level="1"></contents>
            <contents name="qaction-for-regular-menu-items" title="QAction for Regular Menu Items" level="1"></contents>
            <contents name="qimage-qpixmap-smoothscale" title="QImage/QPixmap::smoothScale" level="1"></contents>
            <contents name="qstyle" title="QStyle" level="1"></contents>
            <contents name="qcanvas" title="QCanvas" level="1"></contents>
            <contents name="quuid" title="QUuid" level="1"></contents>
            <contents name="plug-ins" title="Plug-ins" level="1"></contents>
            <contents name="resource" title="Resource" level="1"></contents>
            <contents name="config" title="Config" level="1"></contents>
            <contents name="vscrollview" title="VScrollView" level="1"></contents>
            <contents name="grabkeyboard-and-ungrabkeyboard" title="grabKeyboard() and ungrabKeyboard()" level="1"></contents>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_ADD_APPLICATION" href="qtopiaapplication.html#QTOPIA_ADD_APPLICATION" location="" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" relates="QtopiaApplication" type="" signature="QTOPIA_ADD_APPLICATION( name,  classname)">
            <parameter left="" right="" name="name" default=""></parameter>
            <parameter left="" right="" name="classname" default=""></parameter>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_MAIN" href="qtopiaapplication.html#QTOPIA_MAIN" location="qtopiaapplication.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QtopiaApplication" type="" signature="QTOPIA_MAIN()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_EXPORT_PLUGIN" href="qtopiaapplication.html#QTOPIA_EXPORT_PLUGIN" location="gstreamerenginefactory.cpp" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" relates="QtopiaApplication" type="" signature="QTOPIA_EXPORT_PLUGIN( classname)">
            <parameter left="" right="" name="classname" default=""></parameter>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_EXPORT_QT_PLUGIN" href="qtopiaapplication.html#QTOPIA_EXPORT_QT_PLUGIN" location="" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" relates="QtopiaApplication" type="" signature="QTOPIA_EXPORT_QT_PLUGIN( classname)">
            <parameter left="" right="" name="classname" default=""></parameter>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_APP_KEY" href="qtopiaapplication.html#QTOPIA_APP_KEY" location="qtopiaapplication.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QtopiaApplication" type="" signature="QTOPIA_APP_KEY()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_SET_KEY" href="qtopiaapplication.html#QTOPIA_SET_KEY" location="" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" relates="QtopiaApplication" type="" signature="QTOPIA_SET_KEY( name)">
            <parameter left="" right="" name="name" default=""></parameter>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_SET_DOCUMENT_SYSTEM_CONNECTION" href="qtopiaapplication.html#QTOPIA_SET_DOCUMENT_SYSTEM_CONNECTION" location="" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" relates="QtopiaApplication" type="" signature="QTOPIA_SET_DOCUMENT_SYSTEM_CONNECTION()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_DIRECT_DOCUMENT_SYSTEM_CONNECTION" href="qtopiaapplication.html#QTOPIA_DIRECT_DOCUMENT_SYSTEM_CONNECTION" location="qtopiaapplication.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QtopiaApplication" type="" signature="QTOPIA_DIRECT_DOCUMENT_SYSTEM_CONNECTION()"></function>
        <page access="public" status="commendable" name="sxe-pkgmgr.html" href="sxe-pkgmgr.html" subtype="page" title="SXE - Installer/Package Manager Overview" fulltitle="SXE - Installer/Package Manager Overview" subtitle="" location="sxe-pkgmgr.qdoc">
            <target name="packagemanager-conf"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="configuration" title="Configuration" level="1"></contents>
            <contents name="package-compatibility" title="Package Compatibility" level="1"></contents>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_TASK" href="qtopiaserverapplication.html#QTOPIA_TASK" location="btftpservice.cpp" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" relates="QtopiaServerApplication" type="" signature="QTOPIA_TASK( TaskName,  Object)">
            <parameter left="" right="" name="TaskName" default=""></parameter>
            <parameter left="" right="" name="Object" default=""></parameter>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_DEMAND_TASK" href="qtopiaserverapplication.html#QTOPIA_DEMAND_TASK" location="systemsuspendtasks.cpp" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" relates="QtopiaServerApplication" type="" signature="QTOPIA_DEMAND_TASK( TaskName,  Object)">
            <parameter left="" right="" name="TaskName" default=""></parameter>
            <parameter left="" right="" name="Object" default=""></parameter>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_STATIC_TASK" href="qtopiaserverapplication.html#QTOPIA_STATIC_TASK" location="" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" relates="QtopiaServerApplication" type="" signature="QTOPIA_STATIC_TASK( TaskName,  Function)">
            <parameter left="" right="" name="TaskName" default=""></parameter>
            <parameter left="" right="" name="Function" default=""></parameter>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_TASK_QINTERFACE" href="qtopiaserverapplication.html#QTOPIA_TASK_QINTERFACE" location="" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" relates="QtopiaServerApplication" type="" signature="QTOPIA_TASK_QINTERFACE( InterfaceName)">
            <parameter left="" right="" name="InterfaceName" default=""></parameter>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_TASK_INTERFACE" href="qtopiaserverapplication.html#QTOPIA_TASK_INTERFACE" location="" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" relates="QtopiaServerApplication" type="" signature="QTOPIA_TASK_INTERFACE( ClassName)">
            <parameter left="" right="" name="ClassName" default=""></parameter>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_TASK_PROVIDES" href="qtopiaserverapplication.html#QTOPIA_TASK_PROVIDES" location="qcoprouter.cpp" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" relates="QtopiaServerApplication" type="" signature="QTOPIA_TASK_PROVIDES( TaskName,  Interface)">
            <parameter left="" right="" name="TaskName" default=""></parameter>
            <parameter left="" right="" name="Interface" default=""></parameter>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_REPLACE_WIDGET" href="qtopiaserverapplication.html#QTOPIA_REPLACE_WIDGET" location="e2_browser.cpp" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" relates="QtopiaServerApplication" type="" signature="QTOPIA_REPLACE_WIDGET( AbstractWidget,  ConcreteWidget)">
            <parameter left="" right="" name="AbstractWidget" default=""></parameter>
            <parameter left="" right="" name="ConcreteWidget" default=""></parameter>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_REPLACE_WIDGET_WHEN" href="qtopiaserverapplication.html#QTOPIA_REPLACE_WIDGET_WHEN" location="dialer.cpp" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" relates="QtopiaServerApplication" type="" signature="QTOPIA_REPLACE_WIDGET_WHEN( AbstractWidget,  ConcreteWidget,  Feature)">
            <parameter left="" right="" name="AbstractWidget" default=""></parameter>
            <parameter left="" right="" name="ConcreteWidget" default=""></parameter>
            <parameter left="" right="" name="Feature" default=""></parameter>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_REPLACE_WIDGET_OVERRIDE" href="qtopiaserverapplication.html#QTOPIA_REPLACE_WIDGET_OVERRIDE" location="" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" relates="QtopiaServerApplication" type="" signature="QTOPIA_REPLACE_WIDGET_OVERRIDE( AbstractWidget,  ConcreteWidget)">
            <parameter left="" right="" name="AbstractWidget" default=""></parameter>
            <parameter left="" right="" name="ConcreteWidget" default=""></parameter>
        </function>
        <page access="public" status="commendable" name="howtobuild.html" href="howtobuild.html" subtype="page" title="Building and Compiling" fulltitle="Building and Compiling" subtitle="" location="buildingandcompiling.qdoc">
            <target name="top"></target>
        </page>
        <page access="public" status="commendable" name="&lt;custom.h&gt;" href="custom-h.html" subtype="header" title="Device Specific Qtopia Declarations" fulltitle="&lt;custom.h&gt; - Device Specific Qtopia Declarations" subtitle="" location="custom.qdoc"></page>
        <function access="public" threadsafety="unspecified" status="commendable" name="NO_WIRELESS_LAN" href="custom-h.html#NO_WIRELESS_LAN" location="custom.qdoc" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="&lt;custom.h&gt;" type="" signature="NO_WIRELESS_LAN()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QPE_USE_MALLOC_FOR_NEW" href="custom-h.html#QPE_USE_MALLOC_FOR_NEW" location="custom.qdoc" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="&lt;custom.h&gt;" type="" signature="QPE_USE_MALLOC_FOR_NEW()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QPE_NEED_CALIBRATION" href="custom-h.html#QPE_NEED_CALIBRATION" location="custom.qdoc" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="&lt;custom.h&gt;" type="" signature="QPE_NEED_CALIBRATION()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QPE_ARCHITECTURE" href="custom-h.html#QPE_ARCHITECTURE" location="custom.qdoc" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="&lt;custom.h&gt;" type="" signature="QPE_ARCHITECTURE()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_ENABLE_EXPORTED_BACKGROUNDS" href="custom-h.html#QTOPIA_ENABLE_EXPORTED_BACKGROUNDS" location="custom.qdoc" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="&lt;custom.h&gt;" type="" signature="QTOPIA_ENABLE_EXPORTED_BACKGROUNDS()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_ENABLE_GLOBAL_BACKGROUNDS" href="custom-h.html#QTOPIA_ENABLE_GLOBAL_BACKGROUNDS" location="custom.qdoc" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="&lt;custom.h&gt;" type="" signature="QTOPIA_ENABLE_GLOBAL_BACKGROUNDS()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QGLOBAL_PIXMAP_CACHE_LIMIT" href="custom-h.html#QGLOBAL_PIXMAP_CACHE_LIMIT" location="custom.qdoc" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="&lt;custom.h&gt;" type="" signature="QGLOBAL_PIXMAP_CACHE_LIMIT()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_PHONE_DEVICE" href="custom-h.html#QTOPIA_PHONE_DEVICE" location="custom.qdoc" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="&lt;custom.h&gt;" type="" signature="QTOPIA_PHONE_DEVICE()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_PHONE_MUX" href="custom-h.html#QTOPIA_PHONE_MUX" location="custom.qdoc" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="&lt;custom.h&gt;" type="" signature="QTOPIA_PHONE_MUX()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_PHONE_VENDOR" href="custom-h.html#QTOPIA_PHONE_VENDOR" location="custom.qdoc" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="&lt;custom.h&gt;" type="" signature="QTOPIA_PHONE_VENDOR()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_ZONEINFO_PATH" href="custom-h.html#QTOPIA_ZONEINFO_PATH" location="custom.qdoc" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="&lt;custom.h&gt;" type="" signature="QTOPIA_ZONEINFO_PATH()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_COMPATIBLE_DEVICES" href="custom-h.html#QTOPIA_COMPATIBLE_DEVICES" location="custom.qdoc" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="&lt;custom.h&gt;" type="" signature="QTOPIA_COMPATIBLE_DEVICES()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="V4L_VIDEO_DEVICE" href="custom-h.html#V4L_VIDEO_DEVICE" location="custom.qdoc" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="&lt;custom.h&gt;" type="" signature="V4L_VIDEO_DEVICE()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QDSYNC_DEFAULT_TCP_PORT" href="custom-h.html#QDSYNC_DEFAULT_TCP_PORT" location="custom.qdoc" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="&lt;custom.h&gt;" type="" signature="QDSYNC_DEFAULT_TCP_PORT()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QDSYNC_DEFAULT_SERIAL_PORT" href="custom-h.html#QDSYNC_DEFAULT_SERIAL_PORT" location="custom.qdoc" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="&lt;custom.h&gt;" type="" signature="QDSYNC_DEFAULT_SERIAL_PORT()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QDSYNC_DEFAULT_PORTS" href="custom-h.html#QDSYNC_DEFAULT_PORTS" location="custom.qdoc" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="&lt;custom.h&gt;" type="" signature="QDSYNC_DEFAULT_PORTS()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QDSYNC_MODEL" href="custom-h.html#QDSYNC_MODEL" location="custom.qdoc" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="&lt;custom.h&gt;" type="" signature="QDSYNC_MODEL()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QDSYNC_SYSTEM" href="custom-h.html#QDSYNC_SYSTEM" location="custom.qdoc" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="&lt;custom.h&gt;" type="" signature="QDSYNC_SYSTEM()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QDSYNC_STARTUP_DELAY" href="custom-h.html#QDSYNC_STARTUP_DELAY" location="custom.qdoc" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="&lt;custom.h&gt;" type="" signature="QDSYNC_STARTUP_DELAY()"></function>
        <page access="public" status="commendable" name="bluetooth/bluetoothservice" href="bluetooth-bluetoothservice.html" subtype="example" title="Tutorial: Creating a Bluetooth service" fulltitle="Tutorial: Creating a Bluetooth service" subtitle="" location="tut-bluetoothservice.qdoc">
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="overview" title="Overview" level="1"></contents>
            <contents name="using-a-xml-formatted-sdp-record" title="Using a XML-formatted SDP record" level="1"></contents>
            <contents name="bluetoothserialportexampleservice-class-definition" title="BluetoothSerialPortExampleService class definition" level="1"></contents>
            <contents name="bluetoothserialportexampleservice-class-implementation" title="BluetoothSerialPortExampleService class implementation" level="1"></contents>
            <contents name="the-constructor" title="The constructor" level="2"></contents>
            <contents name="implementing" title="Implementing " level="2"></contents>
            <contents name="implementing-stop" title="Implementing stop()" level="2"></contents>
            <contents name="other-methods" title="Other methods" level="2"></contents>
            <contents name="the-bluetooth-service-manager-and-service-settings" title="The Bluetooth Service Manager and service settings" level="1"></contents>
            <page access="public" status="commendable" name="bluetooth/bluetoothservice/SerialPortSDPRecord.xml" href="bluetooth-bluetoothservice-serialportsdprecord-xml.html" subtype="file" title="" fulltitle="SerialPortSDPRecord.xml Example File" subtitle="bluetooth/bluetoothservice/SerialPortSDPRecord.xml" location=""></page>
            <page access="public" status="commendable" name="bluetooth/bluetoothservice/bluetoothservice.cpp" href="bluetooth-bluetoothservice-bluetoothservice-cpp.html" subtype="file" title="" fulltitle="bluetoothservice.cpp Example File" subtitle="bluetooth/bluetoothservice/bluetoothservice.cpp" location=""></page>
            <page access="public" status="commendable" name="bluetooth/bluetoothservice/bluetoothservice.h" href="bluetooth-bluetoothservice-bluetoothservice-h.html" subtype="file" title="" fulltitle="bluetoothservice.h Example File" subtitle="bluetooth/bluetoothservice/bluetoothservice.h" location=""></page>
            <page access="public" status="commendable" name="bluetooth/bluetoothservice/main.cpp" href="bluetooth-bluetoothservice-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="bluetooth/bluetoothservice/main.cpp" location=""></page>
            <page access="public" status="commendable" name="bluetooth/bluetoothservice/bluetoothservice.pro" href="bluetooth-bluetoothservice-bluetoothservice-pro.html" subtype="file" title="" fulltitle="bluetoothservice.pro Example File" subtitle="bluetooth/bluetoothservice/bluetoothservice.pro" location=""></page>
        </page>
        <page access="public" status="commendable" name="syscust-voip.html" href="syscust-voip.html" subtype="page" title="VoIP Integration" fulltitle="VoIP Integration" subtitle="" location="syscust-voip.qdoc">
            <target name="top"></target>
            <contents name="voip-integration" title="VoIP Integration" level="1"></contents>
            <contents name="qtopia-phone-library" title="Qtopia Phone Library" level="2"></contents>
            <contents name="basic-asterisk-telephony-service" title="Basic Asterisk Telephony Service" level="2"></contents>
            <contents name="starting-up-the-asterisk-agent" title="Starting up the Asterisk Agent" level="2"></contents>
            <contents name="service-checking" title="Service Checking" level="2"></contents>
            <contents name="network-registration" title="Network Registration" level="2"></contents>
            <contents name="phone-calls" title="Phone Calls" level="2"></contents>
            <contents name="presence" title="Presence" level="2"></contents>
            <contents name="configuration" title="Configuration" level="2"></contents>
            <contents name="call-policy-managers" title="Call Policy Managers" level="2"></contents>
            <contents name="implementation-checklist" title="Implementation Checklist" level="2"></contents>
            <contents name="troubleshooting" title="Troubleshooting" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="syscust-docstorage.html" href="syscust-docstorage.html" subtype="page" title="Document Storage" fulltitle="Document Storage" subtitle="" location="syscust-docstorage.qdoc">
            <target name="top"></target>
            <target name="package-storage-conf"></target>
            <keyword name="removable-storage-cards"></keyword>
            <keyword name="storageconf"></keyword>
            <contents name="storage-conf" title="Storage.conf" level="1"></contents>
            <contents name="mount-point-groups" title="Mount Point Groups" level="2"></contents>
            <contents name="" title="" level="3"></contents>
            <contents name="" title="" level="3"></contents>
            <contents name="non-mount-point-groups" title="Non Mount Point Groups" level="2"></contents>
            <contents name="" title="" level="3"></contents>
            <contents name="" title="" level="3"></contents>
            <contents name="" title="" level="3"></contents>
            <contents name="" title="" level="3"></contents>
            <contents name="non-removable-vs-removable-storage" title="Non-removable vs Removable Storage" level="1"></contents>
            <contents name="explicit-mount-unmount-notifications" title="Explicit Mount/Unmount Notifications" level="2"></contents>
            <contents name="using-read-only-file-systems" title="Using read-only File Systems" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="styleguide-widgets.html" href="styleguide-widgets.html" subtype="page" title="Qtopia Style Guide: Widgets" fulltitle="Qtopia Style Guide: Widgets" subtitle="" location="styleguide-widgets.qdoc">
            <keyword name="labels-lnk"></keyword>
            <contents name="layout" title="Layout" level="1"></contents>
            <contents name="labels" title="Labels" level="1"></contents>
            <contents name="buttons" title="Buttons" level="1"></contents>
            <contents name="tabs" title="Tabs" level="1"></contents>
            <contents name="lists" title="Lists" level="1"></contents>
            <contents name="menus" title="Menus" level="1"></contents>
            <contents name="menu-names" title="Menu Names" level="2"></contents>
            <contents name="menu-like-dialogs" title="Menu-like Dialogs" level="2"></contents>
            <contents name="dialogs" title="Dialogs" level="1"></contents>
            <contents name="custom-widgets" title="Custom Widgets" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="theme-graphdes.html" href="theme-graphdes.html" subtype="page" title="Graphic Designer's Reference" fulltitle="Graphic Designer's Reference" subtitle="" location="theme-graphdes.qdoc">
            <contents name="qtopia-startup" title="Qtopia Startup" level="1"></contents>
            <contents name="themes" title="Themes" level="1"></contents>
            <contents name="title-bar" title="Title Bar" level="2"></contents>
            <contents name="context-bar" title="Context Bar" level="2"></contents>
            <contents name="home-screen" title="Home Screen" level="2"></contents>
            <contents name="portal-theme-example-graphical-elements" title="Portal theme example - Graphical elements" level="3"></contents>
            <contents name="portal-theme-example-composition" title="Portal theme example - Composition" level="3"></contents>
            <contents name="fantasy-theme-example-graphical-elements" title="Fantasy theme example - Graphical elements" level="3"></contents>
            <contents name="fantasy-theme-example-composed" title="Fantasy theme example - Composed" level="3"></contents>
            <contents name="fantasy-theme-example-exploded" title="Fantasy theme example - Exploded" level="3"></contents>
            <contents name="examples-actual-screenshots" title="Examples - Actual screenshots" level="3"></contents>
            <contents name="tips" title="Tips" level="3"></contents>
            <contents name="system" title="System" level="1"></contents>
            <contents name="notification-images-32x32-custom" title="Notification Images (32x32, custom)" level="2"></contents>
            <contents name="context-menu-icons-16x16" title="Context Menu Icons (16x16)" level="2"></contents>
            <contents name="applications" title="Applications" level="1"></contents>
            <contents name="internal-icons" title="Internal Icons" level="2"></contents>
            <contents name="examples-14x14-16x16-and-22x22" title="Examples (14x14, 16x16 and 22x22)" level="3"></contents>
            <contents name="notes" title="Notes" level="3"></contents>
            <contents name="application-specific-images-custom" title="Application-specific Images (custom)" level="3"></contents>
            <contents name="application-specific-images-notes" title="Application-specific Images Notes" level="3"></contents>
        </page>
        <page access="public" status="commendable" name="styleguide.html" href="styleguide.html" subtype="page" title="Designing Applications" fulltitle="Designing Applications" subtitle="" location="styleguide.qdoc">
            <keyword name="phonekeys"></keyword>
            <keyword name="standardicons"></keyword>
            <contents name="phone-keys" title="Phone Keys" level="1"></contents>
            <contents name="standard-icons" title="Standard Icons" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="qtopia-messaging.html" href="qtopia-messaging.html" subtype="page" title="Messaging" fulltitle="Messaging" subtitle="" location="messaging.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="modem-emulator.html" href="modem-emulator.html" subtype="page" title="Modem Emulator" fulltitle="Modem Emulator" subtitle="" location="atcommands.cpp"></page>
        <page access="public" status="commendable" name="ModemEmulator::CallControl" href="modememulator-callcontrol.html" subtype="group" title="Modem Emulator - Call Control" fulltitle="Modem Emulator - Call Control" subtitle="" location="atcommands.cpp"></page>
        <page access="public" status="commendable" name="ModemEmulator::ControlAndStatus" href="modememulator-controlandstatus.html" subtype="group" title="Modem Emulator - Control and Status" fulltitle="Modem Emulator - Control and Status" subtitle="" location="atcommands.cpp">
            <contents name="control-and-status" title="Control and Status" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="ModemEmulator::PhoneBook" href="modememulator-phonebook.html" subtype="group" title="Modem Emulator - Phonebook Operations" fulltitle="Modem Emulator - Phonebook Operations" subtitle="" location="atcommands.cpp">
            <contents name="phonebook-operations" title="Phonebook Operations" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="ModemEmulator::Identification" href="modememulator-identification.html" subtype="group" title="Modem Emulator - Identification" fulltitle="Modem Emulator - Identification" subtitle="" location="atcommands.cpp"></page>
        <page access="public" status="commendable" name="ModemEmulator::Network" href="modememulator-network.html" subtype="group" title="Modem Emulator - Network" fulltitle="Modem Emulator - Network" subtitle="" location="atcommands.cpp"></page>
        <page access="public" status="commendable" name="ModemEmulator::SupplementaryServices" href="modememulator-supplementaryservices.html" subtype="group" title="Modem Emulator - Supplementary Services" fulltitle="Modem Emulator - Supplementary Services" subtitle="" location="atcommands.cpp"></page>
        <page access="public" status="commendable" name="ModemEmulator::GPRS" href="modememulator-gprs.html" subtype="group" title="Modem Emulator - GPRS" fulltitle="Modem Emulator - GPRS" subtitle="" location="atcommands.cpp"></page>
        <page access="public" status="commendable" name="ModemEmulator::ShortMessageService" href="modememulator-shortmessageservice.html" subtype="group" title="Modem Emulator - Short Message Service" fulltitle="Modem Emulator - Short Message Service" subtitle="" location="atcommands.cpp"></page>
        <page access="public" status="commendable" name="ModemEmulator::Ignored" href="modememulator-ignored.html" subtype="group" title="Modem Emulator - Ignored Commands" fulltitle="Modem Emulator - Ignored Commands" subtitle="" location="atcommands.cpp"></page>
        <page access="public" status="commendable" name="syscust-sxe.html" href="syscust-sxe.html" subtype="page" title="SXE - System Integration" fulltitle="SXE - System Integration" subtitle="" location="syscust-sxe.qdoc">
            <target name="sxe-memory-limits"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="the-role-of-mac-in-sxe" title="The role of MAC in SXE" level="2"></contents>
            <contents name="lids-mac-kernel" title="LIDS MAC Kernel" level="1"></contents>
            <contents name="file-system-creation" title="File System Creation" level="1"></contents>
            <contents name="boot-process" title="Boot Process" level="1"></contents>
            <contents name="policy-file-creation" title="Policy File Creation" level="1"></contents>
            <contents name="qtopia-sxe-and-lids-mac-integration-points" title="Qtopia SXE and LIDS MAC Integration Points" level="1"></contents>
            <contents name="qtopia-sxe-domain-scripts" title="Qtopia SXE Domain Scripts" level="2"></contents>
            <contents name="setting-up-the-security-log" title="Setting up the security log" level="1"></contents>
            <contents name="memory-limits" title="Memory Limits" level="1"></contents>
            <contents name="troubleshooting-lids-for-greenphone" title="Troubleshooting LIDS for Greenphone" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="tut-helixplugin.html" href="tut-helixplugin.html" subtype="page" title="Tutorial: How to Create a Helix Plug-in" fulltitle="Tutorial: How to Create a Helix Plug-in" subtitle="" location="tut-helixplugin.qdoc">
            <target name="top"></target>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="QSXE_APP_KEY" href="sxeprograminfo.html#QSXE_APP_KEY" location="qtopiasxe.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="SxeProgramInfo" type="" signature="QSXE_APP_KEY()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QSXE_SET_APP_KEY" href="sxeprograminfo.html#QSXE_SET_APP_KEY" location="" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" relates="SxeProgramInfo" type="" signature="QSXE_SET_APP_KEY( name)">
            <parameter left="" right="" name="name" default=""></parameter>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QSXE_QL_APP_KEY" href="sxeprograminfo.html#QSXE_QL_APP_KEY" location="qtopiasxe.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="SxeProgramInfo" type="" signature="QSXE_QL_APP_KEY()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QSXE_SET_QL_KEY" href="sxeprograminfo.html#QSXE_SET_QL_KEY" location="" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" relates="SxeProgramInfo" type="" signature="QSXE_SET_QL_KEY( name)">
            <parameter left="" right="" name="name" default=""></parameter>
        </function>
        <page access="public" status="commendable" name="QtopiaServer::Task" href="qtopiaserver-task.html" subtype="group" title="Server Tasks" fulltitle="Server Tasks" subtitle="" location="qtopiaserver.qdoc"></page>
        <page access="public" status="commendable" name="QtopiaServer::Task::Interfaces" href="qtopiaserver-task-interfaces.html" subtype="group" title="Server Task Interfaces" fulltitle="Server Task Interfaces" subtitle="" location="qtopiaserver.qdoc"></page>
        <page access="public" status="commendable" name="QtopiaServer::Task::Bluetooth" href="qtopiaserver-task-bluetooth.html" subtype="group" title="Bluetooth Server Tasks" fulltitle="Bluetooth Server Tasks" subtitle="" location="qtopiaserver.qdoc"></page>
        <page access="public" status="commendable" name="QtopiaServer::Memory" href="qtopiaserver-memory.html" subtype="group" title="Qtopia Memory Management" fulltitle="Qtopia Memory Management" subtitle="" location="qtopiaserver.qdoc"></page>
        <page access="public" status="commendable" name="QtopiaServer" href="qtopiaserver.html" subtype="group" title="Qtopia Server Classes" fulltitle="Qtopia Server Classes" subtitle="" location="qtopiaserver.qdoc"></page>
        <page access="public" status="commendable" name="QtopiaServer::AppLaunch" href="qtopiaserver-applaunch.html" subtype="group" title="Application Control Subsystem" fulltitle="Application Control Subsystem" subtitle="" location="qtopiaserver.qdoc"></page>
        <page access="public" status="commendable" name="QtopiaServer::PhoneUI" href="qtopiaserver-phoneui.html" subtype="group" title="Phone UI classes" fulltitle="Phone UI classes" subtitle="" location="qtopiaserver.qdoc"></page>
        <page access="public" status="commendable" name="QtopiaServer::PhoneUI::TTSmartPhone" href="qtopiaserver-phoneui-ttsmartphone.html" subtype="group" title="Trolltech SmartPhone UI" fulltitle="Trolltech SmartPhone UI" subtitle="" location="qtopiaserver.qdoc"></page>
        <page access="public" status="commendable" name="QtopiaServer::PhoneUI::EzX" href="qtopiaserver-phoneui-ezx.html" subtype="group" title="EzX Lookalike UI" fulltitle="EzX Lookalike UI" subtitle="" location="qtopiaserver.qdoc"></page>
        <page access="public" status="commendable" name="QtopiaServer::Control" href="qtopiaserver-control.html" subtype="group" title="Control Classes" fulltitle="Control Classes" subtitle="" location="qtopiaserver.qdoc"></page>
        <page access="public" status="commendable" name="QtopiaServer::InputMethods" href="qtopiaserver-inputmethods.html" subtype="group" title="Server Handling for Input Methods" fulltitle="Server Handling for Input Methods" subtitle="" location="qtopiaserver.qdoc"></page>
        <page access="public" status="commendable" name="qtopia-3rdparty-licensing.html" href="qtopia-3rdparty-licensing.html" subtype="page" title="Third-Party Licenses Used in Qtopia" fulltitle="Third-Party Licenses Used in Qtopia" subtitle="" location="3rdparty-licensing.qdoc">
            <target name="top"></target>
        </page>
        <page access="public" status="commendable" name="syscust-index.html" href="syscust-index.html" subtype="page" title="System Customization" fulltitle="System Customization" subtitle="" location="syscust-index.qdoc">
            <contents name="introduction" title="Introduction" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="userinterface.html" href="userinterface.html" subtype="page" title="User Interface" fulltitle="User Interface" subtitle="" location="userinterface.qdoc">
            <target name="top"></target>
            <contents name="theming" title="Theming" level="1"></contents>
            <contents name="server-widgets" title="Server Widgets" level="1"></contents>
            <contents name="internationalization" title="Internationalization" level="1"></contents>
            <contents name="input-methods" title="Input Methods" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="software-reference.html" href="software-reference.html" subtype="page" title="Software Reference" fulltitle="Software Reference" subtitle="" location="reference-guide.qdoc"></page>
        <page access="public" status="commendable" name="docwidget.html" href="docwidget.html" subtype="page" title="Qtopia - Main Document Widget" fulltitle="Qtopia - Main Document Widget" subtitle="" location="syscust-mainwidget.qdoc">
            <target name="top"></target>
            <contents name="implementation" title="Implementation" level="1"></contents>
            <contents name="registering-mime-types" title="Registering MIME types" level="2"></contents>
            <contents name="run-time-registration" title="Run-time registration" level="2"></contents>
            <contents name="opening-a-document-in-another-application" title="Opening a document in another application" level="1"></contents>
            <contents name="selecting-a-document-within-an-application" title="Selecting a document within an application" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="sxe-model.html" href="sxe-model.html" subtype="page" title="SXE - Sandbox Model" fulltitle="SXE - Sandbox Model" subtitle="" location="sxe-model.qdoc">
            <contents name="the-implementation-of-the-sxe-logically-categorizes-all-applications-as-either-trusted-or-untrusted" title="The implementation of the SXE logically categorizes all applications as either trusted or untrusted." level="1"></contents>
        </page>
        <page access="public" status="commendable" name="phonebounce.html" href="phonebounce.html" subtype="page" title="phonebounce" fulltitle="phonebounce" subtitle="" location="phonebounce.qdoc">
            <target name="top"></target>
        </page>
        <page access="public" status="commendable" name="syscust-stdfonts.html" href="syscust-stdfonts.html" subtype="page" title="Standard Fonts" fulltitle="Standard Fonts" subtitle="" location="syscust-stdfonts.qdoc">
            <target name="top"></target>
            <keyword name="langspecfont"></keyword>
            <contents name="primary-fonts" title="Primary Fonts" level="1"></contents>
            <contents name="format-and-size" title="Format and Size" level="1"></contents>
            <contents name="language-specific-fonts" title="Language-specific Fonts" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="reportbugs.html" href="reportbugs.html" subtype="page" title="How to Report a Bug in Qtopia" fulltitle="How to Report a Bug in Qtopia" subtitle="" location="bugshowto.qdoc">
            <target name="top"></target>
        </page>
        <page access="public" status="commendable" name="syscust-writing-fast-apps.html" href="syscust-writing-fast-apps.html" subtype="page" title="Writing Applications that Start Quickly" fulltitle="Writing Applications that Start Quickly" subtitle="" location="syscust-writing-apps-that-start-quickly.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="delaying-code-execution" title="Delaying code execution." level="1"></contents>
        </page>
        <page access="public" status="commendable" name="fd-802.11WirelessIPsupport.html" href="fd-802-11wirelessipsupport.html" subtype="externalpage" title="Requirements: 802.11 Wireless IP support" fulltitle="Requirements: 802.11 Wireless IP support" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-AVStreaming.html" href="fd-avstreaming.html" subtype="externalpage" title="Requirements: AV Streaming" fulltitle="Requirements: AV Streaming" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Appearance.html" href="fd-appearance.html" subtype="externalpage" title="Requirements: Appearance" fulltitle="Requirements: Appearance" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-ApplicationExecution.html" href="fd-applicationexecution.html" subtype="externalpage" title="Requirements: Application Execution" fulltitle="Requirements: Application Execution" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Asteroids.html" href="fd-asteroids.html" subtype="externalpage" title="Requirements: Asteroids" fulltitle="Requirements: Asteroids" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-AudioManagement.html" href="fd-audiomanagement.html" subtype="externalpage" title="Requirements: Audio Management" fulltitle="Requirements: Audio Management" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Bidirectionality.html" href="fd-bidirectionality.html" subtype="externalpage" title="Requirements: Bidirectionality" fulltitle="Requirements: Bidirectionality" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Bluetooth.html" href="fd-bluetooth.html" subtype="externalpage" title="Requirements: Bluetooth" fulltitle="Requirements: Bluetooth" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-BuildSystem.html" href="fd-buildsystem.html" subtype="externalpage" title="Requirements: Build System" fulltitle="Requirements: Build System" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Calculator.html" href="fd-calculator.html" subtype="externalpage" title="Requirements: Calculator" fulltitle="Requirements: Calculator" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Calendar.html" href="fd-calendar.html" subtype="externalpage" title="Requirements: Calendar" fulltitle="Requirements: Calendar" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-CallForwarding.html" href="fd-callforwarding.html" subtype="externalpage" title="Requirements: Call Forwarding" fulltitle="Requirements: Call Forwarding" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-CallHistory.html" href="fd-callhistory.html" subtype="externalpage" title="Requirements: Call History" fulltitle="Requirements: Call History" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-CallManagement.html" href="fd-callmanagement.html" subtype="externalpage" title="Requirements: Call Management" fulltitle="Requirements: Call Management" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-CallNetworks.html" href="fd-callnetworks.html" subtype="externalpage" title="Requirements: Call Networks" fulltitle="Requirements: Call Networks" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-CallOptions.html" href="fd-calloptions.html" subtype="externalpage" title="Requirements: Call Options" fulltitle="Requirements: Call Options" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Camera.html" href="fd-camera.html" subtype="externalpage" title="Requirements: Camera" fulltitle="Requirements: Camera" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-ChineseInputMethod.html" href="fd-chineseinputmethod.html" subtype="externalpage" title="Requirements: Chinese Input Method" fulltitle="Requirements: Chinese Input Method" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Clock.html" href="fd-clock.html" subtype="externalpage" title="Requirements: Clock" fulltitle="Requirements: Clock" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-ColorSchemes.html" href="fd-colorschemes.html" subtype="externalpage" title="Requirements: Color Schemes" fulltitle="Requirements: Color Schemes" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Contacts.html" href="fd-contacts.html" subtype="externalpage" title="Requirements: Contacts" fulltitle="Requirements: Contacts" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-DRM.html" href="fd-drm.html" subtype="externalpage" title="Requirements: DRM" fulltitle="Requirements: DRM" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-DataSharing.html" href="fd-datasharing.html" subtype="externalpage" title="Requirements: Data Sharing" fulltitle="Requirements: Data Sharing" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Desktop.html" href="fd-desktop.html" subtype="externalpage" title="Requirements: Desktop" fulltitle="Requirements: Desktop" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Dialer.html" href="fd-dialer.html" subtype="externalpage" title="Requirements: Dialer" fulltitle="Requirements: Dialer" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Display.html" href="fd-display.html" subtype="externalpage" title="Requirements: Display" fulltitle="Requirements: Display" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-DocumentManagement.html" href="fd-documentmanagement.html" subtype="externalpage" title="Requirements: Document Management" fulltitle="Requirements: Document Management" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Email.html" href="fd-email.html" subtype="externalpage" title="Requirements: Email" fulltitle="Requirements: Email" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-EmergencyCalls.html" href="fd-emergencycalls.html" subtype="externalpage" title="Requirements: Emergency Calls" fulltitle="Requirements: Emergency Calls" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Fifteen.html" href="fd-fifteen.html" subtype="externalpage" title="Requirements: Fifteen" fulltitle="Requirements: Fifteen" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-FullScreenStrokeRecognition.html" href="fd-fullscreenstrokerecognition.html" subtype="externalpage" title="Requirements: Full Screen Stroke Recognition" fulltitle="Requirements: Full Screen Stroke Recognition" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-GPRS.html" href="fd-gprs.html" subtype="externalpage" title="Requirements: GPRS" fulltitle="Requirements: GPRS" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Greenphone.html" href="fd-greenphone.html" subtype="externalpage" title="Requirements: Greenphone" fulltitle="Requirements: Greenphone" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-HardKeys.html" href="fd-hardkeys.html" subtype="externalpage" title="Requirements: Hard Keys" fulltitle="Requirements: Hard Keys" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-HardwareNotification.html" href="fd-hardwarenotification.html" subtype="externalpage" title="Requirements: Hardware Notification" fulltitle="Requirements: Hardware Notification" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-HelixIntegration.html" href="fd-helixintegration.html" subtype="externalpage" title="Requirements: Helix Integration" fulltitle="Requirements: Helix Integration" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Help.html" href="fd-help.html" subtype="externalpage" title="Requirements: Help" fulltitle="Requirements: Help" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-HomeScreen.html" href="fd-homescreen.html" subtype="externalpage" title="Requirements: Home Screen" fulltitle="Requirements: Home Screen" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-InputMethods.html" href="fd-inputmethods.html" subtype="externalpage" title="Requirements: Input Methods" fulltitle="Requirements: Input Methods" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-InstalledSoftware.html" href="fd-installedsoftware.html" subtype="externalpage" title="Requirements: Installed Software" fulltitle="Requirements: Installed Software" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-IntegrationLayer.html" href="fd-integrationlayer.html" subtype="externalpage" title="Requirements: Integration Layer" fulltitle="Requirements: Integration Layer" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Internationalization.html" href="fd-internationalization.html" subtype="externalpage" title="Requirements: Internationalization" fulltitle="Requirements: Internationalization" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Internet.html" href="fd-internet.html" subtype="externalpage" title="Requirements: Internet" fulltitle="Requirements: Internet" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-IrDA.html" href="fd-irda.html" subtype="externalpage" title="Requirements: IrDA" fulltitle="Requirements: IrDA" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-LanguageSelection.html" href="fd-languageselection.html" subtype="externalpage" title="Requirements: Language Selection" fulltitle="Requirements: Language Selection" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Launcher.html" href="fd-launcher.html" subtype="externalpage" title="Requirements: Launcher" fulltitle="Requirements: Launcher" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Logging.html" href="fd-logging.html" subtype="externalpage" title="Requirements: Logging" fulltitle="Requirements: Logging" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-MIDI.html" href="fd-midi.html" subtype="externalpage" title="Requirements: MIDI" fulltitle="Requirements: MIDI" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-MMS.html" href="fd-mms.html" subtype="externalpage" title="Requirements: MMS" fulltitle="Requirements: MMS" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-MediaPlayer.html" href="fd-mediaplayer.html" subtype="externalpage" title="Requirements: Media Player" fulltitle="Requirements: Media Player" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Memory.html" href="fd-memory.html" subtype="externalpage" title="Requirements: Memory" fulltitle="Requirements: Memory" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Messaging.html" href="fd-messaging.html" subtype="externalpage" title="Requirements: Messaging" fulltitle="Requirements: Messaging" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-MessagingAccounts.html" href="fd-messagingaccounts.html" subtype="externalpage" title="Requirements: Messaging Accounts" fulltitle="Requirements: Messaging Accounts" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-MessagingFoldersandSearching.html" href="fd-messagingfoldersandsearching.html" subtype="externalpage" title="Requirements: Messaging Folders and Searching" fulltitle="Requirements: Messaging Folders and Searching" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-MineHunt.html" href="fd-minehunt.html" subtype="externalpage" title="Requirements: Mine Hunt" fulltitle="Requirements: Mine Hunt" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-ModemEmulation.html" href="fd-modememulation.html" subtype="externalpage" title="Requirements: Modem Emulation" fulltitle="Requirements: Modem Emulation" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-ModemSimulator.html" href="fd-modemsimulator.html" subtype="externalpage" title="Requirements: Modem Simulator" fulltitle="Requirements: Modem Simulator" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Multimedia.html" href="fd-multimedia.html" subtype="externalpage" title="Requirements: Multimedia" fulltitle="Requirements: Multimedia" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-MultipleDisplays.html" href="fd-multipledisplays.html" subtype="externalpage" title="Requirements: Multiple Displays" fulltitle="Requirements: Multiple Displays" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Multitasking.html" href="fd-multitasking.html" subtype="externalpage" title="Requirements: Multitasking" fulltitle="Requirements: Multitasking" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Navigation.html" href="fd-navigation.html" subtype="externalpage" title="Requirements: Navigation" fulltitle="Requirements: Navigation" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-OBEX.html" href="fd-obex.html" subtype="externalpage" title="Requirements: OBEX" fulltitle="Requirements: OBEX" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-OTA(Network).html" href="fd-ota-network.html" subtype="externalpage" title="Requirements: OTA (Network)" fulltitle="Requirements: OTA (Network)" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-OTA(PIM).html" href="fd-ota-pim.html" subtype="externalpage" title="Requirements: OTA (PIM)" fulltitle="Requirements: OTA (PIM)" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-OperatingSystem.html" href="fd-operatingsystem.html" subtype="externalpage" title="Requirements: Operating System" fulltitle="Requirements: Operating System" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-PIM.html" href="fd-pim.html" subtype="externalpage" title="Requirements: PIM" fulltitle="Requirements: PIM" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-PackageManager.html" href="fd-packagemanager.html" subtype="externalpage" title="Requirements: Package Manager" fulltitle="Requirements: Package Manager" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Pictures.html" href="fd-pictures.html" subtype="externalpage" title="Requirements: Pictures" fulltitle="Requirements: Pictures" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Plug-ins.html" href="fd-plug-ins.html" subtype="externalpage" title="Requirements: Plug-ins" fulltitle="Requirements: Plug-ins" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-PowerManagement.html" href="fd-powermanagement.html" subtype="externalpage" title="Requirements: Power Management" fulltitle="Requirements: Power Management" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-PredictiveInput.html" href="fd-predictiveinput.html" subtype="externalpage" title="Requirements: Predictive Input" fulltitle="Requirements: Predictive Input" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Printing.html" href="fd-printing.html" subtype="externalpage" title="Requirements: Printing" fulltitle="Requirements: Printing" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-ProcessManagement.html" href="fd-processmanagement.html" subtype="externalpage" title="Requirements: Process Management" fulltitle="Requirements: Process Management" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Profiles.html" href="fd-profiles.html" subtype="externalpage" title="Requirements: Profiles" fulltitle="Requirements: Profiles" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-QPicture.html" href="fd-qpicture.html" subtype="externalpage" title="Requirements: QPicture" fulltitle="Requirements: QPicture" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-RemovableStorage.html" href="fd-removablestorage.html" subtype="externalpage" title="Requirements: Removable Storage" fulltitle="Requirements: Removable Storage" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Resources.html" href="fd-resources.html" subtype="externalpage" title="Requirements: Resources" fulltitle="Requirements: Resources" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Ringtones.html" href="fd-ringtones.html" subtype="externalpage" title="Requirements: Ringtones" fulltitle="Requirements: Ringtones" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-SDK.html" href="fd-sdk.html" subtype="externalpage" title="Requirements: SDK" fulltitle="Requirements: SDK" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-SIMToolkit.html" href="fd-simtoolkit.html" subtype="externalpage" title="Requirements: SIM Toolkit" fulltitle="Requirements: SIM Toolkit" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-SMS.html" href="fd-sms.html" subtype="externalpage" title="Requirements: SMS" fulltitle="Requirements: SMS" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-SQLDatabase.html" href="fd-sqldatabase.html" subtype="externalpage" title="Requirements: SQL Database" fulltitle="Requirements: SQL Database" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-SVG.html" href="fd-svg.html" subtype="externalpage" title="Requirements: SVG" fulltitle="Requirements: SVG" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-SafeExecutionEnvironment.html" href="fd-safeexecutionenvironment.html" subtype="externalpage" title="Requirements: Safe Execution Environment" fulltitle="Requirements: Safe Execution Environment" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-SecuritySettings.html" href="fd-securitysettings.html" subtype="externalpage" title="Requirements: Security Settings" fulltitle="Requirements: Security Settings" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Services.html" href="fd-services.html" subtype="externalpage" title="Requirements: Services" fulltitle="Requirements: Services" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Snake.html" href="fd-snake.html" subtype="externalpage" title="Requirements: Snake" fulltitle="Requirements: Snake" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-SpeakerPhone.html" href="fd-speakerphone.html" subtype="externalpage" title="Requirements: Speaker Phone" fulltitle="Requirements: Speaker Phone" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-SpeedDialing.html" href="fd-speeddialing.html" subtype="externalpage" title="Requirements: Speed Dialing" fulltitle="Requirements: Speed Dialing" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-StandardsCompliance.html" href="fd-standardscompliance.html" subtype="externalpage" title="Requirements: Standards Compliance" fulltitle="Requirements: Standards Compliance" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-StereoSound.html" href="fd-stereosound.html" subtype="externalpage" title="Requirements: Stereo Sound" fulltitle="Requirements: Stereo Sound" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-StorageManagement.html" href="fd-storagemanagement.html" subtype="externalpage" title="Requirements: Storage Management" fulltitle="Requirements: Storage Management" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-StrokeRecognition.html" href="fd-strokerecognition.html" subtype="externalpage" title="Requirements: Stroke Recognition" fulltitle="Requirements: Stroke Recognition" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-SystemInfo.html" href="fd-systeminfo.html" subtype="externalpage" title="Requirements: System Info" fulltitle="Requirements: System Info" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Tasks.html" href="fd-tasks.html" subtype="externalpage" title="Requirements: Tasks" fulltitle="Requirements: Tasks" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Telephony.html" href="fd-telephony.html" subtype="externalpage" title="Requirements: Telephony" fulltitle="Requirements: Telephony" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-TextNotes.html" href="fd-textnotes.html" subtype="externalpage" title="Requirements: Text Notes" fulltitle="Requirements: Text Notes" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Themes.html" href="fd-themes.html" subtype="externalpage" title="Requirements: Themes" fulltitle="Requirements: Themes" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Time.html" href="fd-time.html" subtype="externalpage" title="Requirements: Time" fulltitle="Requirements: Time" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-TouchscreenCalibration.html" href="fd-touchscreencalibration.html" subtype="externalpage" title="Requirements: Touchscreen Calibration" fulltitle="Requirements: Touchscreen Calibration" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Transparency.html" href="fd-transparency.html" subtype="externalpage" title="Requirements: Transparency" fulltitle="Requirements: Transparency" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-USB.html" href="fd-usb.html" subtype="externalpage" title="Requirements: USB" fulltitle="Requirements: USB" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-UserInterface.html" href="fd-userinterface.html" subtype="externalpage" title="Requirements: User Interface" fulltitle="Requirements: User Interface" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-VPN.html" href="fd-vpn.html" subtype="externalpage" title="Requirements: VPN" fulltitle="Requirements: VPN" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-VideoRingtones.html" href="fd-videoringtones.html" subtype="externalpage" title="Requirements: Video Ringtones" fulltitle="Requirements: Video Ringtones" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-VoIP.html" href="fd-voip.html" subtype="externalpage" title="Requirements: VoIP" fulltitle="Requirements: VoIP" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-VoiceNotes.html" href="fd-voicenotes.html" subtype="externalpage" title="Requirements: Voice Notes" fulltitle="Requirements: Voice Notes" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-WAPStack.html" href="fd-wapstack.html" subtype="externalpage" title="Requirements: WAP Stack" fulltitle="Requirements: WAP Stack" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-WidgetStyles.html" href="fd-widgetstyles.html" subtype="externalpage" title="Requirements: Widget Styles" fulltitle="Requirements: Widget Styles" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-Words.html" href="fd-words.html" subtype="externalpage" title="Requirements: Words" fulltitle="Requirements: Words" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="fd-WorldTime.html" href="fd-worldtime.html" subtype="externalpage" title="Requirements: World Time" fulltitle="Requirements: World Time" subtitle="" location="fd-externpages.qdoc"></page>
        <page access="public" status="commendable" name="tools-list.html" href="tools-list.html" subtype="page" title="Tools" fulltitle="Tools" subtitle="" location="all-tools.qdoc"></page>
        <page access="public" status="commendable" name="syscust-internat.html" href="syscust-internat.html" subtype="page" title="Internationalization" fulltitle="Internationalization" subtitle="" location="syscust-internationalisation.qdoc">
            <target name="top"></target>
            <target name="description"></target>
            <target name="createinitialtsfiles"></target>
            <target name="translate"></target>
            <target name="releasefiles"></target>
            <target name="updatefiles"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="translating-qtopia" title="Translating Qtopia" level="1"></contents>
            <contents name="language-directory-and-language-description-file" title="Language Directory and Language Description File" level="2"></contents>
            <contents name="create-initial-version-of-translation-files" title="Create Initial Version of Translation Files" level="2"></contents>
            <contents name="translating-strings-using-linguist" title="Translating strings using Linguist" level="2"></contents>
            <contents name="install-translation-files" title="Install Translation Files" level="2"></contents>
            <contents name="updating-translation-files" title="Updating Translation Files" level="2"></contents>
            <contents name="fonts" title="Fonts" level="1"></contents>
            <contents name="program-internationalization" title="Program Internationalization" level="1"></contents>
            <contents name="placing-application-files" title="Placing Application Files" level="2"></contents>
            <contents name="placing-plug-in-files" title="Placing Plug-in Files" level="2"></contents>
            <contents name="desktop-configuration-file-internationalization" title="Desktop &amp; Configuration File Internationalization" level="1"></contents>
            <contents name="image-translation" title="Image Translation" level="1"></contents>
            <contents name="documentation-internationalization" title="Documentation Internationalization" level="1"></contents>
            <contents name="word-lists" title="Word Lists" level="1"></contents>
            <contents name="special-localizations" title="Special Localizations" level="1"></contents>
            <contents name="contacts" title="Contacts" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="tut-iviewer-part1.html" href="tut-iviewer-part1.html" subtype="page" title="Image Viewer Tutorial: Part 1" fulltitle="Image Viewer Tutorial: Part 1" subtitle="" location="tut-iviewer-p1.qdoc">
            <target name="top"></target>
            <contents name="ui-specification" title="UI Specification" level="0"></contents>
            <contents name="list-screen" title="List Screen" level="1"></contents>
            <contents name="image-screen" title="Image Screen" level="1"></contents>
            <contents name="info-dialog" title="Info Dialog" level="1"></contents>
            <contents name="screenshots" title="Screenshots" level="1"></contents>
            <contents name="implementation" title="Implementation" level="0"></contents>
            <contents name="initial-setup" title="Initial Setup" level="1"></contents>
            <contents name="the-list-screen" title="The List Screen" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="tut-prelink.html" href="tut-prelink.html" subtype="page" title="Tutorial: Using prelink" fulltitle="Tutorial: Using prelink" subtitle="" location="tut-prelink.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="prerequisites" title="Prerequisites" level="1"></contents>
            <contents name="process" title="Process" level="1"></contents>
            <contents name="example-configuration-file" title="Example Configuration File" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="syscust-keypadarch.html" href="syscust-keypadarch.html" subtype="page" title="Keypad Architecture" fulltitle="Keypad Architecture" subtitle="" location="syscust-keyarch.qdoc">
            <target name="top"></target>
            <target name="overridingscancode"></target>
            <keyword name="keypad-architecture"></keyword>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="keypad-architecture" title="Keypad Architecture" level="2"></contents>
            <contents name="default-scan-codes-for-qtopia-keys" title="Default Scan-codes for Qtopia Keys" level="3"></contents>
            <contents name="overriding-the-keyboard-handler-qtopia-keys" title="Overriding the Keyboard Handler Qtopia Keys" level="3"></contents>
            <contents name="key-interception" title="Key Interception" level="3"></contents>
        </page>
        <page access="public" status="commendable" name="sxe-alp.html" href="sxe-alp.html" subtype="page" title="SXE - Application Level Policy" fulltitle="SXE - Application Level Policy" subtitle="" location="sxe-alp.qdoc">
            <target name="service-request"></target>
            <contents name="service-access-control" title="Service Access Control" level="1"></contents>
            <contents name="request-authentication-and-authorization-procedure" title="Request Authentication and Authorization Procedure" level="1"></contents>
            <contents name="program-identification" title="Program Identification" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="tut-iviewer-part5.html" href="tut-iviewer-part5.html" subtype="page" title="Image Viewer Tutorial: Part 5" fulltitle="Image Viewer Tutorial: Part 5" subtitle="" location="tut-iviewer-p5.qdoc">
            <target name="top"></target>
            <contents name="the-info-screen" title="The Info Screen" level="0"></contents>
            <contents name="setting-up-the-screen" title="Setting up the screen" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="syscust-qvfb-skin.html" href="syscust-qvfb-skin.html" subtype="page" title="Customizing a Skin for QVFb" fulltitle="Customizing a Skin for QVFb" subtitle="" location="syscust-qvfb-skin.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="qvfb-skin-format" title="QVFb Skin Format" level="1"></contents>
            <contents name="coordinates" title="Coordinates" level="2"></contents>
            <contents name="defaultbuttons-conf" title="defaultbuttons.conf" level="2"></contents>
            <contents name="specifying-screen-size-independent-of-skin" title="Specifying Screen Size Independent of Skin" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="docsys-overview.html" href="docsys-overview.html" subtype="page" title="Document System" fulltitle="Document System" subtitle="" location="docsys-overview.qdoc">
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="features" title="Features" level="1"></contents>
            <contents name="selecting-documents" title="Selecting Documents" level="1"></contents>
            <contents name="tutorials" title="Tutorials" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="qtopia-licensing.html" href="qtopia-licensing.html" subtype="page" title="Qtopia Licensing" fulltitle="Qtopia Licensing" subtitle="" location="licensing.qdoc">
            <target name="top"></target>
            <contents name="modification-hints" title="Modification hints" level="1"></contents>
            <contents name="disclaimer" title="Disclaimer" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="qcop-tool.html" href="qcop-tool.html" subtype="page" title="qcop tool" fulltitle="qcop tool" subtitle="" location="qcop-tool.qdoc">
            <target name="top"></target>
        </page>
        <page access="public" status="commendable" name="qpeinputmethod-class-overview.html" href="qpeinputmethod-class-overview.html" subtype="page" title="Qtopia Input Methods: Class Overview" fulltitle="Qtopia Input Methods: Class Overview" subtitle="" location="inputmethods-class-overview.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="qwsinputmethod" title="QWSInputMethod" level="2"></contents>
            <contents name="qtopiainputmethod" title="QtopiaInputMethod" level="2"></contents>
            <contents name="server-side" title="Server-side" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="tut-mouse-ptr.html" href="tut-mouse-ptr.html" subtype="page" title="Tutorial: Mouse Pointer Calibration" fulltitle="Tutorial: Mouse Pointer Calibration" subtitle="" location="tut-mouse-ptr.qdoc">
            <target name="top"></target>
            <contents name="calibration" title="Calibration" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="tut-screenthemes.html" href="tut-screenthemes.html" subtype="page" title="Tutorial: Screen Themes" fulltitle="Tutorial: Screen Themes" subtitle="" location="tut-screenthemes.qdoc">
            <target name="top"></target>
            <keyword name="tuthomescreen"></keyword>
            <keyword name="tutcallscreen"></keyword>
            <contents name="home-screen" title="Home Screen" level="1"></contents>
            <contents name="example-without-pin-entry-pad" title="Example without PIN Entry Pad" level="2"></contents>
            <contents name="example-with-pin-entry-pad" title="Example with PIN Entry Pad" level="2"></contents>
            <contents name="call-screen" title="Call Screen" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="content/filtering" href="content-filtering.html" subtype="example" title="Tutorial: Content Filtering" fulltitle="Tutorial: Content Filtering" subtitle="" location="tut-contentfiltering.qdoc">
            <contents name="filterdemo-class-definition" title="FilterDemo Class Definition" level="1"></contents>
            <contents name="filterdemo-class-implementation" title="FilterDemo Class Implementation" level="1"></contents>
            <contents name="building-the-content-filtering-application" title="Building the Content Filtering application" level="1"></contents>
            <page access="public" status="commendable" name="content/filtering/filterdemo.cpp" href="content-filtering-filterdemo-cpp.html" subtype="file" title="" fulltitle="filterdemo.cpp Example File" subtitle="content/filtering/filterdemo.cpp" location=""></page>
            <page access="public" status="commendable" name="content/filtering/filterdemo.h" href="content-filtering-filterdemo-h.html" subtype="file" title="" fulltitle="filterdemo.h Example File" subtitle="content/filtering/filterdemo.h" location=""></page>
            <page access="public" status="commendable" name="content/filtering/main.cpp" href="content-filtering-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="content/filtering/main.cpp" location=""></page>
            <page access="public" status="commendable" name="content/filtering/filtering.pro" href="content-filtering-filtering-pro.html" subtype="file" title="" fulltitle="filtering.pro Example File" subtitle="content/filtering/filtering.pro" location=""></page>
        </page>
        <page access="public" status="commendable" name="ota.html" href="ota.html" subtype="page" title="OTA Support" fulltitle="OTA Support" subtitle="" location="ota.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="handling-incoming-sms-datagrams" title="Handling incoming SMS datagrams" level="1"></contents>
            <contents name="handling-incoming-wap-push-messages" title="Handling incoming WAP Push messages" level="1"></contents>
            <contents name="built-in-ota-message-types" title="Built-in OTA message types" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="database-policy.html" href="database-policy.html" subtype="page" title="Database Policy" fulltitle="Database Policy" subtitle="" location="database-policy.qdoc">
            <contents name="database-schema-modification-and-creation" title="Database Schema Modification and Creation" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="sxe-requirements.html" href="sxe-requirements.html" subtype="page" title="SXE - Aims and Limitations" fulltitle="SXE - Aims and Limitations" subtitle="" location="sxe-aims.qdoc">
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="use-case" title="Use-case" level="1"></contents>
            <contents name="discussion-of-benefits" title="Discussion of Benefits" level="1"></contents>
            <contents name="limitations" title="Limitations" level="1"></contents>
            <contents name="known-issues" title="Known Issues" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="tut-winddectheme.html" href="tut-winddectheme.html" subtype="page" title="Tutorial: Window Decoration Theme" fulltitle="Tutorial: Window Decoration Theme" subtitle="" location="tut-winddectheme.qdoc">
            <target name="top"></target>
            <keyword name="tutwinddec"></keyword>
            <contents name="window-decorations" title="Window Decorations" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="themed-views.html" href="themed-views.html" subtype="page" title="Themed Views" fulltitle="Themed Views" subtitle="" location="themed-views.qdoc">
            <target name="top"></target>
            <target name="themealignment"></target>
            <target name="templates"></target>
            <keyword name="themeexpressions"></keyword>
            <contents name="themed-views" title="Themed Views" level="1"></contents>
            <contents name="naming-elements" title="Naming Elements" level="2"></contents>
            <contents name="positioning-elements" title="Positioning Elements" level="2"></contents>
            <contents name="units" title="Units" level="3"></contents>
            <contents name="showing-hiding-elements" title="Showing/Hiding Elements" level="2"></contents>
            <contents name="specifying-colors" title="Specifying Colors" level="2"></contents>
            <contents name="alignment" title="Alignment" level="2"></contents>
            <contents name="stretching-images" title="Stretching Images" level="2"></contents>
            <contents name="interactive-elements" title="Interactive Elements" level="2"></contents>
            <contents name="expressions-and-valuespace" title="Expressions and Valuespace" level="2"></contents>
            <contents name="templates" title="Templates" level="2"></contents>
            <contents name="lists" title="Lists" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="styleguide-app-design.html" href="styleguide-app-design.html" subtype="page" title="Qtopia Style Guide: Application Design" fulltitle="Qtopia Style Guide: Application Design" subtitle="" location="styleguide-appdes.qdoc">
            <contents name="application-styles" title="Application Styles" level="1"></contents>
            <contents name="item-based-applications" title="Item-based Applications" level="2"></contents>
            <contents name="list-of-lists" title="List of Lists" level="3"></contents>
            <contents name="list-of-items" title="List of Items" level="3"></contents>
            <contents name="viewing-a-single-item" title="Viewing a Single Item" level="3"></contents>
            <contents name="editing-a-single-item" title="Editing a Single Item" level="3"></contents>
            <contents name="deleting-a-single-item" title="Deleting a Single Item" level="3"></contents>
            <contents name="navigational-flow" title="Navigational Flow" level="3"></contents>
            <contents name="form-layout" title="Form Layout" level="3"></contents>
            <contents name="task-based-applications" title="Task-based applications" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="tut-contextbar.html" href="tut-contextbar.html" subtype="page" title="Tutorial: Context Bar Theme" fulltitle="Tutorial: Context Bar Theme" subtitle="" location="tut-contextbar.qdoc">
            <target name="top"></target>
        </page>
        <page access="public" status="commendable" name="tut-themefiles.html" href="tut-themefiles.html" subtype="page" title="Tutorial: Theming Files" fulltitle="Tutorial: Theming Files" subtitle="" location="tut-themefiles.qdoc">
            <target name="top"></target>
            <keyword name="projtheme"></keyword>
            <keyword name="configtheme"></keyword>
            <contents name="theme-project-file" title="Theme Project File" level="1"></contents>
            <contents name="theme-configuration-file" title="Theme Configuration File" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="sycust-sql.html" href="sycust-sql.html" subtype="page" title="SQL Integration" fulltitle="SQL Integration" subtitle="" location="syscust-sql.qdoc">
            <contents name="sql-database-requirements" title="SQL Database Requirements" level="1"></contents>
            <contents name="concurrent-access" title="Concurrent Access" level="2"></contents>
            <contents name="internationalization" title="Internationalization" level="2"></contents>
            <contents name="sql-language-support" title="SQL Language Support" level="2"></contents>
            <contents name="performance-and-size" title="Performance and Size" level="2"></contents>
            <contents name="integration" title="Integration" level="1"></contents>
            <contents name="qsql" title="QSql" level="2"></contents>
            <contents name="specifying-the-sql-database-driver" title="Specifying the SQL Database Driver" level="2"></contents>
            <contents name="ensuring-table-schemas" title="Ensuring Table Schemas" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="tut-phoneapps.html" href="tut-phoneapps.html" subtype="page" title="Tutorial: Writing Qtopia Phone Applications" fulltitle="Tutorial: Writing Qtopia Phone Applications" subtitle="" location="tut-phoneapps.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="user-interface-changes" title="User Interface Changes" level="1"></contents>
            <contents name="keypad-navigation" title="Keypad Navigation" level="1"></contents>
            <contents name="the-soft-menu-bar" title="The Soft Menu Bar" level="1"></contents>
            <contents name="menus" title="Menus" level="1"></contents>
            <contents name="input-methods" title="Input Methods" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="syscust-keypadbutt.html" href="syscust-keypadbutt.html" subtype="page" title="Keypad Button Behavior" fulltitle="Keypad Button Behavior" subtitle="" location="syscust-keypad.qdoc">
            <target name="top"></target>
            <contents name="keypad-button-behavior" title="Keypad Button Behavior" level="1"></contents>
            <contents name="user-definable-button-mappings" title="User Definable Button Mappings" level="2"></contents>
            <contents name="phone-launcher-menu" title="Phone Launcher Menu" level="2"></contents>
            <contents name="phone-buttons" title="Phone Buttons" level="2"></contents>
            <contents name="input-methods" title="Input Methods" level="2"></contents>
            <contents name="phone-softkey-definition" title="Phone SoftKey Definition" level="2"></contents>
            <contents name="usual-key-meanings" title="Usual Key Meanings" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="tut-titlebar.html" href="tut-titlebar.html" subtype="page" title="Tutorial: Title Bar Theme" fulltitle="Tutorial: Title Bar Theme" subtitle="" location="tut-titlebar.qdoc">
            <target name="top"></target>
            <contents name="constructing-a-system-title-bar" title="Constructing a System Title Bar" level="1"></contents>
            <contents name="basic-title-bar-development" title="Basic Title Bar Development" level="2"></contents>
            <contents name="extending-the-title-bar" title="Extending the Title Bar" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="quicklaunch.html" href="quicklaunch.html" subtype="page" title="Quicklauncher" fulltitle="Quicklauncher" subtitle="" location="quicklaunch.qdoc">
            <target name="top"></target>
            <contents name="issues-affecting-application-startup-times" title="Issues affecting application startup times" level="1"></contents>
            <contents name="quicklauncher-stub-application" title="Quicklauncher Stub Application" level="1"></contents>
            <contents name="sxe-issues" title="SXE Issues" level="2"></contents>
            <contents name="launcher-integration" title="Launcher integration" level="1"></contents>
            <contents name="making-applications-quicklauncher-enabled" title="Making Applications quicklauncher Enabled" level="1"></contents>
            <contents name="initial-results" title="Initial Results" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="compile_run_examples.html" href="compile-run-examples.html" subtype="page" title="Compile and Run the Example Application" fulltitle="Compile and Run the Example Application" subtitle="" location="compile-run-examples.qdoc">
            <target name="top"></target>
            <contents name="compile-the-example-application" title="Compile the Example Application" level="1"></contents>
            <contents name="run-the-example-application" title="Run the Example Application" level="1"></contents>
            <contents name="install-directly-to-the-image" title="Install directly to the image" level="2"></contents>
            <contents name="install-via-a-package" title="Install via a package" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="content/notesdemo" href="content-notesdemo.html" subtype="example" title="Tutorial: A Notes Application" fulltitle="Tutorial: A Notes Application" subtitle="" location="tut-contentnotesapp.qdoc">
            <contents name="notesdemo-class-definition" title="NotesDemo Class Definition" level="1"></contents>
            <contents name="notesdemo-class-implementation" title="NotesDemo Class Implementation" level="1"></contents>
            <contents name="building-the-notes-application" title="Building the Notes application" level="1"></contents>
            <page access="public" status="commendable" name="content/notesdemo/notesdemo.cpp" href="content-notesdemo-notesdemo-cpp.html" subtype="file" title="" fulltitle="notesdemo.cpp Example File" subtitle="content/notesdemo/notesdemo.cpp" location=""></page>
            <page access="public" status="commendable" name="content/notesdemo/notesdemo.h" href="content-notesdemo-notesdemo-h.html" subtype="file" title="" fulltitle="notesdemo.h Example File" subtitle="content/notesdemo/notesdemo.h" location=""></page>
            <page access="public" status="commendable" name="content/notesdemo/main.cpp" href="content-notesdemo-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="content/notesdemo/main.cpp" location=""></page>
            <page access="public" status="commendable" name="content/notesdemo/notesdemo.pro" href="content-notesdemo-notesdemo-pro.html" subtype="file" title="" fulltitle="notesdemo.pro Example File" subtitle="content/notesdemo/notesdemo.pro" location=""></page>
        </page>
        <page access="public" status="commendable" name="tut-phonecalls.html" href="tut-phonecalls.html" subtype="page" title="Tutorial: Making Phone Calls" fulltitle="Tutorial: Making Phone Calls" subtitle="" location="tut-phonecalls.qdoc">
            <target name="top"></target>
            <keyword name="tutphonecalls"></keyword>
            <contents name="making-a-voice-call" title="Making a Voice Call" level="1"></contents>
            <contents name="making-a-data-call" title="Making a Data Call" level="1"></contents>
            <contents name="watching-for-an-incoming-voice-call" title="Watching for an Incoming Voice Call" level="1"></contents>
            <contents name="monitoring-the-state-of-all-calls" title="Monitoring the State of All Calls" level="1"></contents>
            <contents name="behind-the-scenes-making-a-voice-call" title="Behind the Scenes: Making a Voice Call" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="docsys-server.html" href="docsys-server.html" subtype="page" title="Document System: Document Server" fulltitle="Document System: Document Server" subtitle="" location="docsys-server.qdoc">
            <contents name="security" title="Security" level="1"></contents>
            <contents name="document-selector-service" title="Document Selector Service" level="1"></contents>
            <contents name="document-scanning" title="Document Scanning" level="1"></contents>
            <contents name="removable-media" title="Removable media" level="2"></contents>
            <contents name="directly-accessing-the-document-system" title="Directly Accessing the Document System" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="vobjectlegal.html" href="vobjectlegal.html" subtype="page" title="VObject" fulltitle="VObject" subtitle="" location="vobject.cpp"></page>
        <page access="public" status="commendable" name="syscust-gsm.html" href="syscust-gsm.html" subtype="page" title="GSM Modem Integration" fulltitle="GSM Modem Integration" subtitle="" location="syscust-gsm.qdoc">
            <target name="top"></target>
            <keyword name="gsm-modem-integration"></keyword>
            <keyword name="modem-emulator"></keyword>
            <contents name="gsm-modem-integration" title="GSM Modem Integration" level="1"></contents>
            <contents name="outline-of-a-modem-vendor-plugin" title="Outline of a Modem Vendor Plugin" level="1"></contents>
            <contents name="modem-porting-sequence" title="Modem Porting Sequence" level="1"></contents>
            <contents name="modem-emulator" title="Modem Emulator" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="sxe-pkgmgr-profiles.html" href="sxe-pkgmgr-profiles.html" subtype="page" title="SXE - Customizing Domains" fulltitle="SXE - Customizing Domains" subtitle="" location="sxe-pkgmg-profiles.qdoc">
            <target name="sxe-domains"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="modifying-application-level-policy" title="Modifying application level policy" level="1"></contents>
            <contents name="modifying-os-level-policy" title="Modifying OS Level policy" level="1"></contents>
            <contents name="troubleshooting" title="Troubleshooting" level="1"></contents>
            <contents name="domains" title="Domains" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="syscust-perform.html" href="syscust-perform.html" subtype="page" title="Identifying Performance Issues" fulltitle="Identifying Performance Issues" subtitle="" location="syscust-perform.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="process" title="Process" level="1"></contents>
            <contents name="checking-memory-usage" title="Checking Memory Usage" level="1"></contents>
            <contents name="things-to-note" title="Things to Note" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="qdawggen.html" href="qdawggen.html" subtype="page" title="qdawggen" fulltitle="qdawggen" subtitle="" location="qdawggen.qdoc">
            <target name="top"></target>
            <contents name="generating-qdawg-files-with-qdawggen" title="Generating QDawg files with qdawggen" level="1"></contents>
            <contents name="invoking-qdawggen-directly" title="Invoking qdawggen Directly" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="syscust-dpi.html" href="syscust-dpi.html" subtype="page" title="Setting Display Size" fulltitle="Setting Display Size" subtitle="" location="syscust-dpi.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="font-sizes" title="Font Sizes" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="index.html" href="index.html" subtype="page" title="Qtopia Developer Resources" fulltitle="Qtopia Developer Resources" subtitle="" location="index.qdoc"></page>
        <page access="public" status="commendable" name="syscust-icons.html" href="syscust-icons.html" subtype="page" title="Images and Icons" fulltitle="Images and Icons" subtitle="" location="syscust-icons.qdoc">
            <target name="top"></target>
            <contents name="images" title="Images" level="1"></contents>
            <contents name="icons" title="Icons" level="1"></contents>
            <contents name="installing-custom-icons" title="Installing Custom Icons" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="docsys-drmintegr.html" href="docsys-drmintegr.html" subtype="page" title="Document System: DRM Integration" fulltitle="Document System: DRM Integration" subtitle="" location="docsys-drmintegr.qdoc">
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="rendering-drm-content" title="Rendering DRM Content" level="1"></contents>
            <contents name="downloading-and-receiving-drm-files" title="Downloading and Receiving DRM Files" level="1"></contents>
            <contents name="oma-drm" title="OMA DRM" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="release-index.html" href="release-index.html" subtype="page" title="Qtopia Release Notes (Open Source Edition)" fulltitle="Qtopia Release Notes (Open Source Edition)" subtitle="" location="releasenotes.qdoc">
            <contents name="qtopia-release-notes-open-source-edition" title="Qtopia Release Notes (Open Source Edition)" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="release-4.3.1.html" href="release-4-3-1.html" subtype="page" title="Qtopia - 4.3.1 Release Notes" fulltitle="Qtopia - 4.3.1 Release Notes" subtitle="" location="releasenotes.qdoc">
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="enhancements" title="Enhancements" level="1"></contents>
            <contents name="deprecated-features" title="Deprecated Features" level="1"></contents>
            <contents name="bug-fixes" title="Bug Fixes" level="1"></contents>
            <contents name="known-issues" title="Known Issues" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="release-4.3.0.html" href="release-4-3-0.html" subtype="page" title="Qtopia - 4.3.0 Release Notes" fulltitle="Qtopia - 4.3.0 Release Notes" subtitle="" location="releasenotes.qdoc">
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="enhancements" title="Enhancements" level="1"></contents>
            <contents name="bug-fixes" title="Bug Fixes" level="1"></contents>
            <contents name="known-issues" title="Known Issues" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="release-4.2.5.html" href="release-4-2-5.html" subtype="page" title="Qtopia - 4.2.5 Release Notes" fulltitle="Qtopia - 4.2.5 Release Notes" subtitle="" location="releasenotes.qdoc">
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="enhancements" title="Enhancements" level="1"></contents>
            <contents name="bug-fixes" title="Bug Fixes" level="1"></contents>
            <contents name="known-issues" title="Known Issues" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="release-4.2.4.html" href="release-4-2-4.html" subtype="page" title="Qtopia - 4.2.4 Release Notes" fulltitle="Qtopia - 4.2.4 Release Notes" subtitle="" location="releasenotes.qdoc">
            <contents name="introduction" title="Introduction" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="release-4.2.3.html" href="release-4-2-3.html" subtype="page" title="Qtopia - 4.2.3 Release Notes" fulltitle="Qtopia - 4.2.3 Release Notes" subtitle="" location="releasenotes.qdoc">
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="enhancements" title="Enhancements" level="1"></contents>
            <contents name="bug-fixes" title="Bug Fixes" level="1"></contents>
            <contents name="known-issues" title="Known Issues" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="release-4.2.2.html" href="release-4-2-2.html" subtype="page" title="Qtopia - 4.2.2 Release Notes" fulltitle="Qtopia - 4.2.2 Release Notes" subtitle="" location="releasenotes.qdoc">
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="enhancements" title="Enhancements" level="1"></contents>
            <contents name="optimizations" title="Optimizations" level="1"></contents>
            <contents name="bug-fixes" title="Bug Fixes" level="1"></contents>
            <contents name="known-issues" title="Known Issues" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="release-4.2.1.html" href="release-4-2-1.html" subtype="page" title="Qtopia - 4.2.1 Release Notes" fulltitle="Qtopia - 4.2.1 Release Notes" subtitle="" location="releasenotes.qdoc">
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="enhancements" title="Enhancements" level="1"></contents>
            <contents name="optimizations" title="Optimizations" level="1"></contents>
            <contents name="bug-fixes" title="Bug Fixes" level="1"></contents>
            <contents name="known-issues" title="Known Issues" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="release-4.2.0.html" href="release-4-2-0.html" subtype="page" title="Qtopia - 4.2.0 Release Notes" fulltitle="Qtopia - 4.2.0 Release Notes" subtitle="" location="releasenotes.qdoc">
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="enhancements" title="Enhancements" level="1"></contents>
            <contents name="optimizations" title="Optimizations" level="1"></contents>
            <contents name="bug-fixes" title="Bug Fixes" level="1"></contents>
            <contents name="known-issues" title="Known Issues" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="tut-iviewer-part6.html" href="tut-iviewer-part6.html" subtype="page" title="Image Viewer Tutorial: Part 6" fulltitle="Image Viewer Tutorial: Part 6" subtitle="" location="tut-iviewer-p6.qdoc">
            <target name="top"></target>
            <contents name="adding-fullscreen-mode-to-image-screen" title="Adding Fullscreen Mode to Image Screen" level="0"></contents>
        </page>
        <page access="public" status="commendable" name="qpepim-class-overview.html" href="qpepim-class-overview.html" subtype="page" title="PIM Library: Class Overview" fulltitle="PIM Library: Class Overview" subtitle="" location="qpim-class-overview.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="record-classes" title="Record Classes" level="2"></contents>
            <contents name="model-classes" title="Model Classes" level="2"></contents>
            <contents name="gui-classes" title="GUI Classes" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="single-exec.html" href="single-exec.html" subtype="page" title="Qtopia Single Exec" fulltitle="Qtopia Single Exec" subtitle="" location="single-exec.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="costs-benefits" title="Costs/Benefits" level="1"></contents>
            <contents name="how-it-works" title="How it works" level="1"></contents>
            <contents name="issues" title="Issues" level="1"></contents>
            <contents name="building-single-exec" title="Building Single-exec" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="vsexplorer.html" href="vsexplorer.html" subtype="page" title="vsexplorer" fulltitle="vsexplorer" subtitle="" location="vsexplorer.qdoc">
            <target name="top"></target>
            <contents name="exploring-the-value-space-with-vsexplorer" title="Exploring the Value Space with vsexplorer" level="1"></contents>
            <contents name="commands" title="Commands" level="2"></contents>
            <contents name="dump-mode" title="Dump Mode" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="docsys-metadata.html" href="docsys-metadata.html" subtype="page" title="Document System - Content Meta-data" fulltitle="Document System - Content Meta-data" subtitle="" location="docsys-metadata.qdoc">
            <contents name="overview" title="Overview" level="1"></contents>
            <contents name="core-meta-data" title="Core Meta-data" level="1"></contents>
            <contents name="derived-meta-data" title="Derived Meta-data" level="2"></contents>
            <contents name="properties" title="Properties" level="1"></contents>
            <contents name="categories" title="Categories" level="1"></contents>
            <contents name="application-meta-data" title="Application Meta-data" level="1"></contents>
            <contents name="content-plug-ins" title="Content Plug-ins" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="syscust-helix.html" href="syscust-helix.html" subtype="page" title="Building Helix Modules Externally" fulltitle="Building Helix Modules Externally" subtitle="" location="syscust-helix.qdoc">
            <target name="top"></target>
            <contents name="building-modules-for-the-desktop" title="Building Modules for the Desktop" level="1"></contents>
            <contents name="desktop-mp3-module" title="Desktop MP3 Module" level="2"></contents>
            <contents name="building-modules-for-greenphone" title="Building Modules for Greenphone" level="1"></contents>
            <contents name="greenphone-mp3-module" title="Greenphone MP3 Module" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="files.html" href="files.html" subtype="page" title="File System Standards" fulltitle="File System Standards" subtitle="" location="files.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="definitions" title="Definitions" level="1"></contents>
            <contents name="file-name-standards" title="File Name Standards" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="desktopfiles.html" href="desktopfiles.html" subtype="page" title="Desktop File Standard" fulltitle="Desktop File Standard" subtitle="" location="files.qdoc">
            <target name="desktop"></target>
            <contents name="installation" title="Installation" level="1"></contents>
            <contents name="file-format" title="File Format" level="1"></contents>
            <contents name="desktop-entry" title="Desktop Entry" level="2"></contents>
            <contents name="translation" title="Translation" level="2"></contents>
            <contents name="drm" title="DRM" level="2"></contents>
            <contents name="other-groups" title="Other groups" level="2"></contents>
            <contents name="example-application-desktop-file" title="Example Application .desktop file" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="ipc/cannonserver" href="ipc-cannonserver.html" subtype="example" title="Tutorial: Qtopia IPC Server" fulltitle="Tutorial: Qtopia IPC Server" subtitle="" location="tut-ipcserver.qdoc">
            <contents name="cannonlistener-class-definition" title="CannonListener Class Definition" level="1"></contents>
            <contents name="cannonlistener-class-implementation" title="CannonListener Class Implementation" level="1"></contents>
            <contents name="building-the-cannon-listener-application" title="Building the Cannon Listener application." level="1"></contents>
            <page access="public" status="commendable" name="ipc/cannonserver/main.cpp" href="ipc-cannonserver-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="ipc/cannonserver/main.cpp" location=""></page>
            <page access="public" status="commendable" name="ipc/cannonserver/cannonserver.pro" href="ipc-cannonserver-cannonserver-pro.html" subtype="file" title="" fulltitle="cannonserver.pro Example File" subtitle="ipc/cannonserver/cannonserver.pro" location=""></page>
        </page>
        <page access="public" status="commendable" name="tarlegal.html" href="tarlegal.html" subtype="page" title="Tar" fulltitle="Tar" subtitle="" location="tarlegal.cpp"></page>
        <page access="public" status="commendable" name="phonelibrary.html" href="phonelibrary.html" subtype="page" title="Qtopia Phone Library" fulltitle="Qtopia Phone Library" subtitle="" location="phonelibrary.qdoc">
            <target name="top"></target>
            <contents name="services-and-interfaces" title="Services and Interfaces" level="1"></contents>
            <contents name="using-telephony-interfaces" title="Using Telephony Interfaces" level="1"></contents>
            <contents name="implementing-telephony-interfaces" title="Implementing Telephony Interfaces" level="1"></contents>
            <contents name="automatic-starting-of-telephony-services" title="Automatic Starting of Telephony Services" level="1"></contents>
            <contents name="modem-services" title="Modem Services" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="groups.html" href="groups.html" subtype="page" title="Grouped Classes" fulltitle="Grouped Classes" subtitle="" location="groups.qdoc">
            <contents name="ui-controls-interaction" title="UI Controls &amp; Interaction" level="1"></contents>
            <contents name="media-and-document-handling" title="Media and Document Handling" level="1"></contents>
            <contents name="input-output" title="Input/Output" level="1"></contents>
            <contents name="data-structures" title="Data Structures" level="1"></contents>
            <contents name="system-access" title="System Access" level="1"></contents>
            <contents name="qtopia-server-classes" title="Qtopia Server classes" level="1"></contents>
            <contents name="qtopia-third-party" title="Qtopia Third-party" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="qtopia3rdparty" href="qtopia3rdparty.html" subtype="group" title="Qtopia Third-party" fulltitle="Qtopia Third-party" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="advanced" href="advanced.html" subtype="group" title="Advanced Widgets" fulltitle="Advanced Widgets" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="abstractwidgets" href="abstractwidgets.html" subtype="group" title="Abstract Widget Classes" fulltitle="Abstract Widget Classes" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="accessibility" href="accessibility.html" subtype="group" title="Accessibility Classes" fulltitle="Accessibility Classes" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="appearance" href="appearance.html" subtype="group" title="Widget Appearance and Style" fulltitle="Widget Appearance and Style" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="basic" href="basic.html" subtype="group" title="Basic Widgets" fulltitle="Basic Widgets" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="database" href="database.html" subtype="group" title="Database Classes" fulltitle="Database Classes" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="dialogs" href="dialogs.html" subtype="group" title="Standard Dialog Classes" fulltitle="Standard Dialog Classes" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="environment" href="environment.html" subtype="group" title="Environment Classes" fulltitle="Environment Classes" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="events" href="events.html" subtype="group" title="Event Classes" fulltitle="Event Classes" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="geomanagement" href="geomanagement.html" subtype="group" title="Layout Management" fulltitle="Layout Management" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="helpsystem" href="helpsystem.html" subtype="group" title="Help System" fulltitle="Help System" subtitle="" location="groups.qdoc">
            <keyword name="help-system"></keyword>
        </page>
        <page access="public" status="commendable" name="io" href="io.html" subtype="group" title="File I/O and Networking" fulltitle="File I/O and Networking" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="misc" href="misc.html" subtype="group" title="Miscellaneous Classes" fulltitle="Miscellaneous Classes" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="model-view" href="model-view.html" subtype="group" title="Model/View Classes" fulltitle="Model/View Classes" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="multimedia" href="multimedia.html" subtype="group" title="Multimedia, Graphics, and Printing" fulltitle="Multimedia, Graphics, and Printing" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="objectmodel" href="objectmodel.html" subtype="group" title="Object Model" fulltitle="Object Model" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="organizers" href="organizers.html" subtype="group" title="Organizers" fulltitle="Organizers" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="plugins" href="plugins.html" subtype="group" title="Plug-in Classes" fulltitle="Plug-in Classes" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="qws" href="qws.html" subtype="group" title="Window System Classes" fulltitle="Window System Classes" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="text" href="text.html" subtype="group" title="Text Related Classes" fulltitle="Text Related Classes" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="thread" href="thread.html" subtype="group" title="Threading Classes" fulltitle="Threading Classes" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="time" href="time.html" subtype="group" title="Date and Time Classes" fulltitle="Date and Time Classes" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="tools" href="tools.html" subtype="group" title="Tool Classes" fulltitle="Tool Classes" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="xml-tools" href="xml-tools.html" subtype="group" title="XML Classes" fulltitle="XML Classes" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="script" href="script.html" subtype="group" title="Script Classes" fulltitle="Script Classes" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="hardware" href="hardware.html" subtype="group" title="Hardware" fulltitle="Hardware" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="telephony" href="telephony.html" subtype="group" title="Telephony Classes" fulltitle="Telephony Classes" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="telephony::modem" href="telephony-modem.html" subtype="group" title="Modem Classes" fulltitle="Modem Classes" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="telephony::serial" href="telephony-serial.html" subtype="group" title="Serial Device Classes" fulltitle="Serial Device Classes" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="userinput" href="userinput.html" subtype="group" title="User Input Processing" fulltitle="User Input Processing" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="pim" href="pim.html" subtype="group" title="Personal Information Management (PIM)" fulltitle="Personal Information Management (PIM)" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="ipc" href="ipc.html" subtype="group" title="Interprocess Communication (IPC)" fulltitle="Interprocess Communication (IPC)" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="documentselection" href="documentselection.html" subtype="group" title="Document Selection" fulltitle="Document Selection" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="installedsoftware" href="installedsoftware.html" subtype="group" title="Installed Software" fulltitle="Installed Software" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="content" href="content.html" subtype="group" title="Content" fulltitle="Content" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="drm" href="drm.html" subtype="group" title="DRM" fulltitle="DRM" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="qtopiabluetooth" href="qtopiabluetooth.html" subtype="group" title="Bluetooth" fulltitle="Bluetooth" subtitle="" location="groups.qdoc">
            <target name="top"></target>
        </page>
        <page access="public" status="commendable" name="qtopiaobex" href="qtopiaobex.html" subtype="group" title="OBEX" fulltitle="OBEX" subtitle="" location="groups.qdoc">
            <target name="top"></target>
        </page>
        <page access="public" status="commendable" name="qtopiair" href="qtopiair.html" subtype="group" title="IrDA" fulltitle="IrDA" subtitle="" location="groups.qdoc">
            <target name="top"></target>
        </page>
        <page access="public" status="commendable" name="messaginglibrary" href="messaginglibrary.html" subtype="group" title="Messaging Classes" fulltitle="Messaging Classes" subtitle="" location="groups.qdoc"></page>
        <page access="public" status="commendable" name="datasharing.html" href="datasharing.html" subtype="page" title="Qtopia Data Sharing (QDS)" fulltitle="Qtopia Data Sharing (QDS)" subtitle="" location="datasharing.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="how-it-works" title="How it Works" level="1"></contents>
            <contents name="using-qds" title="Using QDS" level="1"></contents>
            <contents name="finding-qds-services" title="Finding QDS services" level="2"></contents>
            <contents name="requesting-qds-services" title="Requesting QDS services" level="2"></contents>
            <contents name="example-of-synchronous-request" title="Example of synchronous request" level="3"></contents>
            <contents name="example-of-asynchronous-request" title="Example of asynchronous request" level="3"></contents>
            <contents name="security-policy" title="Security Policy" level="3"></contents>
            <contents name="providing-qds-services" title="Providing QDS services" level="2"></contents>
            <contents name="security-policy" title="Security Policy" level="3"></contents>
            <contents name="extensibility" title="Extensibility" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="tut-iviewer-part2.html" href="tut-iviewer-part2.html" subtype="page" title="Image Viewer Tutorial: Part 2" fulltitle="Image Viewer Tutorial: Part 2" subtitle="" location="tut-iviewer-p2.qdoc">
            <target name="top"></target>
            <contents name="ui-specification" title="UI Specification" level="0"></contents>
            <contents name="adding-content" title="Adding Content" level="1"></contents>
            <contents name="creating-the-list-screen" title="Creating the list screen" level="2"></contents>
            <contents name="setup-the-model" title="Setup the model" level="2"></contents>
            <contents name="populating-the-list" title="Populating the list" level="2"></contents>
            <contents name="providing-actions-to-the-list-screen" title="Providing Actions to the list screen" level="1"></contents>
            <contents name="adding-key-select-default-behaviour" title="Adding Key Select default behaviour" level="1"></contents>
            <contents name="opening-image-using-signals-and-slots" title="Opening image using signals and slots" level="1"></contents>
            <contents name="opening-image-using-key-events" title="Opening image using key Events" level="1"></contents>
            <contents name="summary" title="Summary" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="qtopia-components.html" href="qtopia-components.html" subtype="page" title="Qtopia Components" fulltitle="Qtopia Components" subtitle="" location="generated_module_descriptions.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="source-code-availability-matrix" title="Source Code Availability Matrix" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="syscust-drm.html" href="syscust-drm.html" subtype="page" title="DRM Agent Integration" fulltitle="DRM Agent Integration" subtitle="" location="syscust-drm.qdoc">
            <target name="top"></target>
            <contents name="drm-agent-integration" title="DRM Agent Integration" level="1"></contents>
            <contents name="license-management-and-settings-application" title="License Management and Settings Application" level="2"></contents>
            <contents name="drm-services" title="DRM Services" level="2"></contents>
            <contents name="installation" title="Installation" level="2"></contents>
            <contents name="beep-science-oma-drm-agent" title="Beep Science OMA DRM Agent" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="atdlegal.html" href="atdlegal.html" subtype="page" title="atd" fulltitle="atd" subtitle="" location="atd.cpp"></page>
        <page access="public" status="commendable" name="gsmlegal.html" href="gsmlegal.html" subtype="page" title="GSM" fulltitle="GSM" subtitle="" location="qtopiagsm.cpp"></page>
        <page access="public" status="commendable" name="bluetooth-servicemanager.html" href="bluetooth-servicemanager.html" subtype="page" title="Bluetooth Service Management Framework" fulltitle="Bluetooth Service Management Framework" subtitle="" location="bluetooth-servicemanager.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="architecture" title="Architecture" level="2"></contents>
            <contents name="creating-a-custom-bluetooth-service" title="Creating a custom Bluetooth service" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="sxe-pkgmgr-ctlfile.html" href="sxe-pkgmgr-ctlfile.html" subtype="page" title="SXE - Control File" fulltitle="SXE - Control File" subtitle="" location="sxe-pkgmgr-ctlfile.qdoc">
            <target name="packages-list"></target>
            <target name="qpd-descriptor"></target>
            <contents name="control-file" title="Control file" level="1"></contents>
            <contents name="packages-list-file" title="packages.list file" level="1"></contents>
            <contents name="descriptor-file" title="Descriptor file" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="qtopiamail.html" href="qtopiamail.html" subtype="page" title="Qtopia Messaging Library" fulltitle="Qtopia Messaging Library" subtitle="" location="qtopiamail.qdoc">
            <contents name="overview" title="Overview" level="1"></contents>
            <contents name="composition-and-manipulation-of-messages" title="Composition and Manipulation of Messages" level="1"></contents>
            <contents name="sorting-and-searching-functionality" title="Sorting and Searching Functionality" level="1"></contents>
            <contents name="message-composer-and-viewer-plugins" title="Message Composer and Viewer Plugins" level="1"></contents>
            <contents name="concurrent-access-to-messaging-data" title="Concurrent Access to Messaging Data" level="1"></contents>
            <contents name="abstraction-of-messaging-data-storage-mechanism" title="Abstraction of Messaging Data Storage Mechanism" level="1"></contents>
            <contents name="assumptions-and-dependencies" title="Assumptions and Dependencies" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="content/changelistener" href="content-changelistener.html" subtype="example" title="Tutorial: Listening for Content Changes" fulltitle="Tutorial: Listening for Content Changes" subtitle="" location="tut-contentchange.qdoc">
            <contents name="changelistener-class-definition" title="ChangeListener Class Definition" level="1"></contents>
            <contents name="changelistener-class-implementation" title="ChangeListener Class Implementation" level="1"></contents>
            <contents name="building-the-change-listener-application" title="Building the Change Listener application." level="1"></contents>
            <page access="public" status="commendable" name="content/changelistener/changelistener.cpp" href="content-changelistener-changelistener-cpp.html" subtype="file" title="" fulltitle="changelistener.cpp Example File" subtitle="content/changelistener/changelistener.cpp" location=""></page>
            <page access="public" status="commendable" name="content/changelistener/changelistener.h" href="content-changelistener-changelistener-h.html" subtype="file" title="" fulltitle="changelistener.h Example File" subtitle="content/changelistener/changelistener.h" location=""></page>
            <page access="public" status="commendable" name="content/changelistener/main.cpp" href="content-changelistener-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="content/changelistener/main.cpp" location=""></page>
            <page access="public" status="commendable" name="content/changelistener/changelistener.pro" href="content-changelistener-changelistener-pro.html" subtype="file" title="" fulltitle="changelistener.pro Example File" subtitle="content/changelistener/changelistener.pro" location=""></page>
        </page>
        <page access="public" status="commendable" name="building_guide.html" href="building-guide.html" subtype="page" title="Guide to Configuring and Building Qtopia" fulltitle="Guide to Configuring and Building Qtopia" subtitle="" location="new-user-guide.qdoc">
            <contents name="getting-started" title="Getting Started" level="1"></contents>
            <contents name="prepare-the-external-dependencies" title="Prepare the External Dependencies" level="2"></contents>
            <contents name="prepare-the-source-tree" title="Prepare the Source Tree" level="2"></contents>
            <contents name="prepare-the-build-tree" title="Prepare the Build Tree" level="2"></contents>
            <contents name="create-device-specific-files" title="Create Device-specific Files" level="1"></contents>
            <contents name="taming-the-configuration-explosion" title="Taming the Configuration Explosion" level="1"></contents>
            <contents name="build-steps" title="Build Steps" level="1"></contents>
            <contents name="configure" title="configure" level="2"></contents>
            <contents name="make" title="make" level="2"></contents>
            <contents name="make-install" title="make install" level="2"></contents>
            <contents name="now-what" title="Now What?" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="messaging.html" href="messaging.html" subtype="page" title="Messages" fulltitle="Messages" subtitle="" location="messaging.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="features" title="Features" level="1"></contents>
            <contents name="accounts" title="Accounts" level="1"></contents>
            <contents name="folders" title="Folders" level="1"></contents>
            <contents name="mail-list-per-folder" title="Mail List (per folder)" level="2"></contents>
            <contents name="virtual-folder-queries-and-search" title="Virtual Folder Queries and Search" level="2"></contents>
            <contents name="message-properties" title="Message Properties" level="1"></contents>
            <contents name="viewing-mail" title="Viewing mail" level="1"></contents>
            <contents name="viewing-mms-messages" title="Viewing MMS Messages" level="1"></contents>
            <contents name="writing-messages" title="Writing Messages" level="1"></contents>
            <contents name="writing-mms-messages" title="Writing MMS Messages" level="1"></contents>
            <contents name="retrieving-messages" title="Retrieving messages" level="1"></contents>
            <contents name="retrieving-mms-messages" title="Retrieving MMS Messages" level="1"></contents>
            <contents name="sending-messages" title="Sending messages" level="1"></contents>
            <contents name="dependencies" title="Dependencies" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="qtopia-startup.html" href="qtopia-startup.html" subtype="page" title="Qtopia startup" fulltitle="Qtopia startup" subtitle="" location="startup-tasks.qdoc"></page>
        <page access="public" status="commendable" name="syscust-oom.html" href="syscust-oom.html" subtype="page" title="Handling Out Of Memory" fulltitle="Handling Out Of Memory" subtitle="" location="syscust-oom.qdoc">
            <target name="top"></target>
            <contents name="the-out-of-memory-problem-oom" title="The Out Of Memory Problem (OOM)" level="1"></contents>
            <contents name="oom-in-the-desktop-environment" title="OOM in the Desktop Environment" level="2"></contents>
            <contents name="oom-in-qtopia" title="OOM in Qtopia" level="2"></contents>
            <contents name="how-linux-handles-the-expected-oom-problem" title="How Linux Handles the Expected OOM Problem" level="1"></contents>
            <contents name="handling-oom-in-linux-2-4" title="Handling OOM in Linux 2.4" level="2"></contents>
            <contents name="handling-oom-in-linux-2-6" title="Handling OOM in Linux 2.6" level="2"></contents>
            <contents name="unacceptable-consequences-for-qtopia-and-the-greenphone" title="Unacceptable Consequences for Qtopia and the Greenphone" level="2"></contents>
            <contents name="the-qtopia-oom-solution" title="The Qtopia OOM Solution" level="1"></contents>
            <contents name="the-oom-data-manager" title="The OOM Data Manager" level="2"></contents>
            <contents name="the-application-launcher" title="The Application Launcher" level="2"></contents>
            <contents name="the-memory-monitor" title="The Memory Monitor" level="2"></contents>
            <contents name="the-main-memory-test" title="The Main Memory Test" level="3"></contents>
            <contents name="the-page-fault-test" title="The Page Fault Test" level="3"></contents>
            <contents name="the-low-memory-handler" title="The Low Memory Handler" level="2"></contents>
            <contents name="handling-the-low-memory-state" title="Handling The Low Memory State" level="3"></contents>
            <contents name="handling-the-very-low-memory-state" title="Handling the Very Low Memory State" level="3"></contents>
            <contents name="handling-the-critical-memory-state" title="Handling the Critical Memory State" level="3"></contents>
            <contents name="user-modification-of-the-qtopia-oom-solution" title="User Modification of the Qtopia OOM Solution" level="1"></contents>
            <contents name="reconfigurable-items" title="Reconfigurable Items" level="2"></contents>
            <contents name="the-group" title="The  Group" level="3"></contents>
            <contents name="the-group" title="The  Group" level="3"></contents>
            <contents name="replacing-the-memory-monitor" title="Replacing the Memory Monitor" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="qpim-library.html" href="qpim-library.html" subtype="page" title="PIM Library" fulltitle="PIM Library" subtitle="" location="qpim-library.qdoc">
            <contents name="overview" title="Overview" level="1"></contents>
            <contents name="concurrent-access-to-pim-data" title="Concurrent Access to PIM Data" level="1"></contents>
            <contents name="abstraction-of-pim-data-storage-mechanism" title="Abstraction of PIM Data Storage Mechanism" level="1"></contents>
            <contents name="pim-data-synchronization" title="PIM Data Synchronization" level="1"></contents>
            <contents name="sorting-searching-and-filtering-functionality" title="Sorting, Searching and Filtering Functionality" level="1"></contents>
            <contents name="additional-pim-widgets" title="Additional PIM Widgets" level="1"></contents>
            <contents name="assumptions-and-dependencies" title="Assumptions and Dependencies" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="sxe-pkgmgr-keying.html" href="sxe-pkgmgr-keying.html" subtype="page" title="SXE - Package Keying and Manifest" fulltitle="SXE - Package Keying and Manifest" subtitle="" location="sxe-pkgmg-keying.qdoc">
            <contents name="process-keys-and-program-identities" title="Process keys and Program Identities" level="1"></contents>
            <contents name="key-propagation" title="Key Propagation" level="1"></contents>
            <contents name="the-development-case" title="The Development Case" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="sxe.html" href="sxe.html" subtype="page" title="Safe Execution Environment (SXE)" fulltitle="Safe Execution Environment (SXE)" subtitle="" location="sxe-overview.qdoc">
            <contents name="sxe-introduction" title="SXE Introduction" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="atcommands.html" href="atcommands.html" subtype="page" title="AT Commands" fulltitle="AT Commands" subtitle="" location="atcommands.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="general-commands-3gpp-ts-27-007-section-5" title="General commands (3GPP TS 27.007, section 5)" level="2"></contents>
            <contents name="call-control-commands-3gpp-ts-27-007-section-6" title="Call control commands (3GPP TS 27.007, section 6)" level="2"></contents>
            <contents name="network-service-related-commands-3gpp-ts-27-007-section-7" title="Network service related commands (3GPP TS 27.007, section 7)" level="2"></contents>
            <contents name="mobile-termination-control-and-status-commands-3gpp-ts-27-007-section-8" title="Mobile termination control and status commands (3GPP TS 27.007, section 8)" level="2"></contents>
            <contents name="mobile-termination-errors-3gpp-ts-27-007-section-9" title="Mobile termination errors (3GPP TS 27.007, section 9)" level="2"></contents>
            <contents name="commands-for-packet-domain-gprs-3gpp-ts-27-007-section-10" title="Commands for packet domain, GPRS (3GPP TS 27.007, section 10)" level="2"></contents>
            <contents name="sms-commands-3gpp-ts-27-005" title="SMS commands (3GPP TS 27.005)" level="2"></contents>
            <contents name="multiplexing-commands-3gpp-ts-07-10" title="Multiplexing commands (3GPP TS 07.10)" level="2"></contents>
            <contents name="other-commands-3gpp-ts-27-007-appendix-c" title="Other commands (3GPP TS 27.007, Appendix C)" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="syscust-memusage.html" href="syscust-memusage.html" subtype="page" title="Managing Memory Usage" fulltitle="Managing Memory Usage" subtitle="" location="syscust-memusage.qdoc">
            <contents name="shared-memory-cache" title="Shared Memory Cache" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="help-preprocessor.html" href="help-preprocessor.html" subtype="page" title="Help Browser Preprocessor" fulltitle="Help Browser Preprocessor" subtitle="" location="help-preprocessor.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="syntax" title="Syntax" level="1"></contents>
            <contents name="flow-control" title="Flow Control" level="2"></contents>
            <contents name="variable-substitution" title="Variable Substitution" level="2"></contents>
            <contents name="file-inclusion" title="File Inclusion" level="2"></contents>
            <contents name="examples" title="Examples" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="qtopia-telephony.html" href="qtopia-telephony.html" subtype="page" title="Telephony" fulltitle="Telephony" subtitle="" location="telephony.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="bluetooth.html" href="bluetooth.html" subtype="page" title="Bluetooth Support" fulltitle="Bluetooth Support" subtitle="" location="bluetooth.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="troubleshooting" title="Troubleshooting" level="2"></contents>
            <contents name="hardware-requirements" title="Hardware Requirements" level="2"></contents>
            <contents name="software-requirements" title="Software Requirements" level="2"></contents>
            <contents name="qtopia-configuration" title="Qtopia Configuration" level="2"></contents>
            <contents name="integration" title="Integration" level="1"></contents>
            <contents name="functionality" title="Functionality" level="1"></contents>
            <contents name="device-configuration" title="Device Configuration" level="2"></contents>
            <contents name="gap" title="GAP" level="2"></contents>
            <contents name="sdap" title="SDAP" level="2"></contents>
            <contents name="object-push-profile-opp" title="Object Push Profile (OPP)" level="2"></contents>
            <contents name="dial-up-networking-profile-dun" title="Dial Up Networking Profile (DUN)" level="2"></contents>
            <contents name="headset-profile-hsag" title="Headset Profile (HSAG)" level="2"></contents>
            <contents name="handsfree-profile-hfag" title="Handsfree Profile (HFAG)" level="2"></contents>
            <contents name="linux-btsco-kernel-module" title="Linux btsco kernel module" level="2"></contents>
            <contents name="service-management-framework" title="Service Management Framework" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="sxe-impacts.html" href="sxe-impacts.html" subtype="page" title="SXE - Impact and Implications" fulltitle="SXE - Impact and Implications" subtitle="" location="sxe-impacts.qdoc">
            <contents name="developers" title="Developers" level="1"></contents>
            <contents name="oems" title="OEMs" level="1"></contents>
            <contents name="integrators" title="Integrators" level="1"></contents>
            <contents name="operators" title="Operators" level="1"></contents>
            <contents name="performance-effects" title="Performance Effects" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="syscust-crosscompile.html" href="syscust-crosscompile.html" subtype="page" title="How to Cross-Compile" fulltitle="How to Cross-Compile" subtitle="" location="syscust-crosscompile.qdoc">
            <target name="top"></target>
        </page>
        <page access="public" status="commendable" name="qtopiaipc.html" href="qtopiaipc.html" subtype="page" title="Qtopia IPC Layer" fulltitle="Qtopia IPC Layer" subtitle="" location="qtopiaipc.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="qtopiaipcadaptor" title="QtopiaIpcAdaptor" level="1"></contents>
            <contents name="overview" title="Overview" level="2"></contents>
            <contents name="serialization-system" title="Serialization System" level="2"></contents>
            <contents name="enumerations" title="Enumerations" level="3"></contents>
            <contents name="custom-classes" title="Custom Classes" level="3"></contents>
            <contents name="migrating-legacy-qtopia-applications" title="Migrating Legacy Qtopia Applications" level="1"></contents>
            <contents name="the-application-channel" title="The Application Channel" level="1"></contents>
            <contents name="command-line-access-to-qtopia-ipc-system" title="Command-line access to Qtopia IPC System" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="microhttpdlegal.html" href="microhttpdlegal.html" subtype="page" title="micro_httpd" fulltitle="micro_httpd" subtitle="" location="micro_httpd.cpp"></page>
        <page access="public" status="commendable" name="database-specification.html" href="database-specification.html" subtype="page" title="Database Specification" fulltitle="Database Specification" subtitle="" location="database-specification.qdoc">
            <keyword name="multidatabase"></keyword>
            <contents name="general-architectural-description" title="General Architectural Description" level="1"></contents>
            <contents name="general-concepts" title="General Concepts" level="2"></contents>
            <contents name="qtopia-databases" title="Qtopia Databases" level="2"></contents>
            <contents name="content-and-pim-functions" title="Content and PIM Functions" level="1"></contents>
            <contents name="multiple-databases" title="Multiple Databases" level="2"></contents>
            <contents name="supported-relational-database-systems" title="Supported Relational Database Systems" level="1"></contents>
            <contents name="sqlite-specific-notes" title="Sqlite Specific Notes" level="2"></contents>
            <contents name="qtopia-database-schema" title="Qtopia Database Schema" level="1"></contents>
            <contents name="meta-data-and-versioning" title="Meta-data and Versioning" level="1"></contents>
            <contents name="custom-databases-and-applications" title="Custom Databases and Applications" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="qtopia-packages.html" href="qtopia-packages.html" subtype="page" title="Packages and Editions" fulltitle="Packages and Editions" subtitle="" location="packages.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="qtopia-source-packages" title="Qtopia Source Packages" level="1"></contents>
            <contents name="qtopia-software-development-kit-sdk" title="Qtopia Software Development Kit (SDK)" level="1"></contents>
            <contents name="commercial-licensing" title="Commercial Licensing" level="1"></contents>
            <contents name="more-information" title="More Information" level="2"></contents>
            <contents name="opensource-licensing" title="Opensource Licensing" level="1"></contents>
            <contents name="online-availability" title="Online Availability" level="2"></contents>
            <contents name="licensing-conditions" title="Licensing Conditions" level="2"></contents>
            <contents name="more-information" title="More Information" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="&lt;version.h&gt;" href="version-h.html" subtype="header" title="Version defines" fulltitle="&lt;version.h&gt; - Version defines" subtitle="" location="version.qdoc"></page>
        <function access="public" threadsafety="unspecified" status="commendable" name="QPE_VERSION" href="version-h.html#QPE_VERSION" location="version.qdoc" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="&lt;version.h&gt;" type="" signature="QPE_VERSION()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_VERSION_STR" href="version-h.html#QTOPIA_VERSION_STR" location="version.qdoc" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="&lt;version.h&gt;" type="" signature="QTOPIA_VERSION_STR()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_VERSION" href="version-h.html#QTOPIA_VERSION" location="version.qdoc" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="&lt;version.h&gt;" type="" signature="QTOPIA_VERSION()"></function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QTOPIA_COMPATIBLE_VERSIONS" href="version-h.html#QTOPIA_COMPATIBLE_VERSIONS" location="version.qdoc" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="&lt;version.h&gt;" type="" signature="QTOPIA_COMPATIBLE_VERSIONS()"></function>
        <page access="public" status="commendable" name="tut-iviewer-part7.html" href="tut-iviewer-part7.html" subtype="page" title="Image Viewer Tutorial: Part 7" fulltitle="Image Viewer Tutorial: Part 7" subtitle="" location="tut-iviewer-p7.qdoc">
            <target name="top"></target>
            <contents name="application-architecture" title="Application Architecture" level="0"></contents>
        </page>
        <page access="public" status="commendable" name="running-qtopia.html" href="running-qtopia.html" subtype="page" title="Running Qtopia" fulltitle="Running Qtopia" subtitle="" location="running-qtopia.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="prefix-vs-image" title="Prefix vs Image" level="1"></contents>
            <contents name="environment-settings-to-run-qtopia" title="Environment Settings to Run Qtopia" level="2"></contents>
            <contents name="running-qtopia-on-the-desktop-machine" title="Running Qtopia on the Desktop Machine" level="1"></contents>
            <contents name="running-qtopia-on-an-embedded-device" title="Running Qtopia on an Embedded Device" level="1"></contents>
            <contents name="using-an-nfs-mount-partition" title="Using an NFS Mount Partition" level="2"></contents>
            <contents name="step-1-setting-up-the-device" title="Step 1: Setting up the Device" level="3"></contents>
            <contents name="step-2-exporting-the-qtopia-image-directory-to-the-device" title="Step 2: Exporting the Qtopia Image Directory to the Device" level="3"></contents>
            <contents name="step-3-connecting-to-the-device" title="Step 3: Connecting to the Device" level="3"></contents>
            <contents name="using-a-binary-flashed-onto-the-device" title="Using a Binary Flashed onto the Device" level="2"></contents>
            <contents name="touchscreen-phone-calibration" title="Touchscreen Phone Calibration" level="1"></contents>
            <contents name="connecting-qtopia-phone-to-the-phone-device" title="Connecting Qtopia Phone to the Phone Device" level="1"></contents>
            <contents name="using-a-phone-simulator" title="Using a Phone Simulator" level="2"></contents>
            <contents name="using-a-phone-device" title="Using a Phone Device" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="syscust-accessories.html" href="syscust-accessories.html" subtype="page" title="Qtopia Accessory System" fulltitle="Qtopia Accessory System" subtitle="" location="syscust-accessories.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="syscust-camera.html" href="syscust-camera.html" subtype="page" title="Cameras on Embedded Devices" fulltitle="Cameras on Embedded Devices" subtitle="" location="syscust-camera.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="setup" title="Setup" level="1"></contents>
            <contents name="building-options" title="Building Options" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="syscust-time.html" href="syscust-time.html" subtype="page" title="Time on an Embedded Device" fulltitle="Time on an Embedded Device" subtitle="" location="syscust-time.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="external-time-sources" title="External Time Sources" level="1"></contents>
            <contents name="install-required-time-conversion-files" title="Install Required Time Conversion files" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="tut-createim-compose.html" href="tut-createim-compose.html" subtype="page" title="Tutorial: Create an Input method Plug-in that Modifies Keyboard Input" fulltitle="Tutorial: Create an Input method Plug-in that Modifies Keyboard Input" subtitle="" location="tut-createinputmethod-compose.qdoc">
            <target name="top"></target>
            <contents name="creating-a-text-input-filter" title="Creating a Text Input Filter" level="1"></contents>
            <contents name="creating-the-containing-plug-in" title="Creating the Containing Plug-in" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="tut-dualdisplay.html" href="tut-dualdisplay.html" subtype="page" title="Tutorial: Dual Screen Display" fulltitle="Tutorial: Dual Screen Display" subtitle="" location="tut-dualdisplay.qdoc">
            <target name="top"></target>
            <contents name="controlled-by-qtopia" title="Controlled by Qtopia" level="1"></contents>
            <contents name="controlled-independantly" title="Controlled Independantly" level="1"></contents>
            <contents name="example-dual-screen-application" title="Example Dual Screen Application" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="sxe-sxemonitor.html" href="sxe-sxemonitor.html" subtype="page" title="SXE - SxeMonitor" fulltitle="SXE - SxeMonitor" subtitle="" location="sxe-sxemonitor.qdoc">
            <target name="sxe-conf"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="configuration" title="Configuration" level="1"></contents>
            <contents name="development-on-desktop-with-qvfb" title="Development on desktop with qvfb" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="sxe-app-checklist.html" href="sxe-app-checklist.html" subtype="page" title="SXE - Application checklist" fulltitle="SXE - Application checklist" subtitle="" location="sxe-app-checklist.qdoc">
            <target name="sxe-requirements"></target>
            <contents name="requirements" title="Requirements" level="1"></contents>
            <contents name="source-code-requirements" title="Source Code Requirements" level="2"></contents>
            <contents name="project-file-pro-requirements" title="Project file(.pro) Requirements" level="2"></contents>
            <contents name="qpk-packages-and-sxe" title="Qpk packages and SXE" level="1"></contents>
            <contents name="understanding-security-violations" title="Understanding security violations" level="1"></contents>
            <contents name="faq" title="FAQ" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="tut-iviewer-part3.html" href="tut-iviewer-part3.html" subtype="page" title="Image Viewer Tutorial: Part 3" fulltitle="Image Viewer Tutorial: Part 3" subtitle="" location="tut-iviewer-p3.qdoc">
            <target name="top"></target>
            <contents name="the-image-screen" title="The Image Screen" level="0"></contents>
            <contents name="setup-the-image-screen" title="Setup the Image Screen" level="1"></contents>
            <contents name="drawing-the-image" title="Drawing the image" level="1"></contents>
            <contents name="adding-rotate-functions" title="Adding Rotate Functions" level="1"></contents>
            <contents name="zooming-in-and-out" title="Zooming in and out" level="1"></contents>
            <contents name="summary" title="Summary" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="integration-guide.html" href="integration-guide.html" subtype="page" title="Integration guide" fulltitle="Integration guide" subtitle="" location="integrator-guide.qdoc">
            <target name="top"></target>
            <target name="at-modem"></target>
            <target name="bluetooth-kernel-configuration"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="linux" title="Linux" level="1"></contents>
            <contents name="kernel-requirements" title="Kernel requirements" level="2"></contents>
            <contents name="minimal-configuration" title="Minimal configuration" level="3"></contents>
            <contents name="additional-options-and-qtopia-s-dependencies-on-them" title="Additional options and Qtopia's dependencies on them" level="3"></contents>
            <contents name="useful-debugging-options" title="Useful Debugging Options" level="3"></contents>
            <contents name="the-qtopia-root-file-system" title="The Qtopia root file system" level="2"></contents>
            <contents name="file-system-partitions" title="File system partitions" level="3"></contents>
            <contents name="busybox-configuration" title="Busybox configuration" level="3"></contents>
            <contents name="minimal-linux-configuration" title="Minimal Linux Configuration" level="4"></contents>
            <contents name="optional-linux-configuration" title="Optional Linux Configuration" level="4"></contents>
            <contents name="other-tools" title="Other tools" level="3"></contents>
            <contents name="root-file-system-kernel-sources" title="Root file system/kernel sources" level="3"></contents>
            <contents name="qtopia-build-system" title="Qtopia Build system" level="1"></contents>
            <contents name="how-to-build-qtopia" title="How to build Qtopia" level="2"></contents>
            <contents name="configure-options" title="Configure options" level="3"></contents>
            <contents name="removing-applications" title="Removing applications" level="3"></contents>
            <contents name="device-specific-configuration" title="Device-specific Configuration" level="2"></contents>
            <contents name="advanced-build-system-documentation" title="Advanced build system documentation" level="2"></contents>
            <contents name="qtopia-core" title="Qtopia Core" level="1"></contents>
            <contents name="qt-feature-system" title="Qt Feature system" level="2"></contents>
            <contents name="porting" title="Porting" level="2"></contents>
            <contents name="qtopia-core-to-a-new-architecture" title="Qtopia Core to a New Architecture" level="3"></contents>
            <contents name="to-another-operating-system" title="To another Operating System" level="3"></contents>
            <contents name="qt-application-to-qtopia-core" title="Qt Application to Qtopia Core" level="3"></contents>
            <contents name="qtopia-2-x-to-4-x" title="Qtopia 2.x to 4.x" level="3"></contents>
            <contents name="linux-framebuffer-and-display-management" title="Linux Framebuffer and Display Management" level="2"></contents>
            <contents name="fonts" title="Fonts" level="2"></contents>
            <contents name="keyboard-input-plug-ins" title="Keyboard/Input plug-ins" level="2"></contents>
            <contents name="pointer-plugins" title="Pointer plugins" level="2"></contents>
            <contents name="accelerated-graphics-driver" title="Accelerated Graphics Driver" level="2"></contents>
            <contents name="environment-variables" title="Environment Variables" level="2"></contents>
            <contents name="qtopia-platform" title="Qtopia Platform" level="1"></contents>
            <contents name="multiple-screen-support" title="Multiple screen support" level="2"></contents>
            <contents name="qws-connection-timeout" title="QWS connection timeout" level="2"></contents>
            <contents name="server-tasks" title="Server Tasks" level="2"></contents>
            <contents name="bluetooth" title="Bluetooth" level="2"></contents>
            <contents name="bluetooth-software-requirements" title="Bluetooth Software Requirements" level="3"></contents>
            <contents name="document-content-system" title="Document/Content system" level="2"></contents>
            <contents name="document-storage" title="Document Storage" level="3"></contents>
            <contents name="drm-integration" title="DRM integration" level="3"></contents>
            <contents name="memory-management" title="Memory management" level="2"></contents>
            <contents name="general-information" title="General information" level="3"></contents>
            <contents name="out-of-memory-management" title="Out of memory management" level="3"></contents>
            <contents name="qtopia-hardware" title="Qtopia Hardware" level="2"></contents>
            <contents name="accessories" title="Accessories" level="3"></contents>
            <contents name="boot-source" title="Boot Source" level="4"></contents>
            <contents name="keypad-light" title="Keypad Light" level="4"></contents>
            <contents name="power-source" title="Power Source" level="4"></contents>
            <contents name="signal-source" title="Signal Source" level="4"></contents>
            <contents name="vibration" title="Vibration" level="4"></contents>
            <contents name="device-indicators" title="Device indicators" level="2"></contents>
            <contents name="networking" title="Networking" level="2"></contents>
            <contents name="input-methods" title="Input methods" level="2"></contents>
            <contents name="sxe-integration" title="SXE integration" level="2"></contents>
            <contents name="internationalization" title="Internationalization" level="2"></contents>
            <contents name="application-services" title="Application services" level="2"></contents>
            <contents name="qtopia-environment-variables" title="Qtopia Environment variables" level="2"></contents>
            <contents name="miscellaneous-steps" title="Miscellaneous steps" level="2"></contents>
            <contents name="qtopia-phone-edition" title="Qtopia Phone Edition" level="1"></contents>
            <contents name="telephony" title="Telephony" level="2"></contents>
            <contents name="modem-integration" title="Modem Integration" level="3"></contents>
            <contents name="voip-integration" title="VoIP integration" level="3"></contents>
            <contents name="phone-keypad" title="Phone keypad" level="2"></contents>
            <contents name="messaging" title="Messaging" level="2"></contents>
            <contents name="multimedia-messaging" title="Multimedia Messaging" level="3"></contents>
            <contents name="multimedia-messaging-viewer-smil" title="Multimedia Messaging Viewer (SMIL)" level="4"></contents>
            <contents name="wap-stack-integration" title="WAP Stack Integration" level="4"></contents>
            <contents name="amr-encoder" title="AMR Encoder" level="4"></contents>
            <contents name="running-qtopia" title="Running Qtopia" level="1"></contents>
            <contents name="building-and-running-outside-of-qtopia-build-tree" title="Building and running outside of Qtopia build tree" level="2"></contents>
            <contents name="debugging-qtopia-local-and-remote" title="Debugging Qtopia (local and remote)" level="2"></contents>
            <contents name="qtopia-customizations" title="Qtopia customizations" level="1"></contents>
            <contents name="ui-customization" title="UI customization" level="2"></contents>
            <contents name="styles" title="Styles" level="3"></contents>
            <contents name="theming" title="Theming" level="3"></contents>
            <contents name="server-widgets" title="Server widgets" level="3"></contents>
            <contents name="home-screen-widgets-unknown" title="Home screen widgets (unknown)" level="3"></contents>
            <contents name="media-server-integration-unknown" title="Media server integration (unknown)" level="2"></contents>
            <contents name="web-browser-integration" title="Web Browser integration" level="2"></contents>
            <contents name="java-integration-unknown" title="Java integration (unknown)" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="application" href="application.html" subtype="example" title="Tutorial: Creating a New Application" fulltitle="Tutorial: Creating a New Application" subtitle="" location="tut-createapp.qdoc">
            <page access="public" status="commendable" name="application/example.cpp" href="application-example-cpp.html" subtype="file" title="" fulltitle="example.cpp Example File" subtitle="application/example.cpp" location=""></page>
            <page access="public" status="commendable" name="application/example.h" href="application-example-h.html" subtype="file" title="" fulltitle="example.h Example File" subtitle="application/example.h" location=""></page>
            <page access="public" status="commendable" name="application/examplebase.ui" href="application-examplebase-ui.html" subtype="file" title="" fulltitle="examplebase.ui Example File" subtitle="application/examplebase.ui" location=""></page>
            <page access="public" status="commendable" name="application/main.cpp" href="application-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="application/main.cpp" location=""></page>
            <page access="public" status="commendable" name="application/application.pro" href="application-application-pro.html" subtype="file" title="" fulltitle="application.pro Example File" subtitle="application/application.pro" location=""></page>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="Q_DECLARE_USER_METATYPE" href="#Q_DECLARE_USER_METATYPE" location="" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" type="" signature="Q_DECLARE_USER_METATYPE( TYPE)">
            <parameter left="" right="" name="TYPE" default=""></parameter>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="Q_DECLARE_USER_METATYPE_TYPEDEF" href="#Q_DECLARE_USER_METATYPE_TYPEDEF" location="" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" type="" signature="Q_DECLARE_USER_METATYPE_TYPEDEF( TAG,  TYPE)">
            <parameter left="" right="" name="TAG" default=""></parameter>
            <parameter left="" right="" name="TYPE" default=""></parameter>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="Q_DECLARE_USER_METATYPE_ENUM" href="#Q_DECLARE_USER_METATYPE_ENUM" location="" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" type="" signature="Q_DECLARE_USER_METATYPE_ENUM( TYPE)">
            <parameter left="" right="" name="TYPE" default=""></parameter>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="Q_IMPLEMENT_USER_METATYPE" href="#Q_IMPLEMENT_USER_METATYPE" location="qcbsmessage.cpp" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" type="" signature="Q_IMPLEMENT_USER_METATYPE( TYPE)">
            <parameter left="" right="" name="TYPE" default=""></parameter>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="Q_IMPLEMENT_USER_METATYPE_TYPEDEF" href="#Q_IMPLEMENT_USER_METATYPE_TYPEDEF" location="" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" type="" signature="Q_IMPLEMENT_USER_METATYPE_TYPEDEF( TAG,  TYPE)">
            <parameter left="" right="" name="TAG" default=""></parameter>
            <parameter left="" right="" name="TYPE" default=""></parameter>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="Q_IMPLEMENT_USER_METATYPE_ENUM" href="#Q_IMPLEMENT_USER_METATYPE_ENUM" location="qcontentfilter.cpp" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" type="" signature="Q_IMPLEMENT_USER_METATYPE_ENUM( TYPE)">
            <parameter left="" right="" name="TYPE" default=""></parameter>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="Q_REGISTER_USER_METATYPE" href="#Q_REGISTER_USER_METATYPE" location="" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" type="" signature="Q_REGISTER_USER_METATYPE( TYPE)">
            <parameter left="" right="" name="TYPE" default=""></parameter>
        </function>
        <page access="public" status="commendable" name="fd-index.html" href="fd-index.html" subtype="page" title="Functional Descriptions" fulltitle="Functional Descriptions" subtitle="" location="fd-index.qdoc"></page>
        <page access="public" status="commendable" name="theme-knownelem.html" href="theme-knownelem.html" subtype="page" title="Theming - Known Elements" fulltitle="Theming - Known Elements" subtitle="" location="theme-knownelem.qdoc">
            <target name="top"></target>
            <keyword name="known-elements"></keyword>
            <keyword name="comptitlebar"></keyword>
            <keyword name="compdialer"></keyword>
            <keyword name="compcallscreen"></keyword>
            <contents name="title-bar-home-screen-context-bar" title="Title Bar, Home Screen, Context Bar" level="1"></contents>
            <contents name="dialer" title="Dialer" level="1"></contents>
            <contents name="call-screen" title="Call Screen" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="syscust-mediaplayer.html" href="syscust-mediaplayer.html" subtype="page" title="Qtopia Helix Integration" fulltitle="Qtopia Helix Integration" subtitle="" location="syscust-mediaplayer.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="building-qtopia-with-the-helix-source-package" title="Building Qtopia with the Helix Source Package" level="2"></contents>
            <contents name="streaming-media" title="Streaming Media" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="categories" href="categories.html" subtype="group" title="Categories" fulltitle="Categories" subtitle="" location="categories.qdoc">
            <contents name="overview" title="Overview" level="1"></contents>
            <contents name="category-ids" title="Category Ids" level="1"></contents>
            <contents name="user-categories" title="User Categories" level="1"></contents>
            <contents name="system-categories" title="System Categories" level="1"></contents>
            <contents name="scoping" title="Scoping" level="1"></contents>
            <contents name="classes" title="Classes" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="styleguide-online-help.html" href="styleguide-online-help.html" subtype="page" title="Qtopia Style Guide: Online Help" fulltitle="Qtopia Style Guide: Online Help" subtitle="" location="styleguide-olh.qdoc">
            <contents name="purpose" title="Purpose" level="1"></contents>
            <contents name="content" title="Content" level="1"></contents>
            <contents name="headings" title="Headings" level="1"></contents>
            <contents name="images-and-icons" title="Images and Icons" level="1"></contents>
            <contents name="layout" title="Layout" level="1"></contents>
            <contents name="rules-on-hyperlinks" title="Rules on Hyperlinks" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="sxe-browser-impl.html" href="sxe-browser-impl.html" subtype="page" title="Web Browser Integration Implementation" fulltitle="Web Browser Integration Implementation" subtitle="" location="sxe-browser-impl.qdoc">
            <contents name="packagemanager-definition" title="PackageManager Definition" level="1"></contents>
            <contents name="the-file" title="The  file" level="2"></contents>
            <contents name="the-file" title="The  file" level="2"></contents>
            <contents name="the-class" title="The  Class" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="tut-index.html" href="tut-index.html" subtype="page" title="Tutorials" fulltitle="Tutorials" subtitle="" location="tut-index.qdoc">
            <keyword name="tuttheming"></keyword>
        </page>
        <page access="public" status="commendable" name="syscust-theming.html" href="syscust-theming.html" subtype="page" title="Theming" fulltitle="Theming" subtitle="" location="syscust-theming.qdoc">
            <target name="top"></target>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="creating-a-theme" title="Creating a Theme" level="1"></contents>
            <contents name="installing-an-updated-theme" title="Installing an Updated Theme" level="1"></contents>
            <contents name="installing-a-new-theme" title="Installing a New Theme" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="syscust-pointer.html" href="syscust-pointer.html" subtype="page" title="Mouse Pointer Handling" fulltitle="Mouse Pointer Handling" subtitle="" location="syscust-pointer.qdoc">
            <contents name="available-drivers" title="Available Drivers" level="1"></contents>
            <contents name="specifying-a-driver" title="Specifying a Driver" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="greenphone-integration-guide.html" href="greenphone-integration-guide.html" subtype="page" title="Greenphone Integration Guide" fulltitle="Greenphone Integration Guide" subtitle="" location="integration-guide.qdoc">
            <target name="top"></target>
            <contents name="system-boot-and-shutdown-sequences" title="System Boot and Shutdown Sequences" level="1"></contents>
            <contents name="boot-sequence" title="Boot Sequence" level="2"></contents>
            <contents name="shutdown-sequence" title="Shutdown Sequence" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="syscust-sxepkgbrowser.html" href="syscust-sxepkgbrowser.html" subtype="page" title="PackageManager - Browser Integration" fulltitle="PackageManager - Browser Integration" subtitle="" location="syscust-pkgbrowser.qdoc">
            <target name="pkgmgr-browser-modification"></target>
            <keyword name="webconfig"></keyword>
            <contents name="use-case" title="Use Case" level="1"></contents>
            <contents name="web-browser-modification" title="Web-Browser Modification" level="1"></contents>
            <contents name="how-to-make-a-qtopia-package-available-via-a-web-page" title="How to Make a Qtopia Package Available via a Web Page" level="1"></contents>
            <contents name="qtopia-package-descriptor-and-web-page" title="Qtopia Package Descriptor and Web Page" level="2"></contents>
            <contents name="web-server-configuration" title="Web Server Configuration" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="qtopia-dependencies.html" href="qtopia-dependencies.html" subtype="page" title="Dependencies and Prerequisites" fulltitle="Dependencies and Prerequisites" subtitle="" location="dependencies.qdoc">
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="supported-compilers" title="Supported Compilers" level="1"></contents>
            <contents name="sounds-and-qtopia" title="Sounds and Qtopia" level="1"></contents>
            <contents name="helix-media-engine-integration" title="Helix Media Engine Integration" level="2"></contents>
            <contents name="gstreamer-media-engine-integration" title="GStreamer Media Engine Integration" level="2"></contents>
            <contents name="directly-playing-sounds-to-hardware" title="Directly Playing Sounds to Hardware" level="2"></contents>
            <contents name="video4linux" title="Video4Linux" level="1"></contents>
            <contents name="3rd-party-libraries" title="3rd Party libraries" level="1"></contents>
            <contents name="related-topics" title="Related topics" level="1"></contents>
            <contents name="getting-started" title="Getting started" level="2"></contents>
            <contents name="system-customization-guide" title="System Customization Guide" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="syscust-java.html" href="syscust-java.html" subtype="page" title="Qtopia Java Integration" fulltitle="Qtopia Java Integration" subtitle="" location="syscust-java.qdoc">
            <target name="top"></target>
            <contents name="java-integration" title="Java Integration" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="debug-qtopia.html" href="debug-qtopia.html" subtype="page" title="Debugging Qtopia Applications" fulltitle="Debugging Qtopia Applications" subtitle="" location="debug-qtopia.qdoc">
            <target name="top"></target>
            <keyword name="qlog"></keyword>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="debugging-qtopia-using-gdb" title="Debugging Qtopia using gdb" level="1"></contents>
            <contents name="build-the-application-with-debug-symbols" title="Build the Application with Debug Symbols" level="2"></contents>
            <contents name="run-the-debugging-environment" title="Run the Debugging Environment" level="2"></contents>
            <contents name="examining-application-crashes" title="Examining Application Crashes" level="2"></contents>
            <contents name="remote-debugging" title="Remote Debugging" level="1"></contents>
            <contents name="qlog-categorized-logging" title="qLog - Categorized Logging" level="1"></contents>
            <contents name="references" title="References" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="styleguide-naming.html" href="styleguide-naming.html" subtype="page" title="Qtopia Style Guide: Naming" fulltitle="Qtopia Style Guide: Naming" subtitle="" location="styleguide-naming.qdoc">
            <target name="usingdotdotdot"></target>
            <keyword name="naming-conventions"></keyword>
            <contents name="application-naming" title="Application Naming" level="1"></contents>
            <contents name="labelling" title="Labelling" level="1"></contents>
            <contents name="abbreviations" title="Abbreviations" level="2"></contents>
            <contents name="acronyms" title="Acronyms" level="2"></contents>
            <contents name="using-the-label" title="Using the &quot;...&quot; label" level="2"></contents>
            <contents name="examples-of-when-to-use" title="Examples of when to use &quot;...&quot;" level="3"></contents>
            <contents name="examples-of-when-not-to-use" title="Examples of when not to use &quot;...&quot;" level="3"></contents>
        </page>
        <page access="public" status="commendable" name="voip_overview.html" href="voip-overview.html" subtype="page" title="VoIP Overview" fulltitle="VoIP Overview" subtitle="" location="voip-overview.qdoc">
            <target name="top"></target>
            <contents name="qtopia-voip-overview" title="Qtopia VoIP Overview" level="1"></contents>
            <contents name="qtopia-voip-reference-implementation" title="Qtopia VoIP Reference Implementation" level="2"></contents>
            <contents name="qtopia-voip-applications" title="Qtopia VoIP Applications" level="2"></contents>
            <contents name="call-history" title="Call History" level="3"></contents>
            <contents name="settings" title="Settings" level="3"></contents>
            <contents name="quick-dial" title="Quick Dial" level="3"></contents>
            <contents name="contacts" title="Contacts" level="3"></contents>
        </page>
        <page access="public" status="commendable" name="tut-multiplexing.html" href="tut-multiplexing.html" subtype="page" title="Tutorial: Writing a Multiplexer Plug-in" fulltitle="Tutorial: Writing a Multiplexer Plug-in" subtitle="" location="tut-multiplexing.qdoc">
            <target name="top"></target>
            <keyword name="multiplexer-plug-in"></keyword>
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="general-structure-of-a-multiplexer-plug-in" title="General Structure of a Multiplexer Plug-in" level="1"></contents>
            <contents name="gsm-07-10-with-modified-parameters" title="GSM 07.10 with Modified Parameters" level="1"></contents>
            <contents name="multiplexers-that-use-multiple-serial-ports" title="Multiplexers That Use Multiple Serial Ports" level="1"></contents>
            <contents name="complex-multiplexing-over-a-single-serial-port" title="Complex Multiplexing Over a Single Serial Port" level="1"></contents>
        </page>
    </namespace>
</INDEX>
