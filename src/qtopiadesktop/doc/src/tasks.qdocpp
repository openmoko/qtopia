/*!

\group tasks
\title Integration Tasks
\ingroup index
\ingroup overviews

\generatelist related

*/

/*!

\page task_Add_a_new_device_plugin_1.html
\title Add a new device plugin
\ingroup tasks
\sa {Integration Tasks}

To add support for a new application on the device you need to create a client sync plugin.
You will need to create an instance of the \l Qtopia4SyncPlugin class and export it.
It may be useful to examine the skeleton example found in \c{examples/sync_plugin}.
For a working example you can examine the Qtopia PIM project at \c{src/tools/qdsync/pim}.

You need to export one plugin for each dataset. If you are planning on supporting multiple datasets
you may want to have a common class that inherits Qtopia4SyncPlugin and implements the common tasks.
This is the approach taken by the Qtopia PIM project. You will also want to export a
\l Qtopia4SyncPluginFactory so that you do not need separate projects for each plugin.

The datasets supported by the reference implementation are documented in \l Datasets. If you intend
to support a new dataset you should read \l{Add a new dataset}.

*/

/*!

\page task_Add_a_new_desktop_plugin_1.html
\title Add a new desktop plugin
\ingroup tasks
\sa {Integration Tasks}

To add support for a new application on the desktop you need to create a server sync plugin.
You will need to create an instance of the \l QDServerSyncPlugin class and register it.
It may be useful to examine the skeleton example found in \c{examples/qd_sync_plugin}.
For a working example you can examine the Outlook project at \c{src/qtopiadesktop/plugins/outlook}.

You need to register one plugin for each dataset. If you are planning on supporting multiple datasets
you may want to have a common class that inherits QDServerSyncPlugin and implements the common tasks.
This is the approach taken by the Outlook project. Since Qtopia Sync Agent allows multiple plugins to
be embedded in a project you do not need to take any additional steps to package multiple plugins.

The datasets supported by the reference implementation are documented in \l Datasets. If you intend
to support a new dataset you should read \l{Add a new dataset}.

*/

/*!

\page task_Add_a_new_dataset_1.html
\title Add a new dataset
\ingroup tasks
\sa {Integration Tasks}

\l Datasets are matched by their name so you should choose a unique name for your new dataset.

Since the data will be sent as XML it is recommended to create an XSD definition so that you can
validate your data and so that others have an unambiguous reference of how your XML data will be
sent.

Note that Synchronization and Qtopia Sync Agent do not currently validate XML messages.

You will need to ensure a client and server sync plugin exists to handle your dataset. See
\l{Add a new device plugin} and \l{Add a new desktop plugin} for more information.

*/

/*!

\page task_Use_a_TCP/IP_Connection_1.html
\title Use a TCP/IP Connection
\ingroup tasks
\sa {Integration Tasks}

\section1 Overview

\image dstcp.png Greenphone connecting to Qtopia Sync Agent on a Linux PC using TCP/IP

\section1 Synchronization

Ensure the \l QDSYNC_DEFAULT_PORTS define includes \c{"tcp"}.

You must provide a Linux driver that implements a network interface. On the Greenphone (2.4
kernel) there is the \c net_fd driver. This driver works with Linux PCs running 2.4 and 2.6
kernels but there does not seem to be any Windows drivers available for it. Running a newer
(2.6) kernel on your device means you can use the gadget interface, which seems to have
better Windows driver support.

\section1 Qtopia Sync Agent

Ensure the LAN plugin has not been disabled.
If your device is connecting via USB, you will need a driver. The Greenphone uses the
\c net_fd driver which works with Linux PCs. There does not seem to be a Windows driver
available. Running a newer (2.6) kernel on your device means you can use the gadget
interface, which seems to have better Windows driver support.

*/

/*!

\page task_Use_a_Serial_Connection_1.html
\title Use a Serial Connection
\ingroup tasks
\sa {Integration Tasks}

\section1 Overview

\image dsserial.png Greenphone connecting to Qtopia Sync Agent on a Windows PC using Serial

\section1 Synchronization

Ensure the \l QDSYNC_DEFAULT_PORTS define includes \c{"serial"}.

You must provide a Linux driver that implements a serial interface. On the Greenphone (2.4
kernel) there is the \c serial_fd driver. This driver works with Windows PCs using the supplied
USB serial driver. It also works with the \c safe_serial driver on Linux PCs but this requires
manual setup.

\section1 Qtopia Sync Agent

Ensure the Serial plugin has not been disabled.
If your device is connecting via USB, you will need a driver. The Greenphone uses the
\c serial_fd driver which works with Windows PCs using the supplied USB serial driver.
It also works with the \c safe_serial driver on Linux PCs but this requires
manual setup.

Note that under Windows the Serial plugin is designed to work with proper COM ports. Most
USB serial devices do not work correctly and workarounds will need to be created. The
Serial plugin can work around the broken COM port implementation used by the Greenphone
USB serial driver.

*/

