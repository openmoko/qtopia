#############################################################################

####### Compiler, tools and options

CXX	=	$(SYSCONF_CXX) $(QT_CXX_MT)
CXXFLAGS=	$(SYSCONF_CXXFLAGS_QTOPIA) $(SYSCONF_CXXFLAGS_QT) $(SYSCONF_CXXFLAGS)
CC	=	$(SYSCONF_CC) $(QT_C_MT)
CFLAGS	=	$(SYSCONF_CFLAGS_QTOPIA) $(SYSCONF_CFLAGS)
INCPATH =	-I$(MOC_DIR) -I$(QPEDIR)/include
LFLAGS	=	$(SYSCONF_LFLAGS_QTOPIA) $(SYSCONF_RPATH_QTOPIA) $(SYSCONF_LFLAGS_QT) $(SYSCONF_RPATH_QT) $(SYSCONF_LFLAGS) $(QT_LFLAGS_MT)
LIBS	=	$(SUBLIBS) -lqpe $(SYSCONF_LIBS_QTOPIA) $(SYSCONF_LIBS_QT) $(SYSCONF_LIBS) $(SYSCONF_LIBS_QTAPP)
MOC	=	$(SYSCONF_MOC)
UIC	=	$(SYSCONF_UIC)

####### Target

DESTDIR = $(QPEDIR)/bin/
VER_MAJ = 1
VER_MIN = 0
VER_PATCH = 0
TARGET	= pluginmanager
TARGET1 = lib$(TARGET).so.$(VER_MAJ)

####### Files

HEADERS =	pluginmanager.h
SOURCES =	pluginmanager.cpp \
		main.cpp
OBJECTS =	$(OBJECTS_DIR)/pluginmanager.o \
		$(OBJECTS_DIR)/main.o \
		$(OBJECTS_DIR)/pluginmanagerbase.o
INTERFACES =    pluginmanagerbase.ui
UICDECLS =      pluginmanagerbase.h
UICIMPLS =      pluginmanagerbase.cpp
SRCMOC	=	$(MOC_DIR)/moc_pluginmanager.cpp \
		$(MOC_DIR)/moc_pluginmanagerbase.cpp
OBJMOC	=	$(OBJECTS_DIR)/moc_pluginmanager.o \
		$(OBJECTS_DIR)/moc_pluginmanagerbase.o


####### Implicit rules

.SUFFIXES: .cpp .cxx .cc .C .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules


all: $(DESTDIR)$(TARGET)

$(DESTDIR)$(TARGET): $(UICDECLS) $(OBJECTS) $(OBJMOC) $(SUBLIBS)
	$(SYSCONF_LINK) $(LFLAGS) -o $(DESTDIR)$(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)

moc: $(SRCMOC)

tmake:
	tmake pluginmgr.pro

clean:
	-rm -f $(OBJECTS) $(OBJMOC) $(SRCMOC) $(UICIMPLS) $(UICDECLS)
	-rm -f *~ core
	-rm -f allmoc.cpp

####### Extension Modules

listpromodules:
	@echo 

listallmodules:
	@echo 

listaddonpromodules:
	@echo 

listaddonentmodules:
	@echo 


REQUIRES=

####### Sub-libraries


###### Combined headers



####### Compile

$(OBJECTS_DIR)/pluginmanager.o: pluginmanager.cpp \
		pluginmanager.h \
		pluginmanagerbase.h \
		$(QPEDIR)/include/qtopia/qpeapplication.h \
		$(QPEDIR)/include/qtopia/qpeglobal.h \
		$(QPEDIR)/include/qtopia/qlibrary.h \
		$(QPEDIR)/include/qtopia/qcom.h \
		$(QPEDIR)/include/qtopia/quuid.h \
		$(QPEDIR)/include/qtopia/qtopiawinexport.h \
		$(QPEDIR)/include/qtopia/timestring.h \
		$(QPEDIR)/include/qtopia/pluginloader.h \
		$(QPEDIR)/include/qtopia/global.h \
		$(QPEDIR)/include/qtopia/config.h \
		$(QPEDIR)/include/qtopia/qcopenvelope_qws.h \
		$(QPEDIR)/include/qtopia/resource.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $(OBJECTS_DIR)/pluginmanager.o pluginmanager.cpp

$(OBJECTS_DIR)/main.o: main.cpp \
		pluginmanager.h \
		pluginmanagerbase.h \
		$(QPEDIR)/include/qtopia/qpeapplication.h \
		$(QPEDIR)/include/qtopia/qpeglobal.h \
		$(QPEDIR)/include/qtopia/qlibrary.h \
		$(QPEDIR)/include/qtopia/qcom.h \
		$(QPEDIR)/include/qtopia/quuid.h \
		$(QPEDIR)/include/qtopia/qtopiawinexport.h \
		$(QPEDIR)/include/qtopia/timestring.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $(OBJECTS_DIR)/main.o main.cpp

pluginmanagerbase.h: pluginmanagerbase.ui
	$(UIC) pluginmanagerbase.ui -o $(INTERFACE_DECL_PATH)/pluginmanagerbase.h

pluginmanagerbase.cpp: pluginmanagerbase.ui
	$(UIC) pluginmanagerbase.ui -i pluginmanagerbase.h -o pluginmanagerbase.cpp

$(OBJECTS_DIR)/pluginmanagerbase.o: pluginmanagerbase.cpp \
		pluginmanagerbase.h \
		pluginmanagerbase.ui
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $(OBJECTS_DIR)/pluginmanagerbase.o pluginmanagerbase.cpp

$(OBJECTS_DIR)/moc_pluginmanager.o: $(MOC_DIR)/moc_pluginmanager.cpp \
		pluginmanager.h \
		pluginmanagerbase.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $(OBJECTS_DIR)/moc_pluginmanager.o $(MOC_DIR)/moc_pluginmanager.cpp

$(OBJECTS_DIR)/moc_pluginmanagerbase.o: $(MOC_DIR)/moc_pluginmanagerbase.cpp \
		pluginmanagerbase.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $(OBJECTS_DIR)/moc_pluginmanagerbase.o $(MOC_DIR)/moc_pluginmanagerbase.cpp

$(MOC_DIR)/moc_pluginmanager.cpp: pluginmanager.h
	$(MOC) pluginmanager.h -o $(MOC_DIR)/moc_pluginmanager.cpp

$(MOC_DIR)/moc_pluginmanagerbase.cpp: pluginmanagerbase.h
	$(MOC) pluginmanagerbase.h -o $(MOC_DIR)/moc_pluginmanagerbase.cpp


