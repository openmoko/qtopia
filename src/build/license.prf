exists($$QPEDIR/src/build/trace_on):message(license.prf)
# License handling

!equals(LICENSE_REQUIREMENT_DEFINED,1) {
    LICENSE_REQUIREMENT_DEFINED=1
    # Specify a license requirement for a project (and dependant projects)
    # This should be an expression that evaluates to true if the project is to be enabled.
    defineTest(license_requirement) {
        singleexec_reader:cmd=LAST_CMDS+="$$1:echo(\"\$$self: Passed LICENSE check ($$1)\")\$$esc(\n)else{\$$esc(\n)warning(\"\$$self: Failed LICENSE check from $$proj ($$1)\")\$$esc(\n)SINGLEEXEC_READER_ADD=0\$$esc(\n)export(SINGLEEXEC_READER_ADD)\$$esc(\n)}"
        else:cmd=LAST_CMDS+="$$1:echo(\"\$$self: Passed LICENSE check ($$1)\")\$$esc(\n)else{\$$esc(\n)warning(\"\$$self: Failed LICENSE check from $$proj ($$1)\")\$$esc(\n)requires($$1)\$$esc(\n)}"
        idep("$$cmd",LAST_CMDS)
        idep(CONFIG*=runlast,CONFIG)
    }
}

QTOPIA_SELF_LICENSE=$$QTOPIA_LICENSE
QTOPIA_CHECK_LICENSE=$$QTOPIA_LICENSE $$QTOPIA_DEP_LICENSE
QTOPIA_LICENSE=
QTOPIA_DEP_LICENSE=

PREV_LICENSE=
PROCESSED_LICENSE=
LICENSE_REQ=
for(l,forever) {
    for(clic,QTOPIA_CHECK_LICENSE) {
        contains(PROCESSED_LICENSE,$$clic):next()
        PROCESSED_LICENSE+=$$clic

        proj=$$clic
        proj~=s/:.*//
        lic=$$clic
        lic~=s/.*://
        echo($$proj => $$lic)
        QTOPIA_DEP_LICENSE*=$$lic
        contains(QTOPIA_SELF_LICENSE,$$clic):QTOPIA_LICENSE*=$$lic

        equals(lic,COMMERCIAL) {
            # Commerical code can't be linked into a GPL project
            license_requirement("!contains(QTOPIA_LICENSE,GPL)")
            license_requirement("!contains(QTOPIA_LICENSE,LGPL)")
            license_requirement("!free_package")
        } else:equals(lic,LGPL) {
            contains(QTOPIA_SELF_LICENSE,$$clic) {
                # LGPL code can't be built statically
                license_requirement(!staticlib)
                # LGPL code that depends on Qt can't be built into the singleexec binary
                license_requirement(free_package|!enable_singleexec|no_singleexec)
                qt {
                    enable_singleexec:!no_singleexec:error("$$self is LGPL and depends on Qt. It cannot be enabled in singleexec mode. You should put idep(CONFIG+=no_singleexec,CONFIG) in $$self to correct this problem.")
                } else {
                    # Force singleexec off and force a dynamic build.
                    CONFIG-=enable_singleexec
                    CONFIG-=staticlib
                    CONFIG+=shared
                }
            }
            # LGPL is GPL compatible
            QTOPIA_LICENSE*=GPL_COMPATIBLE
        } else:equals(lic,LGPL_QT) {
            # A prerequisite LGPL-licensed project requires Qt.
            # We can only succeed if we aren't building into the singleexec binary.
            enable_singleexec:!no_singleexec:error("$$self depends on a project that cannot be enabled. You should put idep(CONFIG+=no_singleexec,CONFIG) in $$self to correct this problem.")
        } else:equals(lic,GPL) {
            # GPL projects cannot work in singleexec mode unless we're a free package.
            license_requirement(free_package|!enable_singleexec|no_singleexec)
            # The GPL taints everything that uses it. Stop non-GPL projects from
            # linking to GPL projects.
            license_requirement("contains(QTOPIA_LICENSE,GPL_COMPATIBLE)")
            license_requirement("!contains(QTOPIA_LICENSE,NO_GPL)")
            # GPL is GPL compatible
            QTOPIA_LICENSE*=GPL_COMPATIBLE
        } else:equals(lic,GPL_COMPATIBLE) {
            # This is something that can be added to make a project GPL compatible.
        } else:equals(lic,GPL_LINK_EXCEPTION) {
            # This is something that must be added for a GPL-licensed plugin to work with a non-GPL system.
        } else:equals(lic,NO_GPL) {
            # This is something that can be added to explicitly make something not GPL compatible.
        } else:equals(lic,BSD) {
            # The BSD License is not GPL-compatible.
            # If the modern (GPL-compatible) version of the BSD license is used
            # the license line should be license(BSD GPL_COMPATIBLE)
        } else:equals(lic,OpenSSL) {
            # The OpenSSL license is not GPL-compatible.
            # GPL projects must grant an exception in order to link with OpenSSL.
            license_requirement(!contains(QTOPIA_LICENSE,GPL)|contains(QTOPIA_LICENSE,OpenSSL_COMPATIBLE))
        } else:equals(lic,OpenSSL_COMPATIBLE) {
            # This is something that can be added to make a GPL project OpenSSL-compatible.
        } else:equals(lic,FREEWARE) {
            # Freeware projects are implicitly GPL-compatible
            QTOPIA_LICENSE*=GPL_COMPATIBLE
        } else:equals(lic,MIT) {
            # The MIT license is GPL-compatible
            QTOPIA_LICENSE*=GPL_COMPATIBLE
        } else {
            error($$self: Unknown LICENSE $$lic)
        }

    }
    equals(QTOPIA_CHECK_LICENSE,$$PREV_LICENSE):break()
    PREV_LICENSE=$$QTOPIA_CHECK_LICENSE
}

