#############################################################################

####### Compiler, tools and options

CXX	=	$(SYSCONF_CXX) $(QT_CXX_MT)
CXXFLAGS=	$(SYSCONF_CXXFLAGS) $(SYSCONF_CXXFLAGS_LIB) -DQTOPIA_APP_INTERFACE -DFAST -DSASR -DWAV49
CC	=	$(SYSCONF_CC) $(QT_C_MT)
CFLAGS	=	$(SYSCONF_CFLAGS) $(SYSCONF_CFLAGS_LIB) -DQTOPIA_APP_INTERFACE -DFAST -DSASR -DWAV49
INCPATH =	-I$(MOC_DIR) -I$(QPEDIR)/include
LFLAGS	=	$(SYSCONF_LFLAGS) $(QT_LFLAGS_MT)
LIBS	=	$(SUBLIBS)  $(SYSCONF_LIBS_QTAPP)
MOC	=	$(SYSCONF_MOC)
UIC	=	$(SYSCONF_UIC)

####### Target

DESTDIR = $(QPEDIR)/lib/
VER_MAJ = 1
VER_MIN = 0
VER_PATCH = 0
TARGET	= gsm
TARGET1 = lib$(TARGET).so.$(VER_MAJ)

####### Files

HEADERS =	gsm.h
SOURCES =	add.c \
		code.c \
		decode.c \
		gsm_create.c \
		gsm_decode.c \
		gsm_destroy.c \
		gsm_encode.c \
		gsm_option.c \
		long_term.c \
		lpc.c \
		preprocess.c \
		rpe.c \
		short_term.c \
		table.c
OBJECTS =	$(OBJECTS_DIR)/add.o \
		$(OBJECTS_DIR)/code.o \
		$(OBJECTS_DIR)/decode.o \
		$(OBJECTS_DIR)/gsm_create.o \
		$(OBJECTS_DIR)/gsm_decode.o \
		$(OBJECTS_DIR)/gsm_destroy.o \
		$(OBJECTS_DIR)/gsm_encode.o \
		$(OBJECTS_DIR)/gsm_option.o \
		$(OBJECTS_DIR)/long_term.o \
		$(OBJECTS_DIR)/lpc.o \
		$(OBJECTS_DIR)/preprocess.o \
		$(OBJECTS_DIR)/rpe.o \
		$(OBJECTS_DIR)/short_term.o \
		$(OBJECTS_DIR)/table.o
INTERFACES =    
UICDECLS =      
UICIMPLS =      
SRCMOC	=	
OBJMOC	=	


####### Implicit rules

.SUFFIXES: .cpp .cxx .cc .C .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules


all: $(DESTDIR)$(SYSCONF_LINK_TARGET)

$(DESTDIR)$(SYSCONF_LINK_TARGET): $(UICDECLS) $(OBJECTS) $(OBJMOC) $(SUBLIBS)
	$(SYSCONF_LINK_LIB)

moc: $(SRCMOC)

tmake:
	tmake gsm.pro

clean:
	-rm -f $(OBJECTS) $(OBJMOC) $(SRCMOC) $(UICIMPLS) $(UICDECLS)
	-rm -f *~ core
	-rm -f allmoc.cpp

####### Extension Modules

listpromodules:
	@echo 

listallmodules:
	@echo 

listaddonpromodules:
	@echo 

listaddonentmodules:
	@echo 


REQUIRES=

####### Sub-libraries


###### Combined headers



####### Compile

$(OBJECTS_DIR)/add.o: add.c \
		private.h \
		gsm.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o $(OBJECTS_DIR)/add.o add.c

$(OBJECTS_DIR)/code.o: code.c \
		private.h \
		gsm.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o $(OBJECTS_DIR)/code.o code.c

$(OBJECTS_DIR)/decode.o: decode.c \
		private.h \
		gsm.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o $(OBJECTS_DIR)/decode.o decode.c

$(OBJECTS_DIR)/gsm_create.o: gsm_create.c \
		gsm.h \
		private.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o $(OBJECTS_DIR)/gsm_create.o gsm_create.c

$(OBJECTS_DIR)/gsm_decode.o: gsm_decode.c \
		private.h \
		gsm.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o $(OBJECTS_DIR)/gsm_decode.o gsm_decode.c

$(OBJECTS_DIR)/gsm_destroy.o: gsm_destroy.c \
		gsm.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o $(OBJECTS_DIR)/gsm_destroy.o gsm_destroy.c

$(OBJECTS_DIR)/gsm_encode.o: gsm_encode.c \
		private.h \
		gsm.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o $(OBJECTS_DIR)/gsm_encode.o gsm_encode.c

$(OBJECTS_DIR)/gsm_option.o: gsm_option.c \
		private.h \
		gsm.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o $(OBJECTS_DIR)/gsm_option.o gsm_option.c

$(OBJECTS_DIR)/long_term.o: long_term.c \
		private.h \
		gsm.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o $(OBJECTS_DIR)/long_term.o long_term.c

$(OBJECTS_DIR)/lpc.o: lpc.c \
		private.h \
		gsm.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o $(OBJECTS_DIR)/lpc.o lpc.c

$(OBJECTS_DIR)/preprocess.o: preprocess.c \
		private.h \
		gsm.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o $(OBJECTS_DIR)/preprocess.o preprocess.c

$(OBJECTS_DIR)/rpe.o: rpe.c \
		private.h \
		gsm.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o $(OBJECTS_DIR)/rpe.o rpe.c

$(OBJECTS_DIR)/short_term.o: short_term.c \
		private.h \
		gsm.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o $(OBJECTS_DIR)/short_term.o short_term.c

$(OBJECTS_DIR)/table.o: table.c \
		private.h \
		gsm.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o $(OBJECTS_DIR)/table.o table.c


