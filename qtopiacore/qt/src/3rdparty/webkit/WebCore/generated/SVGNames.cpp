/*
 * THIS FILE IS AUTOMATICALLY GENERATED, DO NOT EDIT.
 *
 *
 * Copyright (C) 2005 Apple Computer, Inc.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 */


#include "config.h"
#ifdef AVOID_STATIC_CONSTRUCTORS
#define DOM_SVGNAMES_HIDE_GLOBALS 1
#else
#define QNAME_DEFAULT_CONSTRUCTOR 1
#endif

#include "SVGNames.h"

#include "StaticConstructors.h"
namespace WebCore { namespace SVGNames {

using namespace WebCore;

DEFINE_GLOBAL(AtomicString, svgNamespaceURI, "http://www.w3.org/2000/svg")
// Tags
DEFINE_GLOBAL(QualifiedName, aTag, nullAtom, "a", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, circleTag, nullAtom, "circle", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, clipPathTag, nullAtom, "clipPath", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, cursorTag, nullAtom, "cursor", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, defsTag, nullAtom, "defs", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, descTag, nullAtom, "desc", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, ellipseTag, nullAtom, "ellipse", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, gTag, nullAtom, "g", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, imageTag, nullAtom, "image", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, lineTag, nullAtom, "line", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, linearGradientTag, nullAtom, "linearGradient", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, markerTag, nullAtom, "marker", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, maskTag, nullAtom, "mask", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, metadataTag, nullAtom, "metadata", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, mpathTag, nullAtom, "mpath", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, pathTag, nullAtom, "path", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, patternTag, nullAtom, "pattern", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, polygonTag, nullAtom, "polygon", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, polylineTag, nullAtom, "polyline", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, radialGradientTag, nullAtom, "radialGradient", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, rectTag, nullAtom, "rect", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, scriptTag, nullAtom, "script", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, setTag, nullAtom, "set", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, stopTag, nullAtom, "stop", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, styleTag, nullAtom, "style", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, svgTag, nullAtom, "svg", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, switchTag, nullAtom, "switch", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, symbolTag, nullAtom, "symbol", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, textTag, nullAtom, "text", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, titleTag, nullAtom, "title", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, trefTag, nullAtom, "tref", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, tspanTag, nullAtom, "tspan", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, useTag, nullAtom, "use", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, viewTag, nullAtom, "view", svgNamespaceURI);


WebCore::QualifiedName** getSVGTags(size_t* size)
{
    static WebCore::QualifiedName* SVGTags[] = {
        (WebCore::QualifiedName*)&aTag,
        (WebCore::QualifiedName*)&circleTag,
        (WebCore::QualifiedName*)&clipPathTag,
        (WebCore::QualifiedName*)&cursorTag,
        (WebCore::QualifiedName*)&defsTag,
        (WebCore::QualifiedName*)&descTag,
        (WebCore::QualifiedName*)&ellipseTag,
        (WebCore::QualifiedName*)&gTag,
        (WebCore::QualifiedName*)&imageTag,
        (WebCore::QualifiedName*)&lineTag,
        (WebCore::QualifiedName*)&linearGradientTag,
        (WebCore::QualifiedName*)&markerTag,
        (WebCore::QualifiedName*)&maskTag,
        (WebCore::QualifiedName*)&metadataTag,
        (WebCore::QualifiedName*)&mpathTag,
        (WebCore::QualifiedName*)&pathTag,
        (WebCore::QualifiedName*)&patternTag,
        (WebCore::QualifiedName*)&polygonTag,
        (WebCore::QualifiedName*)&polylineTag,
        (WebCore::QualifiedName*)&radialGradientTag,
        (WebCore::QualifiedName*)&rectTag,
        (WebCore::QualifiedName*)&scriptTag,
        (WebCore::QualifiedName*)&setTag,
        (WebCore::QualifiedName*)&stopTag,
        (WebCore::QualifiedName*)&styleTag,
        (WebCore::QualifiedName*)&svgTag,
        (WebCore::QualifiedName*)&switchTag,
        (WebCore::QualifiedName*)&symbolTag,
        (WebCore::QualifiedName*)&textTag,
        (WebCore::QualifiedName*)&titleTag,
        (WebCore::QualifiedName*)&trefTag,
        (WebCore::QualifiedName*)&tspanTag,
        (WebCore::QualifiedName*)&useTag,
        (WebCore::QualifiedName*)&viewTag,
    };
    *size = 34;
    return SVGTags;
}

// Attributes
DEFINE_GLOBAL(QualifiedName, accent_heightAttr, nullAtom, "accent_height", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, accumulateAttr, nullAtom, "accumulate", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, additiveAttr, nullAtom, "additive", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, alignment_baselineAttr, nullAtom, "alignment_baseline", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, alphabeticAttr, nullAtom, "alphabetic", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, amplitudeAttr, nullAtom, "amplitude", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, animateAttr, nullAtom, "animate", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, arabic_formAttr, nullAtom, "arabic_form", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, ascentAttr, nullAtom, "ascent", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, attributeNameAttr, nullAtom, "attributeName", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, attributeTypeAttr, nullAtom, "attributeType", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, azimuthAttr, nullAtom, "azimuth", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, baseFrequencyAttr, nullAtom, "baseFrequency", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, baseline_shiftAttr, nullAtom, "baseline_shift", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, baseProfileAttr, nullAtom, "baseProfile", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, bboxAttr, nullAtom, "bbox", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, beginAttr, nullAtom, "begin", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, biasAttr, nullAtom, "bias", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, byAttr, nullAtom, "by", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, calcModeAttr, nullAtom, "calcMode", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, cap_heightAttr, nullAtom, "cap_height", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, clipAttr, nullAtom, "clip", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, clip_pathAttr, nullAtom, "clip_path", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, clip_ruleAttr, nullAtom, "clip_rule", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, clipPathUnitsAttr, nullAtom, "clipPathUnits", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, colorAttr, nullAtom, "color", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, color_interpolationAttr, nullAtom, "color_interpolation", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, color_interpolation_filtersAttr, nullAtom, "color_interpolation_filters", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, color_profileAttr, nullAtom, "color_profile", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, color_renderingAttr, nullAtom, "color_rendering", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, contentScriptTypeAttr, nullAtom, "contentScriptType", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, contentStyleTypeAttr, nullAtom, "contentStyleType", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, cursorAttr, nullAtom, "cursor", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, cxAttr, nullAtom, "cx", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, cyAttr, nullAtom, "cy", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, dAttr, nullAtom, "d", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, descentAttr, nullAtom, "descent", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, diffuseConstantAttr, nullAtom, "diffuseConstant", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, directionAttr, nullAtom, "direction", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, displayAttr, nullAtom, "display", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, divisorAttr, nullAtom, "divisor", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, dominant_baselineAttr, nullAtom, "dominant_baseline", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, durAttr, nullAtom, "dur", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, dxAttr, nullAtom, "dx", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, dyAttr, nullAtom, "dy", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, edgeModeAttr, nullAtom, "edgeMode", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, elevationAttr, nullAtom, "elevation", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, enable_backgroundAttr, nullAtom, "enable_background", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, endAttr, nullAtom, "end", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, exponentAttr, nullAtom, "exponent", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, externalResourcesRequiredAttr, nullAtom, "externalResourcesRequired", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, feColorMatrixAttr, nullAtom, "feColorMatrix", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, feCompositeAttr, nullAtom, "feComposite", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, feGaussianBlurAttr, nullAtom, "feGaussianBlur", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, feMorphologyAttr, nullAtom, "feMorphology", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, feTileAttr, nullAtom, "feTile", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, fillAttr, nullAtom, "fill", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, fill_opacityAttr, nullAtom, "fill_opacity", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, fill_ruleAttr, nullAtom, "fill_rule", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, filterAttr, nullAtom, "filter", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, filterResAttr, nullAtom, "filterRes", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, filterUnitsAttr, nullAtom, "filterUnits", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, flood_colorAttr, nullAtom, "flood_color", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, flood_opacityAttr, nullAtom, "flood_opacity", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, font_familyAttr, nullAtom, "font_family", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, font_sizeAttr, nullAtom, "font_size", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, font_size_adjustAttr, nullAtom, "font_size_adjust", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, font_stretchAttr, nullAtom, "font_stretch", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, font_styleAttr, nullAtom, "font_style", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, font_variantAttr, nullAtom, "font_variant", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, font_weightAttr, nullAtom, "font_weight", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, formatAttr, nullAtom, "format", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, fromAttr, nullAtom, "from", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, fxAttr, nullAtom, "fx", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, fyAttr, nullAtom, "fy", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, g1Attr, nullAtom, "g1", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, g2Attr, nullAtom, "g2", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, glyph_nameAttr, nullAtom, "glyph_name", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, glyph_orientation_horizontalAttr, nullAtom, "glyph_orientation_horizontal", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, glyph_orientation_verticalAttr, nullAtom, "glyph_orientation_vertical", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, glyphRefAttr, nullAtom, "glyphRef", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, gradientTransformAttr, nullAtom, "gradientTransform", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, gradientUnitsAttr, nullAtom, "gradientUnits", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, hangingAttr, nullAtom, "hanging", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, heightAttr, nullAtom, "height", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, horiz_adv_xAttr, nullAtom, "horiz_adv_x", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, horiz_origin_xAttr, nullAtom, "horiz_origin_x", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, horiz_origin_yAttr, nullAtom, "horiz_origin_y", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, ideographicAttr, nullAtom, "ideographic", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, image_renderingAttr, nullAtom, "image_rendering", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, inAttr, nullAtom, "in", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, in2Attr, nullAtom, "in2", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, interceptAttr, nullAtom, "intercept", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, kAttr, nullAtom, "k", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, k1Attr, nullAtom, "k1", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, k2Attr, nullAtom, "k2", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, k3Attr, nullAtom, "k3", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, k4Attr, nullAtom, "k4", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, kernelMatrixAttr, nullAtom, "kernelMatrix", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, kernelUnitLengthAttr, nullAtom, "kernelUnitLength", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, kerningAttr, nullAtom, "kerning", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, keyPointsAttr, nullAtom, "keyPoints", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, keySplinesAttr, nullAtom, "keySplines", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, keyTimesAttr, nullAtom, "keyTimes", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, lengthAdjustAttr, nullAtom, "lengthAdjust", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, letter_spacingAttr, nullAtom, "letter_spacing", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, lighting_colorAttr, nullAtom, "lighting_color", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, limitingConeAngleAttr, nullAtom, "limitingConeAngle", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, localAttr, nullAtom, "local", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, marker_endAttr, nullAtom, "marker_end", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, marker_midAttr, nullAtom, "marker_mid", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, marker_startAttr, nullAtom, "marker_start", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, markerHeightAttr, nullAtom, "markerHeight", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, markerUnitsAttr, nullAtom, "markerUnits", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, markerWidthAttr, nullAtom, "markerWidth", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, maskAttr, nullAtom, "mask", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, maskContentUnitsAttr, nullAtom, "maskContentUnits", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, maskUnitsAttr, nullAtom, "maskUnits", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, mathematicalAttr, nullAtom, "mathematical", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, maxAttr, nullAtom, "max", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, mediaAttr, nullAtom, "media", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, methodAttr, nullAtom, "method", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, minAttr, nullAtom, "min", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, modeAttr, nullAtom, "mode", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, nameAttr, nullAtom, "name", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, numOctavesAttr, nullAtom, "numOctaves", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, offsetAttr, nullAtom, "offset", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, onbeginAttr, nullAtom, "onbegin", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, onendAttr, nullAtom, "onend", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, onrepeatAttr, nullAtom, "onrepeat", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, onzoomAttr, nullAtom, "onzoom", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, opacityAttr, nullAtom, "opacity", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, operatorAttr, nullAtom, "operator", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, orderAttr, nullAtom, "order", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, orientAttr, nullAtom, "orient", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, orientationAttr, nullAtom, "orientation", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, originAttr, nullAtom, "origin", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, overflowAttr, nullAtom, "overflow", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, overline_positionAttr, nullAtom, "overline_position", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, overline_thicknessAttr, nullAtom, "overline_thickness", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, panose_1Attr, nullAtom, "panose_1", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, pathAttr, nullAtom, "path", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, pathLengthAttr, nullAtom, "pathLength", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, patternContentUnitsAttr, nullAtom, "patternContentUnits", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, patternTransformAttr, nullAtom, "patternTransform", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, patternUnitsAttr, nullAtom, "patternUnits", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, pointer_eventsAttr, nullAtom, "pointer_events", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, pointsAttr, nullAtom, "points", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, pointsAtXAttr, nullAtom, "pointsAtX", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, pointsAtYAttr, nullAtom, "pointsAtY", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, pointsAtZAttr, nullAtom, "pointsAtZ", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, preserveAlphaAttr, nullAtom, "preserveAlpha", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, preserveAspectRatioAttr, nullAtom, "preserveAspectRatio", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, primitiveUnitsAttr, nullAtom, "primitiveUnits", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, rAttr, nullAtom, "r", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, radiusAttr, nullAtom, "radius", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, refXAttr, nullAtom, "refX", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, refYAttr, nullAtom, "refY", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, rendering_intentAttr, nullAtom, "rendering_intent", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, repeatCountAttr, nullAtom, "repeatCount", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, repeatDurAttr, nullAtom, "repeatDur", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, requiredExtensionsAttr, nullAtom, "requiredExtensions", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, requiredFeaturesAttr, nullAtom, "requiredFeatures", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, restartAttr, nullAtom, "restart", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, resultAttr, nullAtom, "result", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, rotateAttr, nullAtom, "rotate", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, rxAttr, nullAtom, "rx", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, ryAttr, nullAtom, "ry", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, scaleAttr, nullAtom, "scale", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, seedAttr, nullAtom, "seed", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, shape_renderingAttr, nullAtom, "shape_rendering", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, slopeAttr, nullAtom, "slope", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, spacingAttr, nullAtom, "spacing", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, specularConstantAttr, nullAtom, "specularConstant", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, specularExponentAttr, nullAtom, "specularExponent", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, spreadMethodAttr, nullAtom, "spreadMethod", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, startOffsetAttr, nullAtom, "startOffset", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, stdDeviationAttr, nullAtom, "stdDeviation", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, stemhAttr, nullAtom, "stemh", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, stemvAttr, nullAtom, "stemv", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, stitchTilesAttr, nullAtom, "stitchTiles", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, stop_colorAttr, nullAtom, "stop_color", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, stop_opacityAttr, nullAtom, "stop_opacity", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, strikethrough_positionAttr, nullAtom, "strikethrough_position", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, strikethrough_thicknessAttr, nullAtom, "strikethrough_thickness", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, strokeAttr, nullAtom, "stroke", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, stroke_dasharrayAttr, nullAtom, "stroke_dasharray", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, stroke_dashoffsetAttr, nullAtom, "stroke_dashoffset", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, stroke_linecapAttr, nullAtom, "stroke_linecap", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, stroke_linejoinAttr, nullAtom, "stroke_linejoin", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, stroke_miterlimitAttr, nullAtom, "stroke_miterlimit", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, stroke_opacityAttr, nullAtom, "stroke_opacity", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, stroke_widthAttr, nullAtom, "stroke_width", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, styleAttr, nullAtom, "style", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, surfaceScaleAttr, nullAtom, "surfaceScale", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, systemLanguageAttr, nullAtom, "systemLanguage", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, tableValuesAttr, nullAtom, "tableValues", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, targetAttr, nullAtom, "target", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, targetXAttr, nullAtom, "targetX", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, targetYAttr, nullAtom, "targetY", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, text_anchorAttr, nullAtom, "text_anchor", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, text_decorationAttr, nullAtom, "text_decoration", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, text_renderingAttr, nullAtom, "text_rendering", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, textLengthAttr, nullAtom, "textLength", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, titleAttr, nullAtom, "title", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, toAttr, nullAtom, "to", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, transformAttr, nullAtom, "transform", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, typeAttr, nullAtom, "type", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, u1Attr, nullAtom, "u1", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, u2Attr, nullAtom, "u2", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, underline_positionAttr, nullAtom, "underline_position", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, underline_thicknessAttr, nullAtom, "underline_thickness", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, unicodeAttr, nullAtom, "unicode", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, unicode_bidiAttr, nullAtom, "unicode_bidi", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, unicode_rangeAttr, nullAtom, "unicode_range", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, units_per_emAttr, nullAtom, "units_per_em", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, v_alphabeticAttr, nullAtom, "v_alphabetic", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, v_hangingAttr, nullAtom, "v_hanging", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, v_ideographicAttr, nullAtom, "v_ideographic", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, v_mathematicalAttr, nullAtom, "v_mathematical", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, valuesAttr, nullAtom, "values", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, versionAttr, nullAtom, "version", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, vert_adv_yAttr, nullAtom, "vert_adv_y", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, vert_origin_xAttr, nullAtom, "vert_origin_x", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, vert_origin_yAttr, nullAtom, "vert_origin_y", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, viewBoxAttr, nullAtom, "viewBox", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, viewTargetAttr, nullAtom, "viewTarget", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, visibilityAttr, nullAtom, "visibility", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, widthAttr, nullAtom, "width", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, widthsAttr, nullAtom, "widths", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, word_spacingAttr, nullAtom, "word_spacing", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, writing_modeAttr, nullAtom, "writing_mode", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, xAttr, nullAtom, "x", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, x_heightAttr, nullAtom, "x_height", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, x1Attr, nullAtom, "x1", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, x2Attr, nullAtom, "x2", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, xChannelSelectorAttr, nullAtom, "xChannelSelector", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, yAttr, nullAtom, "y", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, y1Attr, nullAtom, "y1", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, y2Attr, nullAtom, "y2", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, yChannelSelectorAttr, nullAtom, "yChannelSelector", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, zAttr, nullAtom, "z", svgNamespaceURI);
DEFINE_GLOBAL(QualifiedName, zoomAndPanAttr, nullAtom, "zoomAndPan", svgNamespaceURI);


WebCore::QualifiedName** getSVGAttrs(size_t* size)
{
    static WebCore::QualifiedName* SVGAttr[] = {
        (WebCore::QualifiedName*)&accent_heightAttr,
        (WebCore::QualifiedName*)&accumulateAttr,
        (WebCore::QualifiedName*)&additiveAttr,
        (WebCore::QualifiedName*)&alignment_baselineAttr,
        (WebCore::QualifiedName*)&alphabeticAttr,
        (WebCore::QualifiedName*)&amplitudeAttr,
        (WebCore::QualifiedName*)&animateAttr,
        (WebCore::QualifiedName*)&arabic_formAttr,
        (WebCore::QualifiedName*)&ascentAttr,
        (WebCore::QualifiedName*)&attributeNameAttr,
        (WebCore::QualifiedName*)&attributeTypeAttr,
        (WebCore::QualifiedName*)&azimuthAttr,
        (WebCore::QualifiedName*)&baseFrequencyAttr,
        (WebCore::QualifiedName*)&baseline_shiftAttr,
        (WebCore::QualifiedName*)&baseProfileAttr,
        (WebCore::QualifiedName*)&bboxAttr,
        (WebCore::QualifiedName*)&beginAttr,
        (WebCore::QualifiedName*)&biasAttr,
        (WebCore::QualifiedName*)&byAttr,
        (WebCore::QualifiedName*)&calcModeAttr,
        (WebCore::QualifiedName*)&cap_heightAttr,
        (WebCore::QualifiedName*)&clipAttr,
        (WebCore::QualifiedName*)&clip_pathAttr,
        (WebCore::QualifiedName*)&clip_ruleAttr,
        (WebCore::QualifiedName*)&clipPathUnitsAttr,
        (WebCore::QualifiedName*)&colorAttr,
        (WebCore::QualifiedName*)&color_interpolationAttr,
        (WebCore::QualifiedName*)&color_interpolation_filtersAttr,
        (WebCore::QualifiedName*)&color_profileAttr,
        (WebCore::QualifiedName*)&color_renderingAttr,
        (WebCore::QualifiedName*)&contentScriptTypeAttr,
        (WebCore::QualifiedName*)&contentStyleTypeAttr,
        (WebCore::QualifiedName*)&cursorAttr,
        (WebCore::QualifiedName*)&cxAttr,
        (WebCore::QualifiedName*)&cyAttr,
        (WebCore::QualifiedName*)&dAttr,
        (WebCore::QualifiedName*)&descentAttr,
        (WebCore::QualifiedName*)&diffuseConstantAttr,
        (WebCore::QualifiedName*)&directionAttr,
        (WebCore::QualifiedName*)&displayAttr,
        (WebCore::QualifiedName*)&divisorAttr,
        (WebCore::QualifiedName*)&dominant_baselineAttr,
        (WebCore::QualifiedName*)&durAttr,
        (WebCore::QualifiedName*)&dxAttr,
        (WebCore::QualifiedName*)&dyAttr,
        (WebCore::QualifiedName*)&edgeModeAttr,
        (WebCore::QualifiedName*)&elevationAttr,
        (WebCore::QualifiedName*)&enable_backgroundAttr,
        (WebCore::QualifiedName*)&endAttr,
        (WebCore::QualifiedName*)&exponentAttr,
        (WebCore::QualifiedName*)&externalResourcesRequiredAttr,
        (WebCore::QualifiedName*)&feColorMatrixAttr,
        (WebCore::QualifiedName*)&feCompositeAttr,
        (WebCore::QualifiedName*)&feGaussianBlurAttr,
        (WebCore::QualifiedName*)&feMorphologyAttr,
        (WebCore::QualifiedName*)&feTileAttr,
        (WebCore::QualifiedName*)&fillAttr,
        (WebCore::QualifiedName*)&fill_opacityAttr,
        (WebCore::QualifiedName*)&fill_ruleAttr,
        (WebCore::QualifiedName*)&filterAttr,
        (WebCore::QualifiedName*)&filterResAttr,
        (WebCore::QualifiedName*)&filterUnitsAttr,
        (WebCore::QualifiedName*)&flood_colorAttr,
        (WebCore::QualifiedName*)&flood_opacityAttr,
        (WebCore::QualifiedName*)&font_familyAttr,
        (WebCore::QualifiedName*)&font_sizeAttr,
        (WebCore::QualifiedName*)&font_size_adjustAttr,
        (WebCore::QualifiedName*)&font_stretchAttr,
        (WebCore::QualifiedName*)&font_styleAttr,
        (WebCore::QualifiedName*)&font_variantAttr,
        (WebCore::QualifiedName*)&font_weightAttr,
        (WebCore::QualifiedName*)&formatAttr,
        (WebCore::QualifiedName*)&fromAttr,
        (WebCore::QualifiedName*)&fxAttr,
        (WebCore::QualifiedName*)&fyAttr,
        (WebCore::QualifiedName*)&g1Attr,
        (WebCore::QualifiedName*)&g2Attr,
        (WebCore::QualifiedName*)&glyph_nameAttr,
        (WebCore::QualifiedName*)&glyph_orientation_horizontalAttr,
        (WebCore::QualifiedName*)&glyph_orientation_verticalAttr,
        (WebCore::QualifiedName*)&glyphRefAttr,
        (WebCore::QualifiedName*)&gradientTransformAttr,
        (WebCore::QualifiedName*)&gradientUnitsAttr,
        (WebCore::QualifiedName*)&hangingAttr,
        (WebCore::QualifiedName*)&heightAttr,
        (WebCore::QualifiedName*)&horiz_adv_xAttr,
        (WebCore::QualifiedName*)&horiz_origin_xAttr,
        (WebCore::QualifiedName*)&horiz_origin_yAttr,
        (WebCore::QualifiedName*)&ideographicAttr,
        (WebCore::QualifiedName*)&image_renderingAttr,
        (WebCore::QualifiedName*)&inAttr,
        (WebCore::QualifiedName*)&in2Attr,
        (WebCore::QualifiedName*)&interceptAttr,
        (WebCore::QualifiedName*)&kAttr,
        (WebCore::QualifiedName*)&k1Attr,
        (WebCore::QualifiedName*)&k2Attr,
        (WebCore::QualifiedName*)&k3Attr,
        (WebCore::QualifiedName*)&k4Attr,
        (WebCore::QualifiedName*)&kernelMatrixAttr,
        (WebCore::QualifiedName*)&kernelUnitLengthAttr,
        (WebCore::QualifiedName*)&kerningAttr,
        (WebCore::QualifiedName*)&keyPointsAttr,
        (WebCore::QualifiedName*)&keySplinesAttr,
        (WebCore::QualifiedName*)&keyTimesAttr,
        (WebCore::QualifiedName*)&lengthAdjustAttr,
        (WebCore::QualifiedName*)&letter_spacingAttr,
        (WebCore::QualifiedName*)&lighting_colorAttr,
        (WebCore::QualifiedName*)&limitingConeAngleAttr,
        (WebCore::QualifiedName*)&localAttr,
        (WebCore::QualifiedName*)&marker_endAttr,
        (WebCore::QualifiedName*)&marker_midAttr,
        (WebCore::QualifiedName*)&marker_startAttr,
        (WebCore::QualifiedName*)&markerHeightAttr,
        (WebCore::QualifiedName*)&markerUnitsAttr,
        (WebCore::QualifiedName*)&markerWidthAttr,
        (WebCore::QualifiedName*)&maskAttr,
        (WebCore::QualifiedName*)&maskContentUnitsAttr,
        (WebCore::QualifiedName*)&maskUnitsAttr,
        (WebCore::QualifiedName*)&mathematicalAttr,
        (WebCore::QualifiedName*)&maxAttr,
        (WebCore::QualifiedName*)&mediaAttr,
        (WebCore::QualifiedName*)&methodAttr,
        (WebCore::QualifiedName*)&minAttr,
        (WebCore::QualifiedName*)&modeAttr,
        (WebCore::QualifiedName*)&nameAttr,
        (WebCore::QualifiedName*)&numOctavesAttr,
        (WebCore::QualifiedName*)&offsetAttr,
        (WebCore::QualifiedName*)&onbeginAttr,
        (WebCore::QualifiedName*)&onendAttr,
        (WebCore::QualifiedName*)&onrepeatAttr,
        (WebCore::QualifiedName*)&onzoomAttr,
        (WebCore::QualifiedName*)&opacityAttr,
        (WebCore::QualifiedName*)&operatorAttr,
        (WebCore::QualifiedName*)&orderAttr,
        (WebCore::QualifiedName*)&orientAttr,
        (WebCore::QualifiedName*)&orientationAttr,
        (WebCore::QualifiedName*)&originAttr,
        (WebCore::QualifiedName*)&overflowAttr,
        (WebCore::QualifiedName*)&overline_positionAttr,
        (WebCore::QualifiedName*)&overline_thicknessAttr,
        (WebCore::QualifiedName*)&panose_1Attr,
        (WebCore::QualifiedName*)&pathAttr,
        (WebCore::QualifiedName*)&pathLengthAttr,
        (WebCore::QualifiedName*)&patternContentUnitsAttr,
        (WebCore::QualifiedName*)&patternTransformAttr,
        (WebCore::QualifiedName*)&patternUnitsAttr,
        (WebCore::QualifiedName*)&pointer_eventsAttr,
        (WebCore::QualifiedName*)&pointsAttr,
        (WebCore::QualifiedName*)&pointsAtXAttr,
        (WebCore::QualifiedName*)&pointsAtYAttr,
        (WebCore::QualifiedName*)&pointsAtZAttr,
        (WebCore::QualifiedName*)&preserveAlphaAttr,
        (WebCore::QualifiedName*)&preserveAspectRatioAttr,
        (WebCore::QualifiedName*)&primitiveUnitsAttr,
        (WebCore::QualifiedName*)&rAttr,
        (WebCore::QualifiedName*)&radiusAttr,
        (WebCore::QualifiedName*)&refXAttr,
        (WebCore::QualifiedName*)&refYAttr,
        (WebCore::QualifiedName*)&rendering_intentAttr,
        (WebCore::QualifiedName*)&repeatCountAttr,
        (WebCore::QualifiedName*)&repeatDurAttr,
        (WebCore::QualifiedName*)&requiredExtensionsAttr,
        (WebCore::QualifiedName*)&requiredFeaturesAttr,
        (WebCore::QualifiedName*)&restartAttr,
        (WebCore::QualifiedName*)&resultAttr,
        (WebCore::QualifiedName*)&rotateAttr,
        (WebCore::QualifiedName*)&rxAttr,
        (WebCore::QualifiedName*)&ryAttr,
        (WebCore::QualifiedName*)&scaleAttr,
        (WebCore::QualifiedName*)&seedAttr,
        (WebCore::QualifiedName*)&shape_renderingAttr,
        (WebCore::QualifiedName*)&slopeAttr,
        (WebCore::QualifiedName*)&spacingAttr,
        (WebCore::QualifiedName*)&specularConstantAttr,
        (WebCore::QualifiedName*)&specularExponentAttr,
        (WebCore::QualifiedName*)&spreadMethodAttr,
        (WebCore::QualifiedName*)&startOffsetAttr,
        (WebCore::QualifiedName*)&stdDeviationAttr,
        (WebCore::QualifiedName*)&stemhAttr,
        (WebCore::QualifiedName*)&stemvAttr,
        (WebCore::QualifiedName*)&stitchTilesAttr,
        (WebCore::QualifiedName*)&stop_colorAttr,
        (WebCore::QualifiedName*)&stop_opacityAttr,
        (WebCore::QualifiedName*)&strikethrough_positionAttr,
        (WebCore::QualifiedName*)&strikethrough_thicknessAttr,
        (WebCore::QualifiedName*)&strokeAttr,
        (WebCore::QualifiedName*)&stroke_dasharrayAttr,
        (WebCore::QualifiedName*)&stroke_dashoffsetAttr,
        (WebCore::QualifiedName*)&stroke_linecapAttr,
        (WebCore::QualifiedName*)&stroke_linejoinAttr,
        (WebCore::QualifiedName*)&stroke_miterlimitAttr,
        (WebCore::QualifiedName*)&stroke_opacityAttr,
        (WebCore::QualifiedName*)&stroke_widthAttr,
        (WebCore::QualifiedName*)&styleAttr,
        (WebCore::QualifiedName*)&surfaceScaleAttr,
        (WebCore::QualifiedName*)&systemLanguageAttr,
        (WebCore::QualifiedName*)&tableValuesAttr,
        (WebCore::QualifiedName*)&targetAttr,
        (WebCore::QualifiedName*)&targetXAttr,
        (WebCore::QualifiedName*)&targetYAttr,
        (WebCore::QualifiedName*)&text_anchorAttr,
        (WebCore::QualifiedName*)&text_decorationAttr,
        (WebCore::QualifiedName*)&text_renderingAttr,
        (WebCore::QualifiedName*)&textLengthAttr,
        (WebCore::QualifiedName*)&titleAttr,
        (WebCore::QualifiedName*)&toAttr,
        (WebCore::QualifiedName*)&transformAttr,
        (WebCore::QualifiedName*)&typeAttr,
        (WebCore::QualifiedName*)&u1Attr,
        (WebCore::QualifiedName*)&u2Attr,
        (WebCore::QualifiedName*)&underline_positionAttr,
        (WebCore::QualifiedName*)&underline_thicknessAttr,
        (WebCore::QualifiedName*)&unicodeAttr,
        (WebCore::QualifiedName*)&unicode_bidiAttr,
        (WebCore::QualifiedName*)&unicode_rangeAttr,
        (WebCore::QualifiedName*)&units_per_emAttr,
        (WebCore::QualifiedName*)&v_alphabeticAttr,
        (WebCore::QualifiedName*)&v_hangingAttr,
        (WebCore::QualifiedName*)&v_ideographicAttr,
        (WebCore::QualifiedName*)&v_mathematicalAttr,
        (WebCore::QualifiedName*)&valuesAttr,
        (WebCore::QualifiedName*)&versionAttr,
        (WebCore::QualifiedName*)&vert_adv_yAttr,
        (WebCore::QualifiedName*)&vert_origin_xAttr,
        (WebCore::QualifiedName*)&vert_origin_yAttr,
        (WebCore::QualifiedName*)&viewBoxAttr,
        (WebCore::QualifiedName*)&viewTargetAttr,
        (WebCore::QualifiedName*)&visibilityAttr,
        (WebCore::QualifiedName*)&widthAttr,
        (WebCore::QualifiedName*)&widthsAttr,
        (WebCore::QualifiedName*)&word_spacingAttr,
        (WebCore::QualifiedName*)&writing_modeAttr,
        (WebCore::QualifiedName*)&xAttr,
        (WebCore::QualifiedName*)&x_heightAttr,
        (WebCore::QualifiedName*)&x1Attr,
        (WebCore::QualifiedName*)&x2Attr,
        (WebCore::QualifiedName*)&xChannelSelectorAttr,
        (WebCore::QualifiedName*)&yAttr,
        (WebCore::QualifiedName*)&y1Attr,
        (WebCore::QualifiedName*)&y2Attr,
        (WebCore::QualifiedName*)&yChannelSelectorAttr,
        (WebCore::QualifiedName*)&zAttr,
        (WebCore::QualifiedName*)&zoomAndPanAttr,
    };
    *size = 243;
    return SVGAttr;
}

void init()
{
    static bool initialized = false;
    if (initialized)
        return;
    initialized = true;
    
    // Use placement new to initialize the globals.
    
    AtomicString::init();
    AtomicString svgNS("http://www.w3.org/2000/svg");

    // Namespace
    new ((void*)&svgNamespaceURI) AtomicString(svgNS);

    // Tags
    const char *aTagString = "a";
    const char *circleTagString = "circle";
    const char *clipPathTagString = "clipPath";
    const char *cursorTagString = "cursor";
    const char *defsTagString = "defs";
    const char *descTagString = "desc";
    const char *ellipseTagString = "ellipse";
    const char *gTagString = "g";
    const char *imageTagString = "image";
    const char *lineTagString = "line";
    const char *linearGradientTagString = "linearGradient";
    const char *markerTagString = "marker";
    const char *maskTagString = "mask";
    const char *metadataTagString = "metadata";
    const char *mpathTagString = "mpath";
    const char *pathTagString = "path";
    const char *patternTagString = "pattern";
    const char *polygonTagString = "polygon";
    const char *polylineTagString = "polyline";
    const char *radialGradientTagString = "radialGradient";
    const char *rectTagString = "rect";
    const char *scriptTagString = "script";
    const char *setTagString = "set";
    const char *stopTagString = "stop";
    const char *styleTagString = "style";
    const char *svgTagString = "svg";
    const char *switchTagString = "switch";
    const char *symbolTagString = "symbol";
    const char *textTagString = "text";
    const char *titleTagString = "title";
    const char *trefTagString = "tref";
    const char *tspanTagString = "tspan";
    const char *useTagString = "use";
    const char *viewTagString = "view";

    new ((void*)&aTag) QualifiedName(nullAtom, aTagString, svgNS);
    new ((void*)&circleTag) QualifiedName(nullAtom, circleTagString, svgNS);
    new ((void*)&clipPathTag) QualifiedName(nullAtom, clipPathTagString, svgNS);
    new ((void*)&cursorTag) QualifiedName(nullAtom, cursorTagString, svgNS);
    new ((void*)&defsTag) QualifiedName(nullAtom, defsTagString, svgNS);
    new ((void*)&descTag) QualifiedName(nullAtom, descTagString, svgNS);
    new ((void*)&ellipseTag) QualifiedName(nullAtom, ellipseTagString, svgNS);
    new ((void*)&gTag) QualifiedName(nullAtom, gTagString, svgNS);
    new ((void*)&imageTag) QualifiedName(nullAtom, imageTagString, svgNS);
    new ((void*)&lineTag) QualifiedName(nullAtom, lineTagString, svgNS);
    new ((void*)&linearGradientTag) QualifiedName(nullAtom, linearGradientTagString, svgNS);
    new ((void*)&markerTag) QualifiedName(nullAtom, markerTagString, svgNS);
    new ((void*)&maskTag) QualifiedName(nullAtom, maskTagString, svgNS);
    new ((void*)&metadataTag) QualifiedName(nullAtom, metadataTagString, svgNS);
    new ((void*)&mpathTag) QualifiedName(nullAtom, mpathTagString, svgNS);
    new ((void*)&pathTag) QualifiedName(nullAtom, pathTagString, svgNS);
    new ((void*)&patternTag) QualifiedName(nullAtom, patternTagString, svgNS);
    new ((void*)&polygonTag) QualifiedName(nullAtom, polygonTagString, svgNS);
    new ((void*)&polylineTag) QualifiedName(nullAtom, polylineTagString, svgNS);
    new ((void*)&radialGradientTag) QualifiedName(nullAtom, radialGradientTagString, svgNS);
    new ((void*)&rectTag) QualifiedName(nullAtom, rectTagString, svgNS);
    new ((void*)&scriptTag) QualifiedName(nullAtom, scriptTagString, svgNS);
    new ((void*)&setTag) QualifiedName(nullAtom, setTagString, svgNS);
    new ((void*)&stopTag) QualifiedName(nullAtom, stopTagString, svgNS);
    new ((void*)&styleTag) QualifiedName(nullAtom, styleTagString, svgNS);
    new ((void*)&svgTag) QualifiedName(nullAtom, svgTagString, svgNS);
    new ((void*)&switchTag) QualifiedName(nullAtom, switchTagString, svgNS);
    new ((void*)&symbolTag) QualifiedName(nullAtom, symbolTagString, svgNS);
    new ((void*)&textTag) QualifiedName(nullAtom, textTagString, svgNS);
    new ((void*)&titleTag) QualifiedName(nullAtom, titleTagString, svgNS);
    new ((void*)&trefTag) QualifiedName(nullAtom, trefTagString, svgNS);
    new ((void*)&tspanTag) QualifiedName(nullAtom, tspanTagString, svgNS);
    new ((void*)&useTag) QualifiedName(nullAtom, useTagString, svgNS);
    new ((void*)&viewTag) QualifiedName(nullAtom, viewTagString, svgNS);
    // Attributes
    const char *accent_heightAttrString = "accent_height";
    const char *accumulateAttrString = "accumulate";
    const char *additiveAttrString = "additive";
    const char *alignment_baselineAttrString = "alignment_baseline";
    const char *alphabeticAttrString = "alphabetic";
    const char *amplitudeAttrString = "amplitude";
    const char *animateAttrString = "animate";
    const char *arabic_formAttrString = "arabic_form";
    const char *ascentAttrString = "ascent";
    const char *attributeNameAttrString = "attributeName";
    const char *attributeTypeAttrString = "attributeType";
    const char *azimuthAttrString = "azimuth";
    const char *baseFrequencyAttrString = "baseFrequency";
    const char *baseline_shiftAttrString = "baseline_shift";
    const char *baseProfileAttrString = "baseProfile";
    const char *bboxAttrString = "bbox";
    const char *beginAttrString = "begin";
    const char *biasAttrString = "bias";
    const char *byAttrString = "by";
    const char *calcModeAttrString = "calcMode";
    const char *cap_heightAttrString = "cap_height";
    const char *clipAttrString = "clip";
    const char *clip_pathAttrString = "clip_path";
    const char *clip_ruleAttrString = "clip_rule";
    const char *clipPathUnitsAttrString = "clipPathUnits";
    const char *colorAttrString = "color";
    const char *color_interpolationAttrString = "color_interpolation";
    const char *color_interpolation_filtersAttrString = "color_interpolation_filters";
    const char *color_profileAttrString = "color_profile";
    const char *color_renderingAttrString = "color_rendering";
    const char *contentScriptTypeAttrString = "contentScriptType";
    const char *contentStyleTypeAttrString = "contentStyleType";
    const char *cursorAttrString = "cursor";
    const char *cxAttrString = "cx";
    const char *cyAttrString = "cy";
    const char *dAttrString = "d";
    const char *descentAttrString = "descent";
    const char *diffuseConstantAttrString = "diffuseConstant";
    const char *directionAttrString = "direction";
    const char *displayAttrString = "display";
    const char *divisorAttrString = "divisor";
    const char *dominant_baselineAttrString = "dominant_baseline";
    const char *durAttrString = "dur";
    const char *dxAttrString = "dx";
    const char *dyAttrString = "dy";
    const char *edgeModeAttrString = "edgeMode";
    const char *elevationAttrString = "elevation";
    const char *enable_backgroundAttrString = "enable_background";
    const char *endAttrString = "end";
    const char *exponentAttrString = "exponent";
    const char *externalResourcesRequiredAttrString = "externalResourcesRequired";
    const char *feColorMatrixAttrString = "feColorMatrix";
    const char *feCompositeAttrString = "feComposite";
    const char *feGaussianBlurAttrString = "feGaussianBlur";
    const char *feMorphologyAttrString = "feMorphology";
    const char *feTileAttrString = "feTile";
    const char *fillAttrString = "fill";
    const char *fill_opacityAttrString = "fill_opacity";
    const char *fill_ruleAttrString = "fill_rule";
    const char *filterAttrString = "filter";
    const char *filterResAttrString = "filterRes";
    const char *filterUnitsAttrString = "filterUnits";
    const char *flood_colorAttrString = "flood_color";
    const char *flood_opacityAttrString = "flood_opacity";
    const char *font_familyAttrString = "font_family";
    const char *font_sizeAttrString = "font_size";
    const char *font_size_adjustAttrString = "font_size_adjust";
    const char *font_stretchAttrString = "font_stretch";
    const char *font_styleAttrString = "font_style";
    const char *font_variantAttrString = "font_variant";
    const char *font_weightAttrString = "font_weight";
    const char *formatAttrString = "format";
    const char *fromAttrString = "from";
    const char *fxAttrString = "fx";
    const char *fyAttrString = "fy";
    const char *g1AttrString = "g1";
    const char *g2AttrString = "g2";
    const char *glyph_nameAttrString = "glyph_name";
    const char *glyph_orientation_horizontalAttrString = "glyph_orientation_horizontal";
    const char *glyph_orientation_verticalAttrString = "glyph_orientation_vertical";
    const char *glyphRefAttrString = "glyphRef";
    const char *gradientTransformAttrString = "gradientTransform";
    const char *gradientUnitsAttrString = "gradientUnits";
    const char *hangingAttrString = "hanging";
    const char *heightAttrString = "height";
    const char *horiz_adv_xAttrString = "horiz_adv_x";
    const char *horiz_origin_xAttrString = "horiz_origin_x";
    const char *horiz_origin_yAttrString = "horiz_origin_y";
    const char *ideographicAttrString = "ideographic";
    const char *image_renderingAttrString = "image_rendering";
    const char *inAttrString = "in";
    const char *in2AttrString = "in2";
    const char *interceptAttrString = "intercept";
    const char *kAttrString = "k";
    const char *k1AttrString = "k1";
    const char *k2AttrString = "k2";
    const char *k3AttrString = "k3";
    const char *k4AttrString = "k4";
    const char *kernelMatrixAttrString = "kernelMatrix";
    const char *kernelUnitLengthAttrString = "kernelUnitLength";
    const char *kerningAttrString = "kerning";
    const char *keyPointsAttrString = "keyPoints";
    const char *keySplinesAttrString = "keySplines";
    const char *keyTimesAttrString = "keyTimes";
    const char *lengthAdjustAttrString = "lengthAdjust";
    const char *letter_spacingAttrString = "letter_spacing";
    const char *lighting_colorAttrString = "lighting_color";
    const char *limitingConeAngleAttrString = "limitingConeAngle";
    const char *localAttrString = "local";
    const char *marker_endAttrString = "marker_end";
    const char *marker_midAttrString = "marker_mid";
    const char *marker_startAttrString = "marker_start";
    const char *markerHeightAttrString = "markerHeight";
    const char *markerUnitsAttrString = "markerUnits";
    const char *markerWidthAttrString = "markerWidth";
    const char *maskAttrString = "mask";
    const char *maskContentUnitsAttrString = "maskContentUnits";
    const char *maskUnitsAttrString = "maskUnits";
    const char *mathematicalAttrString = "mathematical";
    const char *maxAttrString = "max";
    const char *mediaAttrString = "media";
    const char *methodAttrString = "method";
    const char *minAttrString = "min";
    const char *modeAttrString = "mode";
    const char *nameAttrString = "name";
    const char *numOctavesAttrString = "numOctaves";
    const char *offsetAttrString = "offset";
    const char *onbeginAttrString = "onbegin";
    const char *onendAttrString = "onend";
    const char *onrepeatAttrString = "onrepeat";
    const char *onzoomAttrString = "onzoom";
    const char *opacityAttrString = "opacity";
    const char *operatorAttrString = "operator";
    const char *orderAttrString = "order";
    const char *orientAttrString = "orient";
    const char *orientationAttrString = "orientation";
    const char *originAttrString = "origin";
    const char *overflowAttrString = "overflow";
    const char *overline_positionAttrString = "overline_position";
    const char *overline_thicknessAttrString = "overline_thickness";
    const char *panose_1AttrString = "panose_1";
    const char *pathAttrString = "path";
    const char *pathLengthAttrString = "pathLength";
    const char *patternContentUnitsAttrString = "patternContentUnits";
    const char *patternTransformAttrString = "patternTransform";
    const char *patternUnitsAttrString = "patternUnits";
    const char *pointer_eventsAttrString = "pointer_events";
    const char *pointsAttrString = "points";
    const char *pointsAtXAttrString = "pointsAtX";
    const char *pointsAtYAttrString = "pointsAtY";
    const char *pointsAtZAttrString = "pointsAtZ";
    const char *preserveAlphaAttrString = "preserveAlpha";
    const char *preserveAspectRatioAttrString = "preserveAspectRatio";
    const char *primitiveUnitsAttrString = "primitiveUnits";
    const char *rAttrString = "r";
    const char *radiusAttrString = "radius";
    const char *refXAttrString = "refX";
    const char *refYAttrString = "refY";
    const char *rendering_intentAttrString = "rendering_intent";
    const char *repeatCountAttrString = "repeatCount";
    const char *repeatDurAttrString = "repeatDur";
    const char *requiredExtensionsAttrString = "requiredExtensions";
    const char *requiredFeaturesAttrString = "requiredFeatures";
    const char *restartAttrString = "restart";
    const char *resultAttrString = "result";
    const char *rotateAttrString = "rotate";
    const char *rxAttrString = "rx";
    const char *ryAttrString = "ry";
    const char *scaleAttrString = "scale";
    const char *seedAttrString = "seed";
    const char *shape_renderingAttrString = "shape_rendering";
    const char *slopeAttrString = "slope";
    const char *spacingAttrString = "spacing";
    const char *specularConstantAttrString = "specularConstant";
    const char *specularExponentAttrString = "specularExponent";
    const char *spreadMethodAttrString = "spreadMethod";
    const char *startOffsetAttrString = "startOffset";
    const char *stdDeviationAttrString = "stdDeviation";
    const char *stemhAttrString = "stemh";
    const char *stemvAttrString = "stemv";
    const char *stitchTilesAttrString = "stitchTiles";
    const char *stop_colorAttrString = "stop_color";
    const char *stop_opacityAttrString = "stop_opacity";
    const char *strikethrough_positionAttrString = "strikethrough_position";
    const char *strikethrough_thicknessAttrString = "strikethrough_thickness";
    const char *strokeAttrString = "stroke";
    const char *stroke_dasharrayAttrString = "stroke_dasharray";
    const char *stroke_dashoffsetAttrString = "stroke_dashoffset";
    const char *stroke_linecapAttrString = "stroke_linecap";
    const char *stroke_linejoinAttrString = "stroke_linejoin";
    const char *stroke_miterlimitAttrString = "stroke_miterlimit";
    const char *stroke_opacityAttrString = "stroke_opacity";
    const char *stroke_widthAttrString = "stroke_width";
    const char *styleAttrString = "style";
    const char *surfaceScaleAttrString = "surfaceScale";
    const char *systemLanguageAttrString = "systemLanguage";
    const char *tableValuesAttrString = "tableValues";
    const char *targetAttrString = "target";
    const char *targetXAttrString = "targetX";
    const char *targetYAttrString = "targetY";
    const char *text_anchorAttrString = "text_anchor";
    const char *text_decorationAttrString = "text_decoration";
    const char *text_renderingAttrString = "text_rendering";
    const char *textLengthAttrString = "textLength";
    const char *titleAttrString = "title";
    const char *toAttrString = "to";
    const char *transformAttrString = "transform";
    const char *typeAttrString = "type";
    const char *u1AttrString = "u1";
    const char *u2AttrString = "u2";
    const char *underline_positionAttrString = "underline_position";
    const char *underline_thicknessAttrString = "underline_thickness";
    const char *unicodeAttrString = "unicode";
    const char *unicode_bidiAttrString = "unicode_bidi";
    const char *unicode_rangeAttrString = "unicode_range";
    const char *units_per_emAttrString = "units_per_em";
    const char *v_alphabeticAttrString = "v_alphabetic";
    const char *v_hangingAttrString = "v_hanging";
    const char *v_ideographicAttrString = "v_ideographic";
    const char *v_mathematicalAttrString = "v_mathematical";
    const char *valuesAttrString = "values";
    const char *versionAttrString = "version";
    const char *vert_adv_yAttrString = "vert_adv_y";
    const char *vert_origin_xAttrString = "vert_origin_x";
    const char *vert_origin_yAttrString = "vert_origin_y";
    const char *viewBoxAttrString = "viewBox";
    const char *viewTargetAttrString = "viewTarget";
    const char *visibilityAttrString = "visibility";
    const char *widthAttrString = "width";
    const char *widthsAttrString = "widths";
    const char *word_spacingAttrString = "word_spacing";
    const char *writing_modeAttrString = "writing_mode";
    const char *xAttrString = "x";
    const char *x_heightAttrString = "x_height";
    const char *x1AttrString = "x1";
    const char *x2AttrString = "x2";
    const char *xChannelSelectorAttrString = "xChannelSelector";
    const char *yAttrString = "y";
    const char *y1AttrString = "y1";
    const char *y2AttrString = "y2";
    const char *yChannelSelectorAttrString = "yChannelSelector";
    const char *zAttrString = "z";
    const char *zoomAndPanAttrString = "zoomAndPan";
    accent_heightAttrString = "accent-height";
    alignment_baselineAttrString = "alignment-baseline";
    arabic_formAttrString = "arabic-form";
    baseline_shiftAttrString = "baseline-shift";
    cap_heightAttrString = "cap-height";
    clip_pathAttrString = "clip-path";
    clip_ruleAttrString = "clip-rule";
    color_interpolationAttrString = "color-interpolation";
    color_interpolation_filtersAttrString = "color-interpolation-filters";
    color_profileAttrString = "color-profile";
    color_renderingAttrString = "color-rendering";
    dominant_baselineAttrString = "dominant-baseline";
    enable_backgroundAttrString = "enable-background";
    fill_opacityAttrString = "fill-opacity";
    fill_ruleAttrString = "fill-rule";
    flood_colorAttrString = "flood-color";
    flood_opacityAttrString = "flood-opacity";
    font_familyAttrString = "font-family";
    font_sizeAttrString = "font-size";
    font_size_adjustAttrString = "font-size-adjust";
    font_stretchAttrString = "font-stretch";
    font_styleAttrString = "font-style";
    font_variantAttrString = "font-variant";
    font_weightAttrString = "font-weight";
    glyph_nameAttrString = "glyph-name";
    glyph_orientation_horizontalAttrString = "glyph-orientation-horizontal";
    glyph_orientation_verticalAttrString = "glyph-orientation-vertical";
    horiz_adv_xAttrString = "horiz-adv-x";
    horiz_origin_xAttrString = "horiz-origin-x";
    horiz_origin_yAttrString = "horiz-origin-y";
    image_renderingAttrString = "image-rendering";
    letter_spacingAttrString = "letter-spacing";
    lighting_colorAttrString = "lighting-color";
    marker_endAttrString = "marker-end";
    marker_midAttrString = "marker-mid";
    marker_startAttrString = "marker-start";
    overline_positionAttrString = "overline-position";
    overline_thicknessAttrString = "overline-thickness";
    panose_1AttrString = "panose-1";
    pointer_eventsAttrString = "pointer-events";
    rendering_intentAttrString = "rendering-intent";
    shape_renderingAttrString = "shape-rendering";
    stop_colorAttrString = "stop-color";
    stop_opacityAttrString = "stop-opacity";
    strikethrough_positionAttrString = "strikethrough-position";
    strikethrough_thicknessAttrString = "strikethrough-thickness";
    stroke_dasharrayAttrString = "stroke-dasharray";
    stroke_dashoffsetAttrString = "stroke-dashoffset";
    stroke_linecapAttrString = "stroke-linecap";
    stroke_linejoinAttrString = "stroke-linejoin";
    stroke_miterlimitAttrString = "stroke-miterlimit";
    stroke_opacityAttrString = "stroke-opacity";
    stroke_widthAttrString = "stroke-width";
    text_anchorAttrString = "text-anchor";
    text_decorationAttrString = "text-decoration";
    text_renderingAttrString = "text-rendering";
    underline_positionAttrString = "underline-position";
    underline_thicknessAttrString = "underline-thickness";
    unicode_bidiAttrString = "unicode-bidi";
    unicode_rangeAttrString = "unicode-range";
    units_per_emAttrString = "units-per-em";
    v_alphabeticAttrString = "v-alphabetic";
    v_hangingAttrString = "v-hanging";
    v_ideographicAttrString = "v-ideographic";
    v_mathematicalAttrString = "v-mathematical";
    vert_adv_yAttrString = "vert-adv-y";
    vert_origin_xAttrString = "vert-origin-x";
    vert_origin_yAttrString = "vert-origin-y";
    word_spacingAttrString = "word-spacing";
    writing_modeAttrString = "writing-mode";
    x_heightAttrString = "x-height";

    new ((void*)&accent_heightAttr) QualifiedName(nullAtom, accent_heightAttrString, nullAtom);
    new ((void*)&accumulateAttr) QualifiedName(nullAtom, accumulateAttrString, nullAtom);
    new ((void*)&additiveAttr) QualifiedName(nullAtom, additiveAttrString, nullAtom);
    new ((void*)&alignment_baselineAttr) QualifiedName(nullAtom, alignment_baselineAttrString, nullAtom);
    new ((void*)&alphabeticAttr) QualifiedName(nullAtom, alphabeticAttrString, nullAtom);
    new ((void*)&amplitudeAttr) QualifiedName(nullAtom, amplitudeAttrString, nullAtom);
    new ((void*)&animateAttr) QualifiedName(nullAtom, animateAttrString, nullAtom);
    new ((void*)&arabic_formAttr) QualifiedName(nullAtom, arabic_formAttrString, nullAtom);
    new ((void*)&ascentAttr) QualifiedName(nullAtom, ascentAttrString, nullAtom);
    new ((void*)&attributeNameAttr) QualifiedName(nullAtom, attributeNameAttrString, nullAtom);
    new ((void*)&attributeTypeAttr) QualifiedName(nullAtom, attributeTypeAttrString, nullAtom);
    new ((void*)&azimuthAttr) QualifiedName(nullAtom, azimuthAttrString, nullAtom);
    new ((void*)&baseFrequencyAttr) QualifiedName(nullAtom, baseFrequencyAttrString, nullAtom);
    new ((void*)&baseline_shiftAttr) QualifiedName(nullAtom, baseline_shiftAttrString, nullAtom);
    new ((void*)&baseProfileAttr) QualifiedName(nullAtom, baseProfileAttrString, nullAtom);
    new ((void*)&bboxAttr) QualifiedName(nullAtom, bboxAttrString, nullAtom);
    new ((void*)&beginAttr) QualifiedName(nullAtom, beginAttrString, nullAtom);
    new ((void*)&biasAttr) QualifiedName(nullAtom, biasAttrString, nullAtom);
    new ((void*)&byAttr) QualifiedName(nullAtom, byAttrString, nullAtom);
    new ((void*)&calcModeAttr) QualifiedName(nullAtom, calcModeAttrString, nullAtom);
    new ((void*)&cap_heightAttr) QualifiedName(nullAtom, cap_heightAttrString, nullAtom);
    new ((void*)&clipAttr) QualifiedName(nullAtom, clipAttrString, nullAtom);
    new ((void*)&clip_pathAttr) QualifiedName(nullAtom, clip_pathAttrString, nullAtom);
    new ((void*)&clip_ruleAttr) QualifiedName(nullAtom, clip_ruleAttrString, nullAtom);
    new ((void*)&clipPathUnitsAttr) QualifiedName(nullAtom, clipPathUnitsAttrString, nullAtom);
    new ((void*)&colorAttr) QualifiedName(nullAtom, colorAttrString, nullAtom);
    new ((void*)&color_interpolationAttr) QualifiedName(nullAtom, color_interpolationAttrString, nullAtom);
    new ((void*)&color_interpolation_filtersAttr) QualifiedName(nullAtom, color_interpolation_filtersAttrString, nullAtom);
    new ((void*)&color_profileAttr) QualifiedName(nullAtom, color_profileAttrString, nullAtom);
    new ((void*)&color_renderingAttr) QualifiedName(nullAtom, color_renderingAttrString, nullAtom);
    new ((void*)&contentScriptTypeAttr) QualifiedName(nullAtom, contentScriptTypeAttrString, nullAtom);
    new ((void*)&contentStyleTypeAttr) QualifiedName(nullAtom, contentStyleTypeAttrString, nullAtom);
    new ((void*)&cursorAttr) QualifiedName(nullAtom, cursorAttrString, nullAtom);
    new ((void*)&cxAttr) QualifiedName(nullAtom, cxAttrString, nullAtom);
    new ((void*)&cyAttr) QualifiedName(nullAtom, cyAttrString, nullAtom);
    new ((void*)&dAttr) QualifiedName(nullAtom, dAttrString, nullAtom);
    new ((void*)&descentAttr) QualifiedName(nullAtom, descentAttrString, nullAtom);
    new ((void*)&diffuseConstantAttr) QualifiedName(nullAtom, diffuseConstantAttrString, nullAtom);
    new ((void*)&directionAttr) QualifiedName(nullAtom, directionAttrString, nullAtom);
    new ((void*)&displayAttr) QualifiedName(nullAtom, displayAttrString, nullAtom);
    new ((void*)&divisorAttr) QualifiedName(nullAtom, divisorAttrString, nullAtom);
    new ((void*)&dominant_baselineAttr) QualifiedName(nullAtom, dominant_baselineAttrString, nullAtom);
    new ((void*)&durAttr) QualifiedName(nullAtom, durAttrString, nullAtom);
    new ((void*)&dxAttr) QualifiedName(nullAtom, dxAttrString, nullAtom);
    new ((void*)&dyAttr) QualifiedName(nullAtom, dyAttrString, nullAtom);
    new ((void*)&edgeModeAttr) QualifiedName(nullAtom, edgeModeAttrString, nullAtom);
    new ((void*)&elevationAttr) QualifiedName(nullAtom, elevationAttrString, nullAtom);
    new ((void*)&enable_backgroundAttr) QualifiedName(nullAtom, enable_backgroundAttrString, nullAtom);
    new ((void*)&endAttr) QualifiedName(nullAtom, endAttrString, nullAtom);
    new ((void*)&exponentAttr) QualifiedName(nullAtom, exponentAttrString, nullAtom);
    new ((void*)&externalResourcesRequiredAttr) QualifiedName(nullAtom, externalResourcesRequiredAttrString, nullAtom);
    new ((void*)&feColorMatrixAttr) QualifiedName(nullAtom, feColorMatrixAttrString, nullAtom);
    new ((void*)&feCompositeAttr) QualifiedName(nullAtom, feCompositeAttrString, nullAtom);
    new ((void*)&feGaussianBlurAttr) QualifiedName(nullAtom, feGaussianBlurAttrString, nullAtom);
    new ((void*)&feMorphologyAttr) QualifiedName(nullAtom, feMorphologyAttrString, nullAtom);
    new ((void*)&feTileAttr) QualifiedName(nullAtom, feTileAttrString, nullAtom);
    new ((void*)&fillAttr) QualifiedName(nullAtom, fillAttrString, nullAtom);
    new ((void*)&fill_opacityAttr) QualifiedName(nullAtom, fill_opacityAttrString, nullAtom);
    new ((void*)&fill_ruleAttr) QualifiedName(nullAtom, fill_ruleAttrString, nullAtom);
    new ((void*)&filterAttr) QualifiedName(nullAtom, filterAttrString, nullAtom);
    new ((void*)&filterResAttr) QualifiedName(nullAtom, filterResAttrString, nullAtom);
    new ((void*)&filterUnitsAttr) QualifiedName(nullAtom, filterUnitsAttrString, nullAtom);
    new ((void*)&flood_colorAttr) QualifiedName(nullAtom, flood_colorAttrString, nullAtom);
    new ((void*)&flood_opacityAttr) QualifiedName(nullAtom, flood_opacityAttrString, nullAtom);
    new ((void*)&font_familyAttr) QualifiedName(nullAtom, font_familyAttrString, nullAtom);
    new ((void*)&font_sizeAttr) QualifiedName(nullAtom, font_sizeAttrString, nullAtom);
    new ((void*)&font_size_adjustAttr) QualifiedName(nullAtom, font_size_adjustAttrString, nullAtom);
    new ((void*)&font_stretchAttr) QualifiedName(nullAtom, font_stretchAttrString, nullAtom);
    new ((void*)&font_styleAttr) QualifiedName(nullAtom, font_styleAttrString, nullAtom);
    new ((void*)&font_variantAttr) QualifiedName(nullAtom, font_variantAttrString, nullAtom);
    new ((void*)&font_weightAttr) QualifiedName(nullAtom, font_weightAttrString, nullAtom);
    new ((void*)&formatAttr) QualifiedName(nullAtom, formatAttrString, nullAtom);
    new ((void*)&fromAttr) QualifiedName(nullAtom, fromAttrString, nullAtom);
    new ((void*)&fxAttr) QualifiedName(nullAtom, fxAttrString, nullAtom);
    new ((void*)&fyAttr) QualifiedName(nullAtom, fyAttrString, nullAtom);
    new ((void*)&g1Attr) QualifiedName(nullAtom, g1AttrString, nullAtom);
    new ((void*)&g2Attr) QualifiedName(nullAtom, g2AttrString, nullAtom);
    new ((void*)&glyph_nameAttr) QualifiedName(nullAtom, glyph_nameAttrString, nullAtom);
    new ((void*)&glyph_orientation_horizontalAttr) QualifiedName(nullAtom, glyph_orientation_horizontalAttrString, nullAtom);
    new ((void*)&glyph_orientation_verticalAttr) QualifiedName(nullAtom, glyph_orientation_verticalAttrString, nullAtom);
    new ((void*)&glyphRefAttr) QualifiedName(nullAtom, glyphRefAttrString, nullAtom);
    new ((void*)&gradientTransformAttr) QualifiedName(nullAtom, gradientTransformAttrString, nullAtom);
    new ((void*)&gradientUnitsAttr) QualifiedName(nullAtom, gradientUnitsAttrString, nullAtom);
    new ((void*)&hangingAttr) QualifiedName(nullAtom, hangingAttrString, nullAtom);
    new ((void*)&heightAttr) QualifiedName(nullAtom, heightAttrString, nullAtom);
    new ((void*)&horiz_adv_xAttr) QualifiedName(nullAtom, horiz_adv_xAttrString, nullAtom);
    new ((void*)&horiz_origin_xAttr) QualifiedName(nullAtom, horiz_origin_xAttrString, nullAtom);
    new ((void*)&horiz_origin_yAttr) QualifiedName(nullAtom, horiz_origin_yAttrString, nullAtom);
    new ((void*)&ideographicAttr) QualifiedName(nullAtom, ideographicAttrString, nullAtom);
    new ((void*)&image_renderingAttr) QualifiedName(nullAtom, image_renderingAttrString, nullAtom);
    new ((void*)&inAttr) QualifiedName(nullAtom, inAttrString, nullAtom);
    new ((void*)&in2Attr) QualifiedName(nullAtom, in2AttrString, nullAtom);
    new ((void*)&interceptAttr) QualifiedName(nullAtom, interceptAttrString, nullAtom);
    new ((void*)&kAttr) QualifiedName(nullAtom, kAttrString, nullAtom);
    new ((void*)&k1Attr) QualifiedName(nullAtom, k1AttrString, nullAtom);
    new ((void*)&k2Attr) QualifiedName(nullAtom, k2AttrString, nullAtom);
    new ((void*)&k3Attr) QualifiedName(nullAtom, k3AttrString, nullAtom);
    new ((void*)&k4Attr) QualifiedName(nullAtom, k4AttrString, nullAtom);
    new ((void*)&kernelMatrixAttr) QualifiedName(nullAtom, kernelMatrixAttrString, nullAtom);
    new ((void*)&kernelUnitLengthAttr) QualifiedName(nullAtom, kernelUnitLengthAttrString, nullAtom);
    new ((void*)&kerningAttr) QualifiedName(nullAtom, kerningAttrString, nullAtom);
    new ((void*)&keyPointsAttr) QualifiedName(nullAtom, keyPointsAttrString, nullAtom);
    new ((void*)&keySplinesAttr) QualifiedName(nullAtom, keySplinesAttrString, nullAtom);
    new ((void*)&keyTimesAttr) QualifiedName(nullAtom, keyTimesAttrString, nullAtom);
    new ((void*)&lengthAdjustAttr) QualifiedName(nullAtom, lengthAdjustAttrString, nullAtom);
    new ((void*)&letter_spacingAttr) QualifiedName(nullAtom, letter_spacingAttrString, nullAtom);
    new ((void*)&lighting_colorAttr) QualifiedName(nullAtom, lighting_colorAttrString, nullAtom);
    new ((void*)&limitingConeAngleAttr) QualifiedName(nullAtom, limitingConeAngleAttrString, nullAtom);
    new ((void*)&localAttr) QualifiedName(nullAtom, localAttrString, nullAtom);
    new ((void*)&marker_endAttr) QualifiedName(nullAtom, marker_endAttrString, nullAtom);
    new ((void*)&marker_midAttr) QualifiedName(nullAtom, marker_midAttrString, nullAtom);
    new ((void*)&marker_startAttr) QualifiedName(nullAtom, marker_startAttrString, nullAtom);
    new ((void*)&markerHeightAttr) QualifiedName(nullAtom, markerHeightAttrString, nullAtom);
    new ((void*)&markerUnitsAttr) QualifiedName(nullAtom, markerUnitsAttrString, nullAtom);
    new ((void*)&markerWidthAttr) QualifiedName(nullAtom, markerWidthAttrString, nullAtom);
    new ((void*)&maskAttr) QualifiedName(nullAtom, maskAttrString, nullAtom);
    new ((void*)&maskContentUnitsAttr) QualifiedName(nullAtom, maskContentUnitsAttrString, nullAtom);
    new ((void*)&maskUnitsAttr) QualifiedName(nullAtom, maskUnitsAttrString, nullAtom);
    new ((void*)&mathematicalAttr) QualifiedName(nullAtom, mathematicalAttrString, nullAtom);
    new ((void*)&maxAttr) QualifiedName(nullAtom, maxAttrString, nullAtom);
    new ((void*)&mediaAttr) QualifiedName(nullAtom, mediaAttrString, nullAtom);
    new ((void*)&methodAttr) QualifiedName(nullAtom, methodAttrString, nullAtom);
    new ((void*)&minAttr) QualifiedName(nullAtom, minAttrString, nullAtom);
    new ((void*)&modeAttr) QualifiedName(nullAtom, modeAttrString, nullAtom);
    new ((void*)&nameAttr) QualifiedName(nullAtom, nameAttrString, nullAtom);
    new ((void*)&numOctavesAttr) QualifiedName(nullAtom, numOctavesAttrString, nullAtom);
    new ((void*)&offsetAttr) QualifiedName(nullAtom, offsetAttrString, nullAtom);
    new ((void*)&onbeginAttr) QualifiedName(nullAtom, onbeginAttrString, nullAtom);
    new ((void*)&onendAttr) QualifiedName(nullAtom, onendAttrString, nullAtom);
    new ((void*)&onrepeatAttr) QualifiedName(nullAtom, onrepeatAttrString, nullAtom);
    new ((void*)&onzoomAttr) QualifiedName(nullAtom, onzoomAttrString, nullAtom);
    new ((void*)&opacityAttr) QualifiedName(nullAtom, opacityAttrString, nullAtom);
    new ((void*)&operatorAttr) QualifiedName(nullAtom, operatorAttrString, nullAtom);
    new ((void*)&orderAttr) QualifiedName(nullAtom, orderAttrString, nullAtom);
    new ((void*)&orientAttr) QualifiedName(nullAtom, orientAttrString, nullAtom);
    new ((void*)&orientationAttr) QualifiedName(nullAtom, orientationAttrString, nullAtom);
    new ((void*)&originAttr) QualifiedName(nullAtom, originAttrString, nullAtom);
    new ((void*)&overflowAttr) QualifiedName(nullAtom, overflowAttrString, nullAtom);
    new ((void*)&overline_positionAttr) QualifiedName(nullAtom, overline_positionAttrString, nullAtom);
    new ((void*)&overline_thicknessAttr) QualifiedName(nullAtom, overline_thicknessAttrString, nullAtom);
    new ((void*)&panose_1Attr) QualifiedName(nullAtom, panose_1AttrString, nullAtom);
    new ((void*)&pathAttr) QualifiedName(nullAtom, pathAttrString, nullAtom);
    new ((void*)&pathLengthAttr) QualifiedName(nullAtom, pathLengthAttrString, nullAtom);
    new ((void*)&patternContentUnitsAttr) QualifiedName(nullAtom, patternContentUnitsAttrString, nullAtom);
    new ((void*)&patternTransformAttr) QualifiedName(nullAtom, patternTransformAttrString, nullAtom);
    new ((void*)&patternUnitsAttr) QualifiedName(nullAtom, patternUnitsAttrString, nullAtom);
    new ((void*)&pointer_eventsAttr) QualifiedName(nullAtom, pointer_eventsAttrString, nullAtom);
    new ((void*)&pointsAttr) QualifiedName(nullAtom, pointsAttrString, nullAtom);
    new ((void*)&pointsAtXAttr) QualifiedName(nullAtom, pointsAtXAttrString, nullAtom);
    new ((void*)&pointsAtYAttr) QualifiedName(nullAtom, pointsAtYAttrString, nullAtom);
    new ((void*)&pointsAtZAttr) QualifiedName(nullAtom, pointsAtZAttrString, nullAtom);
    new ((void*)&preserveAlphaAttr) QualifiedName(nullAtom, preserveAlphaAttrString, nullAtom);
    new ((void*)&preserveAspectRatioAttr) QualifiedName(nullAtom, preserveAspectRatioAttrString, nullAtom);
    new ((void*)&primitiveUnitsAttr) QualifiedName(nullAtom, primitiveUnitsAttrString, nullAtom);
    new ((void*)&rAttr) QualifiedName(nullAtom, rAttrString, nullAtom);
    new ((void*)&radiusAttr) QualifiedName(nullAtom, radiusAttrString, nullAtom);
    new ((void*)&refXAttr) QualifiedName(nullAtom, refXAttrString, nullAtom);
    new ((void*)&refYAttr) QualifiedName(nullAtom, refYAttrString, nullAtom);
    new ((void*)&rendering_intentAttr) QualifiedName(nullAtom, rendering_intentAttrString, nullAtom);
    new ((void*)&repeatCountAttr) QualifiedName(nullAtom, repeatCountAttrString, nullAtom);
    new ((void*)&repeatDurAttr) QualifiedName(nullAtom, repeatDurAttrString, nullAtom);
    new ((void*)&requiredExtensionsAttr) QualifiedName(nullAtom, requiredExtensionsAttrString, nullAtom);
    new ((void*)&requiredFeaturesAttr) QualifiedName(nullAtom, requiredFeaturesAttrString, nullAtom);
    new ((void*)&restartAttr) QualifiedName(nullAtom, restartAttrString, nullAtom);
    new ((void*)&resultAttr) QualifiedName(nullAtom, resultAttrString, nullAtom);
    new ((void*)&rotateAttr) QualifiedName(nullAtom, rotateAttrString, nullAtom);
    new ((void*)&rxAttr) QualifiedName(nullAtom, rxAttrString, nullAtom);
    new ((void*)&ryAttr) QualifiedName(nullAtom, ryAttrString, nullAtom);
    new ((void*)&scaleAttr) QualifiedName(nullAtom, scaleAttrString, nullAtom);
    new ((void*)&seedAttr) QualifiedName(nullAtom, seedAttrString, nullAtom);
    new ((void*)&shape_renderingAttr) QualifiedName(nullAtom, shape_renderingAttrString, nullAtom);
    new ((void*)&slopeAttr) QualifiedName(nullAtom, slopeAttrString, nullAtom);
    new ((void*)&spacingAttr) QualifiedName(nullAtom, spacingAttrString, nullAtom);
    new ((void*)&specularConstantAttr) QualifiedName(nullAtom, specularConstantAttrString, nullAtom);
    new ((void*)&specularExponentAttr) QualifiedName(nullAtom, specularExponentAttrString, nullAtom);
    new ((void*)&spreadMethodAttr) QualifiedName(nullAtom, spreadMethodAttrString, nullAtom);
    new ((void*)&startOffsetAttr) QualifiedName(nullAtom, startOffsetAttrString, nullAtom);
    new ((void*)&stdDeviationAttr) QualifiedName(nullAtom, stdDeviationAttrString, nullAtom);
    new ((void*)&stemhAttr) QualifiedName(nullAtom, stemhAttrString, nullAtom);
    new ((void*)&stemvAttr) QualifiedName(nullAtom, stemvAttrString, nullAtom);
    new ((void*)&stitchTilesAttr) QualifiedName(nullAtom, stitchTilesAttrString, nullAtom);
    new ((void*)&stop_colorAttr) QualifiedName(nullAtom, stop_colorAttrString, nullAtom);
    new ((void*)&stop_opacityAttr) QualifiedName(nullAtom, stop_opacityAttrString, nullAtom);
    new ((void*)&strikethrough_positionAttr) QualifiedName(nullAtom, strikethrough_positionAttrString, nullAtom);
    new ((void*)&strikethrough_thicknessAttr) QualifiedName(nullAtom, strikethrough_thicknessAttrString, nullAtom);
    new ((void*)&strokeAttr) QualifiedName(nullAtom, strokeAttrString, nullAtom);
    new ((void*)&stroke_dasharrayAttr) QualifiedName(nullAtom, stroke_dasharrayAttrString, nullAtom);
    new ((void*)&stroke_dashoffsetAttr) QualifiedName(nullAtom, stroke_dashoffsetAttrString, nullAtom);
    new ((void*)&stroke_linecapAttr) QualifiedName(nullAtom, stroke_linecapAttrString, nullAtom);
    new ((void*)&stroke_linejoinAttr) QualifiedName(nullAtom, stroke_linejoinAttrString, nullAtom);
    new ((void*)&stroke_miterlimitAttr) QualifiedName(nullAtom, stroke_miterlimitAttrString, nullAtom);
    new ((void*)&stroke_opacityAttr) QualifiedName(nullAtom, stroke_opacityAttrString, nullAtom);
    new ((void*)&stroke_widthAttr) QualifiedName(nullAtom, stroke_widthAttrString, nullAtom);
    new ((void*)&styleAttr) QualifiedName(nullAtom, styleAttrString, nullAtom);
    new ((void*)&surfaceScaleAttr) QualifiedName(nullAtom, surfaceScaleAttrString, nullAtom);
    new ((void*)&systemLanguageAttr) QualifiedName(nullAtom, systemLanguageAttrString, nullAtom);
    new ((void*)&tableValuesAttr) QualifiedName(nullAtom, tableValuesAttrString, nullAtom);
    new ((void*)&targetAttr) QualifiedName(nullAtom, targetAttrString, nullAtom);
    new ((void*)&targetXAttr) QualifiedName(nullAtom, targetXAttrString, nullAtom);
    new ((void*)&targetYAttr) QualifiedName(nullAtom, targetYAttrString, nullAtom);
    new ((void*)&text_anchorAttr) QualifiedName(nullAtom, text_anchorAttrString, nullAtom);
    new ((void*)&text_decorationAttr) QualifiedName(nullAtom, text_decorationAttrString, nullAtom);
    new ((void*)&text_renderingAttr) QualifiedName(nullAtom, text_renderingAttrString, nullAtom);
    new ((void*)&textLengthAttr) QualifiedName(nullAtom, textLengthAttrString, nullAtom);
    new ((void*)&titleAttr) QualifiedName(nullAtom, titleAttrString, nullAtom);
    new ((void*)&toAttr) QualifiedName(nullAtom, toAttrString, nullAtom);
    new ((void*)&transformAttr) QualifiedName(nullAtom, transformAttrString, nullAtom);
    new ((void*)&typeAttr) QualifiedName(nullAtom, typeAttrString, nullAtom);
    new ((void*)&u1Attr) QualifiedName(nullAtom, u1AttrString, nullAtom);
    new ((void*)&u2Attr) QualifiedName(nullAtom, u2AttrString, nullAtom);
    new ((void*)&underline_positionAttr) QualifiedName(nullAtom, underline_positionAttrString, nullAtom);
    new ((void*)&underline_thicknessAttr) QualifiedName(nullAtom, underline_thicknessAttrString, nullAtom);
    new ((void*)&unicodeAttr) QualifiedName(nullAtom, unicodeAttrString, nullAtom);
    new ((void*)&unicode_bidiAttr) QualifiedName(nullAtom, unicode_bidiAttrString, nullAtom);
    new ((void*)&unicode_rangeAttr) QualifiedName(nullAtom, unicode_rangeAttrString, nullAtom);
    new ((void*)&units_per_emAttr) QualifiedName(nullAtom, units_per_emAttrString, nullAtom);
    new ((void*)&v_alphabeticAttr) QualifiedName(nullAtom, v_alphabeticAttrString, nullAtom);
    new ((void*)&v_hangingAttr) QualifiedName(nullAtom, v_hangingAttrString, nullAtom);
    new ((void*)&v_ideographicAttr) QualifiedName(nullAtom, v_ideographicAttrString, nullAtom);
    new ((void*)&v_mathematicalAttr) QualifiedName(nullAtom, v_mathematicalAttrString, nullAtom);
    new ((void*)&valuesAttr) QualifiedName(nullAtom, valuesAttrString, nullAtom);
    new ((void*)&versionAttr) QualifiedName(nullAtom, versionAttrString, nullAtom);
    new ((void*)&vert_adv_yAttr) QualifiedName(nullAtom, vert_adv_yAttrString, nullAtom);
    new ((void*)&vert_origin_xAttr) QualifiedName(nullAtom, vert_origin_xAttrString, nullAtom);
    new ((void*)&vert_origin_yAttr) QualifiedName(nullAtom, vert_origin_yAttrString, nullAtom);
    new ((void*)&viewBoxAttr) QualifiedName(nullAtom, viewBoxAttrString, nullAtom);
    new ((void*)&viewTargetAttr) QualifiedName(nullAtom, viewTargetAttrString, nullAtom);
    new ((void*)&visibilityAttr) QualifiedName(nullAtom, visibilityAttrString, nullAtom);
    new ((void*)&widthAttr) QualifiedName(nullAtom, widthAttrString, nullAtom);
    new ((void*)&widthsAttr) QualifiedName(nullAtom, widthsAttrString, nullAtom);
    new ((void*)&word_spacingAttr) QualifiedName(nullAtom, word_spacingAttrString, nullAtom);
    new ((void*)&writing_modeAttr) QualifiedName(nullAtom, writing_modeAttrString, nullAtom);
    new ((void*)&xAttr) QualifiedName(nullAtom, xAttrString, nullAtom);
    new ((void*)&x_heightAttr) QualifiedName(nullAtom, x_heightAttrString, nullAtom);
    new ((void*)&x1Attr) QualifiedName(nullAtom, x1AttrString, nullAtom);
    new ((void*)&x2Attr) QualifiedName(nullAtom, x2AttrString, nullAtom);
    new ((void*)&xChannelSelectorAttr) QualifiedName(nullAtom, xChannelSelectorAttrString, nullAtom);
    new ((void*)&yAttr) QualifiedName(nullAtom, yAttrString, nullAtom);
    new ((void*)&y1Attr) QualifiedName(nullAtom, y1AttrString, nullAtom);
    new ((void*)&y2Attr) QualifiedName(nullAtom, y2AttrString, nullAtom);
    new ((void*)&yChannelSelectorAttr) QualifiedName(nullAtom, yChannelSelectorAttrString, nullAtom);
    new ((void*)&zAttr) QualifiedName(nullAtom, zAttrString, nullAtom);
    new ((void*)&zoomAndPanAttr) QualifiedName(nullAtom, zoomAndPanAttrString, nullAtom);
}

} }

