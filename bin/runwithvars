#!/usr/bin/perl
use strict;
use warnings;

use File::Path;
use File::Basename;
use lib ( dirname($0) );
use Qtopia::Paths;
use Qtopia::Vars;
use Qtopia::File;

Qtopia::Paths::get_paths();

# Windows depot builds use the perl scripts directly rather than the compiled code
if ( $isWindows ) {
    check_script($0, "$depotpath/bin", $ARGV[0]);
}


use constant OUTPUT => 0;
use constant DEBUG => 0;

my $n = "\n";
my $export = "export";
if ( $isWindows ) {
    $n = "\r\n";
    $export = "set";
}

my $command = "";

if ( $isWindows ) {
    $command .= "\@echo off$n";
} else {
    #$command .= "set -x$n";
}
while ( @ARGV ) {
    my $bit = shift @ARGV;
    DEBUG and print "bit $bit\n";
    if ( index($bit, "=") == -1 ) {
        unshift(@ARGV, $bit);
        last;
    }
    $command .= "$export $bit$n";
}
if ( !$isWindows ) {
    $command .= '[ -n "$DEVICE_CONFIG_PATH" ] && [ -f "$DEVICE_CONFIG_PATH/environment" ] && . "$DEVICE_CONFIG_PATH/environment"'.$n;
}
my @args = @ARGV;
for ( @args ) {
    if ( index($_, " ") != -1 ) {
        $_ = '"'.$_.'"';
    }
}
$command .= join(" ", @args).$n;

if ( $isWindows ) {
    mkpath("$QPEDIR/bin/tmp");
    my $tmpbat = fixpath("$QPEDIR/bin/tmp/").$$.".bat";
    open OUT, ">$tmpbat" or die "Can't open $tmpbat\n";
    print OUT $command;
    close OUT;
    system($tmpbat);
    unlink $tmpbat;
} else {
    exec $command;
}

