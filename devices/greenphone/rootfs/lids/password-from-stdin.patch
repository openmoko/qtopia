diff -Nur lids-1.2.2-2.4.28/lidstools-0.5.6/src/read_pw.c lids-1.2.2-2.4.28/lidstools-0.5.6/src/read_pw.c
--- lids-1.2.2-2.4.28/lidstools-0.5.6/src/read_pw.c	2004-02-22 08:41:22.000000000 +1000
+++ lids-1.2.2-2.4.28/lidstools-0.5.6/src/read_pw.c	2007-02-20 09:33:09.000000000 +1000
@@ -57,15 +57,14 @@
 	int number = 5;
 	int ok = 0;
 	int ps = 0;
-	FILE *tty = NULL;
 	char *p;
 
-	if ((tty = fopen("/dev/tty", "r")) == NULL)
-		tty = stdin;
+        if (isatty(fileno(stdin))) {
+            if (TTY_get(fileno(stdin), &tty_orig) == -1)
+                return -1;
 
-	if (TTY_get(fileno(tty), &tty_orig) == -1)
-		return (-1);
-	memcpy(&(tty_new), &(tty_orig), sizeof (tty_orig));
+            memcpy(&(tty_new), &(tty_orig), sizeof (tty_orig));
+        }
 
 	if (setjmp(save)) {
 		ok = 0;
@@ -74,36 +73,38 @@
 	pushsig();
 	ps = 1;
 
-	tty_new.TTY_FLAGS &= ~ECHO;
+        if (isatty(fileno(stdin))) {
+            tty_new.TTY_FLAGS &= ~ECHO;
 
-	if (TTY_set(fileno(tty), &tty_new) == -1)
+            if (TTY_set(fileno(stdin), &tty_new) == -1)
 		return (-1);
-	ps = 2;
+            ps = 2;
+        }
 
 	while ((!ok) && (number--)) {
 		fputs(prompt, stderr);
 		fflush(stderr);
 
 		buf[0] = '\0';
-		fgets(buf, size, tty);
-		if (feof(tty))
+		fgets(buf, size, stdin);
+		if (feof(stdin))
 			goto error;
 		if ((p = (char *) strchr(buf, '\n')) != NULL)
 			*p = '\0';
 		else
-			read_till_nl(tty);
+			read_till_nl(stdin);
 		if (verify) {
 			/* thats UGLY (output is "reenter new password") */
 			fprintf(stderr, "\nre%s", prompt);
 			fflush(stderr);
 			buff[0] = '\0';
-			fgets(buff, size, tty);
-			if (feof(tty))
+			fgets(buff, size, stdin);
+			if (feof(stdin))
 				goto error;
 			if ((p = (char *) strchr(buff, '\n')) != NULL)
 				*p = '\0';
 			else
-				read_till_nl(tty);
+				read_till_nl(stdin);
 
 			if (strcmp(buf, buff) != 0) {
 				fprintf(stderr, "\nverify failed");
@@ -119,12 +120,10 @@
 	fprintf(stderr, "\n");
 	/* What can we do if there is an error? */
 	if (ps >= 2)
-		TTY_set(fileno(tty), &tty_orig);
+		TTY_set(fileno(stdin), &tty_orig);
 
 	if (ps >= 1)
 		popsig();
-	if (stdin != tty)
-		fclose(tty);
 	return (!ok);
 }
 
